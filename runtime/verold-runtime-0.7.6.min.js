window.verold=window.verold||{},window.verold.apiBaseUrl="string"==typeof window.verold.apiBaseUrl?window.verold.apiBaseUrl:"//studio.verold.com",window.verold.assetsBaseUrl="string"==typeof window.verold.assetsBaseUrl?window.verold.assetsBaseUrl:"//commondatastorage.googleapis.com/assets.verold.com",window.verold.staticBaseUrl="string"==typeof window.verold.staticBaseUrl?window.verold.staticBaseUrl:"//commondatastorage.googleapis.com/assets.verold.com/production",window.verold.glAssetsBaseUrl="string"==typeof window.verold.glAssetsBaseUrl?window.verold.glAssetsBaseUrl:"//commondatastorage.googleapis.com/assets.verold.com/production/assets",window.verold.debug=!0,window.verold.bust="8ec12a",window.VAPI={},function(a,b){"function"==typeof define&&define.amd?define(b):a.VAPI=b()}(this,function(){var requirejs,require,define;return function(a){function b(a,b){return r.call(a,b)}function c(a,b){var c,d,e,f,g,h,i,j,k,l,m=b&&b.split("/"),n=p.map,o=n&&n["*"]||{};if(a&&"."===a.charAt(0))if(b){for(m=m.slice(0,m.length-1),a=m.concat(a.split("/")),j=0;j<a.length;j+=1)if(l=a[j],"."===l)a.splice(j,1),j-=1;else if(".."===l){if(1===j&&(".."===a[2]||".."===a[0]))break;j>0&&(a.splice(j-1,2),j-=2)}a=a.join("/")}else 0===a.indexOf("./")&&(a=a.substring(2));if((m||o)&&n){for(c=a.split("/"),j=c.length;j>0;j-=1){if(d=c.slice(0,j).join("/"),m)for(k=m.length;k>0;k-=1)if(e=n[m.slice(0,k).join("/")],e&&(e=e[d])){f=e,g=j;break}if(f)break;!h&&o&&o[d]&&(h=o[d],i=j)}!f&&h&&(f=h,g=i),f&&(c.splice(0,g,f),a=c.join("/"))}return a}function d(b,c){return function(){return k.apply(a,s.call(arguments,0).concat([b,c]))}}function e(a){return function(b){return c(b,a)}}function f(a){return function(b){n[a]=b}}function g(c){if(b(o,c)){var d=o[c];delete o[c],q[c]=!0,j.apply(a,d)}if(!b(n,c)&&!b(q,c))throw new Error("No "+c);return n[c]}function h(a){var b,c=a?a.indexOf("!"):-1;return c>-1&&(b=a.substring(0,c),a=a.substring(c+1,a.length)),[b,a]}function i(a){return function(){return p&&p.config&&p.config[a]||{}}}var j,k,l,m,n={},o={},p={},q={},r=Object.prototype.hasOwnProperty,s=[].slice;l=function(a,b){var d,f=h(a),i=f[0];return a=f[1],i&&(i=c(i,b),d=g(i)),i?a=d&&d.normalize?d.normalize(a,e(b)):c(a,b):(a=c(a,b),f=h(a),i=f[0],a=f[1],i&&(d=g(i))),{f:i?i+"!"+a:a,n:a,pr:i,p:d}},m={require:function(a){return d(a)},exports:function(a){var b=n[a];return"undefined"!=typeof b?b:n[a]={}},module:function(a){return{id:a,uri:"",exports:n[a],config:i(a)}}},j=function(c,e,h,i){var j,k,p,r,s,t,u=[];if(i=i||c,"function"==typeof h){for(e=!e.length&&h.length?["require","exports","module"]:e,s=0;s<e.length;s+=1)if(r=l(e[s],i),k=r.f,"require"===k)u[s]=m.require(c);else if("exports"===k)u[s]=m.exports(c),t=!0;else if("module"===k)j=u[s]=m.module(c);else if(b(n,k)||b(o,k)||b(q,k))u[s]=g(k);else{if(!r.p)throw new Error(c+" missing "+k);r.p.load(r.n,d(i,!0),f(k),{}),u[s]=n[k]}p=h.apply(n[c],u),c&&(j&&j.exports!==a&&j.exports!==n[c]?n[c]=j.exports:p===a&&t||(n[c]=p))}else c&&(n[c]=h)},requirejs=require=k=function(b,c,d,e,f){return"string"==typeof b?m[b]?m[b](c):g(l(b,c).f):(b.splice||(p=b,c.splice?(b=c,c=d,d=null):b=a),c=c||function(){},"function"==typeof d&&(d=e,e=f),e?j(a,b,c,d):setTimeout(function(){j(a,b,c,d)},4),k)},k.config=function(a){return p=a,p.deps&&k(p.deps,p.callback),k},define=function(a,c,d){c.splice||(d=c,c=[]),b(n,a)||b(o,a)||(o[a]=[a,c,d])},define.amd={jQuery:!0}}(),define("VeroldEngine/libs/require/almond",function(){}),function(){function a(a,b,c){for(var d=(c||0)-1,e=a?a.length:0;++d<e;)if(a[d]===b)return d;return-1}function b(b,c){var d=typeof c;if(b=b.cache,"boolean"==d||null==c)return b[c]?0:-1;"number"!=d&&"string"!=d&&(d="object");var e="number"==d?c:r+c;return b=(b=b[d])&&b[e],"object"==d?b&&a(b,c)>-1?0:-1:b?0:-1}function c(a){var b=this.cache,c=typeof a;if("boolean"==c||null==a)b[a]=!0;else{"number"!=c&&"string"!=c&&(c="object");var d="number"==c?a:r+a,e=b[c]||(b[c]={});"object"==c?(e[d]||(e[d]=[])).push(a):e[d]=!0}}function d(a){return a.charCodeAt(0)}function e(a,b){for(var c=a.criteria,d=b.criteria,e=-1,f=c.length;++e<f;){var g=c[e],h=d[e];if(g!==h){if(g>h||"undefined"==typeof g)return 1;if(h>g||"undefined"==typeof h)return-1}}return a.index-b.index}function f(a){var b=-1,d=a.length,e=a[0],f=a[d/2|0],g=a[d-1];if(e&&"object"==typeof e&&f&&"object"==typeof f&&g&&"object"==typeof g)return!1;var h=i();h["false"]=h["null"]=h["true"]=h.undefined=!1;var j=i();for(j.array=a,j.cache=h,j.push=c;++b<d;)j.push(a[b]);return j}function g(a){return"\\"+V[a]}function h(){return o.pop()||[]}function i(){return p.pop()||{array:null,cache:null,criteria:null,"false":!1,index:0,"null":!1,number:null,object:null,push:null,string:null,"true":!1,undefined:!1,value:null}}function j(a){a.length=0,o.length<t&&o.push(a)}function k(a){var b=a.cache;b&&k(b),a.array=a.cache=a.criteria=a.object=a.number=a.string=a.value=null,p.length<t&&p.push(a)}function l(a,b,c){b||(b=0),"undefined"==typeof c&&(c=a?a.length:0);for(var d=-1,e=c-b||0,f=Array(0>e?0:e);++d<e;)f[d]=a[b+d];return f}function m(c){function o(a){return a&&"object"==typeof a&&!Zd(a)&&Hd.call(a,"__wrapped__")?a:new p(a)}function p(a,b){this.__chain__=!!b,this.__wrapped__=a}function t(a){function b(){if(d){var a=l(d);Id.apply(a,arguments)}if(this instanceof b){var f=X(c.prototype),g=c.apply(f,a||arguments);return Eb(g)?g:f}return c.apply(e,a||arguments)}var c=a[0],d=a[2],e=a[4];return Yd(b,a),b}function V(a,b,c,d,e){if(c){var f=c(a);if("undefined"!=typeof f)return f}var g=Eb(a);if(!g)return a;var i=Ad.call(a);if(!R[i])return a;var k=Wd[i];switch(i){case K:case L:return new k(+a);case N:case Q:return new k(a);case P:return f=k(a.source,z.exec(a)),f.lastIndex=a.lastIndex,f}var m=Zd(a);if(b){var n=!d;d||(d=h()),e||(e=h());for(var o=d.length;o--;)if(d[o]==a)return e[o];f=m?k(a.length):{}}else f=m?l(a):ee({},a);return m&&(Hd.call(a,"index")&&(f.index=a.index),Hd.call(a,"input")&&(f.input=a.input)),b?(d.push(a),e.push(f),(m?Yb:he)(a,function(a,g){f[g]=V(a,b,c,d,e)}),n&&(j(d),j(e)),f):f}function X(a){return Eb(a)?Nd(a):{}}function Y(a,b,c){if("function"!=typeof a)return Zc;if("undefined"==typeof b||!("prototype"in a))return a;var d=a.__bindData__;if("undefined"==typeof d&&(Xd.funcNames&&(d=!a.name),d=d||!Xd.funcDecomp,!d)){var e=Fd.call(a);Xd.funcNames||(d=!A.test(e)),d||(d=E.test(e),Yd(a,d))}if(d===!1||d!==!0&&1&d[1])return a;switch(c){case 1:return function(c){return a.call(b,c)};case 2:return function(c,d){return a.call(b,c,d)};case 3:return function(c,d,e){return a.call(b,c,d,e)};case 4:return function(c,d,e,f){return a.call(b,c,d,e,f)}}return Ic(a,b)}function Z(a){function b(){var a=i?g:this;if(e){var o=l(e);Id.apply(o,arguments)}if((f||k)&&(o||(o=l(arguments)),f&&Id.apply(o,f),k&&o.length<h))return d|=16,Z([c,m?d:-4&d,o,null,g,h]);if(o||(o=arguments),j&&(c=a[n]),this instanceof b){a=X(c.prototype);var p=c.apply(a,o);return Eb(p)?p:a}return c.apply(a,o)}var c=a[0],d=a[1],e=a[2],f=a[3],g=a[4],h=a[5],i=1&d,j=2&d,k=4&d,m=8&d,n=c;return Yd(b,a),b}function $(c,d){var e=-1,g=ib(),h=c?c.length:0,i=h>=s&&g===a,j=[];if(i){var l=f(d);l?(g=b,d=l):i=!1}for(;++e<h;){var m=c[e];g(d,m)<0&&j.push(m)}return i&&k(d),j}function ab(a,b,c,d){for(var e=(d||0)-1,f=a?a.length:0,g=[];++e<f;){var h=a[e];if(h&&"object"==typeof h&&"number"==typeof h.length&&(Zd(h)||mb(h))){b||(h=ab(h,b,c));var i=-1,j=h.length,k=g.length;for(g.length+=j;++i<j;)g[k++]=h[i]}else c||g.push(h)}return g}function bb(a,b,c,d,e,f){if(c){var g=c(a,b);if("undefined"!=typeof g)return!!g}if(a===b)return 0!==a||1/a==1/b;var i=typeof a,k=typeof b;if(!(a!==a||a&&U[i]||b&&U[k]))return!1;if(null==a||null==b)return a===b;var l=Ad.call(a),m=Ad.call(b);if(l==I&&(l=O),m==I&&(m=O),l!=m)return!1;switch(l){case K:case L:return+a==+b;case N:return a!=+a?b!=+b:0==a?1/a==1/b:a==+b;case P:case Q:return a==vd(b)}var n=l==J;if(!n){var o=Hd.call(a,"__wrapped__"),p=Hd.call(b,"__wrapped__");if(o||p)return bb(o?a.__wrapped__:a,p?b.__wrapped__:b,c,d,e,f);if(l!=O)return!1;var q=a.constructor,r=b.constructor;if(q!=r&&!(Db(q)&&q instanceof q&&Db(r)&&r instanceof r)&&"constructor"in a&&"constructor"in b)return!1}var s=!e;e||(e=h()),f||(f=h());for(var t=e.length;t--;)if(e[t]==a)return f[t]==b;var u=0;if(g=!0,e.push(a),f.push(b),n){if(t=a.length,u=b.length,g=u==t,g||d)for(;u--;){var v=t,w=b[u];if(d)for(;v--&&!(g=bb(a[v],w,c,d,e,f)););else if(!(g=bb(a[u],w,c,d,e,f)))break}}else ge(b,function(b,h,i){return Hd.call(i,h)?(u++,g=Hd.call(a,h)&&bb(a[h],b,c,d,e,f)):void 0}),g&&!d&&ge(a,function(a,b,c){return Hd.call(c,b)?g=--u>-1:void 0});return e.pop(),f.pop(),s&&(j(e),j(f)),g}function cb(a,b,c,d,e){(Zd(b)?Yb:he)(b,function(b,f){var g,h,i=b,j=a[f];if(b&&((h=Zd(b))||ie(b))){for(var k=d.length;k--;)if(g=d[k]==b){j=e[k];break}if(!g){var l;c&&(i=c(j,b),(l="undefined"!=typeof i)&&(j=i)),l||(j=h?Zd(j)?j:[]:ie(j)?j:{}),d.push(b),e.push(j),l||cb(j,b,c,d,e)}}else c&&(i=c(j,b),"undefined"==typeof i&&(i=b)),"undefined"!=typeof i&&(j=i);a[f]=j})}function db(a,b){return a+Ed(Vd()*(b-a+1))}function eb(c,d,e){var g=-1,i=ib(),l=c?c.length:0,m=[],n=!d&&l>=s&&i===a,o=e||n?h():m;if(n){var p=f(o);i=b,o=p}for(;++g<l;){var q=c[g],r=e?e(q,g,c):q;(d?!g||o[o.length-1]!==r:i(o,r)<0)&&((e||n)&&o.push(r),m.push(q))}return n?(j(o.array),k(o)):e&&j(o),m}function fb(a){return function(b,c,d){var e={};c=o.createCallback(c,d,3);var f=-1,g=b?b.length:0;if("number"==typeof g)for(;++f<g;){var h=b[f];a(e,h,c(h,f,b),b)}else he(b,function(b,d,f){a(e,b,c(b,d,f),f)});return e}}function gb(a,b,c,d,e,f){var g=1&b,h=2&b,i=4&b,j=16&b,k=32&b;if(!h&&!Db(a))throw new wd;j&&!c.length&&(b&=-17,j=c=!1),k&&!d.length&&(b&=-33,k=d=!1);var m=a&&a.__bindData__;if(m&&m!==!0)return m=l(m),m[2]&&(m[2]=l(m[2])),m[3]&&(m[3]=l(m[3])),!g||1&m[1]||(m[4]=e),!g&&1&m[1]&&(b|=8),!i||4&m[1]||(m[5]=f),j&&Id.apply(m[2]||(m[2]=[]),c),k&&Ld.apply(m[3]||(m[3]=[]),d),m[1]|=b,gb.apply(null,m);var n=1==b||17===b?t:Z;return n([a,b,c,d,e,f])}function hb(a){return ae[a]}function ib(){var b=(b=o.indexOf)===rc?a:b;return b}function jb(a){return"function"==typeof a&&Bd.test(a)}function kb(a){var b,c;return a&&Ad.call(a)==O&&(b=a.constructor,!Db(b)||b instanceof b)?(ge(a,function(a,b){c=b}),"undefined"==typeof c||Hd.call(a,c)):!1}function lb(a){return be[a]}function mb(a){return a&&"object"==typeof a&&"number"==typeof a.length&&Ad.call(a)==I||!1}function nb(a,b,c,d){return"boolean"!=typeof b&&null!=b&&(d=c,c=b,b=!1),V(a,b,"function"==typeof c&&Y(c,d,1))}function ob(a,b,c){return V(a,!0,"function"==typeof b&&Y(b,c,1))}function pb(a,b){var c=X(a);return b?ee(c,b):c}function qb(a,b,c){var d;return b=o.createCallback(b,c,3),he(a,function(a,c,e){return b(a,c,e)?(d=c,!1):void 0}),d}function rb(a,b,c){var d;return b=o.createCallback(b,c,3),tb(a,function(a,c,e){return b(a,c,e)?(d=c,!1):void 0}),d}function sb(a,b,c){var d=[];ge(a,function(a,b){d.push(b,a)});var e=d.length;for(b=Y(b,c,3);e--&&b(d[e--],d[e],a)!==!1;);return a}function tb(a,b,c){var d=_d(a),e=d.length;for(b=Y(b,c,3);e--;){var f=d[e];if(b(a[f],f,a)===!1)break}return a}function ub(a){var b=[];return ge(a,function(a,c){Db(a)&&b.push(c)}),b.sort()}function vb(a,b){return a?Hd.call(a,b):!1}function wb(a){for(var b=-1,c=_d(a),d=c.length,e={};++b<d;){var f=c[b];e[a[f]]=f}return e}function xb(a){return a===!0||a===!1||a&&"object"==typeof a&&Ad.call(a)==K||!1}function yb(a){return a&&"object"==typeof a&&Ad.call(a)==L||!1}function zb(a){return a&&1===a.nodeType||!1}function Ab(a){var b=!0;if(!a)return b;var c=Ad.call(a),d=a.length;return c==J||c==Q||c==I||c==O&&"number"==typeof d&&Db(a.splice)?!d:(he(a,function(){return b=!1}),b)}function Bb(a,b,c,d){return bb(a,b,"function"==typeof c&&Y(c,d,2))}function Cb(a){return Pd(a)&&!Qd(parseFloat(a))}function Db(a){return"function"==typeof a}function Eb(a){return!(!a||!U[typeof a])}function Fb(a){return Hb(a)&&a!=+a}function Gb(a){return null===a}function Hb(a){return"number"==typeof a||a&&"object"==typeof a&&Ad.call(a)==N||!1}function Ib(a){return a&&"object"==typeof a&&Ad.call(a)==P||!1}function Jb(a){return"string"==typeof a||a&&"object"==typeof a&&Ad.call(a)==Q||!1}function Kb(a){return"undefined"==typeof a}function Lb(a,b,c){var d={};return b=o.createCallback(b,c,3),he(a,function(a,c,e){d[c]=b(a,c,e)}),d}function Mb(a){var b=arguments,c=2;if(!Eb(a))return a;if("number"!=typeof b[2]&&(c=b.length),c>3&&"function"==typeof b[c-2])var d=Y(b[--c-1],b[c--],2);else c>2&&"function"==typeof b[c-1]&&(d=b[--c]);for(var e=l(arguments,1,c),f=-1,g=h(),i=h();++f<c;)cb(a,e[f],d,g,i);return j(g),j(i),a}function Nb(a,b,c){var d={};if("function"!=typeof b){var e=[];ge(a,function(a,b){e.push(b)}),e=$(e,ab(arguments,!0,!1,1));for(var f=-1,g=e.length;++f<g;){var h=e[f];d[h]=a[h]}}else b=o.createCallback(b,c,3),ge(a,function(a,c,e){b(a,c,e)||(d[c]=a)});return d}function Ob(a){for(var b=-1,c=_d(a),d=c.length,e=nd(d);++b<d;){var f=c[b];e[b]=[f,a[f]]}return e}function Pb(a,b,c){var d={};if("function"!=typeof b)for(var e=-1,f=ab(arguments,!0,!1,1),g=Eb(a)?f.length:0;++e<g;){var h=f[e];h in a&&(d[h]=a[h])}else b=o.createCallback(b,c,3),ge(a,function(a,c,e){b(a,c,e)&&(d[c]=a)});return d}function Qb(a,b,c,d){var e=Zd(a);if(null==c)if(e)c=[];else{var f=a&&a.constructor,g=f&&f.prototype;c=X(g)}return b&&(b=o.createCallback(b,d,4),(e?Yb:he)(a,function(a,d,e){return b(c,a,d,e)})),c}function Rb(a){for(var b=-1,c=_d(a),d=c.length,e=nd(d);++b<d;)e[b]=a[c[b]];return e}function Sb(a){for(var b=arguments,c=-1,d=ab(b,!0,!1,1),e=b[2]&&b[2][b[1]]===a?1:d.length,f=nd(e);++c<e;)f[c]=a[d[c]];return f}function Tb(a,b,c){var d=-1,e=ib(),f=a?a.length:0,g=!1;return c=(0>c?Sd(0,f+c):c)||0,Zd(a)?g=e(a,b,c)>-1:"number"==typeof f?g=(Jb(a)?a.indexOf(b,c):e(a,b,c))>-1:he(a,function(a){return++d>=c?!(g=a===b):void 0}),g}function Ub(a,b,c){var d=!0;b=o.createCallback(b,c,3);var e=-1,f=a?a.length:0;if("number"==typeof f)for(;++e<f&&(d=!!b(a[e],e,a)););else he(a,function(a,c,e){return d=!!b(a,c,e)});return d}function Vb(a,b,c){var d=[];b=o.createCallback(b,c,3);var e=-1,f=a?a.length:0;if("number"==typeof f)for(;++e<f;){var g=a[e];b(g,e,a)&&d.push(g)}else he(a,function(a,c,e){b(a,c,e)&&d.push(a)});return d}function Wb(a,b,c){b=o.createCallback(b,c,3);var d=-1,e=a?a.length:0;if("number"!=typeof e){var f;return he(a,function(a,c,d){return b(a,c,d)?(f=a,!1):void 0}),f}for(;++d<e;){var g=a[d];if(b(g,d,a))return g}}function Xb(a,b,c){var d;return b=o.createCallback(b,c,3),Zb(a,function(a,c,e){return b(a,c,e)?(d=a,!1):void 0}),d}function Yb(a,b,c){var d=-1,e=a?a.length:0;if(b=b&&"undefined"==typeof c?b:Y(b,c,3),"number"==typeof e)for(;++d<e&&b(a[d],d,a)!==!1;);else he(a,b);return a}function Zb(a,b,c){var d=a?a.length:0;if(b=b&&"undefined"==typeof c?b:Y(b,c,3),"number"==typeof d)for(;d--&&b(a[d],d,a)!==!1;);else{var e=_d(a);d=e.length,he(a,function(a,c,f){return c=e?e[--d]:--d,b(f[c],c,f)})}return a}function $b(a,b){var c=l(arguments,2),d=-1,e="function"==typeof b,f=a?a.length:0,g=nd("number"==typeof f?f:0);return Yb(a,function(a){g[++d]=(e?b:a[b]).apply(a,c)}),g}function _b(a,b,c){var d=-1,e=a?a.length:0;if(b=o.createCallback(b,c,3),"number"==typeof e)for(var f=nd(e);++d<e;)f[d]=b(a[d],d,a);else f=[],he(a,function(a,c,e){f[++d]=b(a,c,e)});return f}function ac(a,b,c){var e=-1/0,f=e;if("function"!=typeof b&&c&&c[b]===a&&(b=null),null==b&&Zd(a))for(var g=-1,h=a.length;++g<h;){var i=a[g];i>f&&(f=i)}else b=null==b&&Jb(a)?d:o.createCallback(b,c,3),Yb(a,function(a,c,d){var g=b(a,c,d);g>e&&(e=g,f=a)});return f}function bc(a,b,c){var e=1/0,f=e;if("function"!=typeof b&&c&&c[b]===a&&(b=null),null==b&&Zd(a))for(var g=-1,h=a.length;++g<h;){var i=a[g];f>i&&(f=i)}else b=null==b&&Jb(a)?d:o.createCallback(b,c,3),Yb(a,function(a,c,d){var g=b(a,c,d);e>g&&(e=g,f=a)});return f}function cc(a,b,c,d){if(!a)return c;var e=arguments.length<3;b=o.createCallback(b,d,4);var f=-1,g=a.length;if("number"==typeof g)for(e&&(c=a[++f]);++f<g;)c=b(c,a[f],f,a);else he(a,function(a,d,f){c=e?(e=!1,a):b(c,a,d,f)});return c}function dc(a,b,c,d){var e=arguments.length<3;return b=o.createCallback(b,d,4),Zb(a,function(a,d,f){c=e?(e=!1,a):b(c,a,d,f)}),c}function ec(a,b,c){return b=o.createCallback(b,c,3),Vb(a,function(a,c,d){return!b(a,c,d)})}function fc(a,b,c){if(a&&"number"!=typeof a.length&&(a=Rb(a)),null==b||c)return a?a[db(0,a.length-1)]:n;var d=gc(a);return d.length=Td(Sd(0,b),d.length),d}function gc(a){var b=-1,c=a?a.length:0,d=nd("number"==typeof c?c:0);return Yb(a,function(a){var c=db(0,++b);d[b]=d[c],d[c]=a}),d}function hc(a){var b=a?a.length:0;return"number"==typeof b?b:_d(a).length}function ic(a,b,c){var d;b=o.createCallback(b,c,3);var e=-1,f=a?a.length:0;if("number"==typeof f)for(;++e<f&&!(d=b(a[e],e,a)););else he(a,function(a,c,e){return!(d=b(a,c,e))});return!!d}function jc(a,b,c){var d=-1,f=Zd(b),g=a?a.length:0,l=nd("number"==typeof g?g:0);for(f||(b=o.createCallback(b,c,3)),Yb(a,function(a,c,e){var g=l[++d]=i();f?g.criteria=_b(b,function(b){return a[b]}):(g.criteria=h())[0]=b(a,c,e),g.index=d,g.value=a}),g=l.length,l.sort(e);g--;){var m=l[g];l[g]=m.value,f||j(m.criteria),k(m)}return l}function kc(a){return a&&"number"==typeof a.length?l(a):Rb(a)}function lc(a){for(var b=-1,c=a?a.length:0,d=[];++b<c;){var e=a[b];e&&d.push(e)}return d}function mc(a){return $(a,ab(arguments,!0,!0,1))}function nc(a,b,c){var d=-1,e=a?a.length:0;for(b=o.createCallback(b,c,3);++d<e;)if(b(a[d],d,a))return d;return-1}function oc(a,b,c){var d=a?a.length:0;for(b=o.createCallback(b,c,3);d--;)if(b(a[d],d,a))return d;return-1}function pc(a,b,c){var d=0,e=a?a.length:0;if("number"!=typeof b&&null!=b){var f=-1;for(b=o.createCallback(b,c,3);++f<e&&b(a[f],f,a);)d++}else if(d=b,null==d||c)return a?a[0]:n;return l(a,0,Td(Sd(0,d),e))}function qc(a,b,c,d){return"boolean"!=typeof b&&null!=b&&(d=c,c="function"!=typeof b&&d&&d[b]===a?null:b,b=!1),null!=c&&(a=_b(a,c,d)),ab(a,b)}function rc(b,c,d){if("number"==typeof d){var e=b?b.length:0;d=0>d?Sd(0,e+d):d||0}else if(d){var f=Ac(b,c);return b[f]===c?f:-1}return a(b,c,d)}function sc(a,b,c){var d=0,e=a?a.length:0;if("number"!=typeof b&&null!=b){var f=e;for(b=o.createCallback(b,c,3);f--&&b(a[f],f,a);)d++}else d=null==b||c?1:b||d;return l(a,0,Td(Sd(0,e-d),e))}function tc(){for(var c=[],d=-1,e=arguments.length,g=h(),i=ib(),l=i===a,m=h();++d<e;){var n=arguments[d];(Zd(n)||mb(n))&&(c.push(n),g.push(l&&n.length>=s&&f(d?c[d]:m)))}var o=c[0],p=-1,q=o?o.length:0,r=[];a:for(;++p<q;){var t=g[0];if(n=o[p],(t?b(t,n):i(m,n))<0){for(d=e,(t||m).push(n);--d;)if(t=g[d],(t?b(t,n):i(c[d],n))<0)continue a;r.push(n)}}for(;e--;)t=g[e],t&&k(t);return j(g),j(m),r}function uc(a,b,c){var d=0,e=a?a.length:0;if("number"!=typeof b&&null!=b){var f=e;for(b=o.createCallback(b,c,3);f--&&b(a[f],f,a);)d++}else if(d=b,null==d||c)return a?a[e-1]:n;return l(a,Sd(0,e-d))}function vc(a,b,c){var d=a?a.length:0;for("number"==typeof c&&(d=(0>c?Sd(0,d+c):Td(c,d-1))+1);d--;)if(a[d]===b)return d;return-1}function wc(a){for(var b=arguments,c=0,d=b.length,e=a?a.length:0;++c<d;)for(var f=-1,g=b[c];++f<e;)a[f]===g&&(Kd.call(a,f--,1),e--);return a}function xc(a,b,c){a=+a||0,c="number"==typeof c?c:+c||1,null==b&&(b=a,a=0);for(var d=-1,e=Sd(0,Cd((b-a)/(c||1))),f=nd(e);++d<e;)f[d]=a,a+=c;return f}function yc(a,b,c){var d=-1,e=a?a.length:0,f=[];for(b=o.createCallback(b,c,3);++d<e;){var g=a[d];b(g,d,a)&&(f.push(g),Kd.call(a,d--,1),e--)}return f}function zc(a,b,c){if("number"!=typeof b&&null!=b){var d=0,e=-1,f=a?a.length:0;for(b=o.createCallback(b,c,3);++e<f&&b(a[e],e,a);)d++}else d=null==b||c?1:Sd(0,b);return l(a,d)}function Ac(a,b,c,d){var e=0,f=a?a.length:e;for(c=c?o.createCallback(c,d,1):Zc,b=c(b);f>e;){var g=e+f>>>1;c(a[g])<b?e=g+1:f=g}return e}function Bc(){return eb(ab(arguments,!0,!0))}function Cc(a,b,c,d){return"boolean"!=typeof b&&null!=b&&(d=c,c="function"!=typeof b&&d&&d[b]===a?null:b,b=!1),null!=c&&(c=o.createCallback(c,d,3)),eb(a,b,c)}function Dc(a){return $(a,l(arguments,1))}function Ec(){for(var a=-1,b=arguments.length;++a<b;){var c=arguments[a];if(Zd(c)||mb(c))var d=d?eb($(d,c).concat($(c,d))):c}return d||[]}function Fc(){for(var a=arguments.length>1?arguments:arguments[0],b=-1,c=a?ac(me(a,"length")):0,d=nd(0>c?0:c);++b<c;)d[b]=me(a,b);return d}function Gc(a,b){var c=-1,d=a?a.length:0,e={};for(b||!d||Zd(a[0])||(b=[]);++c<d;){var f=a[c];b?e[f]=b[c]:f&&(e[f[0]]=f[1])}return e}function Hc(a,b){if(!Db(b))throw new wd;return function(){return--a<1?b.apply(this,arguments):void 0}}function Ic(a,b){return arguments.length>2?gb(a,17,l(arguments,2),null,b):gb(a,1,null,null,b)}function Jc(a){for(var b=arguments.length>1?ab(arguments,!0,!1,1):ub(a),c=-1,d=b.length;++c<d;){var e=b[c];a[e]=gb(a[e],1,null,null,a)}return a}function Kc(a,b){return arguments.length>2?gb(b,19,l(arguments,2),null,a):gb(b,3,null,null,a)}function Lc(){for(var a=arguments,b=a.length;b--;)if(!Db(a[b]))throw new wd;return function(){for(var b=arguments,c=a.length;c--;)b=[a[c].apply(this,b)];return b[0]}}function Mc(a,b){return b="number"==typeof b?b:+b||a.length,gb(a,4,null,null,null,b)}function Nc(a,b,c){var d,e,f,g,h,i,j,k=0,l=!1,m=!0;if(!Db(a))throw new wd;if(b=Sd(0,b)||0,c===!0){var o=!0;m=!1}else Eb(c)&&(o=c.leading,l="maxWait"in c&&(Sd(b,c.maxWait)||0),m="trailing"in c?c.trailing:m);var p=function(){var c=b-(oe()-g);if(0>=c){e&&Dd(e);var l=j;e=i=j=n,l&&(k=oe(),f=a.apply(h,d),i||e||(d=h=null))}else i=Jd(p,c)},q=function(){i&&Dd(i),e=i=j=n,(m||l!==b)&&(k=oe(),f=a.apply(h,d),i||e||(d=h=null))};return function(){if(d=arguments,g=oe(),h=this,j=m&&(i||!o),l===!1)var c=o&&!i;else{e||o||(k=g);var n=l-(g-k),r=0>=n;r?(e&&(e=Dd(e)),k=g,f=a.apply(h,d)):e||(e=Jd(q,n))}return r&&i?i=Dd(i):i||b===l||(i=Jd(p,b)),c&&(r=!0,f=a.apply(h,d)),!r||i||e||(d=h=null),f}}function Oc(a){if(!Db(a))throw new wd;var b=l(arguments,1);return Jd(function(){a.apply(n,b)},1)}function Pc(a,b){if(!Db(a))throw new wd;var c=l(arguments,2);return Jd(function(){a.apply(n,c)},b)}function Qc(a,b){if(!Db(a))throw new wd;var c=function(){var d=c.cache,e=b?b.apply(this,arguments):r+arguments[0];return Hd.call(d,e)?d[e]:d[e]=a.apply(this,arguments)};return c.cache={},c}function Rc(a){var b,c;if(!Db(a))throw new wd;return function(){return b?c:(b=!0,c=a.apply(this,arguments),a=null,c)}}function Sc(a){return gb(a,16,l(arguments,1))}function Tc(a){return gb(a,32,null,l(arguments,1))}function Uc(a,b,c){var d=!0,e=!0;if(!Db(a))throw new wd;return c===!1?d=!1:Eb(c)&&(d="leading"in c?c.leading:d,e="trailing"in c?c.trailing:e),S.leading=d,S.maxWait=b,S.trailing=e,Nc(a,b,S)}function Vc(a,b){return gb(b,16,[a])}function Wc(a){return function(){return a}}function Xc(a,b,c){var d=typeof a;if(null==a||"function"==d)return Y(a,b,c);if("object"!=d)return bd(a);var e=_d(a),f=e[0],g=a[f];return 1!=e.length||g!==g||Eb(g)?function(b){for(var c=e.length,d=!1;c--&&(d=bb(b[e[c]],a[e[c]],null,!0)););return d}:function(a){var b=a[f];return g===b&&(0!==g||1/g==1/b)}}function Yc(a){return null==a?"":vd(a).replace(de,hb)}function Zc(a){return a}function $c(a,b,c){var d=!0,e=b&&ub(b);b&&(c||e.length)||(null==c&&(c=b),f=p,b=a,a=o,e=ub(b)),c===!1?d=!1:Eb(c)&&"chain"in c&&(d=c.chain);var f=a,g=Db(f);Yb(e,function(c){var e=a[c]=b[c];g&&(f.prototype[c]=function(){var b=this.__chain__,c=this.__wrapped__,g=[c];Id.apply(g,arguments);var h=e.apply(a,g);if(d||b){if(c===h&&Eb(h))return this;h=new f(h),h.__chain__=b}return h})})}function _c(){return c._=zd,this}function ad(){}function bd(a){return function(b){return b[a]}}function cd(a,b,c){var d=null==a,e=null==b;if(null==c&&("boolean"==typeof a&&e?(c=a,a=1):e||"boolean"!=typeof b||(c=b,e=!0)),d&&e&&(b=1),a=+a||0,e?(b=a,a=0):b=+b||0,c||a%1||b%1){var f=Vd();return Td(a+f*(b-a+parseFloat("1e-"+((f+"").length-1))),b)}return db(a,b)}function dd(a,b){if(a){var c=a[b];return Db(c)?a[b]():c}}function ed(a,b,c){var d=o.templateSettings;a=vd(a||""),c=fe({},c,d);var e,f=fe({},c.imports,d.imports),h=_d(f),i=Rb(f),j=0,k=c.interpolate||D,l="__p += '",m=ud((c.escape||D).source+"|"+k.source+"|"+(k===B?y:D).source+"|"+(c.evaluate||D).source+"|$","g");a.replace(m,function(b,c,d,f,h,i){return d||(d=f),l+=a.slice(j,i).replace(F,g),c&&(l+="' +\n__e("+c+") +\n'"),h&&(e=!0,l+="';\n"+h+";\n__p += '"),d&&(l+="' +\n((__t = ("+d+")) == null ? '' : __t) +\n'"),j=i+b.length,b}),l+="';\n";var p=c.variable,q=p;q||(p="obj",l="with ("+p+") {\n"+l+"\n}\n"),l=(e?l.replace(v,""):l).replace(w,"$1").replace(x,"$1;"),l="function("+p+") {\n"+(q?"":p+" || ("+p+" = {});\n")+"var __t, __p = '', __e = _.escape"+(e?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+l+"return __p\n}";var r="\n/*\n//# sourceURL="+(c.sourceURL||"/lodash/template/source["+H++ +"]")+"\n*/";try{var s=qd(h,"return "+l+r).apply(n,i)}catch(t){throw t.source=l,t}return b?s(b):(s.source=l,s)}function fd(a,b,c){a=(a=+a)>-1?a:0;var d=-1,e=nd(a);for(b=Y(b,c,1);++d<a;)e[d]=b(d);return e}function gd(a){return null==a?"":vd(a).replace(ce,lb)}function hd(a){var b=++q;return vd(null==a?"":a)+b}function id(a){return a=new p(a),a.__chain__=!0,a}function jd(a,b){return b(a),a}function kd(){return this.__chain__=!0,this}function ld(){return vd(this.__wrapped__)}function md(){return this.__wrapped__}c=c?_.defaults(W.Object(),c,_.pick(W,G)):W;var nd=c.Array,od=c.Boolean,pd=c.Date,qd=c.Function,rd=c.Math,sd=c.Number,td=c.Object,ud=c.RegExp,vd=c.String,wd=c.TypeError,xd=[],yd=td.prototype,zd=c._,Ad=yd.toString,Bd=ud("^"+vd(Ad).replace(/[.*+?^${}()|[\]\\]/g,"\\$&").replace(/toString| for [^\]]+/g,".*?")+"$"),Cd=rd.ceil,Dd=c.clearTimeout,Ed=rd.floor,Fd=qd.prototype.toString,Gd=jb(Gd=td.getPrototypeOf)&&Gd,Hd=yd.hasOwnProperty,Id=xd.push,Jd=c.setTimeout,Kd=xd.splice,Ld=xd.unshift,Md=function(){try{var a={},b=jb(b=td.defineProperty)&&b,c=b(a,a,a)&&b}catch(d){}return c}(),Nd=jb(Nd=td.create)&&Nd,Od=jb(Od=nd.isArray)&&Od,Pd=c.isFinite,Qd=c.isNaN,Rd=jb(Rd=td.keys)&&Rd,Sd=rd.max,Td=rd.min,Ud=c.parseInt,Vd=rd.random,Wd={};Wd[J]=nd,Wd[K]=od,Wd[L]=pd,Wd[M]=qd,Wd[O]=td,Wd[N]=sd,Wd[P]=ud,Wd[Q]=vd,p.prototype=o.prototype;var Xd=o.support={};Xd.funcDecomp=!jb(c.WinRTError)&&E.test(m),Xd.funcNames="string"==typeof qd.name,o.templateSettings={escape:/<%-([\s\S]+?)%>/g,evaluate:/<%([\s\S]+?)%>/g,interpolate:B,variable:"",imports:{_:o}},Nd||(X=function(){function a(){}return function(b){if(Eb(b)){a.prototype=b;var d=new a;a.prototype=null}return d||c.Object()}}());var Yd=Md?function(a,b){T.value=b,Md(a,"__bindData__",T)}:ad,Zd=Od||function(a){return a&&"object"==typeof a&&"number"==typeof a.length&&Ad.call(a)==J||!1},$d=function(a){var b,c=a,d=[];if(!c)return d;if(!U[typeof a])return d;for(b in c)Hd.call(c,b)&&d.push(b);return d},_d=Rd?function(a){return Eb(a)?Rd(a):[]}:$d,ae={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},be=wb(ae),ce=ud("("+_d(be).join("|")+")","g"),de=ud("["+_d(ae).join("")+"]","g"),ee=function(a,b,c){var d,e=a,f=e;if(!e)return f;var g=arguments,h=0,i="number"==typeof c?2:g.length;if(i>3&&"function"==typeof g[i-2])var j=Y(g[--i-1],g[i--],2);else i>2&&"function"==typeof g[i-1]&&(j=g[--i]);for(;++h<i;)if(e=g[h],e&&U[typeof e])for(var k=-1,l=U[typeof e]&&_d(e),m=l?l.length:0;++k<m;)d=l[k],f[d]=j?j(f[d],e[d]):e[d];return f},fe=function(a,b,c){var d,e=a,f=e;if(!e)return f;for(var g=arguments,h=0,i="number"==typeof c?2:g.length;++h<i;)if(e=g[h],e&&U[typeof e])for(var j=-1,k=U[typeof e]&&_d(e),l=k?k.length:0;++j<l;)d=k[j],"undefined"==typeof f[d]&&(f[d]=e[d]);return f},ge=function(a,b,c){var d,e=a,f=e;if(!e)return f;if(!U[typeof e])return f;b=b&&"undefined"==typeof c?b:Y(b,c,3);for(d in e)if(b(e[d],d,a)===!1)return f;return f},he=function(a,b,c){var d,e=a,f=e;if(!e)return f;if(!U[typeof e])return f;b=b&&"undefined"==typeof c?b:Y(b,c,3);for(var g=-1,h=U[typeof e]&&_d(e),i=h?h.length:0;++g<i;)if(d=h[g],b(e[d],d,a)===!1)return f;return f},ie=Gd?function(a){if(!a||Ad.call(a)!=O)return!1;var b=a.valueOf,c=jb(b)&&(c=Gd(b))&&Gd(c);return c?a==c||Gd(a)==c:kb(a)}:kb,je=fb(function(a,b,c){Hd.call(a,c)?a[c]++:a[c]=1}),ke=fb(function(a,b,c){(Hd.call(a,c)?a[c]:a[c]=[]).push(b)}),le=fb(function(a,b,c){a[c]=b}),me=_b,ne=Vb,oe=jb(oe=pd.now)&&oe||function(){return(new pd).getTime()},pe=8==Ud(u+"08")?Ud:function(a,b){return Ud(Jb(a)?a.replace(C,""):a,b||0)};return o.after=Hc,o.assign=ee,o.at=Sb,o.bind=Ic,o.bindAll=Jc,o.bindKey=Kc,o.chain=id,o.compact=lc,o.compose=Lc,o.constant=Wc,o.countBy=je,o.create=pb,o.createCallback=Xc,o.curry=Mc,o.debounce=Nc,o.defaults=fe,o.defer=Oc,o.delay=Pc,o.difference=mc,o.filter=Vb,o.flatten=qc,o.forEach=Yb,o.forEachRight=Zb,o.forIn=ge,o.forInRight=sb,o.forOwn=he,o.forOwnRight=tb,o.functions=ub,o.groupBy=ke,o.indexBy=le,o.initial=sc,o.intersection=tc,o.invert=wb,o.invoke=$b,o.keys=_d,o.map=_b,o.mapValues=Lb,o.max=ac,o.memoize=Qc,o.merge=Mb,o.min=bc,o.omit=Nb,o.once=Rc,o.pairs=Ob,o.partial=Sc,o.partialRight=Tc,o.pick=Pb,o.pluck=me,o.property=bd,o.pull=wc,o.range=xc,o.reject=ec,o.remove=yc,o.rest=zc,o.shuffle=gc,o.sortBy=jc,o.tap=jd,o.throttle=Uc,o.times=fd,o.toArray=kc,o.transform=Qb,o.union=Bc,o.uniq=Cc,o.values=Rb,o.where=ne,o.without=Dc,o.wrap=Vc,o.xor=Ec,o.zip=Fc,o.zipObject=Gc,o.collect=_b,o.drop=zc,o.each=Yb,o.eachRight=Zb,o.extend=ee,o.methods=ub,o.object=Gc,o.select=Vb,o.tail=zc,o.unique=Cc,o.unzip=Fc,$c(o),o.clone=nb,o.cloneDeep=ob,o.contains=Tb,o.escape=Yc,o.every=Ub,o.find=Wb,o.findIndex=nc,o.findKey=qb,o.findLast=Xb,o.findLastIndex=oc,o.findLastKey=rb,o.has=vb,o.identity=Zc,o.indexOf=rc,o.isArguments=mb,o.isArray=Zd,o.isBoolean=xb,o.isDate=yb,o.isElement=zb,o.isEmpty=Ab,o.isEqual=Bb,o.isFinite=Cb,o.isFunction=Db,o.isNaN=Fb,o.isNull=Gb,o.isNumber=Hb,o.isObject=Eb,o.isPlainObject=ie,o.isRegExp=Ib,o.isString=Jb,o.isUndefined=Kb,o.lastIndexOf=vc,o.mixin=$c,o.noConflict=_c,o.noop=ad,o.now=oe,o.parseInt=pe,o.random=cd,o.reduce=cc,o.reduceRight=dc,o.result=dd,o.runInContext=m,o.size=hc,o.some=ic,o.sortedIndex=Ac,o.template=ed,o.unescape=gd,o.uniqueId=hd,o.all=Ub,o.any=ic,o.detect=Wb,o.findWhere=Wb,o.foldl=cc,o.foldr=dc,o.include=Tb,o.inject=cc,$c(function(){var a={};return he(o,function(b,c){o.prototype[c]||(a[c]=b)}),a}(),!1),o.first=pc,o.last=uc,o.sample=fc,o.take=pc,o.head=pc,he(o,function(a,b){var c="sample"!==b;o.prototype[b]||(o.prototype[b]=function(b,d){var e=this.__chain__,f=a(this.__wrapped__,b,d);return e||null!=b&&(!d||c&&"function"==typeof b)?new p(f,e):f})}),o.VERSION="2.4.1",o.prototype.chain=kd,o.prototype.toString=ld,o.prototype.value=md,o.prototype.valueOf=md,Yb(["join","pop","shift"],function(a){var b=xd[a];o.prototype[a]=function(){var a=this.__chain__,c=b.apply(this.__wrapped__,arguments);return a?new p(c,a):c}}),Yb(["push","reverse","sort","unshift"],function(a){var b=xd[a];o.prototype[a]=function(){return b.apply(this.__wrapped__,arguments),this}}),Yb(["concat","slice","splice"],function(a){var b=xd[a];o.prototype[a]=function(){return new p(b.apply(this.__wrapped__,arguments),this.__chain__)}}),o}var n,o=[],p=[],q=0,r=+new Date+"",s=75,t=40,u=" 	\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000",v=/\b__p \+= '';/g,w=/\b(__p \+=) '' \+/g,x=/(__e\(.*?\)|\b__t\)) \+\n'';/g,y=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,z=/\w*$/,A=/^\s*function[ \n\r\t]+\w/,B=/<%=([\s\S]+?)%>/g,C=RegExp("^["+u+"]*0+(?=.$)"),D=/($^)/,E=/\bthis\b/,F=/['\n\r\t\u2028\u2029\\]/g,G=["Array","Boolean","Date","Function","Math","Number","Object","RegExp","String","_","attachEvent","clearTimeout","isFinite","isNaN","parseInt","setTimeout"],H=0,I="[object Arguments]",J="[object Array]",K="[object Boolean]",L="[object Date]",M="[object Function]",N="[object Number]",O="[object Object]",P="[object RegExp]",Q="[object String]",R={};R[M]=!1,R[I]=R[J]=R[K]=R[L]=R[N]=R[O]=R[P]=R[Q]=!0;var S={leading:!1,maxWait:0,trailing:!1},T={configurable:!1,enumerable:!1,value:null,writable:!1},U={"boolean":!1,"function":!0,object:!0,number:!1,string:!1,undefined:!1},V={"\\":"\\","'":"'","\n":"n","\r":"r","	":"t","\u2028":"u2028","\u2029":"u2029"},W=U[typeof window]&&window||this,X=U[typeof exports]&&exports&&!exports.nodeType&&exports,Y=U[typeof module]&&module&&!module.nodeType&&module,Z=Y&&Y.exports===X&&X,$=U[typeof global]&&global;!$||$.global!==$&&$.window!==$||(W=$);var _=m();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(W._=_,define("underscore",[],function(){return _
})):X&&Y?Z?(Y.exports=_)._=_:X._=_:W._=_}.call(this),function(a,b){if("function"==typeof define&&define.amd)define("backbone",["underscore","exports"],function(c,d){a.Backbone=b(a,d,c)});else if("undefined"!=typeof exports){var c=require("underscore");b(a,exports,c)}else a.Backbone=b(a,{},a._,a.jQuery||a.Zepto||a.ender||a.$)}(this,function(a,b,c,d){{var e=a.Backbone,f=[],g=(f.push,f.slice);f.splice}b.VERSION="1.1.2",b.$=d,b.noConflict=function(){return a.Backbone=e,this},b.emulateHTTP=!1,b.emulateJSON=!1;var h=b.Events={on:function(a,b,c){if(!j(this,"on",a,[b,c])||!b)return this;this._events||(this._events={});var d=this._events[a]||(this._events[a]=[]);return d.push({callback:b,context:c,ctx:c||this}),this},once:function(a,b,d){if(!j(this,"once",a,[b,d])||!b)return this;var e=this,f=c.once(function(){e.off(a,f),b.apply(this,arguments)});return f._callback=b,this.on(a,f,d)},off:function(a,b,d){var e,f,g,h,i,k,l,m;if(!this._events||!j(this,"off",a,[b,d]))return this;if(!a&&!b&&!d)return this._events=void 0,this;for(h=a?[a]:c.keys(this._events),i=0,k=h.length;k>i;i++)if(a=h[i],g=this._events[a]){if(this._events[a]=e=[],b||d)for(l=0,m=g.length;m>l;l++)f=g[l],(b&&b!==f.callback&&b!==f.callback._callback||d&&d!==f.context)&&e.push(f);e.length||delete this._events[a]}return this},trigger:function(a){if(!this._events)return this;for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];if(!j(this,"trigger",a,b))return this;var d=this._events[a],e=this._events.all;return d&&k(d,b),b.unshift(a),e&&k(e,b),this},stopListening:function(a,b,d){var e=this._listeningTo;if(!e)return this;var f=!b&&!d;d||"object"!=typeof b||(d=this),a&&((e={})[a._listenId]=a);for(var g in e)a=e[g],a.off(b,d,this),(f||c.isEmpty(a._events))&&delete this._listeningTo[g];return this}},i=/\s+/,j=function(a,b,c,d){if(!c)return!0;if("object"==typeof c){for(var e in c)a[b].apply(a,[e,c[e]].concat(d));return!1}if(i.test(c)){for(var f=c.split(i),g=0,h=f.length;h>g;g++)a[b].apply(a,[f[g]].concat(d));return!1}return!0},k=function(a,b){var c,d=-1,e=a.length,f=b[0],g=b[1],h=b[2];switch(b.length){case 0:for(;++d<e;)(c=a[d]).callback.call(c.ctx);return;case 1:for(;++d<e;)(c=a[d]).callback.call(c.ctx,f);return;case 2:for(;++d<e;)(c=a[d]).callback.call(c.ctx,f,g);return;case 3:for(;++d<e;)(c=a[d]).callback.call(c.ctx,f,g,h);return;default:for(;++d<e;)(c=a[d]).callback.apply(c.ctx,b);return}},l={listenTo:"on",listenToOnce:"once"};c.each(l,function(a,b){h[b]=function(b,d,e){var f=this._listeningTo||(this._listeningTo={}),g=b._listenId||(b._listenId=c.uniqueId("l"));return f[g]=b,e||"object"!=typeof d||(e=this),b[a](d,e,this),this}}),h.bind=h.on,h.unbind=h.off,c.extend(b,h);var m=b.Model=function(a,b){var d=a||{};b||(b={}),this.cid=c.uniqueId("c"),this.attributes={},b.collection&&(this.collection=b.collection),b.parse&&(d=this.parse(d,b)||{}),d=c.defaults({},d,c.result(this,"defaults")),this.set(d,b),this.changed={},this.initialize.apply(this,arguments)};c.extend(m.prototype,h,{changed:null,validationError:null,idAttribute:"id",initialize:function(){},toJSON:function(){return c.clone(this.attributes)},sync:function(){return b.sync.apply(this,arguments)},get:function(a){return this.attributes[a]},escape:function(a){return c.escape(this.get(a))},has:function(a){return null!=this.get(a)},set:function(a,b,d){var e,f,g,h,i,j,k,l;if(null==a)return this;if("object"==typeof a?(f=a,d=b):(f={})[a]=b,d||(d={}),!this._validate(f,d))return!1;g=d.unset,i=d.silent,h=[],j=this._changing,this._changing=!0,j||(this._previousAttributes=c.clone(this.attributes),this.changed={}),l=this.attributes,k=this._previousAttributes,this.idAttribute in f&&(this.id=f[this.idAttribute]);for(e in f)b=f[e],c.isEqual(l[e],b)||h.push(e),c.isEqual(k[e],b)?delete this.changed[e]:this.changed[e]=b,g?delete l[e]:l[e]=b;if(!i){h.length&&(this._pending=d);for(var m=0,n=h.length;n>m;m++)this.trigger("change:"+h[m],this,l[h[m]],d)}if(j)return this;if(!i)for(;this._pending;)d=this._pending,this._pending=!1,this.trigger("change",this,d);return this._pending=!1,this._changing=!1,this},unset:function(a,b){return this.set(a,void 0,c.extend({},b,{unset:!0}))},clear:function(a){var b={};for(var d in this.attributes)b[d]=void 0;return this.set(b,c.extend({},a,{unset:!0}))},hasChanged:function(a){return null==a?!c.isEmpty(this.changed):c.has(this.changed,a)},changedAttributes:function(a){if(!a)return this.hasChanged()?c.clone(this.changed):!1;var b,d=!1,e=this._changing?this._previousAttributes:this.attributes;for(var f in a)c.isEqual(e[f],b=a[f])||((d||(d={}))[f]=b);return d},previous:function(a){return null!=a&&this._previousAttributes?this._previousAttributes[a]:null},previousAttributes:function(){return c.clone(this._previousAttributes)},fetch:function(a){a=a?c.clone(a):{},void 0===a.parse&&(a.parse=!0);var b=this,d=a.success;return a.success=function(c){return b.set(b.parse(c,a),a)?(d&&d(b,c,a),void b.trigger("sync",b,c,a)):!1},x(this,a),this.sync("read",this,a)},save:function(a,b,d){var e,f,g,h=this.attributes;if(null==a||"object"==typeof a?(e=a,d=b):(e={})[a]=b,d=c.extend({validate:!0},d),e&&!d.wait){if(!this.set(e,d))return!1}else if(!this._validate(e,d))return!1;e&&d.wait&&(this.attributes=c.extend({},h,e)),void 0===d.parse&&(d.parse=!0);var i=this,j=d.success;return d.success=function(a){i.attributes=h;var b=i.parse(a,d);return d.wait&&(b=c.extend(e||{},b)),c.isObject(b)&&!i.set(b,d)?!1:(j&&j(i,a,d),void i.trigger("sync",i,a,d))},x(this,d),f=this.isNew()?"create":d.patch?"patch":"update","patch"===f&&(d.attrs=e),g=this.sync(f,this,d),e&&d.wait&&(this.attributes=h),g},destroy:function(a){a=a?c.clone(a):{};var b=this,d=a.success,e=function(){b.trigger("destroy",b,b.collection,a)};if(a.success=function(c){(a.wait||b.isNew())&&e(),d&&d(b,c,a),b.isNew()||b.trigger("sync",b,c,a)},this.isNew())return a.success(),!1;x(this,a);var f=this.sync("delete",this,a);return a.wait||e(),f},url:function(){var a=c.result(this,"urlRoot")||c.result(this.collection,"url")||w();return this.isNew()?a:a.replace(/([^\/])$/,"$1/")+encodeURIComponent(this.id)},parse:function(a){return a},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return!this.has(this.idAttribute)},isValid:function(a){return this._validate({},c.extend(a||{},{validate:!0}))},_validate:function(a,b){if(!b.validate||!this.validate)return!0;a=c.extend({},this.attributes,a);var d=this.validationError=this.validate(a,b)||null;return d?(this.trigger("invalid",this,d,c.extend(b,{validationError:d})),!1):!0}});var n=["keys","values","pairs","invert","pick","omit"];c.each(n,function(a){m.prototype[a]=function(){var b=g.call(arguments);return b.unshift(this.attributes),c[a].apply(c,b)}});var o=b.Collection=function(a,b){b||(b={}),b.model&&(this.model=b.model),void 0!==b.comparator&&(this.comparator=b.comparator),this._reset(),this.initialize.apply(this,arguments),a&&this.reset(a,c.extend({silent:!0},b))},p={add:!0,remove:!0,merge:!0},q={add:!0,remove:!1};c.extend(o.prototype,h,{model:m,initialize:function(){},toJSON:function(a){return this.map(function(b){return b.toJSON(a)})},sync:function(){return b.sync.apply(this,arguments)},add:function(a,b){return this.set(a,c.extend({merge:!1},b,q))},remove:function(a,b){var d=!c.isArray(a);a=d?[a]:c.clone(a),b||(b={});var e,f,g,h;for(e=0,f=a.length;f>e;e++)h=a[e]=this.get(a[e]),h&&(delete this._byId[h.id],delete this._byId[h.cid],g=this.indexOf(h),this.models.splice(g,1),this.length--,b.silent||(b.index=g,h.trigger("remove",h,this,b)),this._removeReference(h,b));return d?a[0]:a},set:function(a,b){b=c.defaults({},b,p),b.parse&&(a=this.parse(a,b));var d=!c.isArray(a);a=d?a?[a]:[]:c.clone(a);var e,f,g,h,i,j,k,l=b.at,n=this.model,o=this.comparator&&null==l&&b.sort!==!1,q=c.isString(this.comparator)?this.comparator:null,r=[],s=[],t={},u=b.add,v=b.merge,w=b.remove,x=!o&&u&&w?[]:!1;for(e=0,f=a.length;f>e;e++){if(i=a[e]||{},g=i instanceof m?h=i:i[n.prototype.idAttribute||"id"],j=this.get(g))w&&(t[j.cid]=!0),v&&(i=i===h?h.attributes:i,b.parse&&(i=j.parse(i,b)),j.set(i,b),o&&!k&&j.hasChanged(q)&&(k=!0)),a[e]=j;else if(u){if(h=a[e]=this._prepareModel(i,b),!h)continue;r.push(h),this._addReference(h,b)}h=j||h,!x||!h.isNew()&&t[h.id]||x.push(h),t[h.id]=!0}if(w){for(e=0,f=this.length;f>e;++e)t[(h=this.models[e]).cid]||s.push(h);s.length&&this.remove(s,b)}if(r.length||x&&x.length)if(o&&(k=!0),this.length+=r.length,null!=l)for(e=0,f=r.length;f>e;e++)this.models.splice(l+e,0,r[e]);else{x&&(this.models.length=0);var y=x||r;for(e=0,f=y.length;f>e;e++)this.models.push(y[e])}if(k&&this.sort({silent:!0}),!b.silent){for(e=0,f=r.length;f>e;e++)(h=r[e]).trigger("add",h,this,b);(k||x&&x.length)&&this.trigger("sort",this,b)}return d?a[0]:a},reset:function(a,b){b||(b={});for(var d=0,e=this.models.length;e>d;d++)this._removeReference(this.models[d],b);return b.previousModels=this.models,this._reset(),a=this.add(a,c.extend({silent:!0},b)),b.silent||this.trigger("reset",this,b),a},push:function(a,b){return this.add(a,c.extend({at:this.length},b))},pop:function(a){var b=this.at(this.length-1);return this.remove(b,a),b},unshift:function(a,b){return this.add(a,c.extend({at:0},b))},shift:function(a){var b=this.at(0);return this.remove(b,a),b},slice:function(){return g.apply(this.models,arguments)},get:function(a){return null==a?void 0:this._byId[a]||this._byId[a.id]||this._byId[a.cid]},at:function(a){return this.models[a]},where:function(a,b){return c.isEmpty(a)?b?void 0:[]:this[b?"find":"filter"](function(b){for(var c in a)if(a[c]!==b.get(c))return!1;return!0})},findWhere:function(a){return this.where(a,!0)},sort:function(a){if(!this.comparator)throw new Error("Cannot sort a set without a comparator");return a||(a={}),c.isString(this.comparator)||1===this.comparator.length?this.models=this.sortBy(this.comparator,this):this.models.sort(c.bind(this.comparator,this)),a.silent||this.trigger("sort",this,a),this},pluck:function(a){return c.invoke(this.models,"get",a)},fetch:function(a){a=a?c.clone(a):{},void 0===a.parse&&(a.parse=!0);var b=a.success,d=this;return a.success=function(c){var e=a.reset?"reset":"set";d[e](c,a),b&&b(d,c,a),d.trigger("sync",d,c,a)},x(this,a),this.sync("read",this,a)},create:function(a,b){if(b=b?c.clone(b):{},!(a=this._prepareModel(a,b)))return!1;b.wait||this.add(a,b);var d=this,e=b.success;return b.success=function(a,c){b.wait&&d.add(a,b),e&&e(a,c,b)},a.save(null,b),a},parse:function(a){return a},clone:function(){return new this.constructor(this.models)},_reset:function(){this.length=0,this.models=[],this._byId={}},_prepareModel:function(a,b){if(a instanceof m)return a;b=b?c.clone(b):{},b.collection=this;var d=new this.model(a,b);return d.validationError?(this.trigger("invalid",this,d.validationError,b),!1):d},_addReference:function(a){this._byId[a.cid]=a,null!=a.id&&(this._byId[a.id]=a),a.collection||(a.collection=this),a.on("all",this._onModelEvent,this)},_removeReference:function(a){this===a.collection&&delete a.collection,a.off("all",this._onModelEvent,this)},_onModelEvent:function(a,b,c,d){("add"!==a&&"remove"!==a||c===this)&&("destroy"===a&&this.remove(b,d),b&&a==="change:"+b.idAttribute&&(delete this._byId[b.previous(b.idAttribute)],null!=b.id&&(this._byId[b.id]=b)),this.trigger.apply(this,arguments))}});var r=["forEach","each","map","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","max","min","toArray","size","first","head","take","initial","rest","tail","drop","last","without","difference","indexOf","shuffle","lastIndexOf","isEmpty","chain","sample"];c.each(r,function(a){o.prototype[a]=function(){var b=g.call(arguments);return b.unshift(this.models),c[a].apply(c,b)}});var s=["groupBy","countBy","sortBy","indexBy"];c.each(s,function(a){o.prototype[a]=function(b,d){var e=c.isFunction(b)?b:function(a){return a.get(b)};return c[a](this.models,e,d)}}),b.sync=function(a,d,e){var f=u[a];c.defaults(e||(e={}),{emulateHTTP:b.emulateHTTP,emulateJSON:b.emulateJSON});var g={type:f,dataType:"json"};if(e.url||(g.url=c.result(d,"url")||w()),null!=e.data||!d||"create"!==a&&"update"!==a&&"patch"!==a||(g.contentType="application/json",g.data=JSON.stringify(e.attrs||d.toJSON(e))),e.emulateJSON&&(g.contentType="application/x-www-form-urlencoded",g.data=g.data?{model:g.data}:{}),e.emulateHTTP&&("PUT"===f||"DELETE"===f||"PATCH"===f)){g.type="POST",e.emulateJSON&&(g.data._method=f);var h=e.beforeSend;e.beforeSend=function(a){return a.setRequestHeader("X-HTTP-Method-Override",f),h?h.apply(this,arguments):void 0}}"GET"===g.type||e.emulateJSON||(g.processData=!1),"PATCH"===g.type&&t&&(g.xhr=function(){return new ActiveXObject("Microsoft.XMLHTTP")});var i=e.xhr=b.ajax(c.extend(g,e));return d.trigger("request",d,i,e),i};var t=!("undefined"==typeof window||!window.ActiveXObject||window.XMLHttpRequest&&(new XMLHttpRequest).dispatchEvent),u={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};b.ajax=function(){return b.$.ajax.apply(b.$,arguments)};var v=function(a,b){var d,e=this;d=a&&c.has(a,"constructor")?a.constructor:function(){return e.apply(this,arguments)},c.extend(d,e,b);var f=function(){this.constructor=d};return f.prototype=e.prototype,d.prototype=new f,a&&c.extend(d.prototype,a),d.__super__=e.prototype,d};m.extend=o.extend=History.extend=v;var w=function(){throw new Error('A "url" property or function must be specified')},x=function(a,b){var c=b.error;b.error=function(d){c&&c(a,d,b),a.trigger("error",a,d,b)}};return b}),function(){function a(a){var c=!1;return function(){if(c)throw new Error("Callback was already called.");c=!0,a.apply(b,arguments)}}var b,c,d={};b=this,null!=b&&(c=b.async),d.noConflict=function(){return b.async=c,d};var e=function(a,b){if(a.forEach)return a.forEach(b);for(var c=0;c<a.length;c+=1)b(a[c],c,a)},f=function(a,b){if(a.map)return a.map(b);var c=[];return e(a,function(a,d,e){c.push(b(a,d,e))}),c},g=function(a,b,c){return a.reduce?a.reduce(b,c):(e(a,function(a,d,e){c=b(c,a,d,e)}),c)},h=function(a){if(Object.keys)return Object.keys(a);var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c);return b};"undefined"!=typeof process&&process.nextTick?(d.nextTick=process.nextTick,d.setImmediate="undefined"!=typeof setImmediate?setImmediate:d.nextTick):"function"==typeof setImmediate?(d.nextTick=function(a){setImmediate(a)},d.setImmediate=d.nextTick):(d.nextTick=function(a){setTimeout(a,0)},d.setImmediate=d.nextTick),d.each=function(b,c,d){if(d=d||function(){},!b.length)return d();var f=0;e(b,function(e){c(e,a(function(a){a?(d(a),d=function(){}):(f+=1,f>=b.length&&d(null))}))})},d.forEach=d.each,d.eachSeries=function(a,b,c){if(c=c||function(){},!a.length)return c();var d=0,e=function(){b(a[d],function(b){b?(c(b),c=function(){}):(d+=1,d>=a.length?c(null):e())})};e()},d.forEachSeries=d.eachSeries,d.eachLimit=function(a,b,c,d){var e=i(b);e.apply(null,[a,c,d])},d.forEachLimit=d.eachLimit;var i=function(a){return function(b,c,d){if(d=d||function(){},!b.length||0>=a)return d();var e=0,f=0,g=0;!function h(){if(e>=b.length)return d();for(;a>g&&f<b.length;)f+=1,g+=1,c(b[f-1],function(a){a?(d(a),d=function(){}):(e+=1,g-=1,e>=b.length?d():h())})}()}},j=function(a){return function(){var b=Array.prototype.slice.call(arguments);return a.apply(null,[d.each].concat(b))}},k=function(a,b){return function(){var c=Array.prototype.slice.call(arguments);return b.apply(null,[i(a)].concat(c))}},l=function(a){return function(){var b=Array.prototype.slice.call(arguments);return a.apply(null,[d.eachSeries].concat(b))}},m=function(a,b,c,d){var e=[];b=f(b,function(a,b){return{index:b,value:a}}),a(b,function(a,b){c(a.value,function(c,d){e[a.index]=d,b(c)})},function(a){d(a,e)})};d.map=j(m),d.mapSeries=l(m),d.mapLimit=function(a,b,c,d){return n(b)(a,c,d)};var n=function(a){return k(a,m)};d.reduce=function(a,b,c,e){d.eachSeries(a,function(a,d){c(b,a,function(a,c){b=c,d(a)})},function(a){e(a,b)})},d.inject=d.reduce,d.foldl=d.reduce,d.reduceRight=function(a,b,c,e){var g=f(a,function(a){return a}).reverse();d.reduce(g,b,c,e)},d.foldr=d.reduceRight;var o=function(a,b,c,d){var e=[];b=f(b,function(a,b){return{index:b,value:a}}),a(b,function(a,b){c(a.value,function(c){c&&e.push(a),b()})},function(){d(f(e.sort(function(a,b){return a.index-b.index}),function(a){return a.value}))})};d.filter=j(o),d.filterSeries=l(o),d.select=d.filter,d.selectSeries=d.filterSeries;var p=function(a,b,c,d){var e=[];b=f(b,function(a,b){return{index:b,value:a}}),a(b,function(a,b){c(a.value,function(c){c||e.push(a),b()})},function(){d(f(e.sort(function(a,b){return a.index-b.index}),function(a){return a.value}))})};d.reject=j(p),d.rejectSeries=l(p);var q=function(a,b,c,d){a(b,function(a,b){c(a,function(c){c?(d(a),d=function(){}):b()})},function(){d()})};d.detect=j(q),d.detectSeries=l(q),d.some=function(a,b,c){d.each(a,function(a,d){b(a,function(a){a&&(c(!0),c=function(){}),d()})},function(){c(!1)})},d.any=d.some,d.every=function(a,b,c){d.each(a,function(a,d){b(a,function(a){a||(c(!1),c=function(){}),d()})},function(){c(!0)})},d.all=d.every,d.sortBy=function(a,b,c){d.map(a,function(a,c){b(a,function(b,d){b?c(b):c(null,{value:a,criteria:d})})},function(a,b){if(a)return c(a);var d=function(a,b){var c=a.criteria,d=b.criteria;return d>c?-1:c>d?1:0};c(null,f(b.sort(d),function(a){return a.value}))})},d.auto=function(a,b){b=b||function(){};var c=h(a);if(!c.length)return b(null);var f={},i=[],j=function(a){i.unshift(a)},k=function(a){for(var b=0;b<i.length;b+=1)if(i[b]===a)return void i.splice(b,1)},l=function(){e(i.slice(0),function(a){a()})};j(function(){h(f).length===c.length&&(b(null,f),b=function(){})}),e(c,function(c){var i=a[c]instanceof Function?[a[c]]:a[c],m=function(a){var g=Array.prototype.slice.call(arguments,1);if(g.length<=1&&(g=g[0]),a){var i={};e(h(f),function(a){i[a]=f[a]}),i[c]=g,b(a,i),b=function(){}}else f[c]=g,d.setImmediate(l)},n=i.slice(0,Math.abs(i.length-1))||[],o=function(){return g(n,function(a,b){return a&&f.hasOwnProperty(b)},!0)&&!f.hasOwnProperty(c)};if(o())i[i.length-1](m,f);else{var p=function(){o()&&(k(p),i[i.length-1](m,f))};j(p)}})},d.waterfall=function(a,b){if(b=b||function(){},a.constructor!==Array){var c=new Error("First argument to waterfall must be an array of functions");return b(c)}if(!a.length)return b();var e=function(a){return function(c){if(c)b.apply(null,arguments),b=function(){};else{var f=Array.prototype.slice.call(arguments,1),g=a.next();f.push(g?e(g):b),d.setImmediate(function(){a.apply(null,f)})}}};e(d.iterator(a))()};var r=function(a,b,c){if(c=c||function(){},b.constructor===Array)a.map(b,function(a,b){a&&a(function(a){var c=Array.prototype.slice.call(arguments,1);c.length<=1&&(c=c[0]),b.call(null,a,c)})},c);else{var d={};a.each(h(b),function(a,c){b[a](function(b){var e=Array.prototype.slice.call(arguments,1);e.length<=1&&(e=e[0]),d[a]=e,c(b)})},function(a){c(a,d)})}};d.parallel=function(a,b){r({map:d.map,each:d.each},a,b)},d.parallelLimit=function(a,b,c){r({map:n(b),each:i(b)},a,c)},d.series=function(a,b){if(b=b||function(){},a.constructor===Array)d.mapSeries(a,function(a,b){a&&a(function(a){var c=Array.prototype.slice.call(arguments,1);c.length<=1&&(c=c[0]),b.call(null,a,c)})},b);else{var c={};d.eachSeries(h(a),function(b,d){a[b](function(a){var e=Array.prototype.slice.call(arguments,1);e.length<=1&&(e=e[0]),c[b]=e,d(a)})},function(a){b(a,c)})}},d.iterator=function(a){var b=function(c){var d=function(){return a.length&&a[c].apply(null,arguments),d.next()};return d.next=function(){return c<a.length-1?b(c+1):null},d};return b(0)},d.apply=function(a){var b=Array.prototype.slice.call(arguments,1);return function(){return a.apply(null,b.concat(Array.prototype.slice.call(arguments)))}};var s=function(a,b,c,d){var e=[];a(b,function(a,b){c(a,function(a,c){e=e.concat(c||[]),b(a)})},function(a){d(a,e)})};d.concat=j(s),d.concatSeries=l(s),d.whilst=function(a,b,c){a()?b(function(e){return e?c(e):void d.whilst(a,b,c)}):c()},d.doWhilst=function(a,b,c){a(function(e){return e?c(e):void(b()?d.doWhilst(a,b,c):c())})},d.until=function(a,b,c){a()?c():b(function(e){return e?c(e):void d.until(a,b,c)})},d.doUntil=function(a,b,c){a(function(e){return e?c(e):void(b()?c():d.doUntil(a,b,c))})},d.queue=function(b,c){function f(a,b,f,g){b.constructor!==Array&&(b=[b]),e(b,function(b){var e={data:b,callback:"function"==typeof g?g:null};f?a.tasks.unshift(e):a.tasks.push(e),a.saturated&&a.tasks.length===c&&a.saturated(),d.setImmediate(a.process)})}void 0===c&&(c=1);var g=0,h={tasks:[],concurrency:c,saturated:null,empty:null,drain:null,push:function(a,b){f(h,a,!1,b)},unshift:function(a,b){f(h,a,!0,b)},process:function(){if(g<h.concurrency&&h.tasks.length){var c=h.tasks.shift();h.empty&&0===h.tasks.length&&h.empty(),g+=1;var d=function(){g-=1,c.callback&&c.callback.apply(c,arguments),h.drain&&h.tasks.length+g===0&&h.drain(),h.process()},e=a(d);b(c.data,e)}},length:function(){return h.tasks.length},running:function(){return g}};return h},d.cargo=function(a,b){var c=!1,g=[],h={tasks:g,payload:b,saturated:null,empty:null,drain:null,push:function(a,c){a.constructor!==Array&&(a=[a]),e(a,function(a){g.push({data:a,callback:"function"==typeof c?c:null}),h.saturated&&g.length===b&&h.saturated()}),d.setImmediate(h.process)},process:function i(){if(!c){if(0===g.length)return void(h.drain&&h.drain());var d="number"==typeof b?g.splice(0,b):g.splice(0),j=f(d,function(a){return a.data});h.empty&&h.empty(),c=!0,a(j,function(){c=!1;var a=arguments;e(d,function(b){b.callback&&b.callback.apply(null,a)}),i()})}},length:function(){return g.length},running:function(){return c}};return h};var t=function(a){return function(b){var c=Array.prototype.slice.call(arguments,1);b.apply(null,c.concat([function(b){var c=Array.prototype.slice.call(arguments,1);"undefined"!=typeof console&&(b?console.error&&console.error(b):console[a]&&e(c,function(b){console[a](b)}))}]))}};d.log=t("log"),d.dir=t("dir"),d.memoize=function(a,b){var c={},d={};b=b||function(a){return a};var e=function(){var e=Array.prototype.slice.call(arguments),f=e.pop(),g=b.apply(null,e);g in c?f.apply(null,c[g]):g in d?d[g].push(f):(d[g]=[f],a.apply(null,e.concat([function(){c[g]=arguments;var a=d[g];delete d[g];for(var b=0,e=a.length;e>b;b++)a[b].apply(null,arguments)}])))};return e.memo=c,e.unmemoized=a,e},d.unmemoize=function(a){return function(){return(a.unmemoized||a).apply(null,arguments)}},d.times=function(a,b,c){for(var e=[],f=0;a>f;f++)e.push(f);return d.map(e,b,c)},d.timesSeries=function(a,b,c){for(var e=[],f=0;a>f;f++)e.push(f);return d.mapSeries(e,b,c)},d.compose=function(){var a=Array.prototype.reverse.call(arguments);return function(){var b=this,c=Array.prototype.slice.call(arguments),e=c.pop();d.reduce(a,c,function(a,c,d){c.apply(b,a.concat([function(){var a=arguments[0],b=Array.prototype.slice.call(arguments,1);d(a,b)}]))},function(a,c){e.apply(b,[a].concat(c))})}};var u=function(a,b){var c=function(){var c=this,d=Array.prototype.slice.call(arguments),e=d.pop();return a(b,function(a,b){a.apply(c,d.concat([b]))},e)};if(arguments.length>2){var d=Array.prototype.slice.call(arguments,2);return c.apply(this,d)}return c};d.applyEach=j(u),d.applyEachSeries=l(u),d.forever=function(a,b){function c(d){if(d){if(b)return b(d);throw d}a(c)}c()},"undefined"!=typeof define&&define.amd?define("async",[],function(){return d}):"undefined"!=typeof module&&module.exports?module.exports=d:b.async=d}(),define("VeroldEngine/libs/uuid",[],function(){function a(){for(var a="",b=0;36>b;)a=a.concat((16*Math.random()|0).toString(16)),b++;return a.replace(/^(\w{8})\w(\w{4})\w\w(\w{3})\w\w(\w{3})\w(\w{12})/,"$1-$2-4$3-"+"49ab".charAt(4*Math.random()|0)+"$4-$5")}return a}),define("VeroldEngine/collections/subentity",["underscore","backbone"],function(a,b){var c=b.Collection.extend({initialize:function(a,b){this.model=b.model,this.entity=b.entity,this.paths=b.paths||window.VAPI.defaultPaths},url:function(){return this.paths.apiBaseUrl+"/entities/"+this.entity.id+"/entities.json"}});return c}),function(a){"function"==typeof define&&define.amd?define("VeroldEngine/libs/backbone/deep-model",["underscore","backbone"],a):a(_,Backbone)}(function(a,b){function c(a){var d;if(null==a||"object"!=typeof a)return a;if(a instanceof b.Collection||a instanceof b.Model)return a;if(a instanceof Date)return d=new Date,d.setTime(a.getTime()),d;if(a instanceof Array)return a.slice(0);if(a instanceof Object){d={};for(var e in a)a.hasOwnProperty(e)&&(d[e]=c(a[e]));return d}throw new Error("Unable to copy obj! Its type isn't supported.")}function d(b){var c={},e=h.keyPathSeparator;for(var f in b){var g=b[f];if(g&&g.constructor===Object&&!a.isEmpty(g)){var i=d(g);for(var j in i){var k=i[j];c[f+e+j]=k}}else c[f]=g}return c}function e(b,c,d){for(var e=h.keyPathSeparator,f=c?c.split(e):[],g=b,i=0,j=f.length;j>i;i++){if(d&&!a.has(g,f[i]))return!1;if(g=g[f[i]],null==g&&j-1>i&&(g={}),"undefined"==typeof g)return d?!0:g}return d?!0:g}function f(b,c,d,e){e=e||{};for(var f=h.keyPathSeparator,g=c?c.split(f):[],i=b,j=0,k=g.length;k>j&&void 0!==i;j++){var l=g[j];j===k-1?e.unset||a.isUndefined(d)&&!e.keepUndefined?delete i[l]:i[l]=d:("undefined"!=typeof i[l]&&a.isObject(i[l])||(i[l]={}),i=i[l])}}function g(a,b){f(a,b,null,{unset:!0})}a.deepClone=a.deepClone||a.cloneDeep||c;var h=b.Model.extend({constructor:function(b,c){var d,e=b||{};this.cid=a.uniqueId("c"),this.attributes={},c&&c.collection&&(this.collection=c.collection),c&&c.parse&&(e=this.parse(e,c)||{}),(d=a.result(this,"defaults"))&&(e=a.deepExtend({},d,e)),this.set(e,c),this.changed={},this.initialize.apply(this,arguments)},toJSON:function(){return c(this.attributes)},get:function(a){return e(this.attributes,a)},set:function(b,i,j){var k,l,m,n,o,p,q,r;if(null==b)return this;if("object"==typeof b?(l=b,j=i||{}):(l={})[b]=i,j||(j={}),!this._validate(l,j))return!1;m=j.unset,o=j.silent,n=[],p=this._changing,this._changing=!0,p||(this._previousAttributes=c(this.attributes),this.changed={}),r=this.attributes,q=this._previousAttributes,this.idAttribute in l&&(this.id=l[this.idAttribute]),l=d(l);for(k in l)i=l[k],a.isEqual(e(r,k),i)||n.push(k),a.isEqual(e(q,k),i)?g(this.changed,k):f(this.changed,k,i,{keepUndefined:!0}),m?g(r,k):f(r,k,i);if(!o){n.length&&(this._pending=!0);for(var s=h.keyPathSeparator,t={},u=0,v=n.length;v>u;u++){var b=n[u];t.hasOwnProperty(b)&&t[b]||(t[b]=!0,this.trigger("change:"+b,this,e(r,b),j));for(var w=b.split(s),x=w.length-1;x>0;x--){var y=a.first(w,x).join(s),z=y+s+"*";t.hasOwnProperty(z)&&t[z]||(t[z]=!0,this.trigger("change:"+z,this,e(r,y),j)),t.hasOwnProperty(y)&&t[y]||(t[y]=!0,this.trigger("change:"+y,this,e(r,y),j))}}}if(p)return this;if(!o)for(;this._pending;)this._pending=!1,this.trigger("change",this,j);return this._pending=!1,this._changing=!1,this},clear:function(b){var c={},e=d(this.attributes);for(var f in e)c[f]=void 0;return this.set(c,a.extend({},b,{unset:!0}))},hasChanged:function(b){return null==b?!a.isEmpty(this.changed):void 0!==e(this.changed,b)},changedAttributes:function(b){if(!b)return this.hasChanged()?d(this.changed):!1;var c=this._changing?this._previousAttributes:this.attributes;b=d(b),c=d(c);var e,f=!1;for(var g in b)a.isEqual(c[g],e=b[g])||((f||(f={}))[g]=e);return f},previous:function(a){return null!=a&&this._previousAttributes?e(this._previousAttributes,a):null},previousAttributes:function(){return c(this._previousAttributes)}});return h.keyPathSeparator=".",b.DeepModel=h,"undefined"!=typeof module&&(module.exports=h),b}),define("VeroldEngine/models/entity",["underscore","backbone","VeroldEngine/libs/uuid","VeroldEngine/collections/subentity","VeroldEngine/libs/backbone/deep-model"],function(a,b,c,d){var e={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"},f=function(){throw new Error('A "url" property or function must be specified')},g=b.DeepModel.extend({idAttribute:"id",initialize:function(a,b){if(this.isPersistent=!0,this.creationCallbacks={success:{},failure:{}},this.paths=b&&b.paths||this.collection&&this.collection.paths||window.VAPI.defaultPaths,this.subEntities=new d([],{model:g,entity:this,paths:this.paths}),!this.paths)throw new Error("paths not set!")},url:function(){return this.has("id")?this.paths.apiBaseUrl+"/entities/"+this.get("id")+".json":this.paths.apiBaseUrl+"/projects/"+this.get("projectId")+"/entities.json"},isAsset:function(){return this.get("parentAssetId")!==this.get("id")&&this.get("parentAssetId")?!1:!0},isValidEntityId:function(a){var b=a.length;return 12===b||24===b?/^[0-9a-fA-F]+$/.test(a):!1},getPath:function(b){var c=this.get("veroldAsset")?this.paths.glAssetsBaseUrl+("/"===this.paths.glAssetsBaseUrl.substr(-1)?"":"/")+this.get("folder"):this.paths.assetsBaseUrl+("/"===this.paths.assetsBaseUrl.substr(-1)?"":"/")+"entities/"+this.get("rootFolder")+"/"+this.get("folder"),d="path",e=this.get("type");if("texture2D"===e||"video"===e)d=this.get("payload")[b],d=d?d.path:this.get("payload").path,d&&!this.get("payload").isLocal&&(d=c+"/"+d);else if("textureCube"===e){if(d=this.get("payload")[b],d=d?d.path:this.get("payload").path,!this.get("payload").isLocal)if(a.isArray(d)){var f=d;d=[];for(var g in f)d.push(c+"/"+f[g])}else d=c+"/"+d}else if("textureVideo"===e){var h=["mp4","webm"];d=[];for(var i in h){var f=this.get("payload")[b+"_"+h[i]];f&&(f=f.path,this.get("payload").isLocal||(f=c+"/"+f),d.push(f))}}else if("renderTexture2D"===e||"renderTextureCube"===e)d=null;else if("mesh"===e||"skinned_mesh"===e)d=this.get("payload").geometry,this.get("payload").isLocal||(d=c+"/"+this.get("payload").geometry);else if("audio"===e){var h=["mp3","ogg"];d=[];for(var i in h){var f=this.get("payload")[b+"_"+h[i]];f&&(f=f.path,this.get("payload").isLocal||(f=c+"/"+f),d.push(f))}}else d=this.get("payload").path,this.get("payload").isLocal||(d=c+"/"+this.get("payload").path);return d},getResourcePathPrefix:function(){var a="";return this.get("overridePrefix")?a=this.get("overridePrefix"):this.get("payload").isLocal||(a=this.get("veroldAsset")?this.paths.glAssetsBaseUrl+"/"+this.get("folder")+"/":this.paths.assetsBaseUrl+"/entities/"+this.get("rootFolder")+"/"+this.get("folder")+"/"),a},getResourcePath:function(a){var b=this.getResources()[a];return b?this.getResourcePathPrefix()+b.path:null},getResources:function(){return this.get("resources")||[]},clonePayload:function(){function b(c){var d,e;if(a.isArray(c)){d=[];for(e in c)d.push(b(c[e]));return d}if(a.isObject(c)){d={};for(e in c)d[e]=b(c[e]);return d}return c}var c={},d=this.get("payload");for(var e in d)c[e]=b(d[e]);return c},cloneComponents:function(){function b(c){var d,e;if(a.isArray(c)){d=[];for(e in c)d.push(b(c[e]));return d}if(a.isObject(c)){d={};for(e in c)d[e]=b(c[e]);return d}return c}var c={},d=this.get("components");for(var e in d)c[e]=b(d[e]);return c},getInstance:function(a,c){var d="/entities/"+this.get("id")+"/instances.json";b.$.ajax({type:"POST",url:d,data:a,dataType:"json"}).done(function(a){c(new g(a,{paths:this.paths}))})},getClone:function(a,c){var d="/entities/"+this.get("id")+"/clone.json";b.$.ajax({type:"POST",url:d,data:a,dataType:"json"}).done(function(a){c(new g(a,{paths:this.paths}))}.bind(this))},clearData:function(b){var c=this.toJSON();a.each(c,function(a,d){(b||"dependencies"!==d&&"geometries"!==d)&&(c[d]=void 0)},this)},sync:function(c,d,g){var h=e[c],i=/^[a-f0-9]{24}$/i;a.defaults(g||(g={}),{emulateHTTP:b.emulateHTTP,emulateJSON:b.emulateJSON});var j={type:h,dataType:"json"};if(g.url||(j.url=a.result(d,"url")||f()),null==g.data&&d&&("create"===c||"update"===c||"patch"===c)){j.contentType="application/json";var k=JSON.parse(JSON.stringify(g.attrs||d.toJSON(g)));for(var l in k.children)l.match(i)||delete k.children[l];a.each(k.components,function(a,b){var c=this.veroldEngine.assetRegistry.getAssetById(a.scriptId);c&&(a.scriptId.match(i)||c.entityModel.isBuiltIn)||delete k.components[b]},this),delete k.dependencies,j.data=window.angular&&window.angular.toJson(k)||JSON.stringify(k)}if(g.emulateJSON&&(j.contentType="application/x-www-form-urlencoded",j.data=j.data?{model:j.data}:{}),g.emulateHTTP&&("PUT"===h||"DELETE"===h||"PATCH"===h)){j.type="POST",g.emulateJSON&&(j.data._method=h);
var m=g.beforeSend;g.beforeSend=function(a){return a.setRequestHeader("X-HTTP-Method-Override",h),m?m.apply(this,arguments):void 0}}"GET"===j.type||g.emulateJSON||(j.processData=!1),"PATCH"!==j.type||!window.ActiveXObject||window.external&&window.external.msActiveXFilteringEnabled||(j.xhr=function(){return new ActiveXObject("Microsoft.XMLHTTP")});var n=g.xhr=b.ajax(a.extend(j,g));return d.trigger("request",d,n,g),n},getPreviewImageUrl:function(){return this.paths.assetsBaseUrl+"/previews/"+this.get("projectId")+"/"+this.id+".png"},getDefaultPreviewImageUrl:function(){return g.getDefaultPreviewImageUrlByType(this.paths.staticBaseUrl,this.get("type"))},getDefaultMaterialPreviewImageUrl:function(){return this.paths.staticBaseUrl+"/images/assets-icons/asset-icon-material-default.png"},getPreviewImage:function(a){if(!this.get("hasPreview"))return a(new Error("Entity does not have a preview image"));var b=new Image;b.crossOrigin="Anonymous",b.onload=function(){a(null,b)},b.onerror=function(){return a(new Error("preview image does not exist"))},b.src=this.getPreviewImageUrl()},getDefaultPreviewImage:function(a){var b=this.getDefaultPreviewImageUrl();if(b){var c=new Image;c.crossOrigin="Anonymous",c.onload=function(){a(null,c)},c.onerror=function(){return a(new Error("default preview image does not exist"))},c.src=b}},setPayloadRecursive:function(a,b){var d=new XMLHttpRequest;d.open("PATCH","/entities/"+this.get("id")+".json",!0),d.setRequestHeader("Content-Type","application/json"),d.setRequestHeader("X-Verold-Recursive","true"),d.setRequestHeader("X-Verold-TransactionId",c()),d.onreadystatechange=function(){d.readyState===d.DONE&&b&&b()},d.send(JSON.stringify({payload:a}))}});return g.getDefaultPreviewImageUrlByType=function(a,b){return"geometry"===b&&(b="model"),a+"/images/assets-icons/asset-icon-"+b+".png"},window.VAPI=window.VAPI||{},window.VAPI.EntityModel=g,g}),define("VeroldEngine/collections/entity",["underscore","backbone","VeroldEngine/models/entity"],function(a,b,c){var d=b.Collection.extend({model:c,initialize:function(a,b){if(this.paths=b&&b.paths||this.collection&&this.collection.paths||window.VAPI.defaultPaths,this.project=b&&b.project,!this.paths)throw new Error("paths not set!")},url:function(){return this.paths.apiBaseUrl+"/projects/"+this.project.id+"/entities.json"}});return window.VAPI=window.VAPI||{},window.VAPI.EntityCollection=d,d}),define("three",[],function(){var a={REVISION:"70dev"};return"object"==typeof module&&(module.exports=a),void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:a>0?1:0}),a.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},a.CullFaceNone=0,a.CullFaceBack=1,a.CullFaceFront=2,a.CullFaceFrontBack=3,a.FrontFaceDirectionCW=0,a.FrontFaceDirectionCCW=1,a.BasicShadowMap=0,a.PCFShadowMap=1,a.PCFSoftShadowMap=2,a.HDRFull=0,a.HDRRGBM=1,a.HDRRGBD=2,a.HDRLOGLUV=3,a.HDRRGBE=4,a.FrontSide=0,a.BackSide=1,a.DoubleSide=2,a.NoShading=0,a.FlatShading=1,a.SmoothShading=2,a.NoColors=0,a.FaceColors=1,a.VertexColors=2,a.NoBlending=0,a.NormalBlending=1,a.AdditiveBlending=2,a.SubtractiveBlending=3,a.MultiplyBlending=4,a.CustomBlending=5,a.AddEquation=100,a.SubtractEquation=101,a.ReverseSubtractEquation=102,a.MinEquation=103,a.MaxEquation=104,a.ZeroFactor=200,a.OneFactor=201,a.SrcColorFactor=202,a.OneMinusSrcColorFactor=203,a.SrcAlphaFactor=204,a.OneMinusSrcAlphaFactor=205,a.DstAlphaFactor=206,a.OneMinusDstAlphaFactor=207,a.DstColorFactor=208,a.OneMinusDstColorFactor=209,a.SrcAlphaSaturateFactor=210,a.MultiplyOperation=0,a.MixOperation=1,a.AddOperation=2,a.UVMapping=300,a.CubeReflectionMapping=301,a.CubeRefractionMapping=302,a.EquirectangularReflectionMapping=303,a.EquirectangularRefractionMapping=304,a.SphericalReflectionMapping=305,a.RepeatWrapping=1e3,a.ClampToEdgeWrapping=1001,a.MirroredRepeatWrapping=1002,a.NearestFilter=1003,a.NearestMipMapNearestFilter=1004,a.NearestMipMapLinearFilter=1005,a.LinearFilter=1006,a.LinearMipMapNearestFilter=1007,a.LinearMipMapLinearFilter=1008,a.UnsignedByteType=1009,a.ByteType=1010,a.ShortType=1011,a.UnsignedShortType=1012,a.IntType=1013,a.UnsignedIntType=1014,a.FloatType=1015,a.UnsignedShort4444Type=1016,a.UnsignedShort5551Type=1017,a.UnsignedShort565Type=1018,a.AlphaFormat=1019,a.RGBFormat=1020,a.RGBAFormat=1021,a.LuminanceFormat=1022,a.LuminanceAlphaFormat=1023,a.RGBEFormat=a.RGBAFormat,a.RGB_S3TC_DXT1_Format=2001,a.RGBA_S3TC_DXT1_Format=2002,a.RGBA_S3TC_DXT3_Format=2003,a.RGBA_S3TC_DXT5_Format=2004,a.RGB_PVRTC_4BPPV1_Format=2100,a.RGB_PVRTC_2BPPV1_Format=2101,a.RGBA_PVRTC_4BPPV1_Format=2102,a.RGBA_PVRTC_2BPPV1_Format=2103,a.RGB_ATC_Format=2200,a.RGBA_ATC_EXPLICIT_ALPHA_Format=2201,a.RGBA_ATC_INTERP_ALPHA_Format=2202,a.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project()."),a.project(b)},this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),a.unproject(b)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},a.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},a.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)},a.Color.prototype={constructor:a.Color,r:1,g:1,b:1,set:function(b){return b instanceof a.Color?this.copy(b):"number"==typeof b?this.setHex(b):"string"==typeof b&&this.setStyle(b),this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){return 0>c&&(c+=1),c>1&&(c-=1),1/6>c?a+6*(b-a)*c:.5>c?b:2/3>c?a+6*(b-a)*(2/3-c):a},e=.5>=c?c*(1+b):c+b-c*b,f=2*c-e;this.r=d(f,e,a+1/3),this.g=d(f,e,a),this.b=d(f,e,a-1/3)}return this},setStyle:function(b){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(b)){var c=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(b);return this.r=Math.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/255,this.b=Math.min(255,parseInt(c[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(b)){var c=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(b);return this.r=Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(b)){var c=/^\#([0-9a-f]{6})$/i.exec(b);return this.setHex(parseInt(c[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){var c=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b);return this.setHex(parseInt(c[1]+c[1]+c[2]+c[2]+c[3]+c[3],16)),this}return/^(\w+)$/i.test(b)?(this.setHex(a.ColorKeywords[b]),this):void 0},copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a){return this.r=a.r*a.r,this.g=a.g*a.g,this.b=a.b*a.b,this},copyLinearToGamma:function(a){return this.r=Math.sqrt(a.r),this.g=Math.sqrt(a.g),this.b=Math.sqrt(a.b),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){var b,c,d=a||{h:0,s:0,l:0},e=this.r,f=this.g,g=this.b,h=Math.max(e,f,g),i=Math.min(e,f,g),j=(i+h)/2;if(i===h)b=0,c=0;else{var k=h-i;switch(c=.5>=j?k/(h+i):k/(2-h-i),h){case e:b=(f-g)/k+(g>f?6:0);break;case f:b=(g-e)/k+2;break;case g:b=(e-f)/k+4}b/=6}return d.h=b,d.s=c,d.l=j,d},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();return d.h+=a,d.s+=b,d.l+=c,this.setHSL(d.h,d.s,d.l),this},add:function(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this},addColors:function(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this},addScalar:function(a){return this.r+=a,this.g+=a,this.b+=a,this},multiply:function(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this},multiplyScalar:function(a){return this.r*=a,this.g*=a,this.b*=a,this},lerp:function(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){return this.r=a[0],this.g=a[1],this.b=a[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new a.Color).setRGB(this.r,this.g,this.b)}},a.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},a.Quaternion=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._w=void 0!==d?d:1},a.Quaternion.prototype={constructor:a.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a,this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a,this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a,this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a,this.onChangeCallback()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this.onChangeCallback(),this},copy:function(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this.onChangeCallback(),this},setFromEuler:function(b,c){if(b instanceof a.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var d=Math.cos(b._x/2),e=Math.cos(b._y/2),f=Math.cos(b._z/2),g=Math.sin(b._x/2),h=Math.sin(b._y/2),i=Math.sin(b._z/2);return"XYZ"===b.order?(this._x=g*e*f+d*h*i,this._y=d*h*f-g*e*i,this._z=d*e*i+g*h*f,this._w=d*e*f-g*h*i):"YXZ"===b.order?(this._x=g*e*f+d*h*i,this._y=d*h*f-g*e*i,this._z=d*e*i-g*h*f,this._w=d*e*f+g*h*i):"ZXY"===b.order?(this._x=g*e*f-d*h*i,this._y=d*h*f+g*e*i,this._z=d*e*i+g*h*f,this._w=d*e*f-g*h*i):"ZYX"===b.order?(this._x=g*e*f-d*h*i,this._y=d*h*f+g*e*i,this._z=d*e*i-g*h*f,this._w=d*e*f+g*h*i):"YZX"===b.order?(this._x=g*e*f+d*h*i,this._y=d*h*f+g*e*i,this._z=d*e*i-g*h*f,this._w=d*e*f-g*h*i):"XZY"===b.order&&(this._x=g*e*f-d*h*i,this._y=d*h*f-g*e*i,this._z=d*e*i+g*h*f,this._w=d*e*f+g*h*i),c!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this.onChangeCallback(),this},setFromRotationMatrix:function(a){var b,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[1],h=c[5],i=c[9],j=c[2],k=c[6],l=c[10],m=d+h+l;return m>0?(b=.5/Math.sqrt(m+1),this._w=.25/b,this._x=(k-i)*b,this._y=(f-j)*b,this._z=(g-e)*b):d>h&&d>l?(b=2*Math.sqrt(1+d-h-l),this._w=(k-i)/b,this._x=.25*b,this._y=(e+g)/b,this._z=(f+j)/b):h>l?(b=2*Math.sqrt(1+h-d-l),this._w=(f-j)/b,this._x=(e+g)/b,this._y=.25*b,this._z=(i+k)/b):(b=2*Math.sqrt(1+l-d-h),this._w=(g-e)/b,this._x=(f+j)/b,this._y=(i+k)/b,this._z=.25*b),this.onChangeCallback(),this},setFromUnitVectors:function(){var b,c,d=1e-6;return function(e,f){return void 0===b&&(b=new a.Vector3),c=e.dot(f)+1,d>c?(c=0,Math.abs(e.x)>Math.abs(e.z)?b.set(-e.y,e.x,0):b.set(0,-e.z,e.y)):b.crossVectors(e,f),this._x=b.x,this._y=b.y,this._z=b.z,this._w=c,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this.onChangeCallback(),this},multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this.onChangeCallback(),this},multiplyVector3:function(a){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(Math.abs(i)<.001)return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var j=Math.sin((1-b)*h)/i,k=Math.sin(b*h)/i;return this._w=f*j+this._w*k,this._x=c*j+this._x*k,this._y=d*j+this._y*k,this._z=e*j+this._z*k,this.onChangeCallback(),this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){return void 0===b&&(b=0),this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this.onChangeCallback(),this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a},onChange:function(a){return this.onChangeCallback=a,this},onChangeCallback:function(){},clone:function(){return new a.Quaternion(this._x,this._y,this._z,this._w)}},a.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)},a.Vector2=function(a,b){this.x=a||0,this.y=b||0},a.Vector2.prototype={constructor:a.Vector2,set:function(a,b){return this.x=a,this.y=b,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return void 0!==b?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScalar:function(a){return this.x+=a,this.y+=a,this},sub:function(a,b){return void 0!==b?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiply:function(a){return this.x*=a.x,this.y*=a.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divide:function(a){return this.x/=a.x,this.y/=a.y,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b}else this.x=0,this.y=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this},clampScalar:function(){var b,c;return function(d,e){return void 0===b&&(b=new a.Vector2,c=new a.Vector2),b.set(d,d),c.set(e,e),this.clamp(b,c)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a},fromAttribute:function(a,b,c){return void 0===c&&(c=0),b=b*a.itemSize+c,this.x=a.array[b],this.y=a.array[b+1],this},clone:function(){return new a.Vector2(this.x,this.y)}},a.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},a.Vector3.prototype={constructor:a.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return void 0!==b?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(a,b){return void 0!==b?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(a,b){return void 0!==b?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyEuler:function(){var b;return function(c){return c instanceof a.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===b&&(b=new a.Quaternion),this.applyQuaternion(b.setFromEuler(c)),this}}(),applyAxisAngle:function(){var b;return function(c,d){return void 0===b&&(b=new a.Quaternion),this.applyQuaternion(b.setFromAxisAngle(c,d)),this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+l*-e+j*-g-k*-f,this.y=j*h+l*-f+k*-e-i*-g,this.z=k*h+l*-g+i*-f-j*-e,this},project:function(){var b;return function(c){return void 0===b&&(b=new a.Matrix4),b.multiplyMatrices(c.projectionMatrix,b.getInverse(c.matrixWorld)),this.applyProjection(b)}}(),unproject:function(){var b;return function(c){return void 0===b&&(b=new a.Matrix4),b.multiplyMatrices(c.matrixWorld,b.getInverse(c.projectionMatrix)),this.applyProjection(b)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize(),this},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b}else this.x=0,this.y=0,this.z=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this},clampScalar:function(){var b,c;return function(d,e){return void 0===b&&(b=new a.Vector3,c=new a.Vector3),b.set(d,d,d),c.set(e,e,e),this.clamp(b,c)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this},cross:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;return this.x=d*a.z-e*a.y,this.y=e*a.x-c*a.z,this.z=c*a.y-d*a.x,this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this},projectOnVector:function(){var b,c;return function(d){return void 0===b&&(b=new a.Vector3),b.copy(d).normalize(),c=this.dot(b),this.copy(b).multiplyScalar(c)}}(),projectOnPlane:function(){var b;return function(c){return void 0===b&&(b=new a.Vector3),b.copy(this).projectOnVector(c),this.sub(b)}}(),reflect:function(){var b;return function(c){return void 0===b&&(b=new a.Vector3),this.sub(b.copy(c).multiplyScalar(2*this.dot(c)))}}(),angleTo:function(b){var c=this.dot(b)/(this.length()*b.length());return Math.acos(a.Math.clamp(c,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d},setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),d=this.set(a.elements[8],a.elements[9],a.elements[10]).length();return this.x=b,this.y=c,this.z=d,this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;return this.x=d[c],this.y=d[c+1],this.z=d[c+2],this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this.z=a[b+2],this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a},fromAttribute:function(a,b,c){return void 0===c&&(c=0),b=b*a.itemSize+c,this.x=a.array[b],this.y=a.array[b+1],this.z=a.array[b+2],this},clone:function(){return new a.Vector3(this.x,this.y,this.z)}},a.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},a.Vector4.prototype={constructor:a.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setW:function(a){return this.w=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,b){return void 0!==b?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},sub:function(a,b){return void 0!==b?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b,this.w*=b}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);return 1e-4>b?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,e,f=.01,g=.1,h=a.elements,i=h[0],j=h[4],k=h[8],l=h[1],m=h[5],n=h[9],o=h[2],p=h[6],q=h[10];if(Math.abs(j-l)<f&&Math.abs(k-o)<f&&Math.abs(n-p)<f){if(Math.abs(j+l)<g&&Math.abs(k+o)<g&&Math.abs(n+p)<g&&Math.abs(i+m+q-3)<g)return this.set(1,0,0,0),this;b=Math.PI;var r=(i+1)/2,s=(m+1)/2,t=(q+1)/2,u=(j+l)/4,v=(k+o)/4,w=(n+p)/4;return r>s&&r>t?f>r?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(r),d=u/c,e=v/c):s>t?f>s?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(s),c=u/d,e=w/d):f>t?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(t),c=v/e,d=w/e),this.set(c,d,e,b),this}var x=Math.sqrt((p-n)*(p-n)+(k-o)*(k-o)+(l-j)*(l-j));return Math.abs(x)<.001&&(x=1),this.x=(p-n)/x,this.y=(k-o)/x,this.z=(l-j)/x,this.w=Math.acos((i+m+q-1)/2),this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this.w>a.w&&(this.w=a.w),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this.w<a.w&&(this.w=a.w),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w),this},clampScalar:function(){var b,c;return function(d,e){return void 0===b&&(b=new a.Vector4,c=new a.Vector4),b.set(d,d,d,d),c.set(e,e,e,e),this.clamp(b,c)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this
},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a},fromAttribute:function(a,b,c){return void 0===c&&(c=0),b=b*a.itemSize+c,this.x=a.array[b],this.y=a.array[b+1],this.z=a.array[b+2],this.w=a.array[b+3],this},clone:function(){return new a.Vector4(this.x,this.y,this.z,this.w)}},a.Euler=function(b,c,d,e){this._x=b||0,this._y=c||0,this._z=d||0,this._order=e||a.Euler.DefaultOrder},a.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],a.Euler.DefaultOrder="XYZ",a.Euler.prototype={constructor:a.Euler,_x:0,_y:0,_z:0,_order:a.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a,this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a,this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a,this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a,this.onChangeCallback()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._order=d||this._order,this.onChangeCallback(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this.onChangeCallback(),this},setFromRotationMatrix:function(b,c,d){var e=a.Math.clamp,f=b.elements,g=f[0],h=f[4],i=f[8],j=f[1],k=f[5],l=f[9],m=f[2],n=f[6],o=f[10];return c=c||this._order,"XYZ"===c?(this._y=Math.asin(e(i,-1,1)),Math.abs(i)<.99999?(this._x=Math.atan2(-l,o),this._z=Math.atan2(-h,g)):(this._x=Math.atan2(n,k),this._z=0)):"YXZ"===c?(this._x=Math.asin(-e(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(i,o),this._z=Math.atan2(j,k)):(this._y=Math.atan2(-m,g),this._z=0)):"ZXY"===c?(this._x=Math.asin(e(n,-1,1)),Math.abs(n)<.99999?(this._y=Math.atan2(-m,o),this._z=Math.atan2(-h,k)):(this._y=0,this._z=Math.atan2(j,g))):"ZYX"===c?(this._y=Math.asin(-e(m,-1,1)),Math.abs(m)<.99999?(this._x=Math.atan2(n,o),this._z=Math.atan2(j,g)):(this._x=0,this._z=Math.atan2(-h,k))):"YZX"===c?(this._z=Math.asin(e(j,-1,1)),Math.abs(j)<.99999?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-m,g)):(this._x=0,this._y=Math.atan2(i,o))):"XZY"===c?(this._z=Math.asin(-e(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(n,k),this._y=Math.atan2(i,g)):(this._x=Math.atan2(-l,o),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+c),this._order=c,d!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var b;return function(c,d,e){return void 0===b&&(b=new a.Matrix4),b.makeRotationFromQuaternion(c),this.setFromRotationMatrix(b,d,e),this}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var b=new a.Quaternion;return function(a){b.setFromEuler(this),this.setFromQuaternion(b,a)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},toVector3:function(b){return b?b.set(this._x,this._y,this._z):new a.Vector3(this._x,this._y,this._z)},onChange:function(a){return this.onChangeCallback=a,this},onChangeCallback:function(){},clone:function(){return new a.Euler(this._x,this._y,this._z,this._order)}},a.Line3=function(b,c){this.start=void 0!==b?b:new a.Vector3,this.end=void 0!==c?c:new a.Vector3},a.Line3.prototype={constructor:a.Line3,set:function(a,b){return this.start.copy(a),this.end.copy(b),this},copy:function(a){return this.start.copy(a.start),this.end.copy(a.end),this},center:function(b){var c=b||new a.Vector3;return c.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(b){var c=b||new a.Vector3;return c.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(b,c){var d=c||new a.Vector3;return this.delta(d).multiplyScalar(b).add(this.start)},closestPointToPointParameter:function(){var b=new a.Vector3,c=new a.Vector3;return function(d,e){b.subVectors(d,this.start),c.subVectors(this.end,this.start);var f=c.dot(c),g=c.dot(b),h=g/f;return e&&(h=a.Math.clamp(h,0,1)),h}}(),closestPointToPoint:function(b,c,d){var e=this.closestPointToPointParameter(b,c),f=d||new a.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},applyMatrix4:function(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new a.Line3).copy(this)}},a.Box2=function(b,c){this.min=void 0!==b?b:new a.Vector2(1/0,1/0),this.max=void 0!==c?c:new a.Vector2(-1/0,-1/0)},a.Box2.prototype={constructor:a.Box2,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;c>b;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var b=new a.Vector2;return function(a,c){var d=b.copy(c).multiplyScalar(.5);return this.min.copy(a).sub(d),this.max.copy(a).add(d),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(b){var c=b||new a.Vector2;return c.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(b){var c=b||new a.Vector2;return c.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(b,c){var d=c||new a.Vector2;return d.set((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(b,c){var d=c||new a.Vector2;return d.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var b=new a.Vector2;return function(a){var c=b.copy(a).clamp(this.min,this.max);return c.sub(a).length()}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new a.Box2).copy(this)}},a.Box3=function(b,c){this.min=void 0!==b?b:new a.Vector3(1/0,1/0,1/0),this.max=void 0!==c?c:new a.Vector3(-1/0,-1/0,-1/0)},a.Box3.prototype={constructor:a.Box3,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;c>b;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var b=new a.Vector3;return function(a,c){var d=b.copy(c).multiplyScalar(.5);return this.min.copy(a).sub(d),this.max.copy(a).add(d),this}}(),setFromObject:function(){var b=new a.Vector3;return function(c){var d=this;return c.updateMatrixWorld(!0),this.makeEmpty(),c.traverse(function(c){var e=c.geometry;if(void 0!==e)if(e instanceof a.Geometry)for(var f=e.vertices,g=0,h=f.length;h>g;g++)b.copy(f[g]),b.applyMatrix4(c.matrixWorld),d.expandByPoint(b);else if(e instanceof a.BufferGeometry&&void 0!==e.attributes.position)for(var i=e.attributes.position.array,g=0,h=i.length;h>g;g+=3)b.set(i[g],i[g+1],i[g+2]),b.applyMatrix4(c.matrixWorld),d.expandByPoint(b)}),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(b){var c=b||new a.Vector3;return c.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(b){var c=b||new a.Vector3;return c.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(b,c){var d=c||new a.Vector3;return d.set((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y),(b.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(b,c){var d=c||new a.Vector3;return d.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var b=new a.Vector3;return function(a){var c=b.copy(a).clamp(this.min,this.max);return c.sub(a).length()}}(),getBoundingSphere:function(){var b=new a.Vector3;return function(c){var d=c||new a.Sphere;return d.center=this.center(),d.radius=.5*this.size(b).length(),d}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},applyMatrix4:function(){var b=[new a.Vector3,new a.Vector3,new a.Vector3,new a.Vector3,new a.Vector3,new a.Vector3,new a.Vector3,new a.Vector3];return function(a){return b[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),b[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),b[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),b[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),b[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),b[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),b[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),b[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.makeEmpty(),this.setFromPoints(b),this}}(),translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new a.Box3).copy(this)}},a.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},a.Matrix3.prototype={constructor:a.Matrix3,set:function(a,b,c,d,e,f,g,h,i){var j=this.elements;return j[0]=a,j[3]=b,j[6]=c,j[1]=d,j[4]=e,j[7]=f,j[2]=g,j[5]=h,j[8]=i,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(a){var b=a.elements;return this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]),this},multiplyVector3:function(a){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(a){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(a)},applyToVector3Array:function(){var b=new a.Vector3;return function(a,c,d){void 0===c&&(c=0),void 0===d&&(d=a.length);for(var e=0,f=c;d>e;e+=3,f+=3)b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyMatrix3(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z;return a}}(),multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9],d[1]=-c[10]*c[1]+c[2]*c[9],d[2]=c[6]*c[1]-c[2]*c[5],d[3]=-c[10]*c[4]+c[6]*c[8],d[4]=c[10]*c[0]-c[2]*c[8],d[5]=-c[6]*c[0]+c[2]*c[4],d[6]=c[9]*c[4]-c[5]*c[8],d[7]=-c[9]*c[0]+c[1]*c[8],d[8]=c[5]*c[0]-c[1]*c[4];var e=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===e){var f="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(f);return console.warn(f),this.identity(),this}return this.multiplyScalar(1/e),this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a},getNormalMatrix:function(a){return this.getInverse(a).transpose(),this},transposeIntoArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){return(new a.Matrix3).fromArray(this.elements)}},a.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},a.Matrix4.prototype={constructor:a.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){return this.elements.set(a.elements),this},extractPosition:function(a){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},copyPosition:function(a){var b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this},extractBasis:function(a,b,c){var d=this.elements;return a.set(d[0],d[1],d[2]),b.set(d[4],d[5],d[6]),c.set(d[8],d[9],d[10]),this},makeBasis:function(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this},extractRotation:function(){var b=new a.Vector3;return function(a){var c=this.elements,d=a.elements,e=1/b.set(d[0],d[1],d[2]).length(),f=1/b.set(d[4],d[5],d[6]).length(),g=1/b.set(d[8],d[9],d[10]).length();return c[0]=d[0]*e,c[1]=d[1]*e,c[2]=d[2]*e,c[4]=d[4]*f,c[5]=d[5]*f,c[6]=d[6]*f,c[8]=d[8]*g,c[9]=d[9]*g,c[10]=d[10]*g,this}}(),makeRotationFromEuler:function(b){b instanceof a.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var c=this.elements,d=b.x,e=b.y,f=b.z,g=Math.cos(d),h=Math.sin(d),i=Math.cos(e),j=Math.sin(e),k=Math.cos(f),l=Math.sin(f);if("XYZ"===b.order){var m=g*k,n=g*l,o=h*k,p=h*l;c[0]=i*k,c[4]=-i*l,c[8]=j,c[1]=n+o*j,c[5]=m-p*j,c[9]=-h*i,c[2]=p-m*j,c[6]=o+n*j,c[10]=g*i}else if("YXZ"===b.order){var q=i*k,r=i*l,s=j*k,t=j*l;c[0]=q+t*h,c[4]=s*h-r,c[8]=g*j,c[1]=g*l,c[5]=g*k,c[9]=-h,c[2]=r*h-s,c[6]=t+q*h,c[10]=g*i}else if("ZXY"===b.order){var q=i*k,r=i*l,s=j*k,t=j*l;c[0]=q-t*h,c[4]=-g*l,c[8]=s+r*h,c[1]=r+s*h,c[5]=g*k,c[9]=t-q*h,c[2]=-g*j,c[6]=h,c[10]=g*i}else if("ZYX"===b.order){var m=g*k,n=g*l,o=h*k,p=h*l;c[0]=i*k,c[4]=o*j-n,c[8]=m*j+p,c[1]=i*l,c[5]=p*j+m,c[9]=n*j-o,c[2]=-j,c[6]=h*i,c[10]=g*i}else if("YZX"===b.order){var u=g*i,v=g*j,w=h*i,x=h*j;c[0]=i*k,c[4]=x-u*l,c[8]=w*l+v,c[1]=l,c[5]=g*k,c[9]=-h*k,c[2]=-j*k,c[6]=v*l+w,c[10]=u-x*l}else if("XZY"===b.order){var u=g*i,v=g*j,w=h*i,x=h*j;c[0]=i*k,c[4]=-l,c[8]=j*k,c[1]=u*l+x,c[5]=g*k,c[9]=v*l-w,c[2]=w*l-v,c[6]=h*k,c[10]=x*l+u}return c[3]=0,c[7]=0,c[11]=0,c[12]=0,c[13]=0,c[14]=0,c[15]=1,this},setRotationFromQuaternion:function(a){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,j=c*g,k=c*h,l=c*i,m=d*h,n=d*i,o=e*i,p=f*g,q=f*h,r=f*i;return b[0]=1-(m+o),b[4]=k-r,b[8]=l+q,b[1]=k+r,b[5]=1-(j+o),b[9]=n-p,b[2]=l-q,b[6]=n+p,b[10]=1-(j+m),b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},lookAt:function(){var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3;return function(a,e,f){var g=this.elements;return d.subVectors(a,e).normalize(),0===d.length()&&(d.z=1),b.crossVectors(f,d).normalize(),0===b.length()&&(d.x+=1e-4,b.crossVectors(f,d).normalize()),c.crossVectors(d,b),g[0]=b.x,g[4]=c.x,g[8]=d.x,g[1]=b.y,g[5]=c.y,g[9]=d.y,g[2]=b.z,g[6]=c.z,g[10]=d.z,this}}(),multiply:function(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiplyMatrices(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this},multiplyVector3:function(a){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),a.applyProjection(this)},multiplyVector4:function(a){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(a){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(a)},applyToVector3Array:function(){var b=new a.Vector3;return function(a,c,d){void 0===c&&(c=0),void 0===d&&(d=a.length);for(var e=0,f=c;d>e;e+=3,f+=3)b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyMatrix4(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z;return a}}(),rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[4],b[4]=a,a=b[2],b[2]=b[8],b[8]=a,a=b[6],b[6]=b[9],b[9]=a,a=b[3],b[3]=b[12],b[12]=a,a=b[7],b[7]=b[13],b[13]=a,a=b[11],b[11]=b[14],b[14]=a,this},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var b=new a.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var a=this.elements;return b.set(a[12],a[13],a[14])}}(),setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],i=d[1],j=d[5],k=d[9],l=d[13],m=d[2],n=d[6],o=d[10],p=d[14],q=d[3],r=d[7],s=d[11],t=d[15];c[0]=k*p*r-l*o*r+l*n*s-j*p*s-k*n*t+j*o*t,c[4]=h*o*r-g*p*r-h*n*s+f*p*s+g*n*t-f*o*t,c[8]=g*l*r-h*k*r+h*j*s-f*l*s-g*j*t+f*k*t,c[12]=h*k*n-g*l*n-h*j*o+f*l*o+g*j*p-f*k*p,c[1]=l*o*q-k*p*q-l*m*s+i*p*s+k*m*t-i*o*t,c[5]=g*p*q-h*o*q+h*m*s-e*p*s-g*m*t+e*o*t,c[9]=h*k*q-g*l*q-h*i*s+e*l*s+g*i*t-e*k*t,c[13]=g*l*m-h*k*m+h*i*o-e*l*o-g*i*p+e*k*p,c[2]=j*p*q-l*n*q+l*m*r-i*p*r-j*m*t+i*n*t,c[6]=h*n*q-f*p*q-h*m*r+e*p*r+f*m*t-e*n*t,c[10]=f*l*q-h*j*q+h*i*r-e*l*r-f*i*t+e*j*t,c[14]=h*j*m-f*l*m-h*i*n+e*l*n+f*i*p-e*j*p,c[3]=k*n*q-j*o*q-k*m*r+i*o*r+j*m*s-i*n*s,c[7]=f*o*q-g*n*q+g*m*r-e*o*r-f*m*s+e*n*s,c[11]=g*j*q-f*k*q-g*i*r+e*k*r+f*i*s-e*j*s,c[15]=f*k*m-g*j*m+g*i*n-e*k*n-f*i*o+e*j*o;var u=e*c[0]+i*c[4]+m*c[8]+q*c[12];if(0==u){var v="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(v);return console.warn(v),this.identity(),this}return this.multiplyScalar(1/u),this},translate:function(){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this},getMaxScaleOnAxis:function(){var a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,Math.max(c,d)))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},compose:function(a,b,c){return this.makeRotationFromQuaternion(b),this.scale(c),this.setPosition(a),this},decompose:function(){var b=new a.Vector3,c=new a.Matrix4;return function(a,d,e){var f=this.elements,g=b.set(f[0],f[1],f[2]).length(),h=b.set(f[4],f[5],f[6]).length(),i=b.set(f[8],f[9],f[10]).length(),j=this.determinant();0>j&&(g=-g),a.x=f[12],a.y=f[13],a.z=f[14],c.elements.set(this.elements);var k=1/g,l=1/h,m=1/i;return c.elements[0]*=k,c.elements[1]*=k,c.elements[2]*=k,c.elements[4]*=l,c.elements[5]*=l,c.elements[6]*=l,c.elements[8]*=m,c.elements[9]*=m,c.elements[10]*=m,d.setFromRotationMatrix(c),e.x=g,e.y=h,e.z=i,this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements,h=2*e/(b-a),i=2*e/(d-c),j=(b+a)/(b-a),k=(d+c)/(d-c),l=-(f+e)/(f-e),m=-2*f*e/(f-e);return g[0]=h,g[4]=0,g[8]=j,g[12]=0,g[1]=0,g[5]=i,g[9]=k,g[13]=0,g[2]=0,g[6]=0,g[10]=l,g[14]=m,g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(b,c,d,e){var f=d*Math.tan(a.Math.degToRad(.5*b)),g=-f,h=g*c,i=f*c;return this.makeFrustum(h,i,g,f,d,e)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e,k=(b+a)/h,l=(c+d)/i,m=(f+e)/j;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-k,g[1]=0,g[5]=2/i,g[9]=0,g[13]=-l,g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-m,g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new a.Matrix4).fromArray(this.elements)}},a.Ray=function(b,c){this.origin=void 0!==b?b:new a.Vector3,this.direction=void 0!==c?c:new a.Vector3},a.Ray.prototype={constructor:a.Ray,set:function(a,b){return this.origin.copy(a),this.direction.copy(b),this},copy:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this},at:function(b,c){var d=c||new a.Vector3;return d.copy(this.direction).multiplyScalar(b).add(this.origin)},recast:function(){var b=new a.Vector3;return function(a){return this.origin.copy(this.at(a,b)),this}}(),closestPointToPoint:function(b,c){var d=c||new a.Vector3;d.subVectors(b,this.origin);var e=d.dot(this.direction);return 0>e?d.copy(this.origin):d.copy(this.direction).multiplyScalar(e).add(this.origin)},distanceToPoint:function(){var b=new a.Vector3;return function(a){var c=b.subVectors(a,this.origin).dot(this.direction);return 0>c?this.origin.distanceTo(a):(b.copy(this.direction).multiplyScalar(c).add(this.origin),b.distanceTo(a))}}(),distanceSqToSegment:function(){var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3;return function(a,e,f,g){b.copy(a).add(e).multiplyScalar(.5),c.copy(e).sub(a).normalize(),d.copy(this.origin).sub(b);var h,i,j,k,l=.5*a.distanceTo(e),m=-this.direction.dot(c),n=d.dot(this.direction),o=-d.dot(c),p=d.lengthSq(),q=Math.abs(1-m*m);if(q>0)if(h=m*o-n,i=m*n-o,k=l*q,h>=0)if(i>=-k)if(k>=i){var r=1/q;h*=r,i*=r,j=h*(h+m*i+2*n)+i*(m*h+i+2*o)+p}else i=l,h=Math.max(0,-(m*i+n)),j=-h*h+i*(i+2*o)+p;else i=-l,h=Math.max(0,-(m*i+n)),j=-h*h+i*(i+2*o)+p;else-k>=i?(h=Math.max(0,-(-m*l+n)),i=h>0?-l:Math.min(Math.max(-l,-o),l),j=-h*h+i*(i+2*o)+p):k>=i?(h=0,i=Math.min(Math.max(-l,-o),l),j=i*(i+2*o)+p):(h=Math.max(0,-(m*l+n)),i=h>0?l:Math.min(Math.max(-l,-o),l),j=-h*h+i*(i+2*o)+p);else i=m>0?-l:l,h=Math.max(0,-(m*i+n)),j=-h*h+i*(i+2*o)+p;return f&&f.copy(this.direction).multiplyScalar(h).add(this.origin),g&&g.copy(c).multiplyScalar(i).add(b),j}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var b=new a.Vector3;return function(a,c){b.subVectors(a.center,this.origin);var d=b.dot(this.direction),e=b.dot(b)-d*d,f=a.radius*a.radius;if(e>f)return null;var g=Math.sqrt(f-e),h=d-g,i=d+g;return 0>h&&0>i?null:0>h?this.at(i,c):this.at(h,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);if(0===b)return!0;var c=a.normal.dot(this.direction);return 0>c*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;var c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var b=new a.Vector3;return function(a){return null!==this.intersectBox(a,b)}}(),intersectBox:function(a,b){var c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d?null:((e>c||c!==c)&&(c=e),(d>f||d!==d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d?null:((g>c||c!==c)&&(c=g),(d>h||d!==d)&&(d=h),0>d?null:this.at(c>=0?c:d,b)))},intersectTriangle:function(){var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3;return function(a,f,g,h,i){c.subVectors(f,a),d.subVectors(g,a),e.crossVectors(c,d);var j,k=this.direction.dot(e);if(k>0){if(h)return null;j=1}else{if(!(0>k))return null;j=-1,k=-k}b.subVectors(this.origin,a);var l=j*this.direction.dot(d.crossVectors(b,d));if(0>l)return null;var m=j*this.direction.dot(c.cross(b));if(0>m)return null;if(l+m>k)return null;var n=-j*b.dot(e);return 0>n?null:this.at(n/k,i)}}(),applyMatrix4:function(a){return this.direction.add(this.origin).applyMatrix4(a),this.origin.applyMatrix4(a),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new a.Ray).copy(this)}},a.Sphere=function(b,c){this.center=void 0!==b?b:new a.Vector3,this.radius=void 0!==c?c:0},a.Sphere.prototype={constructor:a.Sphere,set:function(a,b){return this.center.copy(a),this.radius=b,this},setFromPoints:function(){var b=new a.Box3;return function(a,c){var d=this.center;void 0!==c?d.copy(c):b.setFromPoints(a).center(d);for(var e=0,f=0,g=a.length;g>f;f++)e=Math.max(e,d.distanceToSquared(a[f]));return this.radius=Math.sqrt(e),this}}(),copy:function(a){return this.center.copy(a.center),this.radius=a.radius,this},empty:function(){return this.radius<=0},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(b,c){var d=this.center.distanceToSquared(b),e=c||new a.Vector3;return e.copy(b),d>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(b){var c=b||new a.Box3;return c.set(this.center,this.center),c.expandByScalar(this.radius),c},applyMatrix4:function(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this},translate:function(a){return this.center.add(a),this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new a.Sphere).copy(this)}},a.Frustum=function(b,c,d,e,f,g){this.planes=[void 0!==b?b:new a.Plane,void 0!==c?c:new a.Plane,void 0!==d?d:new a.Plane,void 0!==e?e:new a.Plane,void 0!==f?f:new a.Plane,void 0!==g?g:new a.Plane]},a.Frustum.prototype={constructor:a.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this},intersectsObject:function(){var b=new a.Sphere;return function(a){var c=a.geometry;return null===c.boundingSphere&&c.computeBoundingSphere(),b.copy(c.boundingSphere),b.applyMatrix4(a.matrixWorld),this.intersectsSphere(b)}}(),intersectsSphere:function(a){for(var b=this.planes,c=a.center,d=-a.radius,e=0;6>e;e++){var f=b[e].distanceToPoint(c);
if(d>f)return!1}return!0},intersectsBox:function(){var b=new a.Vector3,c=new a.Vector3;return function(a){for(var d=this.planes,e=0;6>e;e++){var f=d[e];b.x=f.normal.x>0?a.min.x:a.max.x,c.x=f.normal.x>0?a.max.x:a.min.x,b.y=f.normal.y>0?a.min.y:a.max.y,c.y=f.normal.y>0?a.max.y:a.min.y,b.z=f.normal.z>0?a.min.z:a.max.z,c.z=f.normal.z>0?a.max.z:a.min.z;var g=f.distanceToPoint(b),h=f.distanceToPoint(c);if(0>g&&0>h)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(b[c].distanceToPoint(a)<0)return!1;return!0},clone:function(){return(new a.Frustum).copy(this)}},a.Plane=function(b,c){this.normal=void 0!==b?b:new a.Vector3(1,0,0),this.constant=void 0!==c?c:0},a.Plane.prototype={constructor:a.Plane,set:function(a,b){return this.normal.copy(a),this.constant=b,this},setComponents:function(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this},setFromNormalAndCoplanarPoint:function(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this},setFromCoplanarPoints:function(){var b=new a.Vector3,c=new a.Vector3;return function(a,d,e){var f=b.subVectors(e,d).cross(c.subVectors(a,d)).normalize();return this.setFromNormalAndCoplanarPoint(f,a),this}}(),copy:function(a){return this.normal.copy(a.normal),this.constant=a.constant,this},normalize:function(){var a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(b,c){var d=this.distanceToPoint(b),e=c||new a.Vector3;return e.copy(this.normal).multiplyScalar(d)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return 0>b&&c>0||0>c&&b>0},intersectLine:function(){var b=new a.Vector3;return function(c,d){var e=d||new a.Vector3,f=c.delta(b),g=this.normal.dot(f);if(0==g)return 0==this.distanceToPoint(c.start)?e.copy(c.start):void 0;var h=-(c.start.dot(this.normal)+this.constant)/g;return 0>h||h>1?void 0:e.copy(f).multiplyScalar(h).add(c.start)}}(),coplanarPoint:function(b){var c=b||new a.Vector3;return c.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var b=new a.Vector3,c=new a.Vector3,d=new a.Matrix3;return function(a,e){var f=e||d.getNormalMatrix(a),g=b.copy(this.normal).applyMatrix3(f),h=this.coplanarPoint(c);return h.applyMatrix4(a),this.setFromNormalAndCoplanarPoint(g,h),this}}(),translate:function(a){return this.constant=this.constant-a.dot(this.normal),this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new a.Plane).copy(this)}},a.Math={generateUUID:function(){var a,b="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),c=new Array(36),d=0;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?c[e]="-":14==e?c[e]="4":(2>=d&&(d=33554432+16777216*Math.random()|0),a=15&d,d>>=4,c[e]=b[19==e?3&a|8:a]);return c.join("")}}(),clamp:function(a,b,c){return b>a?b:a>c?c:a},clampBottom:function(a,b){return b>a?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*(3-2*a))},smootherstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*a*(a*(6*a-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return Math.floor(this.randFloat(a,b))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a}},a.Spline=function(b){function c(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b}this.points=b;var d,e,f,g,h,i,j,k,l,m=[],n={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return d=(this.points.length-1)*a,e=Math.floor(d),f=d-e,m[0]=0===e?e:e-1,m[1]=e,m[2]=e>this.points.length-2?this.points.length-1:e+1,m[3]=e>this.points.length-3?this.points.length-1:e+2,i=this.points[m[0]],j=this.points[m[1]],k=this.points[m[2]],l=this.points[m[3]],g=f*f,h=f*g,n.x=c(i.x,j.x,k.x,l.x,f,g,h),n.y=c(i.y,j.y,k.y,l.y,f,g,h),n.z=c(i.z,j.z,k.z,l.z,f,g,h),n},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;c>a;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(b){var c,d,e,f,g=0,h=0,i=0,j=new a.Vector3,k=new a.Vector3,l=[],m=0;for(l[0]=0,b||(b=100),e=this.points.length*b,j.copy(this.points[0]),c=1;e>c;c++)d=c/e,f=this.getPoint(d),k.copy(f),m+=k.distanceTo(j),j.copy(f),g=(this.points.length-1)*d,h=Math.floor(g),h!=i&&(l[h]=m,i=h);return l[l.length]=m,{chunks:l,total:m}},this.reparametrizeByArcLength=function(b){var c,d,e,f,g,h,i,j,k=[],l=new a.Vector3,m=this.getLength();for(k.push(l.copy(this.points[0]).clone()),c=1;c<this.points.length;c++){for(h=m.chunks[c]-m.chunks[c-1],i=Math.ceil(b*h/m.total),f=(c-1)/(this.points.length-1),g=c/(this.points.length-1),d=1;i-1>d;d++)e=f+d*(1/i)*(g-f),j=this.getPoint(e),k.push(l.copy(j).clone());k.push(l.copy(this.points[c]).clone())}this.points=k}},a.Triangle=function(b,c,d){this.a=void 0!==b?b:new a.Vector3,this.b=void 0!==c?c:new a.Vector3,this.c=void 0!==d?d:new a.Vector3},a.Triangle.normal=function(){var b=new a.Vector3;return function(c,d,e,f){var g=f||new a.Vector3;g.subVectors(e,d),b.subVectors(c,d),g.cross(b);var h=g.lengthSq();return h>0?g.multiplyScalar(1/Math.sqrt(h)):g.set(0,0,0)}}(),a.Triangle.barycoordFromPoint=function(){var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3;return function(e,f,g,h,i){b.subVectors(h,f),c.subVectors(g,f),d.subVectors(e,f);var j=b.dot(b),k=b.dot(c),l=b.dot(d),m=c.dot(c),n=c.dot(d),o=j*m-k*k,p=i||new a.Vector3;if(0==o)return p.set(-2,-1,-1);var q=1/o,r=(m*l-k*n)*q,s=(j*n-k*l)*q;return p.set(1-r-s,s,r)}}(),a.Triangle.containsPoint=function(){var b=new a.Vector3;return function(c,d,e,f){var g=a.Triangle.barycoordFromPoint(c,d,e,f,b);return g.x>=0&&g.y>=0&&g.x+g.y<=1}}(),a.Triangle.prototype={constructor:a.Triangle,set:function(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this},setFromPointsAndIndices:function(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this},copy:function(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this},area:function(){var b=new a.Vector3,c=new a.Vector3;return function(){return b.subVectors(this.c,this.b),c.subVectors(this.a,this.b),.5*b.cross(c).length()}}(),midpoint:function(b){var c=b||new a.Vector3;return c.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(b){return a.Triangle.normal(this.a,this.b,this.c,b)},plane:function(b){var c=b||new a.Plane;return c.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(b,c){return a.Triangle.barycoordFromPoint(b,this.a,this.b,this.c,c)},containsPoint:function(b){return a.Triangle.containsPoint(b,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new a.Triangle).copy(this)}},a.Clock=function(a){this.autoStart=void 0!==a?a:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},a.Clock.prototype={constructor:a.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running&&this.start(),this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();a=.001*(b-this.oldTime),this.oldTime=b,this.elapsedTime+=a}return a}},a.EventDispatcher=function(){},a.EventDispatcher.prototype={constructor:a.EventDispatcher,apply:function(b){b.addEventListener=a.EventDispatcher.prototype.addEventListener,b.hasEventListener=a.EventDispatcher.prototype.hasEventListener,b.removeEventListener=a.EventDispatcher.prototype.removeEventListener,b.dispatchEvent=a.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners,d=c[a];if(void 0!==d){var e=d.indexOf(b);-1!==e&&d.splice(e,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;for(var d=[],e=c.length,f=0;e>f;f++)d[f]=c[f];for(var f=0;e>f;f++)d[f].call(this,a)}}}},function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c),this.near=d||0,this.far=e||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},c=function(a,b,d,e){if(a.raycast(b,d),e===!0)for(var f=a.children,g=0,h=f.length;h>g;g++)c(f[g],b,d,!0)};a.Raycaster.prototype={constructor:a.Raycaster,precision:1e-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?(this.ray.origin.copy(c.position),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(c.position).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,-1).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,d){var e=[];return c(a,this,e,d),e.sort(b),e},intersectObjects:function(a,d){var e=[];if(a instanceof Array==!1)return console.log("THREE.Raycaster.intersectObjects: objects is not an Array."),e;for(var f=0,g=a.length;g>f;f++)c(a[f],this,e,d);return e.sort(b),e}}}(a),a.Object3D=function(){Object.defineProperty(this,"id",{value:a.Object3DIdCount++}),this.uuid=a.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=void 0,this.children=[],this.up=a.Object3D.DefaultUp.clone();var b=new a.Vector3,c=new a.Euler,d=new a.Quaternion,e=new a.Vector3(1,1,1),f=function(){d.setFromEuler(c,!1)},g=function(){c.setFromQuaternion(d,void 0,!1)};c.onChange(f),d.onChange(g),Object.defineProperties(this,{position:{enumerable:!0,value:b},rotation:{enumerable:!0,value:c},quaternion:{enumerable:!0,value:d},scale:{enumerable:!0,value:e}}),this.rotationAutoUpdate=!0,this.matrix=new a.Matrix4,this.matrixWorld=new a.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},a.Object3D.DefaultUp=new a.Vector3(0,1,0),a.Object3D.prototype={constructor:a.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(a){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=a},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var b=new a.Quaternion;return function(a,c){return b.setFromAxisAngle(a,c),this.quaternion.multiply(b),this}}(),rotateX:function(){var b=new a.Vector3(1,0,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateY:function(){var b=new a.Vector3(0,1,0);return function(a){return this.rotateOnAxis(b,a)}}(),rotateZ:function(){var b=new a.Vector3(0,0,1);return function(a){return this.rotateOnAxis(b,a)}}(),translateOnAxis:function(){var b=new a.Vector3;return function(a,c){return b.copy(a).applyQuaternion(this.quaternion),this.position.add(b.multiplyScalar(c)),this}}(),translate:function(a,b){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(b,a)},translateX:function(){var b=new a.Vector3(1,0,0);return function(a){return this.translateOnAxis(b,a)}}(),translateY:function(){var b=new a.Vector3(0,1,0);return function(a){return this.translateOnAxis(b,a)}}(),translateZ:function(){var b=new a.Vector3(0,0,1);return function(a){return this.translateOnAxis(b,a)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var b=new a.Matrix4;return function(a){return a.applyMatrix4(b.getInverse(this.matrixWorld))}}(),lookAt:function(){var b=new a.Matrix4;return function(a){b.lookAt(a,this.position,this.up),this.quaternion.setFromRotationMatrix(b)}}(),add:function(b){if(arguments.length>1){for(var c=0;c<arguments.length;c++)this.add(arguments[c]);return this}return b===this?(console.error("THREE.Object3D.add:",b,"can't be added as a child of itself."),this):(b instanceof a.Object3D?(void 0!==b.parent&&b.parent.remove(b),b.parent=this,b.dispatchEvent({type:"added"}),this.children.push(b)):console.error("THREE.Object3D.add:",b,"is not an instance of THREE.Object3D."),this)},remove:function(a){if(arguments.length>1)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);var c=this.children.indexOf(a);-1!==c&&(a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(c,1))},getChildByName:function(a,b){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a,b)},getObjectById:function(a,b){return this.getObjectByProperty("id",a,b)},getObjectByName:function(a,b){return this.getObjectByProperty("name",a,b)},getObjectByProperty:function(a,b,c){if(this[a]===b)return this;for(var d=0,e=this.children.length;e>d;d++){var f=this.children[d],g=f.getObjectByProperty(a,b,c);if(void 0!==g)return g}return void 0},getWorldPosition:function(b){var c=b||new a.Vector3;return this.updateMatrixWorld(!0),c.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var b=new a.Vector3,c=new a.Vector3;return function(d){var e=d||new a.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(b,e,c),e}}(),getWorldRotation:function(){var b=new a.Quaternion;return function(c){var d=c||new a.Euler;return this.getWorldQuaternion(b),d.setFromQuaternion(b,this.rotation.order,!1)}}(),getWorldScale:function(){var b=new a.Vector3,c=new a.Quaternion;return function(d){var e=d||new a.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(b,c,e),e}}(),getWorldDirection:function(){var b=new a.Quaternion;return function(c){var d=c||new a.Vector3;return this.getWorldQuaternion(b),d.set(0,0,1).applyQuaternion(b)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=0,c=this.children.length;c>b;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(this.visible!==!1){a(this);for(var b=0,c=this.children.length;c>b;b++)this.children[b].traverseVisible(a)}},traverseAncestors:function(a){this.parent&&(a(this.parent),this.parent.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||a===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;c>b;b++)this.children[b].updateMatrixWorld(a)},toJSON:function(){var b={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},c={},d=function(a){if(void 0===b.geometries&&(b.geometries=[]),void 0===c[a.uuid]){var d=a.toJSON();delete d.metadata,c[a.uuid]=d,b.geometries.push(d)}return a.uuid},e={},f=function(a){if(void 0===b.materials&&(b.materials=[]),void 0===e[a.uuid]){var c=a.toJSON();delete c.metadata,e[a.uuid]=c,b.materials.push(c)}return a.uuid},g=function(b){var c={};if(c.uuid=b.uuid,c.type=b.type,""!==b.name&&(c.name=b.name),"{}"!==JSON.stringify(b.userData)&&(c.userData=b.userData),b.visible!==!0&&(c.visible=b.visible),b instanceof a.PerspectiveCamera?(c.fov=b.fov,c.aspect=b.aspect,c.near=b.near,c.far=b.far):b instanceof a.OrthographicCamera?(c.left=b.left,c.right=b.right,c.top=b.top,c.bottom=b.bottom,c.near=b.near,c.far=b.far):b instanceof a.AmbientLight?c.color=b.color.getHex():b instanceof a.DirectionalLight?(c.color=b.color.getHex(),c.intensity=b.intensity):b instanceof a.PointLight?(c.color=b.color.getHex(),c.intensity=b.intensity,c.distance=b.distance):b instanceof a.SpotLight?(c.color=b.color.getHex(),c.intensity=b.intensity,c.distance=b.distance,c.angle=b.angle,c.exponent=b.exponent):b instanceof a.HemisphereLight?(c.color=b.color.getHex(),c.groundColor=b.groundColor.getHex()):b instanceof a.Mesh?(c.geometry=d(b.geometry),c.material=f(b.material)):b instanceof a.Line?(c.geometry=d(b.geometry),c.material=f(b.material)):b instanceof a.Sprite&&(c.material=f(b.material)),c.matrix=b.matrix.toArray(),b.children.length>0){c.children=[];for(var e=0;e<b.children.length;e++)c.children.push(g(b.children[e]))}return c};return b.object=g(this),b},clone:function(b,c){if(void 0===b&&(b=new a.Object3D),void 0===c&&(c=!0),b.name=this.name,b.up.copy(this.up),b.position.copy(this.position),b.quaternion.copy(this.quaternion),b.scale.copy(this.scale),b.rotationAutoUpdate=this.rotationAutoUpdate,b.matrix.copy(this.matrix),b.matrixWorld.copy(this.matrixWorld),b.matrixAutoUpdate=this.matrixAutoUpdate,b.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,b.visible=this.visible,b.castShadow=this.castShadow,b.receiveShadow=this.receiveShadow,b.frustumCulled=this.frustumCulled,b.userData=JSON.parse(JSON.stringify(this.userData)),c===!0)for(var d=0;d<this.children.length;d++){var e=this.children[d];b.add(e.clone())}return b}},a.EventDispatcher.prototype.apply(a.Object3D.prototype),a.Object3DIdCount=0,a.Face3=function(b,c,d,e,f,g){this.a=b,this.b=c,this.c=d,this.normal=e instanceof a.Vector3?e:new a.Vector3,this.vertexNormals=e instanceof Array?e:[],this.color=f instanceof a.Color?f:new a.Color,this.vertexColors=f instanceof Array?f:[],this.vertexTangents=[],this.materialIndex=void 0!==g?g:0},a.Face3.prototype={constructor:a.Face3,clone:function(){var b=new a.Face3(this.a,this.b,this.c);b.normal.copy(this.normal),b.color.copy(this.color),b.materialIndex=this.materialIndex;for(var c=0,d=this.vertexNormals.length;d>c;c++)b.vertexNormals[c]=this.vertexNormals[c].clone();for(var c=0,d=this.vertexColors.length;d>c;c++)b.vertexColors[c]=this.vertexColors[c].clone();for(var c=0,d=this.vertexTangents.length;d>c;c++)b.vertexTangents[c]=this.vertexTangents[c].clone();return b}},a.Face4=function(b,c,d,e,f,g,h){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new a.Face3(b,c,d,f,g,h)},a.BufferAttribute=function(a,b){this.array=a,this.itemSize=b,this.needsUpdate=!1},a.BufferAttribute.prototype={constructor:a.BufferAttribute,get length(){return this.array.length},copyAt:function(a,b,c){a*=this.itemSize,c*=b.itemSize;for(var d=0,e=this.itemSize;e>d;d++)this.array[a+d]=b.array[c+d]},set:function(a){return this.array.set(a),this},setX:function(a,b){return this.array[a*this.itemSize]=b,this},setY:function(a,b){return this.array[a*this.itemSize+1]=b,this},setZ:function(a,b){return this.array[a*this.itemSize+2]=b,this},setXY:function(a,b,c){return a*=this.itemSize,this.array[a]=b,this.array[a+1]=c,this},setXYZ:function(a,b,c,d){return a*=this.itemSize,this.array[a]=b,this.array[a+1]=c,this.array[a+2]=d,this},setXYZW:function(a,b,c,d,e){return a*=this.itemSize,this.array[a]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this},clone:function(){return new a.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}},a.Int8Attribute=function(b,c){return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Uint8Attribute=function(b,c){return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Uint8ClampedAttribute=function(b,c){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Int16Attribute=function(b,c){return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Uint16Attribute=function(b,c){return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Int32Attribute=function(b,c){return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Uint32Attribute=function(b,c){return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Float32Attribute=function(b,c){return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.Float64Attribute=function(b,c){return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new a.BufferAttribute(b,c)},a.BufferGeometry=function(){Object.defineProperty(this,"id",{value:a.GeometryIdCount++}),this.uuid=a.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.attributes={},this.attributesKeys=[],this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},a.BufferGeometry.prototype={constructor:a.BufferGeometry,addAttribute:function(b,c){return c instanceof a.BufferAttribute==!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void(this.attributes[b]={array:arguments[1],itemSize:arguments[2]})):(this.attributes[b]=c,void(this.attributesKeys=Object.keys(this.attributes)))},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(b){var c=this.attributes.position;void 0!==c&&(b.applyToVector3Array(c.array),c.needsUpdate=!0);var d=this.attributes.normal;if(void 0!==d){var e=(new a.Matrix3).getNormalMatrix(b);e.applyToVector3Array(d.array),d.needsUpdate=!0}},center:function(){},fromGeometry:function(b,c){c=c||{vertexColors:a.NoColors};var d=b.vertices,e=b.faces,f=b.faceVertexUvs,g=c.vertexColors,h=f[0].length>0,i=3==e[0].vertexNormals.length,j=new Float32Array(3*e.length*3);this.addAttribute("position",new a.BufferAttribute(j,3));var k=new Float32Array(3*e.length*3);if(this.addAttribute("normal",new a.BufferAttribute(k,3)),g!==a.NoColors){var l=new Float32Array(3*e.length*3);this.addAttribute("color",new a.BufferAttribute(l,3))}if(h===!0){var m=new Float32Array(3*e.length*2);this.addAttribute("uv",new a.BufferAttribute(m,2))}for(var n=0,o=0,p=0;n<e.length;n++,o+=6,p+=9){var q=e[n],r=d[q.a],s=d[q.b],t=d[q.c];if(j[p]=r.x,j[p+1]=r.y,j[p+2]=r.z,j[p+3]=s.x,j[p+4]=s.y,j[p+5]=s.z,j[p+6]=t.x,j[p+7]=t.y,j[p+8]=t.z,i===!0){var u=q.vertexNormals[0],v=q.vertexNormals[1],w=q.vertexNormals[2];k[p]=u.x,k[p+1]=u.y,k[p+2]=u.z,k[p+3]=v.x,k[p+4]=v.y,k[p+5]=v.z,k[p+6]=w.x,k[p+7]=w.y,k[p+8]=w.z}else{var x=q.normal;k[p]=x.x,k[p+1]=x.y,k[p+2]=x.z,k[p+3]=x.x,k[p+4]=x.y,k[p+5]=x.z,k[p+6]=x.x,k[p+7]=x.y,k[p+8]=x.z}if(g===a.FaceColors){var y=q.color;l[p]=y.r,l[p+1]=y.g,l[p+2]=y.b,l[p+3]=y.r,l[p+4]=y.g,l[p+5]=y.b,l[p+6]=y.r,l[p+7]=y.g,l[p+8]=y.b}else if(g===a.VertexColors){var z=q.vertexColors[0],A=q.vertexColors[1],B=q.vertexColors[2];l[p]=z.r,l[p+1]=z.g,l[p+2]=z.b,l[p+3]=A.r,l[p+4]=A.g,l[p+5]=A.b,l[p+6]=B.r,l[p+7]=B.g,l[p+8]=B.b}if(h===!0){var C=f[0][n][0],D=f[0][n][1],E=f[0][n][2];m[o]=C.x,m[o+1]=C.y,m[o+2]=D.x,m[o+3]=D.y,m[o+4]=E.x,m[o+5]=E.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){var b=new a.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new a.Box3);var c=this.attributes.position.array;if(c){var d=this.boundingBox;d.makeEmpty();for(var e=0,f=c.length;f>e;e+=3)b.set(c[e],c[e+1],c[e+2]),d.expandByPoint(b)}(void 0===c||0===c.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var b=new a.Box3,c=new a.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new a.Sphere);var d=this.attributes.position.array;if(d){b.makeEmpty();for(var e=this.boundingSphere.center,f=0,g=d.length;g>f;f+=3)c.set(d[f],d[f+1],d[f+2]),b.expandByPoint(c);b.center(e);for(var h=0,f=0,g=d.length;g>f;f+=3)c.set(d[f],d[f+1],d[f+2]),h=Math.max(h,e.distanceToSquared(c));this.boundingSphere.radius=Math.sqrt(h),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var b=this.attributes;if(b.position){var c=b.position.array;if(void 0===b.normal)this.addAttribute("normal",new a.BufferAttribute(new Float32Array(c.length),3));else for(var d=b.normal.array,e=0,f=d.length;f>e;e++)d[e]=0;var g,h,i,d=b.normal.array,j=new a.Vector3,k=new a.Vector3,l=new a.Vector3,m=new a.Vector3,n=new a.Vector3;if(b.index)for(var o=b.index.array,p=this.offsets.length>0?this.offsets:[{start:0,count:o.length,index:0}],q=0,r=p.length;r>q;++q)for(var s=p[q].start,t=p[q].count,u=p[q].index,e=s,f=s+t;f>e;e+=3)g=3*(u+o[e]),h=3*(u+o[e+1]),i=3*(u+o[e+2]),j.fromArray(c,g),k.fromArray(c,h),l.fromArray(c,i),m.subVectors(l,k),n.subVectors(j,k),m.cross(n),d[g]+=m.x,d[g+1]+=m.y,d[g+2]+=m.z,d[h]+=m.x,d[h+1]+=m.y,d[h+2]+=m.z,d[i]+=m.x,d[i+1]+=m.y,d[i+2]+=m.z;else for(var e=0,f=c.length;f>e;e+=9)j.fromArray(c,e),k.fromArray(c,e+3),l.fromArray(c,e+6),m.subVectors(l,k),n.subVectors(j,k),m.cross(n),d[e]=m.x,d[e+1]=m.y,d[e+2]=m.z,d[e+3]=m.x,d[e+4]=m.y,d[e+5]=m.z,d[e+6]=m.x,d[e+7]=m.y,d[e+8]=m.z;this.normalizeNormals(),b.normal.needsUpdate=!0}},computeTangents:function(){function b(a,b,c){E.fromArray(e,3*a),F.fromArray(e,3*b),G.fromArray(e,3*c),H.fromArray(g,2*a),I.fromArray(g,2*b),J.fromArray(g,2*c),m=F.x-E.x,n=G.x-E.x,o=F.y-E.y,p=G.y-E.y,q=F.z-E.z,r=G.z-E.z,s=I.x-H.x,t=J.x-H.x,u=I.y-H.y,v=J.y-H.y,w=s*v-t*u,K.set(v*m-u*n,v*o-u*p,v*q-u*r),L.set(s*n-t*m,s*p-t*o,s*r-t*q),K.divideScalar(w),L.divideScalar(w),j[a].add(K),j[b].add(K),j[c].add(K),k[a].add(L),k[b].add(L),k[c].add(L)}function c(a){V.fromArray(f,3*a),W.copy(V),R=j[a],T.copy(R),T.sub(V.multiplyScalar(V.dot(R))).normalize(),U.crossVectors(W,R),S=U.dot(k[a]),Q=0>S?-1:1,i[4*a]=T.x,i[4*a+1]=T.y,i[4*a+2]=T.z,i[4*a+3]=Q}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var d=this.attributes.index.array,e=this.attributes.position.array,f=this.attributes.normal.array,g=this.attributes.uv.array,h=e.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new a.BufferAttribute(new Float32Array(4*h),4));for(var i=this.attributes.tangent.array,j=[],k=[],l=0;h>l;l++)j[l]=new a.Vector3,k[l]=new a.Vector3;var m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E=new a.Vector3,F=new a.Vector3,G=new a.Vector3,H=new a.Vector2,I=new a.Vector2,J=new a.Vector2,K=new a.Vector3,L=new a.Vector3;0===this.drawcalls.length&&this.addDrawCall(0,d.length,0);var M=this.drawcalls;for(z=0,A=M.length;A>z;++z){var N=M[z].start,O=M[z].count,P=M[z].index;for(x=N,y=N+O;y>x;x+=3)B=P+d[x],C=P+d[x+1],D=P+d[x+2],b(B,C,D)}var Q,R,S,T=new a.Vector3,U=new a.Vector3,V=new a.Vector3,W=new a.Vector3;for(z=0,A=M.length;A>z;++z){var N=M[z].start,O=M[z].count,P=M[z].index;for(x=N,y=N+O;y>x;x+=3)B=P+d[x],C=P+d[x+1],D=P+d[x+2],c(B),c(C),c(D)}},computeOffsets:function(a){var b=a;void 0===a&&(b=65535);for(var c=(Date.now(),this.attributes.index.array),d=this.attributes.position.array,e=(d.length/3,c.length/3),f=new Uint16Array(c.length),g=0,h=0,i=[{start:0,count:0,index:0}],j=i[0],k=0,l=0,m=new Int32Array(6),n=new Int32Array(d.length),o=new Int32Array(d.length),p=0;p<d.length;p++)n[p]=-1,o[p]=-1;for(var q=0;e>q;q++){l=0;for(var r=0;3>r;r++){var s=c[3*q+r];-1==n[s]?(m[2*r]=s,m[2*r+1]=-1,l++):n[s]<j.index?(m[2*r]=s,m[2*r+1]=-1,k++):(m[2*r]=s,m[2*r+1]=n[s])}var t=h+l;if(t>j.index+b){var u={start:g,count:0,index:h};i.push(u),j=u;for(var v=0;6>v;v+=2){var w=m[v+1];w>-1&&w<j.index&&(m[v+1]=-1)}}for(var v=0;6>v;v+=2){var s=m[v],w=m[v+1];-1===w&&(w=h++),n[s]=w,o[w]=s,f[g++]=w-j.index,j.count++}}return this.reorderBuffers(f,o,h),this.offsets=i,i},merge:function(b,c){if(b instanceof a.BufferGeometry==!1)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",b);void 0===c&&(c=0);var d=this.attributes;for(var e in d)if(void 0!==b.attributes[e])for(var f=d[e],g=f.array,h=b.attributes[e],i=h.array,j=h.itemSize,k=0,l=j*c;k<i.length;k++,l++)g[l]=i[k];return this},normalizeNormals:function(){for(var a,b,c,d,e=this.attributes.normal.array,f=0,g=e.length;g>f;f+=3)a=e[f],b=e[f+1],c=e[f+2],d=1/Math.sqrt(a*a+b*b+c*c),e[f]*=d,e[f+1]*=d,e[f+2]*=d},reorderBuffers:function(a,b,c){var d={};for(var e in this.attributes)if("index"!=e){var f=this.attributes[e].array;d[e]=new f.constructor(this.attributes[e].itemSize*c)}for(var g=0;c>g;g++){var h=b[g];for(var e in this.attributes)if("index"!=e)for(var i=this.attributes[e].array,j=this.attributes[e].itemSize,k=d[e],l=0;j>l;l++)k[g*j+l]=i[h*j+l]}this.attributes.index.array=a;for(var e in this.attributes)"index"!=e&&(this.attributes[e].array=d[e],this.attributes[e].numItems=this.attributes[e].itemSize*c)},toJSON:function(){var a={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},b=this.attributes,c=this.offsets,d=this.boundingSphere;for(var e in b){for(var f=b[e],g=[],h=f.array,i=0,j=h.length;j>i;i++)g[i]=h[i];a.data.attributes[e]={itemSize:f.itemSize,type:f.array.constructor.name,array:g}}return c.length>0&&(a.data.offsets=JSON.parse(JSON.stringify(c))),null!==d&&(a.data.boundingSphere={center:d.center.toArray(),radius:d.radius}),a},clone:function(){var b=new a.BufferGeometry;for(var c in this.attributes){var d=this.attributes[c];b.addAttribute(c,d.clone())}for(var e=0,f=this.offsets.length;f>e;e++){var g=this.offsets[e];b.offsets.push({start:g.start,index:g.index,count:g.count})}return b},dispose:function(){this.dispatchEvent({type:"dispose"})}},a.EventDispatcher.prototype.apply(a.BufferGeometry.prototype),a.Geometry=function(){Object.defineProperty(this,"id",{value:a.GeometryIdCount++}),this.uuid=a.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1
},a.Geometry.prototype={constructor:a.Geometry,applyMatrix:function(b){for(var c=(new a.Matrix3).getNormalMatrix(b),d=0,e=this.vertices.length;e>d;d++){var f=this.vertices[d];f.applyMatrix4(b)}for(var d=0,e=this.faces.length;e>d;d++){var g=this.faces[d];g.normal.applyMatrix3(c).normalize();for(var h=0,i=g.vertexNormals.length;i>h;h++)g.vertexNormals[h].applyMatrix3(c).normalize()}this.boundingBox instanceof a.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof a.Sphere&&this.computeBoundingSphere()},fromBufferGeometry:function(b){for(var c=this,d=b.attributes,e=d.position.array,f=void 0!==d.index?d.index.array:void 0,g=void 0!==d.normal?d.normal.array:void 0,h=void 0!==d.color?d.color.array:void 0,i=void 0!==d.uv?d.uv.array:void 0,j=[],k=[],l=0,m=0;l<e.length;l+=3,m+=2)c.vertices.push(new a.Vector3(e[l],e[l+1],e[l+2])),void 0!==g&&j.push(new a.Vector3(g[l],g[l+1],g[l+2])),void 0!==h&&c.colors.push(new a.Color(h[l],h[l+1],h[l+2])),void 0!==i&&k.push(new a.Vector2(i[m],i[m+1]));var n=function(b,d,e){var f=void 0!==g?[j[b].clone(),j[d].clone(),j[e].clone()]:[],l=void 0!==h?[c.colors[b].clone(),c.colors[d].clone(),c.colors[e].clone()]:[];c.faces.push(new a.Face3(b,d,e,f,l)),void 0!==i&&c.faceVertexUvs[0].push([k[b].clone(),k[d].clone(),k[e].clone()])};if(void 0!==f)for(var l=0;l<f.length;l+=3)n(f[l],f[l+1],f[l+2]);else for(var l=0;l<e.length/3;l+=3)n(l,l+1,l+2);return this.computeFaceNormals(),null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone()),null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var b=new a.Vector3;return b.addVectors(this.boundingBox.min,this.boundingBox.max),b.multiplyScalar(-.5),this.applyMatrix((new a.Matrix4).makeTranslation(b.x,b.y,b.z)),this.computeBoundingBox(),b},computeFaceNormals:function(){for(var b=new a.Vector3,c=new a.Vector3,d=0,e=this.faces.length;e>d;d++){var f=this.faces[d],g=this.vertices[f.a],h=this.vertices[f.b],i=this.vertices[f.c];b.subVectors(i,h),c.subVectors(g,h),b.cross(c),b.normalize(),f.normal.copy(b)}},computeVertexNormals:function(b){var c,d,e,f,g,h;for(h=new Array(this.vertices.length),c=0,d=this.vertices.length;d>c;c++)h[c]=new a.Vector3;if(b){{var i,j,k,l=new a.Vector3,m=new a.Vector3;new a.Vector3,new a.Vector3,new a.Vector3}for(e=0,f=this.faces.length;f>e;e++)g=this.faces[e],i=this.vertices[g.a],j=this.vertices[g.b],k=this.vertices[g.c],l.subVectors(k,j),m.subVectors(i,j),l.cross(m),h[g.a].add(l),h[g.b].add(l),h[g.c].add(l)}else for(e=0,f=this.faces.length;f>e;e++)g=this.faces[e],h[g.a].add(g.normal),h[g.b].add(g.normal),h[g.c].add(g.normal);for(c=0,d=this.vertices.length;d>c;c++)h[c].normalize();for(e=0,f=this.faces.length;f>e;e++)g=this.faces[e],g.vertexNormals[0]=h[g.a].clone(),g.vertexNormals[1]=h[g.b].clone(),g.vertexNormals[2]=h[g.c].clone()},computeMorphNormals:function(){var b,c,d,e,f;for(d=0,e=this.faces.length;e>d;d++)for(f=this.faces[d],f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=f.normal.clone(),f.__originalVertexNormals||(f.__originalVertexNormals=[]),b=0,c=f.vertexNormals.length;c>b;b++)f.__originalVertexNormals[b]?f.__originalVertexNormals[b].copy(f.vertexNormals[b]):f.__originalVertexNormals[b]=f.vertexNormals[b].clone();var g=new a.Geometry;for(g.faces=this.faces,b=0,c=this.morphTargets.length;c>b;b++){if(!this.morphNormals[b]){this.morphNormals[b]={},this.morphNormals[b].faceNormals=[],this.morphNormals[b].vertexNormals=[];var h,i,j=this.morphNormals[b].faceNormals,k=this.morphNormals[b].vertexNormals;for(d=0,e=this.faces.length;e>d;d++)h=new a.Vector3,i={a:new a.Vector3,b:new a.Vector3,c:new a.Vector3},j.push(h),k.push(i)}var l=this.morphNormals[b];g.vertices=this.morphTargets[b].vertices,g.computeFaceNormals(),g.computeVertexNormals();var h,i;for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],h=l.faceNormals[d],i=l.vertexNormals[d],h.copy(f.normal),i.a.copy(f.vertexNormals[0]),i.b.copy(f.vertexNormals[1]),i.c.copy(f.vertexNormals[2])}for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){function b(a,b,c,d,e,f,g){k=a.vertices[b],l=a.vertices[c],m=a.vertices[d],n=j[e],o=j[f],p=j[g],q=l.x-k.x,r=m.x-k.x,s=l.y-k.y,t=m.y-k.y,u=l.z-k.z,v=m.z-k.z,w=o.x-n.x,x=p.x-n.x,y=o.y-n.y,z=p.y-n.y,A=1/(w*z-x*y),G.set((z*q-y*r)*A,(z*s-y*t)*A,(z*u-y*v)*A),H.set((w*r-x*q)*A,(w*t-x*s)*A,(w*v-x*u)*A),E[b].add(G),E[c].add(G),E[d].add(G),F[b].add(H),F[c].add(H),F[d].add(H)}var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E=[],F=[],G=new a.Vector3,H=new a.Vector3,I=new a.Vector3,J=new a.Vector3,K=new a.Vector3;for(e=0,f=this.vertices.length;f>e;e++)E[e]=new a.Vector3,F[e]=new a.Vector3;for(c=0,d=this.faces.length;d>c;c++)i=this.faces[c],j=this.faceVertexUvs[0][c],b(this,i.a,i.b,i.c,0,1,2);var L=["a","b","c","d"];for(c=0,d=this.faces.length;d>c;c++)for(i=this.faces[c],g=0;g<Math.min(i.vertexNormals.length,3);g++)K.copy(i.vertexNormals[g]),h=i[L[g]],B=E[h],I.copy(B),I.sub(K.multiplyScalar(K.dot(B))).normalize(),J.crossVectors(i.vertexNormals[g],B),C=J.dot(F[h]),D=0>C?-1:1,i.vertexTangents[g]=new a.Vector4(I.x,I.y,I.z,D);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;d>c;c++)c>0&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new a.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new a.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(b,c,d){if(b instanceof a.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",b);var e,f=this.vertices.length,g=this.vertices,h=b.vertices,i=this.faces,j=b.faces,k=this.faceVertexUvs[0],l=b.faceVertexUvs[0];void 0===d&&(d=0),void 0!==c&&(e=(new a.Matrix3).getNormalMatrix(c));for(var m=0,n=h.length;n>m;m++){var o=h[m],p=o.clone();void 0!==c&&p.applyMatrix4(c),g.push(p)}for(m=0,n=j.length;n>m;m++){var q,r,s,t=j[m],u=t.vertexNormals,v=t.vertexColors;q=new a.Face3(t.a+f,t.b+f,t.c+f),q.normal.copy(t.normal),void 0!==e&&q.normal.applyMatrix3(e).normalize();for(var w=0,x=u.length;x>w;w++)r=u[w].clone(),void 0!==e&&r.applyMatrix3(e).normalize(),q.vertexNormals.push(r);q.color.copy(t.color);for(var w=0,x=v.length;x>w;w++)s=v[w],q.vertexColors.push(s.clone());q.materialIndex=t.materialIndex+d,i.push(q)}for(m=0,n=l.length;n>m;m++){var y=l[m],z=[];if(void 0!==y){for(var w=0,x=y.length;x>w;w++)z.push(y[w].clone());k.push(z)}}},mergeMesh:function(b){return b instanceof a.Mesh==!1?void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",b):(b.matrixAutoUpdate&&b.updateMatrix(),void this.merge(b.geometry,b.matrix))},mergeVertices:function(){var a,b,c,d,e,f,g,h,i={},j=[],k=[],l=4,m=Math.pow(10,l);for(c=0,d=this.vertices.length;d>c;c++)a=this.vertices[c],b=Math.round(a.x*m)+"_"+Math.round(a.y*m)+"_"+Math.round(a.z*m),void 0===i[b]?(i[b]=c,j.push(this.vertices[c]),k[c]=j.length-1):k[c]=k[i[b]];var n=[];for(c=0,d=this.faces.length;d>c;c++){e=this.faces[c],e.a=k[e.a],e.b=k[e.b],e.c=k[e.c],f=[e.a,e.b,e.c];for(var o=-1,p=0;3>p;p++)if(f[p]==f[(p+1)%3]){o=p,n.push(c);break}}for(c=n.length-1;c>=0;c--){var q=n[c];for(this.faces.splice(q,1),g=0,h=this.faceVertexUvs.length;h>g;g++)this.faceVertexUvs[g].splice(q,1)}var r=this.vertices.length-j.length;return this.vertices=j,r},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();return void 0!==m[b]?m[b]:(m[b]=l.length/3,l.push(a.x,a.y,a.z),m[b])}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();return void 0!==o[b]?o[b]:(o[b]=n.length,n.push(a.getHex()),o[b])}function d(a){var b=a.x.toString()+a.y.toString();return void 0!==q[b]?q[b]:(q[b]=p.length/2,p.push(a.x,a.y),q[b])}var e={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};if(""!==this.name&&(e.name=this.name),void 0!==this.parameters){var f=this.parameters;for(var g in f)void 0!==f[g]&&(e[g]=f[g]);return e}for(var h=[],i=0;i<this.vertices.length;i++){var j=this.vertices[i];h.push(j.x,j.y,j.z)}for(var k=[],l=[],m={},n=[],o={},p=[],q={},i=0;i<this.faces.length;i++){var r=this.faces[i],s=!1,t=!1,u=void 0!==this.faceVertexUvs[0][i],v=r.normal.length()>0,w=r.vertexNormals.length>0,x=1!==r.color.r||1!==r.color.g||1!==r.color.b,y=r.vertexColors.length>0,z=0;if(z=a(z,0,0),z=a(z,1,s),z=a(z,2,t),z=a(z,3,u),z=a(z,4,v),z=a(z,5,w),z=a(z,6,x),z=a(z,7,y),k.push(z),k.push(r.a,r.b,r.c),u){var A=this.faceVertexUvs[0][i];k.push(d(A[0]),d(A[1]),d(A[2]))}if(v&&k.push(b(r.normal)),w){var B=r.vertexNormals;k.push(b(B[0]),b(B[1]),b(B[2]))}if(x&&k.push(c(r.color)),y){var C=r.vertexColors;k.push(c(C[0]),c(C[1]),c(C[2]))}}return e.data={},e.data.vertices=h,e.data.normals=l,n.length>0&&(e.data.colors=n),p.length>0&&(e.data.uvs=[p]),e.data.faces=k,e},clone:function(){for(var b=new a.Geometry,c=this.vertices,d=0,e=c.length;e>d;d++)b.vertices.push(c[d].clone());for(var f=this.faces,d=0,e=f.length;e>d;d++)b.faces.push(f[d].clone());for(var d=0,e=this.faceVertexUvs.length;e>d;d++){var g=this.faceVertexUvs[d];void 0===b.faceVertexUvs[d]&&(b.faceVertexUvs[d]=[]);for(var h=0,i=g.length;i>h;h++){for(var j=g[h],k=[],l=0,m=j.length;m>l;l++){var n=j[l];k.push(n.clone())}b.faceVertexUvs[d].push(k)}}return b},dispose:function(){this.dispatchEvent({type:"dispose"})}},a.EventDispatcher.prototype.apply(a.Geometry.prototype),a.GeometryIdCount=0,a.Camera=function(){a.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new a.Matrix4,this.projectionMatrix=new a.Matrix4},a.Camera.prototype=Object.create(a.Object3D.prototype),a.Camera.prototype.constructor=a.Camera,a.Camera.prototype.getWorldDirection=function(){var b=new a.Quaternion;return function(c){var d=c||new a.Vector3;return this.getWorldQuaternion(b),d.set(0,0,-1).applyQuaternion(b)}}(),a.Camera.prototype.lookAt=function(){var b=new a.Matrix4;return function(a){b.lookAt(this.position,a,this.up),this.quaternion.setFromRotationMatrix(b)}}(),a.Camera.prototype.clone=function(b){return void 0===b&&(b=new a.Camera),a.Object3D.prototype.clone.call(this,b),b.matrixWorldInverse.copy(this.matrixWorldInverse),b.projectionMatrix.copy(this.projectionMatrix),b},a.CubeCamera=function(b,c,d){a.Object3D.call(this),this.type="CubeCamera";var e=90,f=1,g=new a.PerspectiveCamera(e,f,b,c);g.up.set(0,-1,0),g.lookAt(new a.Vector3(1,0,0)),this.add(g);var h=new a.PerspectiveCamera(e,f,b,c);h.up.set(0,-1,0),h.lookAt(new a.Vector3(-1,0,0)),this.add(h);var i=new a.PerspectiveCamera(e,f,b,c);i.up.set(0,0,1),i.lookAt(new a.Vector3(0,1,0)),this.add(i);var j=new a.PerspectiveCamera(e,f,b,c);j.up.set(0,0,-1),j.lookAt(new a.Vector3(0,-1,0)),this.add(j);var k=new a.PerspectiveCamera(e,f,b,c);k.up.set(0,-1,0),k.lookAt(new a.Vector3(0,0,1)),this.add(k);var l=new a.PerspectiveCamera(e,f,b,c);l.up.set(0,-1,0),l.lookAt(new a.Vector3(0,0,-1)),this.add(l),this.renderTarget=new a.WebGLRenderTargetCube(d,d,{format:a.RGBFormat,magFilter:a.LinearFilter,minFilter:a.LinearFilter}),this.updateCubeMap=function(a,b){var c=this.renderTarget,d=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,g,c),c.activeCubeFace=1,a.render(b,h,c),c.activeCubeFace=2,a.render(b,i,c),c.activeCubeFace=3,a.render(b,j,c),c.activeCubeFace=4,a.render(b,k,c),c.generateMipmaps=d,c.activeCubeFace=5,a.render(b,l,c)}},a.CubeCamera.prototype=Object.create(a.Object3D.prototype),a.CubeCamera.prototype.constructor=a.CubeCamera,a.OrthographicCamera=function(b,c,d,e,f,g){a.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=b,this.right=c,this.top=d,this.bottom=e,this.near=void 0!==f?f:.1,this.far=void 0!==g?g:2e3,this.updateProjectionMatrix()},a.OrthographicCamera.prototype=Object.create(a.Camera.prototype),a.OrthographicCamera.prototype.constructor=a.OrthographicCamera,a.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(c-a,c+a,d+b,d-b,this.near,this.far)},a.OrthographicCamera.prototype.clone=function(){var b=new a.OrthographicCamera;return a.Camera.prototype.clone.call(this,b),b.zoom=this.zoom,b.left=this.left,b.right=this.right,b.top=this.top,b.bottom=this.bottom,b.near=this.near,b.far=this.far,b.projectionMatrix.copy(this.projectionMatrix),b},a.PerspectiveCamera=function(b,c,d,e){a.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==b?b:50,this.aspect=void 0!==c?c:1,this.near=void 0!==d?d:.1,this.far=void 0!==e?e:2e3,this.updateProjectionMatrix()},a.PerspectiveCamera.prototype=Object.create(a.Camera.prototype),a.PerspectiveCamera.prototype.constructor=a.PerspectiveCamera,a.PerspectiveCamera.prototype.setLens=function(b,c){void 0===c&&(c=24),this.fov=2*a.Math.radToDeg(Math.atan(c/(2*b))),this.updateProjectionMatrix()},a.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},a.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var b=a.Math.radToDeg(2*Math.atan(Math.tan(.5*a.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var c=this.fullWidth/this.fullHeight,d=Math.tan(a.Math.degToRad(.5*b))*this.near,e=-d,f=c*e,g=c*d,h=Math.abs(g-f),i=Math.abs(d-e);this.projectionMatrix.makeFrustum(f+this.x*h/this.fullWidth,f+(this.x+this.width)*h/this.fullWidth,d-(this.y+this.height)*i/this.fullHeight,d-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(b,this.aspect,this.near,this.far)},a.PerspectiveCamera.prototype.clone=function(){var b=new a.PerspectiveCamera;return a.Camera.prototype.clone.call(this,b),b.zoom=this.zoom,b.fov=this.fov,b.aspect=this.aspect,b.near=this.near,b.far=this.far,b.projectionMatrix.copy(this.projectionMatrix),b},a.Light=function(b){a.Object3D.call(this),this.type="Light",this.color=new a.Color(b)},a.Light.prototype=Object.create(a.Object3D.prototype),a.Light.prototype.constructor=a.Light,a.Light.prototype.clone=function(b){return void 0===b&&(b=new a.Light),a.Object3D.prototype.clone.call(this,b),b.color.copy(this.color),b},a.AmbientLight=function(b){a.Light.call(this,b),this.type="AmbientLight"},a.AmbientLight.prototype=Object.create(a.Light.prototype),a.AmbientLight.prototype.constructor=a.AmbientLight,a.AmbientLight.prototype.clone=function(){var b=new a.AmbientLight;return a.Light.prototype.clone.call(this,b),b},a.AreaLight=function(b,c){a.Light.call(this,b),this.type="AreaLight",this.normal=new a.Vector3(0,-1,0),this.right=new a.Vector3(1,0,0),this.intensity=void 0!==c?c:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},a.AreaLight.prototype=Object.create(a.Light.prototype),a.AreaLight.prototype.constructor=a.AreaLight,a.DirectionalLight=function(b,c){a.Light.call(this,b),this.type="DirectionalLight",this.position.set(0,1,0),this.target=new a.Object3D,this.intensity=void 0!==c?c:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new a.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},a.DirectionalLight.prototype=Object.create(a.Light.prototype),a.DirectionalLight.prototype.constructor=a.DirectionalLight,a.DirectionalLight.prototype.clone=function(){var b=new a.DirectionalLight;return a.Light.prototype.clone.call(this,b),b.target=this.target.clone(),b.intensity=this.intensity,b.castShadow=this.castShadow,b.onlyShadow=this.onlyShadow,b.shadowCameraNear=this.shadowCameraNear,b.shadowCameraFar=this.shadowCameraFar,b.shadowCameraLeft=this.shadowCameraLeft,b.shadowCameraRight=this.shadowCameraRight,b.shadowCameraTop=this.shadowCameraTop,b.shadowCameraBottom=this.shadowCameraBottom,b.shadowCameraVisible=this.shadowCameraVisible,b.shadowBias=this.shadowBias,b.shadowDarkness=this.shadowDarkness,b.shadowMapWidth=this.shadowMapWidth,b.shadowMapHeight=this.shadowMapHeight,b.shadowCascade=this.shadowCascade,b.shadowCascadeOffset.copy(this.shadowCascadeOffset),b.shadowCascadeCount=this.shadowCascadeCount,b.shadowCascadeBias=this.shadowCascadeBias.slice(0),b.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),b.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),b.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),b.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),b},a.HemisphereLight=function(b,c,d){a.Light.call(this,b),this.type="HemisphereLight",this.position.set(0,100,0),this.groundColor=new a.Color(c),this.intensity=void 0!==d?d:1},a.HemisphereLight.prototype=Object.create(a.Light.prototype),a.HemisphereLight.prototype.constructor=a.HemisphereLight,a.HemisphereLight.prototype.clone=function(){var b=new a.HemisphereLight;return a.Light.prototype.clone.call(this,b),b.groundColor.copy(this.groundColor),b.intensity=this.intensity,b},a.PointLight=function(b,c,d){a.Light.call(this,b),this.type="PointLight",this.intensity=void 0!==c?c:1,this.distance=void 0!==d?d:0},a.PointLight.prototype=Object.create(a.Light.prototype),a.PointLight.prototype.constructor=a.PointLight,a.PointLight.prototype.clone=function(){var b=new a.PointLight;return a.Light.prototype.clone.call(this,b),b.intensity=this.intensity,b.distance=this.distance,b},a.SpotLight=function(b,c,d,e,f){a.Light.call(this,b),this.type="SpotLight",this.position.set(0,1,0),this.target=new a.Object3D,this.intensity=void 0!==c?c:1,this.distance=void 0!==d?d:0,this.angle=void 0!==e?e:Math.PI/3,this.exponent=void 0!==f?f:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},a.SpotLight.prototype=Object.create(a.Light.prototype),a.SpotLight.prototype.constructor=a.SpotLight,a.SpotLight.prototype.clone=function(){var b=new a.SpotLight;return a.Light.prototype.clone.call(this,b),b.target=this.target.clone(),b.intensity=this.intensity,b.distance=this.distance,b.angle=this.angle,b.exponent=this.exponent,b.castShadow=this.castShadow,b.onlyShadow=this.onlyShadow,b.shadowCameraNear=this.shadowCameraNear,b.shadowCameraFar=this.shadowCameraFar,b.shadowCameraFov=this.shadowCameraFov,b.shadowCameraVisible=this.shadowCameraVisible,b.shadowBias=this.shadowBias,b.shadowDarkness=this.shadowDarkness,b.shadowMapWidth=this.shadowMapWidth,b.shadowMapHeight=this.shadowMapHeight,b},a.Cache=function(){this.files={}},a.Cache.prototype={constructor:a.Cache,add:function(a,b){this.files[a]=b},get:function(a){return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},a.Loader=function(b){this.showStatus=b,this.statusDomElement=b?a.Loader.prototype.addStatusElement():null,this.imageLoader=new a.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},a.Loader.prototype={constructor:a.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1024).toFixed(2)+" KB",this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");return 1===b.length?"./":(b.pop(),b.join("/")+"/")},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=this.createMaterial(a[d],b);return c},needsTangents:function(b){for(var c=0,d=b.length;d>c;c++){var e=b[c];if(e instanceof a.ShaderMaterial)return!0}return!1},createMaterial:function(b,c){function d(a){var b=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(b))}function e(b,e,f,h,i,j,k){var l,m=c+f,n=a.Loader.Handlers.get(m);if(null!==n?l=n.load(m):(l=new a.Texture,n=g.imageLoader,n.crossOrigin=g.crossOrigin,n.load(m,function(b){if(a.Math.isPowerOfTwo(b.width)===!1||a.Math.isPowerOfTwo(b.height)===!1){var c=d(b.width),e=d(b.height),f=document.createElement("canvas");f.width=c,f.height=e;var g=f.getContext("2d");g.drawImage(b,0,0,c,e),l.image=f}else l.image=b;l.needsUpdate=!0})),l.sourceFile=f,h&&(l.repeat.set(h[0],h[1]),1!==h[0]&&(l.wrapS=a.RepeatWrapping),1!==h[1]&&(l.wrapT=a.RepeatWrapping)),i&&l.offset.set(i[0],i[1]),j){var o={repeat:a.RepeatWrapping,mirror:a.MirroredRepeatWrapping};void 0!==o[j[0]]&&(l.wrapS=o[j[0]]),void 0!==o[j[1]]&&(l.wrapT=o[j[1]])}k&&(l.anisotropy=k),b[e]=l}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",i={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(b.shading){var j=b.shading.toLowerCase();"phong"===j?h="MeshPhongMaterial":"basic"===j&&(h="MeshBasicMaterial")}void 0!==b.blending&&void 0!==a[b.blending]&&(i.blending=a[b.blending]),(void 0!==b.transparent||b.opacity<1)&&(i.transparent=b.transparent),void 0!==b.depthTest&&(i.depthTest=b.depthTest),void 0!==b.depthWrite&&(i.depthWrite=b.depthWrite),void 0!==b.visible&&(i.visible=b.visible),void 0!==b.flipSided&&(i.side=a.BackSide),void 0!==b.doubleSided&&(i.side=a.DoubleSide),void 0!==b.wireframe&&(i.wireframe=b.wireframe),void 0!==b.vertexColors&&("face"===b.vertexColors?i.vertexColors=a.FaceColors:b.vertexColors&&(i.vertexColors=a.VertexColors)),b.colorDiffuse?i.color=f(b.colorDiffuse):b.DbgColor&&(i.color=b.DbgColor),b.colorSpecular&&(i.specular=f(b.colorSpecular)),b.colorAmbient&&(i.ambient=f(b.colorAmbient)),b.colorEmissive&&(i.emissive=f(b.colorEmissive)),b.transparency&&(i.opacity=b.transparency),b.specularCoef&&(i.shininess=b.specularCoef),b.mapDiffuse&&c&&e(i,"map",b.mapDiffuse,b.mapDiffuseRepeat,b.mapDiffuseOffset,b.mapDiffuseWrap,b.mapDiffuseAnisotropy),b.mapLight&&c&&e(i,"lightMap",b.mapLight,b.mapLightRepeat,b.mapLightOffset,b.mapLightWrap,b.mapLightAnisotropy),b.mapBump&&c&&e(i,"bumpMap",b.mapBump,b.mapBumpRepeat,b.mapBumpOffset,b.mapBumpWrap,b.mapBumpAnisotropy),b.mapNormal&&c&&e(i,"normalMap",b.mapNormal,b.mapNormalRepeat,b.mapNormalOffset,b.mapNormalWrap,b.mapNormalAnisotropy),b.mapSpecular&&c&&e(i,"specularMap",b.mapSpecular,b.mapSpecularRepeat,b.mapSpecularOffset,b.mapSpecularWrap,b.mapSpecularAnisotropy),b.mapAlpha&&c&&e(i,"alphaMap",b.mapAlpha,b.mapAlphaRepeat,b.mapAlphaOffset,b.mapAlphaWrap,b.mapAlphaAnisotropy),b.mapBumpScale&&(i.bumpScale=b.mapBumpScale),b.mapNormalFactor&&(i.normalScale=new a.Vector2(b.mapNormalFactor,b.mapNormalFactor));var k=new a[h](i);return void 0!==b.DbgName&&(k.name=b.DbgName),k}},a.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;c>b;b+=2){var d=this.handlers[b],e=this.handlers[b+1];if(d.test(a))return e}return null}},a.XHRLoader=function(b){this.cache=new a.Cache,this.manager=void 0!==b?b:a.DefaultLoadingManager},a.XHRLoader.prototype={constructor:a.XHRLoader,load:function(a,b,c,d){var e=this,f=e.cache.get(a);if(void 0!==f)return void(b&&b(f));var g=new XMLHttpRequest;g.open("GET",a,!0),g.addEventListener("load",function(){e.cache.add(a,this.response),b&&b(this.response),e.manager.itemEnd(a)},!1),void 0!==c&&g.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&g.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(g.responseType=this.responseType),g.send(null),e.manager.itemStart(a)},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a}},a.ImageLoader=function(b){this.cache=new a.Cache,this.manager=void 0!==b?b:a.DefaultLoadingManager},a.ImageLoader.prototype={constructor:a.ImageLoader,load:function(a,b,c,d){var e=this,f=e.cache.get(a);if(void 0!==f)return void b(f);var g=document.createElement("img");return void 0!==b&&g.addEventListener("load",function(){e.cache.add(a,this),b(this),e.manager.itemEnd(a)},!1),void 0!==c&&g.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&g.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),g.src=a,e.manager.itemStart(a),g},setCrossOrigin:function(a){this.crossOrigin=a}},a.JSONLoader=function(b){a.Loader.call(this,b),this.withCredentials=!1},a.JSONLoader.prototype=Object.create(a.Loader.prototype),a.JSONLoader.prototype.constructor=a.JSONLoader,a.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"==typeof c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c)},a.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);if(void 0!==h.metadata&&"scene"===h.metadata.type)return void console.error('THREE.JSONLoader: "'+b+'" seems to be a Scene. Use THREE.SceneLoader instead.');var i=a.parse(h,d);c(i.geometry,i.materials)}else console.error('THREE.JSONLoader: "'+b+'" seems to be unreachable or the file is empty.');a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+b+'" ('+f.status+")");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.withCredentials=this.withCredentials,f.send(null)},a.JSONLoader.prototype.parse=function(b,c){function d(c){function d(a,b){return a&1<<b}var e,f,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G=b.faces,H=b.vertices,I=b.normals,J=b.colors,K=0;if(void 0!==b.uvs){for(e=0;e<b.uvs.length;e++)b.uvs[e].length&&K++;for(e=0;K>e;e++)g.faceVertexUvs[e]=[]}for(i=0,j=H.length;j>i;)w=new a.Vector3,w.x=H[i++]*c,w.y=H[i++]*c,w.z=H[i++]*c,g.vertices.push(w);for(i=0,j=G.length;j>i;)if(o=G[i++],p=d(o,0),q=d(o,1),r=d(o,3),s=d(o,4),t=d(o,5),u=d(o,6),v=d(o,7),p){if(y=new a.Face3,y.a=G[i],y.b=G[i+1],y.c=G[i+3],z=new a.Face3,z.a=G[i+1],z.b=G[i+2],z.c=G[i+3],i+=4,q&&(n=G[i++],y.materialIndex=n,z.materialIndex=n),h=g.faces.length,r)for(e=0;K>e;e++)for(C=b.uvs[e],g.faceVertexUvs[e][h]=[],g.faceVertexUvs[e][h+1]=[],f=0;4>f;f++)m=G[i++],E=C[2*m],F=C[2*m+1],D=new a.Vector2(E,F),2!==f&&g.faceVertexUvs[e][h].push(D),0!==f&&g.faceVertexUvs[e][h+1].push(D);if(s&&(l=3*G[i++],y.normal.set(I[l++],I[l++],I[l]),z.normal.copy(y.normal)),t)for(e=0;4>e;e++)l=3*G[i++],B=new a.Vector3(I[l++],I[l++],I[l]),2!==e&&y.vertexNormals.push(B),0!==e&&z.vertexNormals.push(B);if(u&&(k=G[i++],A=J[k],y.color.setHex(A),z.color.setHex(A)),v)for(e=0;4>e;e++)k=G[i++],A=J[k],2!==e&&y.vertexColors.push(new a.Color(A)),0!==e&&z.vertexColors.push(new a.Color(A));g.faces.push(y),g.faces.push(z)}else{if(x=new a.Face3,x.a=G[i++],x.b=G[i++],x.c=G[i++],q&&(n=G[i++],x.materialIndex=n),h=g.faces.length,r)for(e=0;K>e;e++)for(C=b.uvs[e],g.faceVertexUvs[e][h]=[],f=0;3>f;f++)m=G[i++],E=C[2*m],F=C[2*m+1],D=new a.Vector2(E,F),g.faceVertexUvs[e][h].push(D);if(s&&(l=3*G[i++],x.normal.set(I[l++],I[l++],I[l])),t)for(e=0;3>e;e++)l=3*G[i++],B=new a.Vector3(I[l++],I[l++],I[l]),x.vertexNormals.push(B);if(u&&(k=G[i++],x.color.setHex(J[k])),v)for(e=0;3>e;e++)k=G[i++],x.vertexColors.push(new a.Color(J[k]));g.faces.push(x)}}function e(){var c=void 0!==b.influencesPerVertex?b.influencesPerVertex:2;if(b.skinWeights)for(var d=0,e=b.skinWeights.length;e>d;d+=c){var f=b.skinWeights[d],h=c>1?b.skinWeights[d+1]:0,i=c>2?b.skinWeights[d+2]:0,j=c>3?b.skinWeights[d+3]:0;g.skinWeights.push(new a.Vector4(f,h,i,j))}if(b.skinIndices)for(var d=0,e=b.skinIndices.length;e>d;d+=c){var k=b.skinIndices[d],l=c>1?b.skinIndices[d+1]:0,m=c>2?b.skinIndices[d+2]:0,n=c>3?b.skinIndices[d+3]:0;g.skinIndices.push(new a.Vector4(k,l,m,n))}g.bones=b.bones,g.bones&&g.bones.length>0&&(g.skinWeights.length!==g.skinIndices.length||g.skinIndices.length!==g.vertices.length)&&console.warn("When skinning, number of vertices ("+g.vertices.length+"), skinIndices ("+g.skinIndices.length+"), and skinWeights ("+g.skinWeights.length+") should match."),g.animation=b.animation,g.animations=b.animations}function f(c){if(void 0!==b.morphTargets){var d,e,f,h,i,j;for(d=0,e=b.morphTargets.length;e>d;d++)for(g.morphTargets[d]={},g.morphTargets[d].name=b.morphTargets[d].name,g.morphTargets[d].vertices=[],i=g.morphTargets[d].vertices,j=b.morphTargets[d].vertices,f=0,h=j.length;h>f;f+=3){var k=new a.Vector3;k.x=j[f]*c,k.y=j[f+1]*c,k.z=j[f+2]*c,i.push(k)}}if(void 0!==b.morphColors){var d,e,l,m,n,o,p;for(d=0,e=b.morphColors.length;e>d;d++)for(g.morphColors[d]={},g.morphColors[d].name=b.morphColors[d].name,g.morphColors[d].colors=[],n=g.morphColors[d].colors,o=b.morphColors[d].colors,l=0,m=o.length;m>l;l+=3)p=new a.Color(16755200),p.setRGB(o[l],o[l+1],o[l+2]),n.push(p)}}var g=new a.Geometry,h=void 0!==b.scale?1/b.scale:1;if(d(h),e(),f(h),g.computeFaceNormals(),g.computeBoundingSphere(),void 0===b.materials||0===b.materials.length)return{geometry:g};var i=this.initMaterials(b.materials,c);return this.needsTangents(i)&&g.computeTangents(),{geometry:g,materials:i}},a.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(){f++},this.itemEnd=function(a){e++,void 0!==d.onProgress&&d.onProgress(a,e,f),e===f&&void 0!==d.onLoad&&d.onLoad()}},a.DefaultLoadingManager=new a.LoadingManager,a.BufferGeometryLoader=function(b){this.manager=void 0!==b?b:a.DefaultLoadingManager},a.BufferGeometryLoader.prototype={constructor:a.BufferGeometryLoader,load:function(b,c,d,e){var f=this,g=new a.XHRLoader(f.manager);g.setCrossOrigin(this.crossOrigin),g.load(b,function(a){c(f.parse(JSON.parse(a)))},d,e)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(b){var c=new a.BufferGeometry,d=b.attributes;for(var e in d){var f=d[e],g=new self[f.type](f.array);c.addAttribute(e,new a.BufferAttribute(g,f.itemSize))}var h=b.offsets;void 0!==h&&(c.offsets=JSON.parse(JSON.stringify(h)));var i=b.boundingSphere;if(void 0!==i){var j=new a.Vector3;void 0!==i.center&&j.fromArray(i.center),c.boundingSphere=new a.Sphere(j,i.radius)}return c}},a.MaterialLoader=function(b){this.manager=void 0!==b?b:a.DefaultLoadingManager},a.MaterialLoader.prototype={constructor:a.MaterialLoader,load:function(b,c,d,e){var f=this,g=new a.XHRLoader(f.manager);g.setCrossOrigin(this.crossOrigin),g.load(b,function(a){c(f.parse(JSON.parse(a)))},d,e)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(b){var c=new a[b.type];if(void 0!==b.color&&c.color.setHex(b.color),void 0!==b.ambient&&c.ambient.setHex(b.ambient),void 0!==b.emissive&&c.emissive.setHex(b.emissive),void 0!==b.specular&&c.specular.setHex(b.specular),void 0!==b.shininess&&(c.shininess=b.shininess),void 0!==b.uniforms&&(c.uniforms=b.uniforms),void 0!==b.vertexShader&&(c.vertexShader=b.vertexShader),void 0!==b.fragmentShader&&(c.fragmentShader=b.fragmentShader),void 0!==b.vertexColors&&(c.vertexColors=b.vertexColors),void 0!==b.shading&&(c.shading=b.shading),void 0!==b.blending&&(c.blending=b.blending),void 0!==b.side&&(c.side=b.side),void 0!==b.opacity&&(c.opacity=b.opacity),void 0!==b.transparent&&(c.transparent=b.transparent),void 0!==b.wireframe&&(c.wireframe=b.wireframe),void 0!==b.materials)for(var d=0,e=b.materials.length;e>d;d++)c.materials.push(this.parse(b.materials[d]));
return c}},a.ObjectLoader=function(b){this.manager=void 0!==b?b:a.DefaultLoadingManager},a.ObjectLoader.prototype={constructor:a.ObjectLoader,load:function(b,c,d,e){var f=this,g=new a.XHRLoader(f.manager);g.setCrossOrigin(this.crossOrigin),g.load(b,function(a){c(f.parse(JSON.parse(a)))},d,e)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=this.parseGeometries(a.geometries),c=this.parseMaterials(a.materials),d=this.parseObject(a.object,b,c);return d},parseGeometries:function(b){var c={};if(void 0!==b)for(var d=new a.JSONLoader,e=new a.BufferGeometryLoader,f=0,g=b.length;g>f;f++){var h,i=b[f];switch(i.type){case"PlaneGeometry":h=new a.PlaneGeometry(i.width,i.height,i.widthSegments,i.heightSegments);break;case"BoxGeometry":case"CubeGeometry":h=new a.BoxGeometry(i.width,i.height,i.depth,i.widthSegments,i.heightSegments,i.depthSegments);break;case"CircleGeometry":h=new a.CircleGeometry(i.radius,i.segments);break;case"CylinderGeometry":h=new a.CylinderGeometry(i.radiusTop,i.radiusBottom,i.height,i.radialSegments,i.heightSegments,i.openEnded);break;case"SphereGeometry":h=new a.SphereGeometry(i.radius,i.widthSegments,i.heightSegments,i.phiStart,i.phiLength,i.thetaStart,i.thetaLength);break;case"IcosahedronGeometry":h=new a.IcosahedronGeometry(i.radius,i.detail);break;case"TorusGeometry":h=new a.TorusGeometry(i.radius,i.tube,i.radialSegments,i.tubularSegments,i.arc);break;case"TorusKnotGeometry":h=new a.TorusKnotGeometry(i.radius,i.tube,i.radialSegments,i.tubularSegments,i.p,i.q,i.heightScale);break;case"BufferGeometry":h=e.parse(i.data);break;case"Geometry":h=d.parse(i.data).geometry}h.uuid=i.uuid,void 0!==i.name&&(h.name=i.name),c[i.uuid]=h}return c},parseMaterials:function(b){var c={};if(void 0!==b)for(var d=new a.MaterialLoader,e=0,f=b.length;f>e;e++){var g=b[e],h=d.parse(g);h.uuid=g.uuid,void 0!==g.name&&(h.name=g.name),c[g.uuid]=h}return c},parseObject:function(){var b=new a.Matrix4;return function(c,d,e){var f;switch(c.type){case"Scene":f=new a.Scene;break;case"PerspectiveCamera":f=new a.PerspectiveCamera(c.fov,c.aspect,c.near,c.far);break;case"OrthographicCamera":f=new a.OrthographicCamera(c.left,c.right,c.top,c.bottom,c.near,c.far);break;case"AmbientLight":f=new a.AmbientLight(c.color);break;case"DirectionalLight":f=new a.DirectionalLight(c.color,c.intensity);break;case"PointLight":f=new a.PointLight(c.color,c.intensity,c.distance);break;case"SpotLight":f=new a.SpotLight(c.color,c.intensity,c.distance,c.angle,c.exponent);break;case"HemisphereLight":f=new a.HemisphereLight(c.color,c.groundColor,c.intensity);break;case"Mesh":var g=d[c.geometry],h=e[c.material];void 0===g&&console.warn("THREE.ObjectLoader: Undefined geometry",c.geometry),void 0===h&&console.warn("THREE.ObjectLoader: Undefined material",c.material),f=new a.Mesh(g,h);break;case"Line":var g=d[c.geometry],h=e[c.material];void 0===g&&console.warn("THREE.ObjectLoader: Undefined geometry",c.geometry),void 0===h&&console.warn("THREE.ObjectLoader: Undefined material",c.material),f=new a.Line(g,h);break;case"Sprite":var h=e[c.material];void 0===h&&console.warn("THREE.ObjectLoader: Undefined material",c.material),f=new a.Sprite(h);break;case"Group":f=new a.Group;break;default:f=new a.Object3D}if(f.uuid=c.uuid,void 0!==c.name&&(f.name=c.name),void 0!==c.matrix?(b.fromArray(c.matrix),b.decompose(f.position,f.quaternion,f.scale)):(void 0!==c.position&&f.position.fromArray(c.position),void 0!==c.rotation&&f.rotation.fromArray(c.rotation),void 0!==c.scale&&f.scale.fromArray(c.scale)),void 0!==c.visible&&(f.visible=c.visible),void 0!==c.userData&&(f.userData=c.userData),void 0!==c.children)for(var i in c.children)f.add(this.parseObject(c.children[i],d,e));return f}}()},a.TextureLoader=function(b){this.manager=void 0!==b?b:a.DefaultLoadingManager},a.TextureLoader.prototype={constructor:a.TextureLoader,load:function(b,c,d,e){var f=this,g=new a.ImageLoader(f.manager);g.setCrossOrigin(this.crossOrigin),g.load(b,function(b){var d=new a.Texture(b);d.needsUpdate=!0,void 0!==c&&c(d)},d,e)},setCrossOrigin:function(a){this.crossOrigin=a}},a.DataTextureLoader=a.BinaryTextureLoader=function(){this._parser=null},a.BinaryTextureLoader.prototype={constructor:a.BinaryTextureLoader,load:function(b,c,d,e){var f=this,g=new a.DataTexture,h=new a.XHRLoader;return h.setResponseType("arraybuffer"),h.load(b,function(b){var d=f._parser(b);d&&(void 0!==d.image?g.image=d.image:void 0!==d.data&&(g.image.width=d.width,g.image.height=d.height,g.image.data=d.data),g.wrapS=void 0!==d.wrapS?d.wrapS:a.ClampToEdgeWrapping,g.wrapT=void 0!==d.wrapT?d.wrapT:a.ClampToEdgeWrapping,g.magFilter=void 0!==d.magFilter?d.magFilter:a.LinearFilter,g.minFilter=void 0!==d.minFilter?d.minFilter:a.LinearMipMapLinearFilter,g.anisotropy=void 0!==d.anisotropy?d.anisotropy:1,void 0!==d.format&&(g.format=d.format),void 0!==d.type&&(g.type=d.type),void 0!==d.mipmaps&&(g.mipmaps=d.mipmaps),1===d.mipmapCount&&(g.minFilter=a.LinearFilter),g.needsUpdate=!0,c&&c(g,d))},d,e),g}},a.CompressedTextureLoader=function(){this._parser=null},a.CompressedTextureLoader.prototype={constructor:a.CompressedTextureLoader,load:function(b,c){var d=this,e=[],f=new a.CompressedTexture;f.image=e;var g=new a.XHRLoader;if(g.setResponseType("arraybuffer"),b instanceof Array)for(var h=0,i=function(i){g.load(b[i],function(b){var g=d._parser(b,!0);e[i]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,6===h&&(1==g.mipmapCount&&(f.minFilter=a.LinearFilter),f.format=g.format,f.needsUpdate=!0,c&&c(f))})},j=0,k=b.length;k>j;++j)i(j);else g.load(b,function(b){var g=d._parser(b,!0);if(g.isCubemap)for(var h=g.mipmaps.length/g.mipmapCount,i=0;h>i;i++){e[i]={mipmaps:[]};for(var j=0;j<g.mipmapCount;j++)e[i].mipmaps.push(g.mipmaps[i*g.mipmapCount+j]),e[i].format=g.format,e[i].width=g.width,e[i].height=g.height}else f.image.width=g.width,f.image.height=g.height,f.mipmaps=g.mipmaps;1===g.mipmapCount&&(f.minFilter=a.LinearFilter),f.format=g.format,f.needsUpdate=!0,c&&c(f)});return f}},a.Material=function(){Object.defineProperty(this,"id",{value:a.MaterialIdCount++}),this.uuid=a.Math.generateUUID(),this.name="",this.type="Material",this.side=a.FrontSide,this.opacity=1,this.transparent=!1,this.blending=a.NormalBlending,this.blendSrc=a.SrcAlphaFactor,this.blendDst=a.OneMinusSrcAlphaFactor,this.blendEquation=a.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.hdrOutputEnabled=void 0,this.hdrOutputType=void 0,this.hdrInputEnabled=void 0,this.needsUpdate=!0},a.Material.prototype={constructor:a.Material,setValues:function(b){if(void 0!==b)for(var c in b){var d=b[c];if(void 0!==d){if(c in this){var e=this[c];e instanceof a.Color?e.set(d):e instanceof a.Vector3&&d instanceof a.Vector3?e.copy(d):this[c]="overdraw"==c?Number(d):d}}else console.warn("THREE.Material: '"+c+"' parameter is undefined.")}},toJSON:function(){var b={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};return""!==this.name&&(b.name=this.name),this instanceof a.MeshBasicMaterial?(b.color=this.color.getHex(),this.vertexColors!==a.NoColors&&(b.vertexColors=this.vertexColors),this.blending!==a.NormalBlending&&(b.blending=this.blending),this.side!==a.FrontSide&&(b.side=this.side)):this instanceof a.MeshLambertMaterial?(b.color=this.color.getHex(),b.ambient=this.ambient.getHex(),b.emissive=this.emissive.getHex(),this.vertexColors!==a.NoColors&&(b.vertexColors=this.vertexColors),this.blending!==a.NormalBlending&&(b.blending=this.blending),this.side!==a.FrontSide&&(b.side=this.side)):this instanceof a.MeshPhongMaterial?(b.color=this.color.getHex(),b.ambient=this.ambient.getHex(),b.emissive=this.emissive.getHex(),b.specular=this.specular.getHex(),b.shininess=this.shininess,this.vertexColors!==a.NoColors&&(b.vertexColors=this.vertexColors),this.blending!==a.NormalBlending&&(b.blending=this.blending),this.side!==a.FrontSide&&(b.side=this.side)):this instanceof a.MeshNormalMaterial?(this.shading!==a.FlatShading&&(b.shading=this.shading),this.blending!==a.NormalBlending&&(b.blending=this.blending),this.side!==a.FrontSide&&(b.side=this.side)):this instanceof a.MeshDepthMaterial?(this.blending!==a.NormalBlending&&(b.blending=this.blending),this.side!==a.FrontSide&&(b.side=this.side)):this instanceof a.ShaderMaterial?(b.uniforms=this.uniforms,b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader):this instanceof a.SpriteMaterial&&(b.color=this.color.getHex()),this.opacity<1&&(b.opacity=this.opacity),this.transparent!==!1&&(b.transparent=this.transparent),this.wireframe!==!1&&(b.wireframe=this.wireframe),b},clone:function(b){return void 0===b&&(b=new a.Material),b.name=this.name,b.side=this.side,b.opacity=this.opacity,b.transparent=this.transparent,b.blending=this.blending,b.blendSrc=this.blendSrc,b.blendDst=this.blendDst,b.blendEquation=this.blendEquation,b.depthTest=this.depthTest,b.depthWrite=this.depthWrite,b.polygonOffset=this.polygonOffset,b.polygonOffsetFactor=this.polygonOffsetFactor,b.polygonOffsetUnits=this.polygonOffsetUnits,b.alphaTest=this.alphaTest,b.overdraw=this.overdraw,b.visible=this.visible,b},dispose:function(){this.dispatchEvent({type:"dispose"})}},a.EventDispatcher.prototype.apply(a.Material.prototype),a.MaterialIdCount=0,a.LineBasicMaterial=function(b){a.Material.call(this),this.type="LineBasicMaterial",this.color=new a.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=a.NoColors,this.skinning=!1,this.fog=!0,this.setValues(b)},a.LineBasicMaterial.prototype=Object.create(a.Material.prototype),a.LineBasicMaterial.prototype.constructor=a.LineBasicMaterial,a.LineBasicMaterial.prototype.clone=function(){var b=new a.LineBasicMaterial;return a.Material.prototype.clone.call(this,b),b.color.copy(this.color),b.linewidth=this.linewidth,b.linecap=this.linecap,b.linejoin=this.linejoin,b.vertexColors=this.vertexColors,b.skinning=this.skinning,b.fog=this.fog,b},a.LineDashedMaterial=function(b){a.Material.call(this),this.type="LineDashedMaterial",this.color=new a.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(b)},a.LineDashedMaterial.prototype=Object.create(a.Material.prototype),a.LineDashedMaterial.prototype.constructor=a.LineDashedMaterial,a.LineDashedMaterial.prototype.clone=function(){var b=new a.LineDashedMaterial;return a.Material.prototype.clone.call(this,b),b.color.copy(this.color),b.linewidth=this.linewidth,b.scale=this.scale,b.dashSize=this.dashSize,b.gapSize=this.gapSize,b.vertexColors=this.vertexColors,b.fog=this.fog,b},a.MeshBasicMaterial=function(b){a.Material.call(this),this.type="MeshBasicMaterial",this.color=new a.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=a.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=a.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=a.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(b)},a.MeshBasicMaterial.prototype=Object.create(a.Material.prototype),a.MeshBasicMaterial.prototype.constructor=a.MeshBasicMaterial,a.MeshBasicMaterial.prototype.clone=function(){var b=new a.MeshBasicMaterial;return a.Material.prototype.clone.call(this,b),b.color.copy(this.color),b.map=this.map,b.lightMap=this.lightMap,b.specularMap=this.specularMap,b.alphaMap=this.alphaMap,b.envMap=this.envMap,b.combine=this.combine,b.reflectivity=this.reflectivity,b.refractionRatio=this.refractionRatio,b.fog=this.fog,b.shading=this.shading,b.wireframe=this.wireframe,b.wireframeLinewidth=this.wireframeLinewidth,b.wireframeLinecap=this.wireframeLinecap,b.wireframeLinejoin=this.wireframeLinejoin,b.vertexColors=this.vertexColors,b.skinning=this.skinning,b.morphTargets=this.morphTargets,b},a.MeshLambertMaterial=function(b){a.Material.call(this),this.type="MeshLambertMaterial",this.color=new a.Color(16777215),this.ambient=new a.Color(16777215),this.emissive=new a.Color(0),this.wrapAround=!1,this.wrapRGB=new a.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=a.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=a.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=a.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(b)},a.MeshLambertMaterial.prototype=Object.create(a.Material.prototype),a.MeshLambertMaterial.prototype.constructor=a.MeshLambertMaterial,a.MeshLambertMaterial.prototype.clone=function(){var b=new a.MeshLambertMaterial;return a.Material.prototype.clone.call(this,b),b.color.copy(this.color),b.ambient.copy(this.ambient),b.emissive.copy(this.emissive),b.wrapAround=this.wrapAround,b.wrapRGB.copy(this.wrapRGB),b.map=this.map,b.lightMap=this.lightMap,b.specularMap=this.specularMap,b.alphaMap=this.alphaMap,b.envMap=this.envMap,b.combine=this.combine,b.reflectivity=this.reflectivity,b.refractionRatio=this.refractionRatio,b.fog=this.fog,b.shading=this.shading,b.wireframe=this.wireframe,b.wireframeLinewidth=this.wireframeLinewidth,b.wireframeLinecap=this.wireframeLinecap,b.wireframeLinejoin=this.wireframeLinejoin,b.vertexColors=this.vertexColors,b.skinning=this.skinning,b.morphTargets=this.morphTargets,b.morphNormals=this.morphNormals,b},a.MeshPhongMaterial=function(b){a.Material.call(this),this.type="MeshPhongMaterial",this.color=new a.Color(16777215),this.ambient=new a.Color(16777215),this.emissive=new a.Color(0),this.specular=new a.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new a.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new a.Vector2(1,1),this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=a.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=a.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=a.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(b)},a.MeshPhongMaterial.prototype=Object.create(a.Material.prototype),a.MeshPhongMaterial.prototype.constructor=a.MeshPhongMaterial,a.MeshPhongMaterial.prototype.clone=function(){var b=new a.MeshPhongMaterial;return a.Material.prototype.clone.call(this,b),b.color.copy(this.color),b.ambient.copy(this.ambient),b.emissive.copy(this.emissive),b.specular.copy(this.specular),b.shininess=this.shininess,b.metal=this.metal,b.wrapAround=this.wrapAround,b.wrapRGB.copy(this.wrapRGB),b.map=this.map,b.lightMap=this.lightMap,b.bumpMap=this.bumpMap,b.bumpScale=this.bumpScale,b.normalMap=this.normalMap,b.normalScale.copy(this.normalScale),b.specularMap=this.specularMap,b.alphaMap=this.alphaMap,b.envMap=this.envMap,b.combine=this.combine,b.reflectivity=this.reflectivity,b.refractionRatio=this.refractionRatio,b.fog=this.fog,b.shading=this.shading,b.wireframe=this.wireframe,b.wireframeLinewidth=this.wireframeLinewidth,b.wireframeLinecap=this.wireframeLinecap,b.wireframeLinejoin=this.wireframeLinejoin,b.vertexColors=this.vertexColors,b.skinning=this.skinning,b.morphTargets=this.morphTargets,b.morphNormals=this.morphNormals,b},a.MeshDepthMaterial=function(b){a.Material.call(this),this.type="MeshDepthMaterial",this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(b)},a.MeshDepthMaterial.prototype=Object.create(a.Material.prototype),a.MeshDepthMaterial.prototype.constructor=a.MeshDepthMaterial,a.MeshDepthMaterial.prototype.clone=function(){var b=new a.MeshDepthMaterial;return a.Material.prototype.clone.call(this,b),b.wireframe=this.wireframe,b.wireframeLinewidth=this.wireframeLinewidth,b},a.MeshNormalMaterial=function(b){a.Material.call(this,b),this.type="MeshNormalMaterial",this.shading=a.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(b)},a.MeshNormalMaterial.prototype=Object.create(a.Material.prototype),a.MeshNormalMaterial.prototype.constructor=a.MeshNormalMaterial,a.MeshNormalMaterial.prototype.clone=function(){var b=new a.MeshNormalMaterial;return a.Material.prototype.clone.call(this,b),b.shading=this.shading,b.wireframe=this.wireframe,b.wireframeLinewidth=this.wireframeLinewidth,b},a.MeshFaceMaterial=function(b){this.uuid=a.Math.generateUUID(),this.type="MeshFaceMaterial",this.materials=b instanceof Array?b:[]},a.MeshFaceMaterial.prototype={constructor:a.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;c>b;b++)a.materials.push(this.materials[b].toJSON());return a},clone:function(){for(var b=new a.MeshFaceMaterial,c=0;c<this.materials.length;c++)b.materials.push(this.materials[c].clone());return b}},a.PointCloudMaterial=function(b){a.Material.call(this),this.type="PointCloudMaterial",this.color=new a.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=a.NoColors,this.fog=!0,this.setValues(b)},a.PointCloudMaterial.prototype=Object.create(a.Material.prototype),a.PointCloudMaterial.prototype.constructor=a.PointCloudMaterial,a.PointCloudMaterial.prototype.clone=function(){var b=new a.PointCloudMaterial;return a.Material.prototype.clone.call(this,b),b.color.copy(this.color),b.map=this.map,b.size=this.size,b.sizeAttenuation=this.sizeAttenuation,b.vertexColors=this.vertexColors,b.fog=this.fog,b},a.ParticleBasicMaterial=function(b){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new a.PointCloudMaterial(b)},a.ParticleSystemMaterial=function(b){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new a.PointCloudMaterial(b)},a.ShaderMaterial=function(b){a.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=a.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=a.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(b)},a.ShaderMaterial.prototype=Object.create(a.Material.prototype),a.ShaderMaterial.prototype.constructor=a.ShaderMaterial,a.ShaderMaterial.prototype.clone=function(){var b=new a.ShaderMaterial;return a.Material.prototype.clone.call(this,b),b.fragmentShader=this.fragmentShader,b.vertexShader=this.vertexShader,b.uniforms=a.UniformsUtils.clone(this.uniforms),b.attributes=this.attributes,b.defines=this.defines,b.shading=this.shading,b.wireframe=this.wireframe,b.wireframeLinewidth=this.wireframeLinewidth,b.fog=this.fog,b.lights=this.lights,b.vertexColors=this.vertexColors,b.skinning=this.skinning,b.morphTargets=this.morphTargets,b.morphNormals=this.morphNormals,b},a.RawShaderMaterial=function(b){a.ShaderMaterial.call(this,b),this.type="RawShaderMaterial"},a.RawShaderMaterial.prototype=Object.create(a.ShaderMaterial.prototype),a.RawShaderMaterial.prototype.constructor=a.RawShaderMaterial,a.RawShaderMaterial.prototype.clone=function(){var b=new a.RawShaderMaterial;return a.ShaderMaterial.prototype.clone.call(this,b),b},a.SpriteMaterial=function(b){a.Material.call(this),this.type="SpriteMaterial",this.color=new a.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(b)},a.SpriteMaterial.prototype=Object.create(a.Material.prototype),a.SpriteMaterial.prototype.constructor=a.SpriteMaterial,a.SpriteMaterial.prototype.clone=function(){var b=new a.SpriteMaterial;return a.Material.prototype.clone.call(this,b),b.color.copy(this.color),b.map=this.map,b.rotation=this.rotation,b.fog=this.fog,b},a.Texture=function(b,c,d,e,f,g,h,i,j){Object.defineProperty(this,"id",{value:a.TextureIdCount++}),this.uuid=a.Math.generateUUID(),this.name="",this.image=void 0!==b?b:a.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==c?c:a.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==d?d:a.ClampToEdgeWrapping,this.wrapT=void 0!==e?e:a.ClampToEdgeWrapping,this.magFilter=void 0!==f?f:a.LinearFilter,this.minFilter=void 0!==g?g:a.LinearMipMapLinearFilter,this.anisotropy=void 0!==j?j:1,this.format=void 0!==h?h:a.RGBAFormat,this.type=void 0!==i?i:a.UnsignedByteType,this.offset=new a.Vector2(0,0),this.repeat=new a.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},a.Texture.DEFAULT_IMAGE=void 0,a.Texture.DEFAULT_MAPPING=a.UVMapping,a.Texture.prototype={constructor:a.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){a===!0&&this.update(),this._needsUpdate=a},clone:function(b){return void 0===b&&(b=new a.Texture),b.image=this.image,b.mipmaps=this.mipmaps.slice(0),b.mapping=this.mapping,b.wrapS=this.wrapS,b.wrapT=this.wrapT,b.magFilter=this.magFilter,b.minFilter=this.minFilter,b.anisotropy=this.anisotropy,b.format=this.format,b.type=this.type,b.offset.copy(this.offset),b.repeat.copy(this.repeat),b.generateMipmaps=this.generateMipmaps,b.premultiplyAlpha=this.premultiplyAlpha,b.flipY=this.flipY,b.unpackAlignment=this.unpackAlignment,b},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},a.EventDispatcher.prototype.apply(a.Texture.prototype),a.TextureIdCount=0,a.CubeTexture=function(b,c,d,e,f,g,h,i,j){c=void 0!==c?c:a.CubeReflectionMapping,a.Texture.call(this,b,c,d,e,f,g,h,i,j),this.images=b},a.CubeTexture.prototype=Object.create(a.Texture.prototype),a.CubeTexture.prototype.constructor=a.CubeTexture,a.CubeTexture.clone=function(b){return void 0===b&&(b=new a.CubeTexture),a.Texture.prototype.clone.call(this,b),b.images=this.images,b},a.CompressedTexture=function(b,c,d,e,f,g,h,i,j,k,l){a.Texture.call(this,null,g,h,i,j,k,e,f,l),this.image={width:c,height:d},this.mipmaps=b,this.flipY=!1,this.generateMipmaps=!1},a.CompressedTexture.prototype=Object.create(a.Texture.prototype),a.CompressedTexture.prototype.constructor=a.CompressedTexture,a.CompressedTexture.prototype.clone=function(){var b=new a.CompressedTexture;return a.Texture.prototype.clone.call(this,b),b},a.DataTexture=function(b,c,d,e,f,g,h,i,j,k,l){a.Texture.call(this,null,g,h,i,j,k,e,f,l),this.image={data:b,width:c,height:d}},a.DataTexture.prototype=Object.create(a.Texture.prototype),a.DataTexture.prototype.constructor=a.DataTexture,a.DataTexture.prototype.clone=function(){var b=new a.DataTexture;return a.Texture.prototype.clone.call(this,b),b},a.VideoTexture=function(b,c,d,e,f,g,h,i,j){a.Texture.call(this,b,c,d,e,f,g,h,i,j),this.generateMipmaps=!1;var k=this,l=function(){requestAnimationFrame(l),b.readyState===b.HAVE_ENOUGH_DATA&&(k.needsUpdate=!0)};l()},a.VideoTexture.prototype=Object.create(a.Texture.prototype),a.VideoTexture.prototype.constructor=a.VideoTexture,a.Group=function(){a.Object3D.call(this),this.type="Group"},a.Group.prototype=Object.create(a.Object3D.prototype),a.Group.prototype.constructor=a.Group,a.PointCloud=function(b,c){a.Object3D.call(this),this.type="PointCloud",this.geometry=void 0!==b?b:new a.Geometry,this.material=void 0!==c?c:new a.PointCloudMaterial({color:16777215*Math.random()})},a.PointCloud.prototype=Object.create(a.Object3D.prototype),a.PointCloud.prototype.constructor=a.PointCloud,a.PointCloud.prototype.raycast=function(){var b=new a.Matrix4,c=new a.Ray;return function(d,e){var f=this,g=f.geometry,h=d.params.PointCloud.threshold;if(b.getInverse(this.matrixWorld),c.copy(d.ray).applyMatrix4(b),null===g.boundingBox||c.isIntersectionBox(g.boundingBox)!==!1){var i=h/((this.scale.x+this.scale.y+this.scale.z)/3),j=new a.Vector3,k=function(a,b){var g=c.distanceToPoint(a);if(i>g){var h=c.closestPointToPoint(a);h.applyMatrix4(f.matrixWorld);var j=d.ray.origin.distanceTo(h);e.push({distance:j,distanceToRay:g,point:h.clone(),index:b,face:null,object:f})}};if(g instanceof a.BufferGeometry){var l=g.attributes,m=l.position.array;if(void 0!==l.index){var n=l.index.array,o=g.offsets;if(0===o.length){var p={start:0,count:n.length,index:0};o=[p]}for(var q=0,r=o.length;r>q;++q)for(var s=o[q].start,t=o[q].count,u=o[q].index,v=s,w=s+t;w>v;v++){var x=u+n[v];j.fromArray(m,3*x),k(j,x)}}else for(var y=m.length/3,v=0;y>v;v++)j.set(m[3*v],m[3*v+1],m[3*v+2]),k(j,v)}else for(var z=this.geometry.vertices,v=0;v<z.length;v++)k(z[v],v)}}}(),a.PointCloud.prototype.clone=function(b){return void 0===b&&(b=new a.PointCloud(this.geometry,this.material)),a.Object3D.prototype.clone.call(this,b),b},a.ParticleSystem=function(b,c){return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new a.PointCloud(b,c)},a.Line=function(b,c,d){a.Object3D.call(this),this.type="Line",this.geometry=void 0!==b?b:new a.Geometry,this.material=void 0!==c?c:new a.LineBasicMaterial({color:16777215*Math.random()}),this.mode=void 0!==d?d:a.LineStrip},a.LineStrip=0,a.LinePieces=1,a.Line.prototype=Object.create(a.Object3D.prototype),a.Line.prototype.constructor=a.Line,a.Line.prototype.raycast=function(){var b=new a.Matrix4,c=new a.Ray,d=new a.Sphere;return function(e,f){var g=e.linePrecision,h=g*g,i=this.geometry;if(null===i.boundingSphere&&i.computeBoundingSphere(),d.copy(i.boundingSphere),d.applyMatrix4(this.matrixWorld),e.ray.isIntersectionSphere(d)!==!1){b.getInverse(this.matrixWorld),c.copy(e.ray).applyMatrix4(b);var j=new a.Vector3,k=new a.Vector3,l=new a.Vector3,m=new a.Vector3,n=this.mode===a.LineStrip?1:2;if(i instanceof a.BufferGeometry){var o=i.attributes;if(void 0!==o.index){var p=o.index.array,q=o.position.array,r=i.offsets;0===r.length&&(r=[{start:0,count:p.length,index:0}]);for(var s=0;s<r.length;s++)for(var t=r[s].start,u=r[s].count,v=r[s].index,w=t;t+u-1>w;w+=n){var x=v+p[w],y=v+p[w+1];j.fromArray(q,3*x),k.fromArray(q,3*y);var z=c.distanceSqToSegment(j,k,m,l);if(!(z>h)){var A=c.origin.distanceTo(m);A<e.near||A>e.far||f.push({distance:A,point:l.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}else for(var q=o.position.array,w=0;w<q.length/3-1;w+=n){j.fromArray(q,3*w),k.fromArray(q,3*w+3);var z=c.distanceSqToSegment(j,k,m,l);if(!(z>h)){var A=c.origin.distanceTo(m);A<e.near||A>e.far||f.push({distance:A,point:l.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}else if(i instanceof a.Geometry)for(var B=i.vertices,C=B.length,w=0;C-1>w;w+=n){var z=c.distanceSqToSegment(B[w],B[w+1],m,l);if(!(z>h)){var A=c.origin.distanceTo(m);A<e.near||A>e.far||f.push({distance:A,point:l.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}}}(),a.Line.prototype.clone=function(b){return void 0===b&&(b=new a.Line(this.geometry,this.material,this.mode)),a.Object3D.prototype.clone.call(this,b),b},a.Mesh=function(b,c){a.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==b?b:new a.Geometry,this.material=void 0!==c?c:new a.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},a.Mesh.prototype=Object.create(a.Object3D.prototype),a.Mesh.prototype.constructor=a.Mesh,a.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;b>a;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},a.Mesh.prototype.getMorphTargetIndexByName=function(a){return void 0!==this.morphTargetDictionary[a]?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},a.Mesh.prototype.raycast=function(){var b=new a.Matrix4,c=new a.Ray,d=new a.Sphere,e=new a.Vector3,f=new a.Vector3,g=new a.Vector3;return function(h,i){var j=this.geometry;if(null===j.boundingSphere&&j.computeBoundingSphere(),d.copy(j.boundingSphere),d.applyMatrix4(this.matrixWorld),h.ray.isIntersectionSphere(d)!==!1&&(b.getInverse(this.matrixWorld),c.copy(h.ray).applyMatrix4(b),null===j.boundingBox||c.isIntersectionBox(j.boundingBox)!==!1))if(j instanceof a.BufferGeometry){var k=this.material;if(void 0===k)return;var l,m,n,o=j.attributes,p=h.precision;if(void 0!==o.index){var q=o.index.array,r=o.position.array,s=j.offsets;0===s.length&&(s=[{start:0,count:q.length,index:0}]);for(var t=0,u=s.length;u>t;++t)for(var v=s[t].start,w=s[t].count,x=s[t].index,y=v,z=v+w;z>y;y+=3){if(l=x+q[y],m=x+q[y+1],n=x+q[y+2],e.fromArray(r,3*l),f.fromArray(r,3*m),g.fromArray(r,3*n),k.side===a.BackSide)var A=c.intersectTriangle(g,f,e,!0);else var A=c.intersectTriangle(e,f,g,k.side!==a.DoubleSide);if(null!==A){A.applyMatrix4(this.matrixWorld);var B=h.ray.origin.distanceTo(A);p>B||B<h.near||B>h.far||i.push({distance:B,point:A,face:new a.Face3(l,m,n,a.Triangle.normal(e,f,g)),faceIndex:null,object:this})}}}else for(var r=o.position.array,y=0,C=0,z=r.length;z>y;y+=3,C+=9){if(l=y,m=y+1,n=y+2,e.fromArray(r,C),f.fromArray(r,C+3),g.fromArray(r,C+6),k.side===a.BackSide)var A=c.intersectTriangle(g,f,e,!0);else var A=c.intersectTriangle(e,f,g,k.side!==a.DoubleSide);if(null!==A){A.applyMatrix4(this.matrixWorld);var B=h.ray.origin.distanceTo(A);p>B||B<h.near||B>h.far||i.push({distance:B,point:A,face:new a.Face3(l,m,n,a.Triangle.normal(e,f,g)),faceIndex:null,object:this})}}}else if(j instanceof a.Geometry)for(var l,m,n,D=this.material instanceof a.MeshFaceMaterial,E=D===!0?this.material.materials:null,p=h.precision,F=j.vertices,G=0,H=j.faces.length;H>G;G++){var I=j.faces[G],k=D===!0?E[I.materialIndex]:this.material;if(void 0!==k){if(l=F[I.a],m=F[I.b],n=F[I.c],k.morphTargets===!0){var J=j.morphTargets,K=this.morphTargetInfluences;e.set(0,0,0),f.set(0,0,0),g.set(0,0,0);for(var L=0,M=J.length;M>L;L++){var N=K[L];if(0!==N){var O=J[L].vertices;e.x+=(O[I.a].x-l.x)*N,e.y+=(O[I.a].y-l.y)*N,e.z+=(O[I.a].z-l.z)*N,f.x+=(O[I.b].x-m.x)*N,f.y+=(O[I.b].y-m.y)*N,f.z+=(O[I.b].z-m.z)*N,g.x+=(O[I.c].x-n.x)*N,g.y+=(O[I.c].y-n.y)*N,g.z+=(O[I.c].z-n.z)*N}}e.add(l),f.add(m),g.add(n),l=e,m=f,n=g}if(k.side===a.BackSide)var A=c.intersectTriangle(n,m,l,!0);else var A=c.intersectTriangle(l,m,n,k.side!==a.DoubleSide);if(null!==A){A.applyMatrix4(this.matrixWorld);var B=h.ray.origin.distanceTo(A);p>B||B<h.near||B>h.far||i.push({distance:B,point:A,face:I,faceIndex:G,object:this})}}}}}(),a.Mesh.prototype.clone=function(b,c){return void 0===b&&(b=new a.Mesh(this.geometry,this.material)),a.Object3D.prototype.clone.call(this,b,c),b},a.Bone=function(b){a.Object3D.call(this),this.skin=b},a.Bone.prototype=Object.create(a.Object3D.prototype),a.Bone.prototype.constructor=a.Bone,a.Skeleton=function(b,c,d){if(this.useVertexTexture=void 0!==d?d:!0,this.identityMatrix=new a.Matrix4,b=b||[],this.bones=b.slice(0),this.useVertexTexture){var e;e=this.bones.length>256?64:this.bones.length>64?32:this.bones.length>16?16:8,this.boneTextureWidth=e,this.boneTextureHeight=e,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new a.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,a.RGBAFormat,a.FloatType),this.boneTexture.minFilter=a.NearestFilter,this.boneTexture.magFilter=a.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===c)this.calculateInverses();else if(this.bones.length===c.length)this.boneInverses=c.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];
for(var f=0,g=this.bones.length;g>f;f++)this.boneInverses.push(new a.Matrix4)}},a.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var b=0,c=this.bones.length;c>b;b++){var d=new a.Matrix4;this.bones[b]&&d.getInverse(this.bones[b].matrixWorld),this.boneInverses.push(d)}},a.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;c>b;b++)a=this.bones[b],a&&a.matrixWorld.getInverse(this.boneInverses[b]);for(var b=0,c=this.bones.length;c>b;b++)a=this.bones[b],a&&(a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))},a.Skeleton.prototype.update=function(){var b=new a.Matrix4;return function(){for(var a=0,c=this.bones.length;c>a;a++){var d=this.bones[a]?this.bones[a].matrixWorld:this.identityMatrix;b.multiplyMatrices(d,this.boneInverses[a]),b.flattenToArrayOffset(this.boneMatrices,16*a)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),a.SkinnedMesh=function(b,c,d){a.Mesh.call(this,b,c),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new a.Matrix4,this.bindMatrixInverse=new a.Matrix4;var e=[];if(this.geometry&&void 0!==this.geometry.bones){for(var f,g,h,i,j,k=0,l=this.geometry.bones.length;l>k;++k)g=this.geometry.bones[k],h=g.pos,i=g.rotq,j=g.scl,f=new a.Bone(this),e.push(f),f.name=g.name,f.position.set(h[0],h[1],h[2]),f.quaternion.set(i[0],i[1],i[2],i[3]),void 0!==j?f.scale.set(j[0],j[1],j[2]):f.scale.set(1,1,1);for(var k=0,l=this.geometry.bones.length;l>k;++k)g=this.geometry.bones[k],-1!==g.parent?e[g.parent].add(e[k]):this.add(e[k])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new a.Skeleton(e,void 0,d))},a.SkinnedMesh.prototype=Object.create(a.Mesh.prototype),a.SkinnedMesh.prototype.constructor=a.SkinnedMesh,a.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a,void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld),this.bindMatrix.copy(b),this.bindMatrixInverse.getInverse(b)},a.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},a.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof a.Geometry)for(var b=0;b<this.geometry.skinIndices.length;b++){var c=this.geometry.skinWeights[b],d=1/c.lengthManhattan();1/0!==d?c.multiplyScalar(d):c.set(1)}},a.SkinnedMesh.prototype.updateMatrixWorld=function(){a.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},a.SkinnedMesh.prototype.clone=function(b){return void 0===b&&(b=new a.SkinnedMesh(this.geometry,this.material,this.skeleton.useVertexTexture)),a.Mesh.prototype.clone.call(this,b),b},a.MorphAnimMesh=function(b,c){a.Mesh.call(this,b,c),this.type="MorphAnimMesh",this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},a.MorphAnimMesh.prototype=Object.create(a.Mesh.prototype),a.MorphAnimMesh.prototype.constructor=a.MorphAnimMesh,a.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a,this.endKeyframe=b,this.length=this.endKeyframe-this.startKeyframe+1},a.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},a.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},a.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)_?(\d+)/,e=0,f=a.morphTargets.length;f>e;e++){var g=a.morphTargets[e],h=g.name.match(d);if(h&&h.length>1){{var i=h[1];h[2]}c[i]||(c[i]={start:1/0,end:-1/0});var j=c[i];e<j.start&&(j.start=e),e>j.end&&(j.end=e),b||(b=i)}}a.firstAnimation=b},a.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},a.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1e3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")},a.MorphAnimMesh.prototype.updateAnimation=function(b){var c=this.duration/this.length;this.time+=this.direction*b,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var d=this.startKeyframe+a.Math.clamp(Math.floor(this.time/c),0,this.length-1);d!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);var e=this.time%c/c;this.directionBackwards&&(e=1-e),this.morphTargetInfluences[this.currentKeyframe]=e,this.morphTargetInfluences[this.lastKeyframe]=1-e},a.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;f>e;e++)d[e]=0;a>-1&&(d[a]=1-c),b>-1&&(d[b]=c)},a.MorphAnimMesh.prototype.clone=function(b){return void 0===b&&(b=new a.MorphAnimMesh(this.geometry,this.material)),b.duration=this.duration,b.mirroredLoop=this.mirroredLoop,b.time=this.time,b.lastKeyframe=this.lastKeyframe,b.currentKeyframe=this.currentKeyframe,b.direction=this.direction,b.directionBackwards=this.directionBackwards,a.Mesh.prototype.clone.call(this,b),b},a.LOD=function(){a.Object3D.call(this),this.objects=[]},a.LOD.prototype=Object.create(a.Object3D.prototype),a.LOD.prototype.constructor=a.LOD,a.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0),b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a}),this.add(a)},a.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;c>b&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object},a.LOD.prototype.raycast=function(){var b=new a.Vector3;return function(a,c){b.setFromMatrixPosition(this.matrixWorld);var d=a.ray.origin.distanceTo(b);this.getObjectForDistance(d).raycast(a,c)}}(),a.LOD.prototype.update=function(){var b=new a.Vector3,c=new a.Vector3;return function(a){if(this.objects.length>1){b.setFromMatrixPosition(a.matrixWorld),c.setFromMatrixPosition(this.matrixWorld);var d=b.distanceTo(c);this.objects[0].object.visible=!0;for(var e=1,f=this.objects.length;f>e&&d>=this.objects[e].distance;e++)this.objects[e-1].object.visible=!1,this.objects[e].object.visible=!0;for(;f>e;e++)this.objects[e].object.visible=!1}}}(),a.LOD.prototype.clone=function(b){void 0===b&&(b=new a.LOD),a.Object3D.prototype.clone.call(this,b);for(var c=0,d=this.objects.length;d>c;c++){var e=this.objects[c].object.clone();e.visible=0===c,b.addLevel(e,this.objects[c].distance)}return b},a.Sprite=function(){var b=new Uint16Array([0,1,2,0,2,3]),c=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),d=new Float32Array([0,0,1,0,1,1,0,1]),e=new a.BufferGeometry;return e.addAttribute("index",new a.BufferAttribute(b,1)),e.addAttribute("position",new a.BufferAttribute(c,3)),e.addAttribute("uv",new a.BufferAttribute(d,2)),function(b){a.Object3D.call(this),this.type="Sprite",this.geometry=e,this.material=void 0!==b?b:new a.SpriteMaterial}}(),a.Sprite.prototype=Object.create(a.Object3D.prototype),a.Sprite.prototype.constructor=a.Sprite,a.Sprite.prototype.raycast=function(){var b=new a.Vector3;return function(a,c){b.setFromMatrixPosition(this.matrixWorld);var d=a.ray.distanceToPoint(b);d>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}(),a.Sprite.prototype.clone=function(b){return void 0===b&&(b=new a.Sprite(this.material)),a.Object3D.prototype.clone.call(this,b),b},a.Particle=a.Sprite,a.LensFlare=function(b,c,d,e,f){a.Object3D.call(this),this.lensFlares=[],this.positionScreen=new a.Vector3,this.customUpdateCallback=void 0,void 0!==b&&this.add(b,c,d,e,f)},a.LensFlare.prototype=Object.create(a.Object3D.prototype),a.LensFlare.prototype.constructor=a.LensFlare,a.LensFlare.prototype.add=function(b,c,d,e,f,g){void 0===c&&(c=-1),void 0===d&&(d=0),void 0===g&&(g=1),void 0===f&&(f=new a.Color(16777215)),void 0===e&&(e=a.NormalBlending),d=Math.min(d,Math.max(0,d)),this.lensFlares.push({texture:b,size:c,distance:d,x:0,y:0,z:0,scale:1,rotation:1,opacity:g,color:f,blending:e})},a.LensFlare.prototype.updateLensFlares=function(){var a,b,c=this.lensFlares.length,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;c>a;a++)b=this.lensFlares[a],b.x=this.positionScreen.x+d*b.distance,b.y=this.positionScreen.y+e*b.distance,b.wantedRotation=b.x*Math.PI*.25,b.rotation+=.25*(b.wantedRotation-b.rotation)},a.Scene=function(){a.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},a.Scene.prototype=Object.create(a.Object3D.prototype),a.Scene.prototype.constructor=a.Scene,a.Scene.prototype.clone=function(b){return void 0===b&&(b=new a.Scene),a.Object3D.prototype.clone.call(this,b),null!==this.fog&&(b.fog=this.fog.clone()),null!==this.overrideMaterial&&(b.overrideMaterial=this.overrideMaterial.clone()),b.autoUpdate=this.autoUpdate,b.matrixAutoUpdate=this.matrixAutoUpdate,b},a.Fog=function(b,c,d){this.name="",this.color=new a.Color(b),this.near=void 0!==c?c:1,this.far=void 0!==d?d:1e3},a.Fog.prototype.clone=function(){return new a.Fog(this.color.getHex(),this.near,this.far)},a.FogExp2=function(b,c){this.name="",this.color=new a.Color(b),this.density=void 0!==c?c:25e-5},a.FogExp2.prototype.clone=function(){return new a.FogExp2(this.color.getHex(),this.density)},a.ShaderChunk={},a.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",a.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",a.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",a.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n	vec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",a.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",a.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n",a.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",a.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif",a.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",a.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",a.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif",a.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n",a.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",a.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",a.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n",a.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif",a.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n    // #if defined( USE_LOGDEPTHBUF )\n    //   vShadowCoord[ i ].z = log2(max(1e-6, vShadowCoord[ i ].w + 1.0)) * logDepthBufFC;\n    //   #ifdef USE_LOGDEPTHBUF_EXT\n    //     // vFragDepth = 1.0 + vShadowCoord[ i ].w;\n    //   #else\n    //     vShadowCoord[ i ].z = (vShadowCoord[ i ].z - 1.0);\n    //   #endif\n    // #endif\n\n	}\n\n#endif",a.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif",a.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif",a.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif",a.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",a.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",a.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif",a.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",a.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n",a.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",a.ShaderChunk.hdr_encode_pars_fragment="#ifdef HDR_OUTPUT_LOGLUV\n  // logLuvMatrix matrix, for encoding\n  const mat3 logLuvMatrix = mat3(\n      0.2209, 0.3390, 0.4184,\n      0.1138, 0.6780, 0.7319,\n      0.0102, 0.1130, 0.2969);\n\n  vec4 HDREncode(in vec3 vRGB) \n  {\n    // Based on http://www.xnainfo.com/content.php?content=28\n    vec4 vResult; \n    vec3 Xp_Y_XYZp = logLuvMatrix * vRGB.xyz;\n    Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n    vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n    float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n    vResult.w = fract(Le);\n    vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n    return vResult;\n  }\n\n#elif defined( HDR_OUTPUT_RGBM )\n\n  vec4 HDREncode( in vec3 color ) {\n    vec4 rgbm;\n    color *= 1.0 / 9.0;\n    rgbm.a = clamp( max( max( color.r, color.g ), max( color.b, 1e-6 ) ) , 0.0, 1.0 );\n    rgbm.a = ceil( rgbm.a * 255.0 ) / 255.0;\n    rgbm.rgb = color.rgb / rgbm.a;\n    return rgbm;\n  }\n\n#elif defined( HDR_OUTPUT_RGBD )\n\n  vec4 HDREncode( in vec3 color ) {\n    //Based on http://vemberaudio.se/graphics/RGBdiv8.pdf\n    float maxRGB = max( max(1.0, color.r), max( color.g, color.b )); \n    return vec4(color.rgb, 1.0) / maxRGB;\n  }\n\n#elif defined( HDR_OUTPUT_RGBE )\n  vec4 HDREncode( in vec3 color ) {\n\n    //Based on http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c\n    float maxComp = max( max( color.r, color.g ), color.b );\n    float exponent = ceil( log2( maxComp ) );\n    float value = exp2( exponent );\n    vec3 mantissa = clamp( color / value, 0.0, 1.0 );\n    return vec4( mantissa, ( exponent + 128.0 ) / 255.0 );\n  }\n\n#endif\n",a.ShaderChunk.hdr_decode_pars_fragment="#if defined( HDR_INPUT )\n\n  // Inverse logLuvMatrix matrix, for decoding\n  const mat3 InverseLogLuvMatrix = mat3(\n    6.0014, -2.7008, -1.7996,\n  -1.3320,  3.1029, -5.7721,\n  0.3008, -1.0882,  5.6268);\n\n  vec3 HDRDecodeLOGLUV(in vec4 vLogLuv)\n  {\n    // Based on http://www.xnainfo.com/content.php?content=28\n    float Le = vLogLuv.z * 255.0 + vLogLuv.w;\n    vec3 Xp_Y_XYZp;\n    Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n    Xp_Y_XYZp.z = Xp_Y_XYZp.y / vLogLuv.y;\n    Xp_Y_XYZp.x = vLogLuv.x * Xp_Y_XYZp.z;\n    vec3 vRGB = InverseLogLuvMatrix * Xp_Y_XYZp;\n    return vRGB;\n  }\n\n  vec3 HDRDecodeRGBM( vec4 rgbm ) {\n    //Based on http://vemberaudio.se/graphics/RGBdiv8.pdf\n    return 9.0 * rgbm.rgb * rgbm.a;\n  }\n\n  vec3 HDRDecodeRGBD( vec4 rgbd ) {\n    //Based on http://vemberaudio.se/graphics/RGBdiv8.pdf\n    return rgbd.rgb / max(rgbd.a, 0.003);\n  }\n\n  vec3 HDRDecodeRGBE( vec4 rgbe ) {\n    //Based on http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c\n    float f = exp2( rgbe.w * 255.0 - (128.0 + 0.0) );\n    return rgbe.rgb * f;\n  }\n#endif\n",a.ShaderChunk.hdr_encode_fragment="#if defined( HDR_OUTPUT_LOGLUV ) || defined( HDR_OUTPUT_RGBM ) || defined( HDR_OUTPUT_RGBD ) || defined( HDR_OUTPUT_RGBE )\n  gl_FragColor = HDREncode( gl_FragColor.xyz );\n#endif\n",a.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",a.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n",a.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",a.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = clamp( flipNormal * reflectVec.y * 0.5 + 0.5, 0.0, 1.0);\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * 0.15915494309189533576888376337251 + 0.5; // reciprocal( 2 PI ) + 0.5\n		vec4 envColor = texture2D( envMap, sampleUV );\n		\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	#if defined( HDR_INPUT ) && defined( ENVMAP_HDR_INPUT )\n		#if ENVMAP_HDR_INPUT == HDR_TYPE_RGBM\n			envColor.xyz = HDRDecodeRGBM( envColor );\n		#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBD\n			envColor.xyz = HDRDecodeRGBD( envColor );\n		#elif ENVMAP_HDR_INPUT == HDR_TYPE_LOGLUV\n			envColor.xyz = HDRDecodeLOGLUV( envColor );\n		#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBE\n			envColor.xyz = HDRDecodeRGBE( envColor );\n		#endif\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		envColor.xyz *= envColor.xyz;\n\n	#endif\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		gl_FragColor.xyz += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n",a.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",a.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",a.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",a.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",a.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",a.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif",a.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n	vec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n	vec3 objectNormal = morphedNormal;\n\n#else\n\n	vec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",a.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",a.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",a.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",a.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n  vec4 lightMapColor = texture2D( lightMap, vUv2 );\n  #ifdef LIGHTMAP_HDR_INPUT\n    #if LIGHTMAP_HDR_INPUT == HDR_TYPE_RGBM\n      lightMapColor.xyz = HDRDecodeRGBM( lightMapColor );\n    #elif LIGHTMAP_HDR_INPUT == HDR_TYPE_RGBD\n      lightMapColor.xyz = HDRDecodeRGBD( lightMapColor );\n    #elif LIGHTMAP_HDR_INPUT == HDR_TYPE_LOGLUV\n      lightMapColor.xyz = HDRDecodeLOGLUV( lightMapColor );\n    #elif LIGHTMAP_HDR_INPUT == HDR_TYPE_RGBE\n      lightMapColor.xyz = HDRDecodeRGBE( lightMapColor );\n    #endif\n  #endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * lightMapColor.xyz;\n\n#endif",a.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",a.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",a.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif",a.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n",a.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",a.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#elif defined( USE_MORPHTARGETS )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif\n",a.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif",a.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",a.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif",a.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",a.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",a.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]);
for(var e in d)b[e]=d[e]}return b},clone:function(b){var c={};for(var d in b){c[d]={};for(var e in b[d]){var f=b[d][e];c[d][e]=f instanceof a.Color||f instanceof a.Vector2||f instanceof a.Vector3||f instanceof a.Vector4||f instanceof a.Matrix4||f instanceof a.Texture?f.clone():f instanceof Array?f.slice():f}}return c}},a.UniformsLib={common:{diffuse:{type:"c",value:new a.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new a.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new a.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new a.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new a.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new a.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}},tonemap:{middleGrey:{type:"f",value:.6},maxLuminance:{type:"f",value:16},avgLuminance:{type:"f",value:2},luminanceMap:{type:"t",value:null}}},a.ShaderLib={basic:{uniforms:a.UniformsUtils.merge([a.UniformsLib.common,a.UniformsLib.fog,a.UniformsLib.shadowmap]),vertexShader:[a.ShaderChunk.map_pars_vertex,a.ShaderChunk.lightmap_pars_vertex,a.ShaderChunk.envmap_pars_vertex,a.ShaderChunk.color_pars_vertex,a.ShaderChunk.morphtarget_pars_vertex,a.ShaderChunk.skinning_pars_vertex,a.ShaderChunk.shadowmap_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",a.ShaderChunk.map_vertex,a.ShaderChunk.lightmap_vertex,a.ShaderChunk.color_vertex,a.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",a.ShaderChunk.morphnormal_vertex,a.ShaderChunk.skinnormal_vertex,a.ShaderChunk.defaultnormal_vertex,"	#endif",a.ShaderChunk.morphtarget_vertex,a.ShaderChunk.skinning_vertex,a.ShaderChunk.default_vertex,a.ShaderChunk.logdepthbuf_vertex,a.ShaderChunk.worldpos_vertex,a.ShaderChunk.envmap_vertex,a.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",a.ShaderChunk.color_pars_fragment,a.ShaderChunk.map_pars_fragment,a.ShaderChunk.alphamap_pars_fragment,a.ShaderChunk.lightmap_pars_fragment,a.ShaderChunk.envmap_pars_fragment,a.ShaderChunk.fog_pars_fragment,a.ShaderChunk.shadowmap_pars_fragment,a.ShaderChunk.specularmap_pars_fragment,a.ShaderChunk.logdepthbuf_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,a.ShaderChunk.hdr_decode_pars_fragment,"void main() {","	gl_FragColor = vec4( diffuse, opacity );",a.ShaderChunk.logdepthbuf_fragment,a.ShaderChunk.map_fragment,a.ShaderChunk.alphamap_fragment,a.ShaderChunk.alphatest_fragment,a.ShaderChunk.specularmap_fragment,a.ShaderChunk.lightmap_fragment,a.ShaderChunk.color_fragment,a.ShaderChunk.envmap_fragment,a.ShaderChunk.shadowmap_fragment,a.ShaderChunk.linear_to_gamma_fragment,a.ShaderChunk.fog_fragment,a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},lambert:{uniforms:a.UniformsUtils.merge([a.UniformsLib.common,a.UniformsLib.fog,a.UniformsLib.lights,a.UniformsLib.shadowmap,{ambient:{type:"c",value:new a.Color(16777215)},emissive:{type:"c",value:new a.Color(0)},wrapRGB:{type:"v3",value:new a.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",a.ShaderChunk.map_pars_vertex,a.ShaderChunk.lightmap_pars_vertex,a.ShaderChunk.envmap_pars_vertex,a.ShaderChunk.lights_lambert_pars_vertex,a.ShaderChunk.color_pars_vertex,a.ShaderChunk.morphtarget_pars_vertex,a.ShaderChunk.skinning_pars_vertex,a.ShaderChunk.shadowmap_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",a.ShaderChunk.map_vertex,a.ShaderChunk.lightmap_vertex,a.ShaderChunk.color_vertex,a.ShaderChunk.morphnormal_vertex,a.ShaderChunk.skinbase_vertex,a.ShaderChunk.skinnormal_vertex,a.ShaderChunk.defaultnormal_vertex,a.ShaderChunk.morphtarget_vertex,a.ShaderChunk.skinning_vertex,a.ShaderChunk.default_vertex,a.ShaderChunk.logdepthbuf_vertex,a.ShaderChunk.worldpos_vertex,a.ShaderChunk.envmap_vertex,a.ShaderChunk.lights_lambert_vertex,a.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",a.ShaderChunk.color_pars_fragment,a.ShaderChunk.map_pars_fragment,a.ShaderChunk.alphamap_pars_fragment,a.ShaderChunk.lightmap_pars_fragment,a.ShaderChunk.envmap_pars_fragment,a.ShaderChunk.fog_pars_fragment,a.ShaderChunk.shadowmap_pars_fragment,a.ShaderChunk.specularmap_pars_fragment,a.ShaderChunk.logdepthbuf_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,a.ShaderChunk.hdr_decode_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",a.ShaderChunk.logdepthbuf_fragment,a.ShaderChunk.map_fragment,a.ShaderChunk.alphamap_fragment,a.ShaderChunk.alphatest_fragment,a.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			gl_FragColor.xyz *= vLightFront;","		else","			gl_FragColor.xyz *= vLightBack;","	#else","		gl_FragColor.xyz *= vLightFront;","	#endif",a.ShaderChunk.lightmap_fragment,a.ShaderChunk.color_fragment,a.ShaderChunk.envmap_fragment,a.ShaderChunk.shadowmap_fragment,a.ShaderChunk.linear_to_gamma_fragment,a.ShaderChunk.fog_fragment,a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},phong:{uniforms:a.UniformsUtils.merge([a.UniformsLib.common,a.UniformsLib.bump,a.UniformsLib.normalmap,a.UniformsLib.fog,a.UniformsLib.lights,a.UniformsLib.shadowmap,{ambient:{type:"c",value:new a.Color(16777215)},emissive:{type:"c",value:new a.Color(0)},specular:{type:"c",value:new a.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new a.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",a.ShaderChunk.map_pars_vertex,a.ShaderChunk.lightmap_pars_vertex,a.ShaderChunk.envmap_pars_vertex,a.ShaderChunk.lights_phong_pars_vertex,a.ShaderChunk.color_pars_vertex,a.ShaderChunk.morphtarget_pars_vertex,a.ShaderChunk.skinning_pars_vertex,a.ShaderChunk.shadowmap_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",a.ShaderChunk.map_vertex,a.ShaderChunk.lightmap_vertex,a.ShaderChunk.color_vertex,a.ShaderChunk.morphnormal_vertex,a.ShaderChunk.skinbase_vertex,a.ShaderChunk.skinnormal_vertex,a.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",a.ShaderChunk.morphtarget_vertex,a.ShaderChunk.skinning_vertex,a.ShaderChunk.default_vertex,a.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",a.ShaderChunk.worldpos_vertex,a.ShaderChunk.envmap_vertex,a.ShaderChunk.lights_phong_vertex,a.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",a.ShaderChunk.color_pars_fragment,a.ShaderChunk.map_pars_fragment,a.ShaderChunk.alphamap_pars_fragment,a.ShaderChunk.lightmap_pars_fragment,a.ShaderChunk.envmap_pars_fragment,a.ShaderChunk.fog_pars_fragment,a.ShaderChunk.lights_phong_pars_fragment,a.ShaderChunk.shadowmap_pars_fragment,a.ShaderChunk.bumpmap_pars_fragment,a.ShaderChunk.normalmap_pars_fragment,a.ShaderChunk.specularmap_pars_fragment,a.ShaderChunk.logdepthbuf_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,a.ShaderChunk.hdr_decode_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",a.ShaderChunk.logdepthbuf_fragment,a.ShaderChunk.map_fragment,a.ShaderChunk.alphamap_fragment,a.ShaderChunk.alphatest_fragment,a.ShaderChunk.specularmap_fragment,a.ShaderChunk.lights_phong_fragment,a.ShaderChunk.lightmap_fragment,a.ShaderChunk.color_fragment,a.ShaderChunk.envmap_fragment,a.ShaderChunk.shadowmap_fragment,a.ShaderChunk.linear_to_gamma_fragment,a.ShaderChunk.fog_fragment,a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},particle_basic:{uniforms:a.UniformsUtils.merge([a.UniformsLib.particle,a.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",a.ShaderChunk.color_pars_vertex,a.ShaderChunk.shadowmap_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",a.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",a.ShaderChunk.logdepthbuf_vertex,a.ShaderChunk.worldpos_vertex,a.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",a.ShaderChunk.color_pars_fragment,a.ShaderChunk.map_particle_pars_fragment,a.ShaderChunk.fog_pars_fragment,a.ShaderChunk.shadowmap_pars_fragment,a.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( psColor, opacity );",a.ShaderChunk.logdepthbuf_fragment,a.ShaderChunk.map_particle_fragment,a.ShaderChunk.alphatest_fragment,a.ShaderChunk.color_fragment,a.ShaderChunk.shadowmap_fragment,a.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:a.UniformsUtils.merge([a.UniformsLib.common,a.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",a.ShaderChunk.color_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",a.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",a.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",a.ShaderChunk.color_pars_fragment,a.ShaderChunk.fog_pars_fragment,a.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	gl_FragColor = vec4( diffuse, opacity );",a.ShaderChunk.logdepthbuf_fragment,a.ShaderChunk.color_fragment,a.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[a.ShaderChunk.morphtarget_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",a.ShaderChunk.morphtarget_vertex,a.ShaderChunk.default_vertex,a.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",a.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",a.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",a.ShaderChunk.morphtarget_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",a.ShaderChunk.morphtarget_vertex,a.ShaderChunk.default_vertex,a.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",a.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",a.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	vWorldPosition = worldPosition.xyz;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",a.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",a.ShaderChunk.logdepthbuf_pars_fragment,a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",a.ShaderChunk.logdepthbuf_fragment,"#if defined( HDR_INPUT ) && defined( ENVMAP_HDR_INPUT )","#if ENVMAP_HDR_INPUT == HDR_TYPE_RGBM","gl_FragColor = vec4( HDRDecodeRGBM( gl_FragColor ), 1.0 );","#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBD","gl_FragColor = vec4( HDRDecodeRGBD( gl_FragColor ), 1.0 );","#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBE","gl_FragColor = vec4( HDRDecodeRGBE( gl_FragColor ), 1.0 );","#elif ENVMAP_HDR_INPUT == HDR_TYPE_LOGLUV","gl_FragColor = vec4( HDRDecodeLOGLUV( gl_FragColor ), 1.0 );","#endif","#endif","#if defined( GAMMA_INPUT ) && !defined( GAMMA_OUTPUT )","gl_FragColor.xyz *= gl_FragColor.xyz;","#elif !defined( GAMMA_INPUT ) && defined( GAMMA_OUTPUT )","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif",a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	vWorldPosition = worldPosition.xyz;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",a.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",a.ShaderChunk.logdepthbuf_pars_fragment,a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = clamp( tFlip * direction.y * -0.5 + 0.5, 0.0, 1.0);","sampleUV.x = atan( direction.z, direction.x ) * 0.15915494309189533576888376337251 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",a.ShaderChunk.logdepthbuf_fragment,"#if defined( HDR_INPUT ) && defined( ENVMAP_HDR_INPUT )","#if ENVMAP_HDR_INPUT == HDR_TYPE_RGBM","gl_FragColor = vec4( HDRDecodeRGBM( gl_FragColor ), 1.0 );","#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBD","gl_FragColor = vec4( HDRDecodeRGBD( gl_FragColor ), 1.0 );","#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBE","gl_FragColor = vec4( HDRDecodeRGBE( gl_FragColor ), 1.0 );","#elif ENVMAP_HDR_INPUT == HDR_TYPE_LOGLUV","gl_FragColor = vec4( HDRDecodeLOGLUV( gl_FragColor ), 1.0 );","#endif","#endif","#if defined( GAMMA_INPUT ) && !defined( GAMMA_OUTPUT )","gl_FragColor.xyz *= gl_FragColor.xyz;","#elif !defined( GAMMA_INPUT ) && defined( GAMMA_OUTPUT )","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif",a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[a.ShaderChunk.morphtarget_pars_vertex,a.ShaderChunk.skinning_pars_vertex,a.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",a.ShaderChunk.skinbase_vertex,a.ShaderChunk.morphtarget_vertex,a.ShaderChunk.skinning_vertex,a.ShaderChunk.default_vertex,a.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[a.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",a.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")}},a.WebGLRenderer=function(b){function c(a){a.__webglVertexBuffer=Lb.createBuffer(),a.__webglColorBuffer=Lb.createBuffer(),Mb.info.memory.geometries++}function d(a){a.__webglVertexBuffer=Lb.createBuffer(),a.__webglColorBuffer=Lb.createBuffer(),a.__webglLineDistanceBuffer=Lb.createBuffer(),Mb.info.memory.geometries++}function e(a){a.__webglVertexBuffer=Lb.createBuffer(),a.__webglNormalBuffer=Lb.createBuffer(),a.__webglTangentBuffer=Lb.createBuffer(),a.__webglColorBuffer=Lb.createBuffer(),a.__webglUVBuffer=Lb.createBuffer(),a.__webglUV2Buffer=Lb.createBuffer(),a.__webglSkinIndicesBuffer=Lb.createBuffer(),a.__webglSkinWeightsBuffer=Lb.createBuffer(),a.__webglFaceBuffer=Lb.createBuffer(),a.__webglLineBuffer=Lb.createBuffer();var b=a.numMorphTargets;if(b){a.__webglMorphTargetsBuffers=[];for(var c=0,d=b;d>c;c++)a.__webglMorphTargetsBuffers.push(Lb.createBuffer())}var e=a.numMorphNormals;if(e){a.__webglMorphNormalsBuffers=[];for(var c=0,d=e;d>c;c++)a.__webglMorphNormalsBuffers.push(Lb.createBuffer())}Mb.info.memory.geometries++}function f(a){var b=a.geometry,c=a.material,d=b.vertices.length;if(c.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var e in c.attributes){var f=c.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(d*g),f.buffer=Lb.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}b.__webglCustomAttributesList.push(f)}}}function g(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__sortArray=[],a.__webglParticleCount=c,f(b)}function h(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__lineDistanceArray=new Float32Array(1*c),a.__webglLineCount=c,f(b)}function i(a,b){var c=b.geometry,d=a.faces3,e=3*d.length,f=1*d.length,g=3*d.length,h=j(b,a);a.__vertexArray=new Float32Array(3*e),a.__normalArray=new Float32Array(3*e),a.__colorArray=new Float32Array(3*e),a.__uvArray=new Float32Array(2*e),c.faceVertexUvs.length>1&&(a.__uv2Array=new Float32Array(2*e)),c.hasTangents&&(a.__tangentArray=new Float32Array(4*e)),b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*e),a.__skinWeightArray=new Float32Array(4*e));var i=null!==uc.get("OES_element_index_uint")&&f>21845?Uint32Array:Uint16Array;a.__typeArray=i,a.__faceArray=new i(3*f),a.__lineArray=new i(2*g);var k=a.numMorphTargets;if(k){a.__morphTargetsArrays=[];for(var l=0,m=k;m>l;l++)a.__morphTargetsArrays.push(new Float32Array(3*e))}var n=a.numMorphNormals;if(n){a.__morphNormalsArrays=[];for(var l=0,m=n;m>l;l++)a.__morphNormalsArrays.push(new Float32Array(3*e))}if(a.__webglFaceCount=3*f,a.__webglLineCount=2*g,h.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var o in h.attributes){var p=h.attributes[o],q={};for(var r in p)q[r]=p[r];if(!q.__webglInitialized||q.createUniqueBuffers){q.__webglInitialized=!0;var s=1;"v2"===q.type?s=2:"v3"===q.type?s=3:"v4"===q.type?s=4:"c"===q.type&&(s=3),q.size=s,q.array=new Float32Array(e*s),q.buffer=Lb.createBuffer(),q.buffer.belongsToAttribute=o,p.needsUpdate=!0,q.__original=p}a.__webglCustomAttributesList.push(q)}}a.__inittedArrays=!0}function j(b,c){return b.material instanceof a.MeshFaceMaterial?b.material.materials[c.materialIndex]:b.material}function k(b){return b&&void 0!==b.shading&&b.shading===a.SmoothShading}function l(a,b){var c,d,e,f,g,h,i,j,k,l,m,n=a.vertices,o=n.length,p=a.colors,q=p.length,r=a.__vertexArray,s=a.__colorArray,t=(a.__sortArray,a.verticesNeedUpdate),u=(a.elementsNeedUpdate,a.colorsNeedUpdate),v=a.__webglCustomAttributesList;if(t){for(c=0;o>c;c++)e=n[c],f=3*c,r[f]=e.x,r[f+1]=e.y,r[f+2]=e.z;Lb.bindBuffer(Lb.ARRAY_BUFFER,a.__webglVertexBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,r,b)}if(u){for(d=0;q>d;d++)g=p[d],f=3*d,s[f]=g.r,s[f+1]=g.g,s[f+2]=g.b;Lb.bindBuffer(Lb.ARRAY_BUFFER,a.__webglColorBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,s,b)}if(v)for(h=0,i=v.length;i>h;h++){if(m=v[h],m.needsUpdate&&(void 0===m.boundTo||"vertices"===m.boundTo))if(k=m.value.length,f=0,1===m.size)for(j=0;k>j;j++)m.array[j]=m.value[j];else if(2===m.size)for(j=0;k>j;j++)l=m.value[j],m.array[f]=l.x,m.array[f+1]=l.y,f+=2;else if(3===m.size)if("c"===m.type)for(j=0;k>j;j++)l=m.value[j],m.array[f]=l.r,m.array[f+1]=l.g,m.array[f+2]=l.b,f+=3;else for(j=0;k>j;j++)l=m.value[j],m.array[f]=l.x,m.array[f+1]=l.y,m.array[f+2]=l.z,f+=3;else if(4===m.size)for(j=0;k>j;j++)l=m.value[j],m.array[f]=l.x,m.array[f+1]=l.y,m.array[f+2]=l.z,m.array[f+3]=l.w,f+=4;Lb.bindBuffer(Lb.ARRAY_BUFFER,m.buffer),Lb.bufferData(Lb.ARRAY_BUFFER,m.array,b),m.needsUpdate=!1}}function m(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o=a.vertices,p=a.colors,q=a.lineDistances,r=o.length,s=p.length,t=q.length,u=a.__vertexArray,v=a.__colorArray,w=a.__lineDistanceArray,x=a.verticesNeedUpdate,y=a.colorsNeedUpdate,z=a.lineDistancesNeedUpdate,A=a.__webglCustomAttributesList;if(x){for(c=0;r>c;c++)f=o[c],g=3*c,u[g]=f.x,u[g+1]=f.y,u[g+2]=f.z;Lb.bindBuffer(Lb.ARRAY_BUFFER,a.__webglVertexBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,u,b)}if(y){for(d=0;s>d;d++)h=p[d],g=3*d,v[g]=h.r,v[g+1]=h.g,v[g+2]=h.b;Lb.bindBuffer(Lb.ARRAY_BUFFER,a.__webglColorBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,v,b)}if(z){for(e=0;t>e;e++)w[e]=q[e];Lb.bindBuffer(Lb.ARRAY_BUFFER,a.__webglLineDistanceBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,w,b)}if(A)for(i=0,j=A.length;j>i;i++)if(n=A[i],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo)){if(g=0,l=n.value.length,1===n.size)for(k=0;l>k;k++)n.array[k]=n.value[k];else if(2===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,g+=2;else if(3===n.size)if("c"===n.type)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.r,n.array[g+1]=m.g,n.array[g+2]=m.b,g+=3;else for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,g+=3;else if(4===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,n.array[g+3]=m.w,g+=4;Lb.bindBuffer(Lb.ARRAY_BUFFER,n.buffer),Lb.bufferData(Lb.ARRAY_BUFFER,n.array,b),n.needsUpdate=!1}}function n(b,c,d,e,f){if(b.__inittedArrays){var g,h,i,j,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X=k(f),Y=0,Z=0,$=0,_=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=b.__vertexArray,kb=b.__uvArray,lb=b.__uv2Array,mb=b.__normalArray,nb=b.__tangentArray,ob=b.__colorArray,pb=b.__skinIndexArray,qb=b.__skinWeightArray,rb=b.__morphTargetsArrays,sb=b.__morphNormalsArrays,tb=b.__webglCustomAttributesList,ub=b.__faceArray,vb=b.__lineArray,wb=c.geometry,xb=wb.verticesNeedUpdate,yb=wb.elementsNeedUpdate,zb=wb.uvsNeedUpdate,Ab=wb.normalsNeedUpdate,Bb=wb.tangentsNeedUpdate,Cb=wb.colorsNeedUpdate,Db=wb.morphTargetsNeedUpdate,Eb=wb.vertices,Fb=b.faces3,Gb=wb.faces,Hb=wb.faceVertexUvs[0],Ib=wb.faceVertexUvs[1],Jb=(wb.colors,wb.skinIndices),Kb=wb.skinWeights,Mb=wb.morphTargets,Nb=wb.morphNormals;if(xb){for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],s=Eb[j.a],t=Eb[j.b],u=Eb[j.c],jb[Z]=s.x,jb[Z+1]=s.y,jb[Z+2]=s.z,jb[Z+3]=t.x,jb[Z+4]=t.y,jb[Z+5]=t.z,jb[Z+6]=u.x,jb[Z+7]=u.y,jb[Z+8]=u.z,Z+=9;Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglVertexBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,jb,d)}if(Db)for(P=0,Q=Mb.length;Q>P;P++){for(gb=0,g=0,h=Fb.length;h>g;g++)T=Fb[g],j=Gb[T],s=Mb[P].vertices[j.a],t=Mb[P].vertices[j.b],u=Mb[P].vertices[j.c],R=rb[P],R[gb]=s.x,R[gb+1]=s.y,R[gb+2]=s.z,R[gb+3]=t.x,R[gb+4]=t.y,R[gb+5]=t.z,R[gb+6]=u.x,R[gb+7]=u.y,R[gb+8]=u.z,f.morphNormals&&(X?(U=Nb[P].vertexNormals[T],y=U.a,z=U.b,A=U.c):(y=Nb[P].faceNormals[T],z=y,A=y),S=sb[P],S[gb]=y.x,S[gb+1]=y.y,S[gb+2]=y.z,S[gb+3]=z.x,S[gb+4]=z.y,S[gb+5]=z.z,S[gb+6]=A.x,S[gb+7]=A.y,S[gb+8]=A.z),gb+=9;Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[P]),Lb.bufferData(Lb.ARRAY_BUFFER,rb[P],d),f.morphNormals&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[P]),Lb.bufferData(Lb.ARRAY_BUFFER,sb[P],d))}if(Kb.length){for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],E=Kb[j.a],F=Kb[j.b],G=Kb[j.c],qb[fb]=E.x,qb[fb+1]=E.y,qb[fb+2]=E.z,qb[fb+3]=E.w,qb[fb+4]=F.x,qb[fb+5]=F.y,qb[fb+6]=F.z,qb[fb+7]=F.w,qb[fb+8]=G.x,qb[fb+9]=G.y,qb[fb+10]=G.z,qb[fb+11]=G.w,H=Jb[j.a],I=Jb[j.b],J=Jb[j.c],pb[fb]=H.x,pb[fb+1]=H.y,pb[fb+2]=H.z,pb[fb+3]=H.w,pb[fb+4]=I.x,pb[fb+5]=I.y,pb[fb+6]=I.z,pb[fb+7]=I.w,pb[fb+8]=J.x,pb[fb+9]=J.y,pb[fb+10]=J.z,pb[fb+11]=J.w,fb+=12;fb>0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglSkinIndicesBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,pb,d),Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglSkinWeightsBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,qb,d))}if(Cb){for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],n=j.vertexColors,o=j.color,3===n.length&&f.vertexColors===a.VertexColors?(B=n[0],C=n[1],D=n[2]):(B=o,C=o,D=o),ob[eb]=B.r,ob[eb+1]=B.g,ob[eb+2]=B.b,ob[eb+3]=C.r,ob[eb+4]=C.g,ob[eb+5]=C.b,ob[eb+6]=D.r,ob[eb+7]=D.g,ob[eb+8]=D.b,eb+=9;eb>0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglColorBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,ob,d))}if(Bb&&wb.hasTangents){for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],p=j.vertexTangents,v=p[0],w=p[1],x=p[2],nb[cb]=v.x,nb[cb+1]=v.y,nb[cb+2]=v.z,nb[cb+3]=v.w,nb[cb+4]=w.x,nb[cb+5]=w.y,nb[cb+6]=w.z,nb[cb+7]=w.w,nb[cb+8]=x.x,nb[cb+9]=x.y,nb[cb+10]=x.z,nb[cb+11]=x.w,cb+=12;Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglTangentBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,nb,d)}if(Ab){for(g=0,h=Fb.length;h>g;g++)if(j=Gb[Fb[g]],l=j.vertexNormals,m=j.normal,3===l.length&&X)for(K=0;3>K;K++)M=l[K],mb[bb]=M.x,mb[bb+1]=M.y,mb[bb+2]=M.z,bb+=3;else for(K=0;3>K;K++)mb[bb]=m.x,mb[bb+1]=m.y,mb[bb+2]=m.z,bb+=3;Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglNormalBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,mb,d)}if(zb&&Hb){for(g=0,h=Fb.length;h>g;g++)if(i=Fb[g],q=Hb[i],void 0!==q)for(K=0;3>K;K++)N=q[K],kb[$]=N.x,kb[$+1]=N.y,$+=2;$>0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglUVBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,kb,d))}if(zb&&Ib){for(g=0,h=Fb.length;h>g;g++)if(i=Fb[g],r=Ib[i],void 0!==r)for(K=0;3>K;K++)O=r[K],lb[_]=O.x,lb[_+1]=O.y,_+=2;_>0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglUV2Buffer),Lb.bufferData(Lb.ARRAY_BUFFER,lb,d))}if(yb){for(g=0,h=Fb.length;h>g;g++)ub[ab]=Y,ub[ab+1]=Y+1,ub[ab+2]=Y+2,ab+=3,vb[db]=Y,vb[db+1]=Y+1,vb[db+2]=Y,vb[db+3]=Y+2,vb[db+4]=Y+1,vb[db+5]=Y+2,db+=6,Y+=3;Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,b.__webglFaceBuffer),Lb.bufferData(Lb.ELEMENT_ARRAY_BUFFER,ub,d),Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,b.__webglLineBuffer),Lb.bufferData(Lb.ELEMENT_ARRAY_BUFFER,vb,d)}if(tb)for(K=0,L=tb.length;L>K;K++)if(W=tb[K],W.__original.needsUpdate){if(hb=0,ib=0,1===W.size){if(void 0===W.boundTo||"vertices"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],W.array[hb]=W.value[j.a],W.array[hb+1]=W.value[j.b],W.array[hb+2]=W.value[j.c],hb+=3;else if("faces"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)V=W.value[Fb[g]],W.array[hb]=V,W.array[hb+1]=V,W.array[hb+2]=V,hb+=3}else if(2===W.size){if(void 0===W.boundTo||"vertices"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],s=W.value[j.a],t=W.value[j.b],u=W.value[j.c],W.array[hb]=s.x,W.array[hb+1]=s.y,W.array[hb+2]=t.x,W.array[hb+3]=t.y,W.array[hb+4]=u.x,W.array[hb+5]=u.y,hb+=6;else if("faces"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)V=W.value[Fb[g]],s=V,t=V,u=V,W.array[hb]=s.x,W.array[hb+1]=s.y,W.array[hb+2]=t.x,W.array[hb+3]=t.y,W.array[hb+4]=u.x,W.array[hb+5]=u.y,hb+=6}else if(3===W.size){var Ob;if(Ob="c"===W.type?["r","g","b"]:["x","y","z"],void 0===W.boundTo||"vertices"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],s=W.value[j.a],t=W.value[j.b],u=W.value[j.c],W.array[hb]=s[Ob[0]],W.array[hb+1]=s[Ob[1]],W.array[hb+2]=s[Ob[2]],W.array[hb+3]=t[Ob[0]],W.array[hb+4]=t[Ob[1]],W.array[hb+5]=t[Ob[2]],W.array[hb+6]=u[Ob[0]],W.array[hb+7]=u[Ob[1]],W.array[hb+8]=u[Ob[2]],hb+=9;else if("faces"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)V=W.value[Fb[g]],s=V,t=V,u=V,W.array[hb]=s[Ob[0]],W.array[hb+1]=s[Ob[1]],W.array[hb+2]=s[Ob[2]],W.array[hb+3]=t[Ob[0]],W.array[hb+4]=t[Ob[1]],W.array[hb+5]=t[Ob[2]],W.array[hb+6]=u[Ob[0]],W.array[hb+7]=u[Ob[1]],W.array[hb+8]=u[Ob[2]],hb+=9;else if("faceVertices"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)V=W.value[Fb[g]],s=V[0],t=V[1],u=V[2],W.array[hb]=s[Ob[0]],W.array[hb+1]=s[Ob[1]],W.array[hb+2]=s[Ob[2]],W.array[hb+3]=t[Ob[0]],W.array[hb+4]=t[Ob[1]],W.array[hb+5]=t[Ob[2]],W.array[hb+6]=u[Ob[0]],W.array[hb+7]=u[Ob[1]],W.array[hb+8]=u[Ob[2]],hb+=9}else if(4===W.size)if(void 0===W.boundTo||"vertices"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)j=Gb[Fb[g]],s=W.value[j.a],t=W.value[j.b],u=W.value[j.c],W.array[hb]=s.x,W.array[hb+1]=s.y,W.array[hb+2]=s.z,W.array[hb+3]=s.w,W.array[hb+4]=t.x,W.array[hb+5]=t.y,W.array[hb+6]=t.z,W.array[hb+7]=t.w,W.array[hb+8]=u.x,W.array[hb+9]=u.y,W.array[hb+10]=u.z,W.array[hb+11]=u.w,hb+=12;else if("faces"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)V=W.value[Fb[g]],s=V,t=V,u=V,W.array[hb]=s.x,W.array[hb+1]=s.y,W.array[hb+2]=s.z,W.array[hb+3]=s.w,W.array[hb+4]=t.x,W.array[hb+5]=t.y,W.array[hb+6]=t.z,W.array[hb+7]=t.w,W.array[hb+8]=u.x,W.array[hb+9]=u.y,W.array[hb+10]=u.z,W.array[hb+11]=u.w,hb+=12;else if("faceVertices"===W.boundTo)for(g=0,h=Fb.length;h>g;g++)V=W.value[Fb[g]],s=V[0],t=V[1],u=V[2],W.array[hb]=s.x,W.array[hb+1]=s.y,W.array[hb+2]=s.z,W.array[hb+3]=s.w,W.array[hb+4]=t.x,W.array[hb+5]=t.y,W.array[hb+6]=t.z,W.array[hb+7]=t.w,W.array[hb+8]=u.x,W.array[hb+9]=u.y,W.array[hb+10]=u.z,W.array[hb+11]=u.w,hb+=12;Lb.bindBuffer(Lb.ARRAY_BUFFER,W.buffer),Lb.bufferData(Lb.ARRAY_BUFFER,W.array,d)}e&&(delete b.__inittedArrays,delete b.__colorArray,delete b.__normalArray,delete b.__tangentArray,delete b.__uvArray,delete b.__uv2Array,delete b.__faceArray,delete b.__vertexArray,delete b.__lineArray,delete b.__skinIndexArray,delete b.__skinWeightArray)}}function o(a,b,c,d){for(var e=c.attributes,f=b.attributes,g=b.attributesKeys,h=0,i=g.length;i>h;h++){var j=g[h],k=f[j];if(k>=0){var l=e[j];if(void 0!==l){var m=l.itemSize;Lb.bindBuffer(Lb.ARRAY_BUFFER,l.buffer),q(k),Lb.vertexAttribPointer(k,m,Lb.FLOAT,!1,0,d*m*4)}else void 0!==a.defaultAttributeValues&&(2===a.defaultAttributeValues[j].length?Lb.vertexAttrib2fv(k,a.defaultAttributeValues[j]):3===a.defaultAttributeValues[j].length&&Lb.vertexAttrib3fv(k,a.defaultAttributeValues[j]))}}r()}function p(){for(var a=0,b=kc.length;b>a;a++)kc[a]=0}function q(a){kc[a]=1,0===lc[a]&&(Lb.enableVertexAttribArray(a),lc[a]=1)}function r(){for(var a=0,b=lc.length;b>a;a++)lc[a]!==kc[a]&&(Lb.disableVertexAttribArray(a),lc[a]=0)}function s(a,b,c){var d=a.program.attributes;if(-1!==c.morphTargetBase&&d.position>=0?(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[c.morphTargetBase]),q(d.position),Lb.vertexAttribPointer(d.position,3,Lb.FLOAT,!1,0,0)):d.position>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglVertexBuffer),q(d.position),Lb.vertexAttribPointer(d.position,3,Lb.FLOAT,!1,0,0)),c.morphTargetForcedOrder.length)for(var e,f=0,g=c.morphTargetForcedOrder,h=c.morphTargetInfluences;f<a.numSupportedMorphTargets&&f<g.length;)e=d["morphTarget"+f],e>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[g[f]]),q(e),Lb.vertexAttribPointer(e,3,Lb.FLOAT,!1,0,0)),e=d["morphNormal"+f],e>=0&&a.morphNormals&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[g[f]]),q(e),Lb.vertexAttribPointer(e,3,Lb.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[f]=h[g[f]],f++;
else{for(var i=[],h=c.morphTargetInfluences,j=0,k=h.length;k>j;j++){var l=h[j];i.push([l,j])}i.length>a.numSupportedMorphTargets?(i.sort(v),i.length=a.numSupportedMorphTargets):i.length>a.numSupportedMorphNormals?i.sort(v):0===i.length&&i.push([0,0]);for(var e,f=0,m=a.numSupportedMorphTargets;m>f;f++)if(i[f]){var n=i[f][1];e=d["morphTarget"+f],e>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[n]),q(e),Lb.vertexAttribPointer(e,3,Lb.FLOAT,!1,0,0)),e=d["morphNormal"+f],e>=0&&a.morphNormals&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[n]),q(e),Lb.vertexAttribPointer(e,3,Lb.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[f]=h[n]}else c.__webglMorphTargetInfluences[f]=0}null!==a.program.uniforms.morphTargetInfluences&&Lb.uniform1fv(a.program.uniforms.morphTargetInfluences,c.__webglMorphTargetInfluences)}function t(a,b){return a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function u(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function v(a,b){return b[0]-a[0]}function w(b){if(b.visible!==!1){if(b instanceof a.Scene||b instanceof a.Group);else if(B(b),b instanceof a.Light)Eb.push(b);else if(b instanceof a.Sprite)Jb.push(b);else if(b instanceof a.LensFlare)Kb.push(b);else{var c=Fb[b.id];if(c&&(b.frustumCulled===!1||mc.intersectsObject(b)===!0))for(var d=0,e=c.length;e>d;d++){var f=c[d];A(f),f.render=!0,Mb.sortObjects===!0&&(oc.setFromMatrixPosition(b.matrixWorld),oc.applyProjection(nc),f.z=oc.z)}}for(var d=0,e=b.children.length;e>d;d++)w(b.children[d])}}function x(b,c,d,e,f,g){for(var h,i=0,j=b.length;j>i;i++){var k=b[i],l=k.object,m=k.buffer;if(_(l,c),g&&g["static"])h=l instanceof a.SkinnedMesh?g.skinned:l instanceof a.Mesh?g["static"]:k.material;else if(g)h=g;else{if(h=k.material,!h)continue;f&&Mb.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),Mb.setDepthTest(h.depthTest),Mb.setDepthWrite(h.depthWrite),eb(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Mb.setMaterialFaces(h),m instanceof a.BufferGeometry?Mb.renderBufferDirect(c,d,e,h,m,l,k.offsetIndices):Mb.renderBuffer(c,d,e,h,m,l)}}function y(a,b,c,d,e,f,g){for(var h,i=0,j=a.length;j>i;i++){var k=a[i],l=k.object;if(l.visible){if(g)h=g;else{if(h=k[b],!h)continue;f&&Mb.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),Mb.setDepthTest(h.depthTest),Mb.setDepthWrite(h.depthWrite),eb(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Mb.renderImmediateObject(c,d,e,h,l)}}}function z(a){var b=a.object,c=b.material;c.transparent?(a.transparent=c,a.opaque=null):(a.opaque=c,a.transparent=null)}function A(b){var c,d,e=b.object,f=b.buffer,g=(e.geometry,e.material);g instanceof a.MeshFaceMaterial?(c=-1,f instanceof a.BufferGeometry?b.offsetIndices&&(d=f.offsets[b.offsetIndices[0]],d.hasOwnProperty("materialIndex")&&(c=d.materialIndex)):c=f.materialIndex,c>=0&&(g=g.materials[c]),b.material=g,g.transparent?Ib.push(b):Hb.push(b)):g&&(b.material=g,g.transparent?Ib.push(b):Hb.push(b))}function B(b){var e,f,i;void 0===b.__webglInit&&(b.__webglInit=!0,b._modelViewMatrix=new a.Matrix4,b._normalMatrix=new a.Matrix3,b.addEventListener("removed",Nc));var j=b.geometry;if(void 0===j||void 0===j.__webglInit&&(j.__webglInit=!0,j.addEventListener("dispose",Oc),j instanceof a.BufferGeometry?Mb.info.memory.geometries++:b instanceof a.Mesh?D(b,j):b instanceof a.Line?void 0===j.__webglVertexBuffer&&(d(j),h(j,b),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0,j.lineDistancesNeedUpdate=!0):b instanceof a.PointCloud&&void 0===j.__webglVertexBuffer&&(c(j),g(j,b),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0)),void 0===b.__webglActive)if(b.__webglActive=!0,b instanceof a.Mesh){if(j instanceof a.BufferGeometry)if(j.offsets){f={};for(var k=0;k<j.offsets.length;++k)i=j.offsets[k],e=i.hasOwnProperty("materialIndex")?i.materialIndex:0,e in f||(f[e]=new Array),f[e].push(k);for(e in f)E(Fb,j,b,f[e])}else E(Fb,j,b);else if(j instanceof a.Geometry)for(var l=Xc[j.id],k=0,m=l.length;m>k;k++)E(Fb,l[k],b)}else b instanceof a.Line||b instanceof a.PointCloud?E(Fb,j,b):(b instanceof a.ImmediateRenderObject||b.immediateRenderCallback)&&F(Gb,b)}function C(a,b){for(var c,d,e=uc.get("OES_element_index_uint")?4294967296:65535,f={},g=a.morphTargets.length,h=a.morphNormals.length,i={},j=[],k=0,l=a.faces.length;l>k;k++){var m=a.faces[k],n=b?m.materialIndex:0;n in f||(f[n]={hash:n,counter:0}),c=f[n].hash+"_"+f[n].counter,c in i||(d={id:Yc++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:g,numMorphNormals:h},i[c]=d,j.push(d)),i[c].vertices+3>e&&(f[n].counter+=1,c=f[n].hash+"_"+f[n].counter,c in i||(d={id:Yc++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:g,numMorphNormals:h},i[c]=d,j.push(d))),i[c].faces3.push(k),i[c].vertices+=3}return j}function D(b,c){var d=b.material,f=!1;(void 0===Xc[c.id]||c.groupsNeedUpdate===!0)&&(delete Fb[b.id],Xc[c.id]=C(c,d instanceof a.MeshFaceMaterial),c.groupsNeedUpdate=!1);for(var g=Xc[c.id],h=0,j=g.length;j>h;h++){var k=g[h];void 0===k.__webglVertexBuffer?(e(k),i(k,b),c.verticesNeedUpdate=!0,c.morphTargetsNeedUpdate=!0,c.elementsNeedUpdate=!0,c.uvsNeedUpdate=!0,c.normalsNeedUpdate=!0,c.tangentsNeedUpdate=!0,c.colorsNeedUpdate=!0,f=!0):f=!1,(f||void 0===b.__webglActive)&&E(Fb,k,b)}b.__webglActive=!0}function E(a,b,c,d){var e=c.id;a[e]=a[e]||[],a[e].push({id:e,buffer:b,object:c,material:null,z:0,offsetIndices:d})}function F(a,b){a.push({id:null,object:b,opaque:null,transparent:null,z:0})}function G(b){var c=b.geometry;if(c instanceof a.BufferGeometry)for(var d=c.attributes,e=c.attributesKeys,f=0,g=e.length;g>f;f++){var h=e[f],k=d[h];if(void 0===k.buffer&&(k.buffer=Lb.createBuffer(),k.needsUpdate=!0),k.needsUpdate===!0){var o="index"===h?Lb.ELEMENT_ARRAY_BUFFER:Lb.ARRAY_BUFFER;Lb.bindBuffer(o,k.buffer),Lb.bufferData(o,k.array,Lb.STATIC_DRAW),k.needsUpdate=!1}}else if(b instanceof a.Mesh){c.groupsNeedUpdate===!0&&D(b,c);for(var p=Xc[c.id],f=0,q=p.length;q>f;f++){var r=p[f],s=j(b,r);c.groupsNeedUpdate===!0&&i(r,b);var t=s.attributes&&H(s);(c.verticesNeedUpdate||c.morphTargetsNeedUpdate||c.elementsNeedUpdate||c.uvsNeedUpdate||c.normalsNeedUpdate||c.colorsNeedUpdate||c.tangentsNeedUpdate||t)&&n(r,b,Lb.DYNAMIC_DRAW,!c.dynamic,s)}c.verticesNeedUpdate=!1,c.morphTargetsNeedUpdate=!1,c.elementsNeedUpdate=!1,c.uvsNeedUpdate=!1,c.normalsNeedUpdate=!1,c.colorsNeedUpdate=!1,c.tangentsNeedUpdate=!1,s.attributes&&I(s)}else if(b instanceof a.Line){var s=j(b,c),t=s.attributes&&H(s);(c.verticesNeedUpdate||c.colorsNeedUpdate||c.lineDistancesNeedUpdate||t)&&m(c,Lb.DYNAMIC_DRAW),c.verticesNeedUpdate=!1,c.colorsNeedUpdate=!1,c.lineDistancesNeedUpdate=!1,s.attributes&&I(s)}else if(b instanceof a.PointCloud){var s=j(b,c),t=s.attributes&&H(s);(c.verticesNeedUpdate||c.colorsNeedUpdate||t)&&l(c,Lb.DYNAMIC_DRAW,b),c.verticesNeedUpdate=!1,c.colorsNeedUpdate=!1,s.attributes&&I(s)}}function H(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function I(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function J(b){b instanceof a.Mesh||b instanceof a.PointCloud||b instanceof a.Line?delete Fb[b.id]:(b instanceof a.ImmediateRenderObject||b.immediateRenderCallback)&&K(Gb,b),delete b.__webglInit,delete b._modelViewMatrix,delete b._normalMatrix,delete b.__webglActive}function K(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function L(b,c,d,e){b.addEventListener("dispose",Rc);var f=Zc[b.type];if(f){var g=a.ShaderLib[f];b.__webglShader={uniforms:a.UniformsUtils.clone(g.uniforms),vertexShader:g.vertexShader,fragmentShader:g.fragmentShader}}else b.__webglShader={uniforms:b.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader};var h=pb(c),i=qb(c),j=ob(e),k={precision:ub,supportsVertexTextures:Bc,map:!!b.map,envMap:!!b.envMap,envMapMode:b.envMap&&b.envMap.mapping,lightMap:!!b.lightMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,specularMap:!!b.specularMap,alphaMap:!!b.alphaMap,combine:b.combine,vertexColors:b.vertexColors,fog:d,useFog:b.fog,fogExp:d instanceof a.FogExp2,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:Bb,skinning:b.skinning,maxBones:j,useVertexTexture:Cc&&e&&e.skeleton&&e.skeleton.useVertexTexture,morphTargets:b.morphTargets,morphNormals:b.morphNormals,maxMorphTargets:Mb.maxMorphTargets,maxMorphNormals:Mb.maxMorphNormals,maxDirLights:h.directional,maxPointLights:h.point,maxSpotLights:h.spot,maxHemiLights:h.hemi,maxShadows:i,shadowMapEnabled:Mb.shadowMapEnabled&&e.receiveShadow&&i>0,shadowMapType:Mb.shadowMapType,shadowMapDebug:Mb.shadowMapDebug,shadowMapCascade:Mb.shadowMapCascade,alphaTest:b.alphaTest,metal:b.metal,wrapAround:b.wrapAround,doubleSided:b.side===a.DoubleSide,flipSided:b.side===a.BackSide},l=[];if(f?l.push(f):(l.push(b.fragmentShader),l.push(b.vertexShader)),void 0!==b.defines)for(var m in b.defines)l.push(m),l.push(b.defines[m]);for(var m in k)l.push(m),l.push(k[m]);for(var n,o=l.join(),p=0,q=Nb.length;q>p;p++){var r=Nb[p];if(r.code===o){n=r,n.usedTimes++;break}}void 0===n&&(n=new a.WebGLProgram(Mb,o,b,k),Nb.push(n),Mb.info.memory.programs=Nb.length),b.program=n;var s=n.attributes;if(b.morphTargets){b.numSupportedMorphTargets=0;for(var t,u="morphTarget",v=0;v<Mb.maxMorphTargets;v++)t=u+v,s[t]>=0&&b.numSupportedMorphTargets++}if(b.morphNormals){b.numSupportedMorphNormals=0;var t,u="morphNormal";for(v=0;v<Mb.maxMorphNormals;v++)t=u+v,s[t]>=0&&b.numSupportedMorphNormals++}b.uniformsList=[];for(var w in b.__webglShader.uniforms){var x=b.program.uniforms[w];x&&b.uniformsList.push([b.__webglShader.uniforms[w],x])}}function M(b,c,d,e,f){Tb=0,e.needsUpdate&&(e.program&&Wc(e),L(e,c,d,f),e.needsUpdate=!1),e.morphTargets&&(f.__webglMorphTargetInfluences||(f.__webglMorphTargetInfluences=new Float32Array(Mb.maxMorphTargets)));var g=!1,h=!1,i=!1,j=e.program,k=j.uniforms,l=e.__webglShader.uniforms;if(j.id!==Ob&&(Lb.useProgram(j.program),Ob=j.id,g=!0,h=!0,i=!0),e.id!==Qb&&(-1===Qb&&(i=!0),Qb=e.id,h=!0),(g||b!==Sb)&&(Lb.uniformMatrix4fv(k.projectionMatrix,!1,b.projectionMatrix.elements),Bb&&Lb.uniform1f(k.logDepthBufFC,2/(Math.log(b.far+1)/Math.LN2)),b!==Sb&&(Sb=b),(e instanceof a.ShaderMaterial||e instanceof a.MeshPhongMaterial||e.envMap)&&null!==k.cameraPosition&&(oc.setFromMatrixPosition(b.matrixWorld),Lb.uniform3f(k.cameraPosition,oc.x,oc.y,oc.z)),(e instanceof a.MeshPhongMaterial||e instanceof a.MeshLambertMaterial||e instanceof a.MeshBasicMaterial||e instanceof a.ShaderMaterial||e.skinning)&&null!==k.viewMatrix&&Lb.uniformMatrix4fv(k.viewMatrix,!1,b.matrixWorldInverse.elements)),e.skinning)if(f.bindMatrix&&null!==k.bindMatrix&&Lb.uniformMatrix4fv(k.bindMatrix,!1,f.bindMatrix.elements),f.bindMatrixInverse&&null!==k.bindMatrixInverse&&Lb.uniformMatrix4fv(k.bindMatrixInverse,!1,f.bindMatrixInverse.elements),Cc&&f.skeleton&&f.skeleton.useVertexTexture){if(null!==k.boneTexture){var m=Z();Lb.uniform1i(k.boneTexture,m),Mb.setTexture(f.skeleton.boneTexture,m)}null!==k.boneTextureWidth&&Lb.uniform1i(k.boneTextureWidth,f.skeleton.boneTextureWidth),null!==k.boneTextureHeight&&Lb.uniform1i(k.boneTextureHeight,f.skeleton.boneTextureHeight)}else f.skeleton&&f.skeleton.boneMatrices&&null!==k.boneGlobalMatrices&&Lb.uniformMatrix4fv(k.boneGlobalMatrices,!1,f.skeleton.boneMatrices);return h&&(d&&e.fog&&R(l,d),Mb.toneMappingEnabled&&S(l),(e instanceof a.MeshPhongMaterial||e instanceof a.MeshLambertMaterial||e.lights)&&(qc&&(i=!0,cb(c),qc=!1),i?(V(l,rc),W(l,!0)):W(l,!1)),(e instanceof a.MeshBasicMaterial||e instanceof a.MeshLambertMaterial||e instanceof a.MeshPhongMaterial)&&N(l,e),e instanceof a.LineBasicMaterial?O(l,e):e instanceof a.LineDashedMaterial?(O(l,e),P(l,e)):e instanceof a.PointCloudMaterial?Q(l,e):e instanceof a.MeshPhongMaterial?T(l,e):e instanceof a.MeshLambertMaterial?U(l,e):e instanceof a.MeshDepthMaterial?(l.mNear.value=b.near,l.mFar.value=b.far,l.opacity.value=e.opacity):e instanceof a.MeshNormalMaterial&&(l.opacity.value=e.opacity),f.receiveShadow&&!e._shadowPass&&X(l,c),$(e.uniformsList)),Y(k,f),null!==k.modelMatrix&&Lb.uniformMatrix4fv(k.modelMatrix,!1,f.matrixWorld.elements),j}function N(b,c){b.opacity.value=c.opacity,Mb.gammaInput?b.diffuse.value.copyGammaToLinear(c.color):b.diffuse.value=c.color,b.map.value=c.map,c.lightMap&&c.lightMap.hdrPacking&&c.hdrInputEnabled!==!1&&(c.defines||(c.defines={}),c.defines.LIGHTMAP_HDR_INPUT!==c.lightMap.hdrPacking&&(c.hdrInputEnabled=!0,c.defines.LIGHTMAP_HDR_INPUT=c.lightMap.hdrPacking,c.needsUpdate=!0)),b.lightMap.value=c.lightMap,b.specularMap.value=c.specularMap,b.alphaMap.value=c.alphaMap,c.bumpMap&&(b.bumpMap.value=c.bumpMap,b.bumpScale.value=c.bumpScale),c.normalMap&&(b.normalMap.value=c.normalMap,b.normalScale.value.copy(c.normalScale));var d;if(c.map?d=c.map:c.specularMap?d=c.specularMap:c.normalMap?d=c.normalMap:c.bumpMap?d=c.bumpMap:c.alphaMap&&(d=c.alphaMap),void 0!==d){var e=d.offset,f=d.repeat;b.offsetRepeat.value.set(e.x,e.y,f.x,f.y)}c.envMap&&c.envMap.hdrPacking&&c.hdrInputEnabled!==!1&&(c.defines||(c.defines={}),c.defines.ENVMAP_HDR_INPUT!==c.envMap.hdrPacking&&(c.hdrInputEnabled=!0,c.defines.ENVMAP_HDR_INPUT=c.envMap.hdrPacking,c.needsUpdate=!0)),b.envMap.value=c.envMap,b.flipEnvMap.value=c.envMap instanceof a.WebGLRenderTargetCube?1:-1,b.reflectivity.value=Mb.gammaInput?c.reflectivity:c.reflectivity,b.refractionRatio.value=c.refractionRatio}function O(a,b){a.diffuse.value=b.color,a.opacity.value=b.opacity}function P(a,b){a.dashSize.value=b.dashSize,a.totalSize.value=b.dashSize+b.gapSize,a.scale.value=b.scale}function Q(a,b){a.psColor.value=b.color,a.opacity.value=b.opacity,a.size.value=b.size,a.scale.value=rb.height/2,a.map.value=b.map}function R(b,c){b.fogColor.value=c.color,c instanceof a.Fog?(b.fogNear.value=c.near,b.fogFar.value=c.far):c instanceof a.FogExp2&&(b.fogDensity.value=c.density)}function S(a){a.avgLuminance&&(a.avgLuminance.value=Mb.toneMapping_AvgLum,a.maxLuminance.value=Mb.toneMappingMaxLuminance,a.middleGrey.value=Mb.toneMappingMiddleGrey,a.luminanceMap.value=Mb.toneMappingLuminanceMap)}function T(a,b){a.shininess.value=b.shininess,Mb.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive),a.specular.value.copyGammaToLinear(b.specular)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive,a.specular.value=b.specular),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function U(a,b){Mb.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function V(a,b){a.ambientLightColor.value=b.ambient,a.directionalLightColor.value=b.directional.colors,a.directionalLightDirection.value=b.directional.positions,a.pointLightColor.value=b.point.colors,a.pointLightPosition.value=b.point.positions,a.pointLightDistance.value=b.point.distances,a.spotLightColor.value=b.spot.colors,a.spotLightPosition.value=b.spot.positions,a.spotLightDistance.value=b.spot.distances,a.spotLightDirection.value=b.spot.directions,a.spotLightAngleCos.value=b.spot.anglesCos,a.spotLightExponent.value=b.spot.exponents,a.hemisphereLightSkyColor.value=b.hemi.skyColors,a.hemisphereLightGroundColor.value=b.hemi.groundColors,a.hemisphereLightDirection.value=b.hemi.positions}function W(a,b){a.ambientLightColor.needsUpdate=b,a.directionalLightColor.needsUpdate=b,a.directionalLightDirection.needsUpdate=b,a.pointLightColor.needsUpdate=b,a.pointLightPosition.needsUpdate=b,a.pointLightDistance.needsUpdate=b,a.spotLightColor.needsUpdate=b,a.spotLightPosition.needsUpdate=b,a.spotLightDistance.needsUpdate=b,a.spotLightDirection.needsUpdate=b,a.spotLightAngleCos.needsUpdate=b,a.spotLightExponent.needsUpdate=b,a.hemisphereLightSkyColor.needsUpdate=b,a.hemisphereLightGroundColor.needsUpdate=b,a.hemisphereLightDirection.needsUpdate=b}function X(b,c){if(b.shadowMatrix)for(var d=0,e=0,f=c.length;f>e;e++){var g=c[e];g.castShadow&&(g instanceof a.SpotLight||g instanceof a.DirectionalLight&&!g.shadowCascade)&&(b.shadowMap.value[d]=g.shadowMap,b.shadowMapSize.value[d]=g.shadowMapSize,b.shadowMatrix.value[d]=g.shadowMatrix,b.shadowDarkness.value[d]=g.shadowDarkness,b.shadowBias.value[d]=g.shadowBias,d++)}}function Y(a,b){Lb.uniformMatrix4fv(a.modelViewMatrix,!1,b._modelViewMatrix.elements),a.normalMatrix&&Lb.uniformMatrix3fv(a.normalMatrix,!1,b._normalMatrix.elements)}function Z(){var a=Tb;return a>=xc&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+xc),Tb+=1,a}function $(b){for(var c,d,e,f=0,g=b.length;g>f;f++){var h=b[f][0];if(h.needsUpdate!==!1){var i=h.type,j=h.value,k=b[f][1];switch(i){case"1i":Lb.uniform1i(k,j);break;case"1f":Lb.uniform1f(k,j);break;case"2f":Lb.uniform2f(k,j[0],j[1]);break;case"3f":Lb.uniform3f(k,j[0],j[1],j[2]);break;case"4f":Lb.uniform4f(k,j[0],j[1],j[2],j[3]);break;case"1iv":Lb.uniform1iv(k,j);break;case"3iv":Lb.uniform3iv(k,j);break;case"1fv":Lb.uniform1fv(k,j);break;case"2fv":Lb.uniform2fv(k,j);break;case"3fv":Lb.uniform3fv(k,j);break;case"4fv":Lb.uniform4fv(k,j);break;case"Matrix3fv":Lb.uniformMatrix3fv(k,!1,j);break;case"Matrix4fv":Lb.uniformMatrix4fv(k,!1,j);break;case"i":Lb.uniform1i(k,j);break;case"f":Lb.uniform1f(k,j);break;case"v2":Lb.uniform2f(k,j.x,j.y);break;case"v3":Lb.uniform3f(k,j.x,j.y,j.z);break;case"v4":Lb.uniform4f(k,j.x,j.y,j.z,j.w);break;case"c":Lb.uniform3f(k,j.r,j.g,j.b);break;case"iv1":Lb.uniform1iv(k,j);break;case"iv":Lb.uniform3iv(k,j);break;case"fv1":Lb.uniform1fv(k,j);break;case"fv":Lb.uniform3fv(k,j);break;case"v2v":void 0===h._array&&(h._array=new Float32Array(2*j.length));for(var l=0,m=j.length;m>l;l++)e=2*l,h._array[e]=j[l].x,h._array[e+1]=j[l].y;Lb.uniform2fv(k,h._array);break;case"v3v":void 0===h._array&&(h._array=new Float32Array(3*j.length));for(var l=0,m=j.length;m>l;l++)e=3*l,h._array[e]=j[l].x,h._array[e+1]=j[l].y,h._array[e+2]=j[l].z;Lb.uniform3fv(k,h._array);break;case"v4v":void 0===h._array&&(h._array=new Float32Array(4*j.length));for(var l=0,m=j.length;m>l;l++)e=4*l,h._array[e]=j[l].x,h._array[e+1]=j[l].y,h._array[e+2]=j[l].z,h._array[e+3]=j[l].w;Lb.uniform4fv(k,h._array);break;case"m3":Lb.uniformMatrix3fv(k,!1,j.elements);break;case"m3v":void 0===h._array&&(h._array=new Float32Array(9*j.length));for(var l=0,m=j.length;m>l;l++)j[l].flattenToArrayOffset(h._array,9*l);Lb.uniformMatrix3fv(k,!1,h._array);break;case"m4":Lb.uniformMatrix4fv(k,!1,j.elements);break;case"m4v":void 0===h._array&&(h._array=new Float32Array(16*j.length));for(var l=0,m=j.length;m>l;l++)j[l].flattenToArrayOffset(h._array,16*l);Lb.uniformMatrix4fv(k,!1,h._array);break;case"t":if(c=j,d=Z(),Lb.uniform1i(k,d),!c)continue;c instanceof a.CubeTexture||c.image instanceof Array&&6===c.image.length?hb(c,d):c instanceof a.WebGLRenderTargetCube?ib(c,d):Mb.setTexture(c,d);break;case"tv":void 0===h._array&&(h._array=[]);for(var l=0,m=h.value.length;m>l;l++)h._array[l]=Z();Lb.uniform1iv(k,h._array);for(var l=0,m=h.value.length;m>l;l++)c=h.value[l],d=h._array[l],c&&Mb.setTexture(c,d);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+i)}}}}function _(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function ab(a,b,c,d){a[b]=c.r*c.r*d,a[b+1]=c.g*c.g*d,a[b+2]=c.b*c.b*d}function bb(a,b,c,d){a[b]=c.r*d,a[b+1]=c.g*d,a[b+2]=c.b*d}function cb(b){var c,d,e,f,g,h,i,j,k,l=0,m=0,n=0,o=rc,p=o.directional.colors,q=o.directional.positions,r=o.point.colors,s=o.point.positions,t=o.point.distances,u=o.spot.colors,v=o.spot.positions,w=o.spot.distances,x=o.spot.directions,y=o.spot.anglesCos,z=o.spot.exponents,A=o.hemi.skyColors,B=o.hemi.groundColors,C=o.hemi.positions,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;for(c=0,d=b.length;d>c;c++)if(e=b[c],!e.onlyShadow&&e.castShadow){if(c!==P){var Q=b[P];b[P]=e,b[c]=Q}P++}for(c=0,d=b.length;d>c;c++)if(e=b[c],!e.onlyShadow)if(f=e.color,i=e.intensity,k=e.distance,e instanceof a.AmbientLight){if(!e.visible)continue;Mb.gammaInput?(l+=f.r*f.r,m+=f.g*f.g,n+=f.b*f.b):(l+=f.r,m+=f.g,n+=f.b)}else if(e instanceof a.DirectionalLight){if(H+=1,!e.visible)continue;pc.setFromMatrixPosition(e.matrixWorld),oc.setFromMatrixPosition(e.target.matrixWorld),pc.sub(oc),pc.normalize(),L=3*D,q[L]=pc.x,q[L+1]=pc.y,q[L+2]=pc.z,Mb.gammaInput?ab(p,L,f,i*i):bb(p,L,f,i),D+=1}else if(e instanceof a.PointLight){if(I+=1,!e.visible)continue;M=3*E,Mb.gammaInput?ab(r,M,f,i*i):bb(r,M,f,i),oc.setFromMatrixPosition(e.matrixWorld),s[M]=oc.x,s[M+1]=oc.y,s[M+2]=oc.z,t[E]=k,E+=1}else if(e instanceof a.SpotLight){if(J+=1,!e.visible)continue;N=3*F,Mb.gammaInput?ab(u,N,f,i*i):bb(u,N,f,i),pc.setFromMatrixPosition(e.matrixWorld),v[N]=pc.x,v[N+1]=pc.y,v[N+2]=pc.z,w[F]=k,oc.setFromMatrixPosition(e.target.matrixWorld),pc.sub(oc),pc.normalize(),x[N]=pc.x,x[N+1]=pc.y,x[N+2]=pc.z,y[F]=Math.cos(e.angle),z[F]=e.exponent,F+=1}else if(e instanceof a.HemisphereLight){if(K+=1,!e.visible)continue;pc.setFromMatrixPosition(e.matrixWorld),pc.normalize(),O=3*G,C[O]=pc.x,C[O+1]=pc.y,C[O+2]=pc.z,g=e.color,h=e.groundColor,Mb.gammaInput?(j=i*i,ab(A,O,g,j),ab(B,O,h,j)):(bb(A,O,g,i),bb(B,O,h,i)),G+=1}for(c=3*D,d=Math.max(p.length,3*H);d>c;c++)p[c]=0;for(c=3*E,d=Math.max(r.length,3*I);d>c;c++)r[c]=0;for(c=3*F,d=Math.max(u.length,3*J);d>c;c++)u[c]=0;for(c=3*G,d=Math.max(A.length,3*K);d>c;c++)A[c]=0;for(c=3*G,d=Math.max(B.length,3*K);d>c;c++)B[c]=0;o.directional.length=D,o.point.length=E,o.spot.length=F,o.hemi.length=G,o.ambient[0]=l,o.ambient[1]=m,o.ambient[2]=n}function db(a){a*=tb,a!==dc&&(Lb.lineWidth(a),dc=a)}function eb(a,b,c){ac!==a&&(a?Lb.enable(Lb.POLYGON_OFFSET_FILL):Lb.disable(Lb.POLYGON_OFFSET_FILL),ac=a),!a||bc===b&&cc===c||(Lb.polygonOffset(b,c),bc=b,cc=c)}function fb(b,c,d){var e;d?(Lb.texParameteri(b,Lb.TEXTURE_WRAP_S,nb(c.wrapS)),Lb.texParameteri(b,Lb.TEXTURE_WRAP_T,nb(c.wrapT)),Lb.texParameteri(b,Lb.TEXTURE_MAG_FILTER,nb(c.magFilter)),Lb.texParameteri(b,Lb.TEXTURE_MIN_FILTER,nb(c.minFilter))):(Lb.texParameteri(b,Lb.TEXTURE_WRAP_S,Lb.CLAMP_TO_EDGE),Lb.texParameteri(b,Lb.TEXTURE_WRAP_T,Lb.CLAMP_TO_EDGE),(c.wrapS!==a.ClampToEdgeWrapping||c.wrapT!==a.ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT is set to THREE.ClampToEdgeWrapping. ( "+c.sourceFile+" )"),Lb.texParameteri(b,Lb.TEXTURE_MAG_FILTER,mb(c.magFilter)),Lb.texParameteri(b,Lb.TEXTURE_MIN_FILTER,mb(c.minFilter)),c.minFilter!==a.NearestFilter&&c.minFilter!==a.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter is set to THREE.LinearFilter or THREE.NearestFilter. ( "+c.sourceFile+" )")),e=uc.get("EXT_texture_filter_anisotropic"),e&&c.type!==a.FloatType&&(c.anisotropy>1||c.__oldAnisotropy)&&(Lb.texParameterf(b,e.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(c.anisotropy,Mb.getMaxAnisotropy())),c.__oldAnisotropy=c.anisotropy)}function gb(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement("canvas");d.width=Math.floor(a.width*c),d.height=Math.floor(a.height*c);var e=d.getContext("2d");return e.drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height),console.log("THREE.WebGLRenderer:",a,"is too big ("+a.width+"x"+a.height+"). Resized to "+d.width+"x"+d.height+"."),d}return a}function hb(b,c){if(6===b.image.length)if(b.needsUpdate){b.image.__webglTextureCube||(b.addEventListener("dispose",Pc),b.image.__webglTextureCube=Lb.createTexture(),Mb.info.memory.textures++),Lb.activeTexture(Lb.TEXTURE0+c),Lb.bindTexture(Lb.TEXTURE_CUBE_MAP,b.image.__webglTextureCube),Lb.pixelStorei(Lb.UNPACK_FLIP_Y_WEBGL,b.flipY);for(var d=b instanceof a.CompressedTexture,e=b.image[0]instanceof a.DataTexture,f=[],g=0;6>g;g++)f[g]=!Mb.autoScaleCubemaps||d||e?e?b.image[g].image:b.image[g]:gb(b.image[g],Ac);var h=f[0],i=a.Math.isPowerOfTwo(h.width)&&a.Math.isPowerOfTwo(h.height),j=nb(b.format),k=nb(b.type);fb(Lb.TEXTURE_CUBE_MAP,b,i);for(var g=0;6>g;g++)if(d)for(var l,m=f[g].mipmaps,n=0,o=m.length;o>n;n++)l=m[n],b.format!==a.RGBAFormat&&b.format!==a.RGBFormat?Hc().indexOf(j)>-1?Lb.compressedTexImage2D(Lb.TEXTURE_CUBE_MAP_POSITIVE_X+g,n,j,l.width,l.height,0,l.data):console.warn("Attempt to load unsupported compressed texture format"):Lb.texImage2D(Lb.TEXTURE_CUBE_MAP_POSITIVE_X+g,n,j,l.width,l.height,0,j,k,l.data);else e?Lb.texImage2D(Lb.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,j,f[g].width,f[g].height,0,j,k,f[g].data):Lb.texImage2D(Lb.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,j,j,k,f[g]);b.generateMipmaps&&i&&Lb.generateMipmap(Lb.TEXTURE_CUBE_MAP),b.needsUpdate=!1,b.onUpdate&&b.onUpdate()}else Lb.activeTexture(Lb.TEXTURE0+c),Lb.bindTexture(Lb.TEXTURE_CUBE_MAP,b.image.__webglTextureCube)}function ib(a,b){Lb.activeTexture(Lb.TEXTURE0+b),Lb.bindTexture(Lb.TEXTURE_CUBE_MAP,a.__webglTexture)}function jb(a,b,c){Lb.bindFramebuffer(Lb.FRAMEBUFFER,a),Lb.framebufferTexture2D(Lb.FRAMEBUFFER,Lb.COLOR_ATTACHMENT0,c,b.__webglTexture,0)}function kb(a,b){Lb.bindRenderbuffer(Lb.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(Lb.renderbufferStorage(Lb.RENDERBUFFER,Lb.DEPTH_COMPONENT16,b.width,b.height),Lb.framebufferRenderbuffer(Lb.FRAMEBUFFER,Lb.DEPTH_ATTACHMENT,Lb.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(Lb.renderbufferStorage(Lb.RENDERBUFFER,Lb.DEPTH_STENCIL,b.width,b.height),Lb.framebufferRenderbuffer(Lb.FRAMEBUFFER,Lb.DEPTH_STENCIL_ATTACHMENT,Lb.RENDERBUFFER,a)):Lb.renderbufferStorage(Lb.RENDERBUFFER,Lb.RGBA4,b.width,b.height)}function lb(b){b instanceof a.WebGLRenderTargetCube?(Lb.bindTexture(Lb.TEXTURE_CUBE_MAP,b.__webglTexture),Lb.generateMipmap(Lb.TEXTURE_CUBE_MAP),Lb.bindTexture(Lb.TEXTURE_CUBE_MAP,null)):(Lb.bindTexture(Lb.TEXTURE_2D,b.__webglTexture),Lb.generateMipmap(Lb.TEXTURE_2D),Lb.bindTexture(Lb.TEXTURE_2D,null))}function mb(b){return b===a.NearestFilter||b===a.NearestMipMapNearestFilter||b===a.NearestMipMapLinearFilter?Lb.NEAREST:Lb.LINEAR}function nb(b){var c;if(b===a.RepeatWrapping)return Lb.REPEAT;if(b===a.ClampToEdgeWrapping)return Lb.CLAMP_TO_EDGE;if(b===a.MirroredRepeatWrapping)return Lb.MIRRORED_REPEAT;if(b===a.NearestFilter)return Lb.NEAREST;if(b===a.NearestMipMapNearestFilter)return Lb.NEAREST_MIPMAP_NEAREST;if(b===a.NearestMipMapLinearFilter)return Lb.NEAREST_MIPMAP_LINEAR;if(b===a.LinearFilter)return Lb.LINEAR;if(b===a.LinearMipMapNearestFilter)return Lb.LINEAR_MIPMAP_NEAREST;if(b===a.LinearMipMapLinearFilter)return Lb.LINEAR_MIPMAP_LINEAR;if(b===a.UnsignedByteType)return Lb.UNSIGNED_BYTE;if(b===a.UnsignedShort4444Type)return Lb.UNSIGNED_SHORT_4_4_4_4;if(b===a.UnsignedShort5551Type)return Lb.UNSIGNED_SHORT_5_5_5_1;if(b===a.UnsignedShort565Type)return Lb.UNSIGNED_SHORT_5_6_5;if(b===a.ByteType)return Lb.BYTE;if(b===a.ShortType)return Lb.SHORT;if(b===a.UnsignedShortType)return Lb.UNSIGNED_SHORT;if(b===a.IntType)return Lb.INT;if(b===a.UnsignedIntType)return Lb.UNSIGNED_INT;if(b===a.FloatType)return Lb.FLOAT;if(b===a.AlphaFormat)return Lb.ALPHA;if(b===a.RGBFormat)return Lb.RGB;if(b===a.RGBAFormat)return Lb.RGBA;if(b===a.LuminanceFormat)return Lb.LUMINANCE;if(b===a.LuminanceAlphaFormat)return Lb.LUMINANCE_ALPHA;if(b===a.AddEquation)return Lb.FUNC_ADD;if(b===a.SubtractEquation)return Lb.FUNC_SUBTRACT;if(b===a.ReverseSubtractEquation)return Lb.FUNC_REVERSE_SUBTRACT;if(b===a.ZeroFactor)return Lb.ZERO;if(b===a.OneFactor)return Lb.ONE;if(b===a.SrcColorFactor)return Lb.SRC_COLOR;if(b===a.OneMinusSrcColorFactor)return Lb.ONE_MINUS_SRC_COLOR;if(b===a.SrcAlphaFactor)return Lb.SRC_ALPHA;if(b===a.OneMinusSrcAlphaFactor)return Lb.ONE_MINUS_SRC_ALPHA;if(b===a.DstAlphaFactor)return Lb.DST_ALPHA;if(b===a.OneMinusDstAlphaFactor)return Lb.ONE_MINUS_DST_ALPHA;if(b===a.DstColorFactor)return Lb.DST_COLOR;if(b===a.OneMinusDstColorFactor)return Lb.ONE_MINUS_DST_COLOR;if(b===a.SrcAlphaSaturateFactor)return Lb.SRC_ALPHA_SATURATE;if(c=uc.get("WEBGL_compressed_texture_s3tc"),null!==c){if(b===a.RGB_S3TC_DXT1_Format)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(b===a.RGBA_S3TC_DXT1_Format)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(b===a.RGBA_S3TC_DXT3_Format)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(b===a.RGBA_S3TC_DXT5_Format)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(c=uc.get("WEBGL_compressed_texture_atc"),void 0!==c){if(b===a.RGB_ATC_Format)return c.COMPRESSED_RGB_ATC_WEBGL;if(b===a.RGBA_ATC_EXPLICIT_ALPHA_Format)return c.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL;if(b===a.RGBA_ATC_INTERP_ALPHA_Format)return c.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL}if(c=uc.get("WEBGL_compressed_texture_pvrtc"),null!==c){if(b===a.RGB_PVRTC_4BPPV1_Format)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(b===a.RGB_PVRTC_2BPPV1_Format)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(b===a.RGBA_PVRTC_4BPPV1_Format)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(b===a.RGBA_PVRTC_2BPPV1_Format)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(c=uc.get("EXT_blend_minmax"),null!==c){if(b===a.MinEquation)return c.MIN_EXT;if(b===a.MaxEquation)return c.MAX_EXT}return 0}function ob(b){if(Cc&&b&&b.skeleton&&b.skeleton.useVertexTexture)return 1024;var c=Lb.getParameter(Lb.MAX_VERTEX_UNIFORM_VECTORS),d=Math.floor((c-20)/4),e=d;return void 0!==b&&b instanceof a.SkinnedMesh&&(e=Math.min(b.skeleton.bones.length,e),e<b.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+b.skeleton.bones.length+", this GPU supports just "+e+" (try OpenGL instead of ANGLE)")),e}function pb(b){for(var c=0,d=0,e=0,f=0,g=0,h=b.length;h>g;g++){var i=b[g];i.onlyShadow||i.visible===!1||(i instanceof a.DirectionalLight&&(c<Mb.maxDirLights||-1===Mb.maxDirLights)&&c++,i instanceof a.PointLight&&(d<Mb.maxPointLights||-1===Mb.maxPointLights)&&d++,i instanceof a.SpotLight&&(e<Mb.maxSpotLights||-1===Mb.maxSpotLights)&&e++,i instanceof a.HemisphereLight&&(f<Mb.maxHemiLights||-1===Mb.maxHemiLights)&&f++)}return{directional:c,point:d,spot:e,hemi:f}}function qb(b){for(var c=0,d=0,e=b.length;e>d;d++){var f=b[d];f.castShadow&&(f instanceof a.SpotLight&&c++,f instanceof a.DirectionalLight&&!f.shadowCascade&&c++)}return-1===Mb.maxShadows?c:Math.min(c,Mb.maxShadows)}console.log("THREE.WebGLRenderer",a.REVISION),b=b||{};var rb=void 0!==b.canvas?b.canvas:document.createElement("canvas"),sb=void 0!==b.context?b.context:null,tb=1,ub=void 0!==b.precision?b.precision:"highp",vb=void 0!==b.alpha?b.alpha:!1,wb=void 0!==b.depth?b.depth:!0,xb=void 0!==b.stencil?b.stencil:!0,yb=void 0!==b.antialias?b.antialias:!1,zb=void 0!==b.premultipliedAlpha?b.premultipliedAlpha:!0,Ab=void 0!==b.preserveDrawingBuffer?b.preserveDrawingBuffer:!1,Bb=void 0!==b.logarithmicDepthBuffer?b.logarithmicDepthBuffer:!1,Cb=new a.Color(0),Db=0,Eb=[],Fb={},Gb=[],Hb=[],Ib=[],Jb=[],Kb=[];this.domElement=rb,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.hdrOutputEnabled=!1,this.hdrOutputType=a.HDRFull,this.shadowMapEnabled=!1,this.shadowMapType=a.PCFShadowMap,this.shadowMapCullFace=a.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxShadows=-1,this.maxDirLights=-1,this.maxPointLights=-1,this.maxSpotLights=-1,this.maxHemiLights=-1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Lb,Mb=this,Nb=[],Ob=null,Pb=null,Qb=-1,Rb="",Sb=null,Tb=0,Ub=-1,Vb=-1,Wb=-1,Xb=-1,Yb=-1,Zb=-1,$b=-1,_b=-1,ac=null,bc=null,cc=null,dc=null,ec=0,fc=0,gc=rb.width,hc=rb.height,ic=0,jc=0,kc=new Uint8Array(16),lc=new Uint8Array(16),mc=new a.Frustum,nc=new a.Matrix4,oc=(new a.Matrix4,new a.Vector3),pc=new a.Vector3,qc=!0,rc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{var sc={alpha:vb,depth:wb,stencil:xb,antialias:yb,premultipliedAlpha:zb,preserveDrawingBuffer:Ab};if(Lb=sb||rb.getContext("webgl",sc)||rb.getContext("experimental-webgl",sc),null===Lb)throw null!==rb.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";rb.addEventListener("webglcontextlost",function(a){a.preventDefault(),wc(),vc(),Fb={}
},!1)}catch(tc){console.error(tc)}void 0===Lb.getShaderPrecisionFormat&&(Lb.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var uc=new a.WebGLExtensions(Lb);uc.get("OES_texture_float"),uc.get("OES_texture_float_linear"),uc.get("OES_standard_derivatives"),Bb&&uc.get("EXT_frag_depth");var vc=function(){Lb.clearColor(0,0,0,1),Lb.clearDepth(1),Lb.clearStencil(0),Lb.enable(Lb.DEPTH_TEST),Lb.depthFunc(Lb.LEQUAL),Lb.frontFace(Lb.CCW),Lb.cullFace(Lb.BACK),Lb.enable(Lb.CULL_FACE),Lb.enable(Lb.BLEND),Lb.blendEquation(Lb.FUNC_ADD),Lb.blendFunc(Lb.SRC_ALPHA,Lb.ONE_MINUS_SRC_ALPHA),Lb.viewport(ec,fc,gc,hc),Lb.clearColor(Cb.r,Cb.g,Cb.b,Db)},wc=function(){Ob=null,Sb=null,Wb=-1,$b=-1,_b=-1,Ub=-1,Vb=-1,Rb="",Qb=-1,qc=!0;for(var a=0;a<kc.length;a++)kc[a]=0};vc(),this.context=Lb;var xc=Lb.getParameter(Lb.MAX_TEXTURE_IMAGE_UNITS),yc=Lb.getParameter(Lb.MAX_VERTEX_TEXTURE_IMAGE_UNITS),zc=Lb.getParameter(Lb.MAX_TEXTURE_SIZE),Ac=Lb.getParameter(Lb.MAX_CUBE_MAP_TEXTURE_SIZE),Bc=yc>0,Cc=Bc&&uc.get("OES_texture_float"),Dc=Lb.getShaderPrecisionFormat(Lb.VERTEX_SHADER,Lb.HIGH_FLOAT),Ec=Lb.getShaderPrecisionFormat(Lb.VERTEX_SHADER,Lb.MEDIUM_FLOAT),Fc=(Lb.getShaderPrecisionFormat(Lb.VERTEX_SHADER,Lb.LOW_FLOAT),Lb.getShaderPrecisionFormat(Lb.FRAGMENT_SHADER,Lb.HIGH_FLOAT)),Gc=Lb.getShaderPrecisionFormat(Lb.FRAGMENT_SHADER,Lb.MEDIUM_FLOAT),Hc=(Lb.getShaderPrecisionFormat(Lb.FRAGMENT_SHADER,Lb.LOW_FLOAT),function(){var a;return function(){if(void 0!==a)return a;if(a=[],uc.get("WEBGL_compressed_texture_pvrtc")||uc.get("WEBGL_compressed_texture_s3tc"))for(var b=Lb.getParameter(Lb.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return a}}()),Ic=Dc.precision>0&&Fc.precision>0,Jc=Ec.precision>0&&Gc.precision>0;"highp"!==ub||Ic||(Jc?(ub="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(ub="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==ub||Jc||(ub="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var Kc=new a.ShadowMapPlugin(this,Eb,Fb,Gb),Lc=new a.SpritePlugin(this,Jb),Mc=new a.LensFlarePlugin(this,Kb);this.getContext=function(){return Lb},this.forceContextLoss=function(){uc.get("WEBGL_lose_context").loseContext()},this.supportsVertexTextures=function(){return Bc},this.supportsFloatTextures=function(){return uc.get("OES_texture_float")},this.supportsStandardDerivatives=function(){return uc.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return uc.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTextureATC=function(){return uc.get("WEBGL_compressed_texture_atc")},this.supportsCompressedTexturePVRTC=function(){return uc.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return uc.get("EXT_blend_minmax")},this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=uc.get("EXT_texture_filter_anisotropic");return a=null!==b?Lb.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}(),this.getMaxTextureSize=function(){return zc},this.getMaxCubemapSize=function(){return Ac},this.getMaxTextures=function(){return xc},this.getMaxVertexTextures=function(){return yc},this.setPrecision=function(a){ub=void 0!==a?a:"highp"},this.getLights=function(){return rc},this.getPrecision=function(){return ub},this.dispose=function(){var a;for(a in this.renderPluginsPre)this.renderPluginsPre[a].dispose();for(a in this.renderPluginsPost)this.renderPluginsPost[a].dispose();this.renderPluginsPre=null,this.renderPluginsPost=null,Hb=null,Ib=null,rb=null,Nb=null,Mb=null},this.getPixelRatio=function(){return tb},this.setPixelRatio=function(a){tb=a},this.setSize=function(a,b,c){rb.width=a*tb,rb.height=b*tb,c!==!1&&(rb.style.width=a+"px",rb.style.height=b+"px"),this.setViewport(0,0,a,b)},this.setViewport=function(a,b,c,d){ec=a*tb,fc=b*tb,gc=c*tb,hc=d*tb,Lb.viewport(ec,fc,gc,hc)},this.getViewport=function(){var a={x:ec/tb,y:fc/tb,width:gc/tb,height:hc/tb};return a},this.setScissor=function(a,b,c,d){Lb.scissor(a*tb,b*tb,c*tb,d*tb)},this.enableScissorTest=function(a){a?Lb.enable(Lb.SCISSOR_TEST):Lb.disable(Lb.SCISSOR_TEST)},this.getClearColor=function(){return Cb},this.setClearColor=function(a,b){Cb.set(a),Db=void 0!==b?b:1,Lb.clearColor(Cb.r,Cb.g,Cb.b,Db)},this.getClearAlpha=function(){return Db},this.setClearAlpha=function(a){Db=a,Lb.clearColor(Cb.r,Cb.g,Cb.b,Db)},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=Lb.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=Lb.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=Lb.STENCIL_BUFFER_BIT),Lb.clear(d)},this.clearColor=function(){Lb.clear(Lb.COLOR_BUFFER_BIT)},this.clearDepth=function(){Lb.clear(Lb.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Lb.clear(Lb.STENCIL_BUFFER_BIT)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.resetGLState=wc;var Nc=function(a){var b=a.target;b.traverse(function(a){a.removeEventListener("remove",Nc),J(a)})},Oc=function(a){var b=a.target;b.removeEventListener("dispose",Oc),Tc(b)},Pc=function(a){var b=a.target;b.removeEventListener("dispose",Pc),Uc(b),Mb.info.memory.textures--},Qc=function(a){var b=a.target;window.VAPI&&window.VAPI.globalEvents.trigger("veroldEngine:textureDebugger:unregisterTexture",b),b.removeEventListener("dispose",Qc),Vc(b),Mb.info.memory.textures--},Rc=function(a){var b=a.target;b.removeEventListener("dispose",Rc),Wc(b)},Sc=function(a){for(var b=["__webglVertexBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglColorBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","__webglLineDistanceBuffer"],c=0,d=b.length;d>c;c++){var e=b[c];void 0!==a[e]&&(Lb.deleteBuffer(a[e]),delete a[e])}if(void 0!==a.__webglCustomAttributesList){for(var e in a.__webglCustomAttributesList)Lb.deleteBuffer(a.__webglCustomAttributesList[e].buffer);delete a.__webglCustomAttributesList}Mb.info.memory.geometries--},Tc=function(b){if(delete b.__webglInit,b instanceof a.BufferGeometry){for(var c in b.attributes){var d=b.attributes[c];void 0!==d.buffer&&(Lb.deleteBuffer(d.buffer),delete d.buffer)}Mb.info.memory.geometries--}else{var e=Xc[b.id];if(void 0!==e){for(var f=0,g=e.length;g>f;f++){var h=e[f];if(void 0!==h.numMorphTargets){for(var i=0,j=h.numMorphTargets;j>i;i++)Lb.deleteBuffer(h.__webglMorphTargetsBuffers[i]);delete h.__webglMorphTargetsBuffers}if(void 0!==h.numMorphNormals){for(var i=0,j=h.numMorphNormals;j>i;i++)Lb.deleteBuffer(h.__webglMorphNormalsBuffers[i]);delete h.__webglMorphNormalsBuffers}Sc(h)}delete Xc[b.id]}else Sc(b)}Rb=""},Uc=function(a){if(a.image&&a.image.__webglTextureCube)Lb.deleteTexture(a.image.__webglTextureCube),delete a.image.__webglTextureCube;else{if(void 0===a.__webglInit)return;Lb.deleteTexture(a.__webglTexture),delete a.__webglTexture,delete a.__webglInit}},Vc=function(b){if(b&&void 0!==b.__webglTexture){if(Lb.deleteTexture(b.__webglTexture),delete b.__webglTexture,b instanceof a.WebGLRenderTargetCube)for(var c=0;6>c;c++)Lb.deleteFramebuffer(b.__webglFramebuffer[c]),Lb.deleteRenderbuffer(b.__webglRenderbuffer[c]);else Lb.deleteFramebuffer(b.__webglFramebuffer),Lb.deleteRenderbuffer(b.__webglRenderbuffer);delete b.__webglFramebuffer,delete b.__webglRenderbuffer}},Wc=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e,f=!1;for(c=0,d=Nb.length;d>c;c++)if(e=Nb[c],e.program===b){e.usedTimes--,0===e.usedTimes&&(f=!0);break}if(f===!0){var g=[];for(c=0,d=Nb.length;d>c;c++)e=Nb[c],e.program!==b&&g.push(e);Nb=g,Lb.deleteProgram(b),Mb.info.memory.programs--}}};this.renderBufferImmediate=function(b,c,d){if(p(),b.hasPositions&&!b.__webglVertexBuffer&&(b.__webglVertexBuffer=Lb.createBuffer()),b.hasNormals&&!b.__webglNormalBuffer&&(b.__webglNormalBuffer=Lb.createBuffer()),b.hasUvs&&!b.__webglUvBuffer&&(b.__webglUvBuffer=Lb.createBuffer()),b.hasColors&&!b.__webglColorBuffer&&(b.__webglColorBuffer=Lb.createBuffer()),b.hasPositions&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglVertexBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,b.positionArray,Lb.DYNAMIC_DRAW),q(c.attributes.position),Lb.vertexAttribPointer(c.attributes.position,3,Lb.FLOAT,!1,0,0)),b.hasNormals){if(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglNormalBuffer),d.shading===a.FlatShading){var e,f,g,h,i,j,k,l,m,n,o,s,t,u,v=3*b.count;for(u=0;v>u;u+=9)t=b.normalArray,h=t[u],k=t[u+1],n=t[u+2],i=t[u+3],l=t[u+4],o=t[u+5],j=t[u+6],m=t[u+7],s=t[u+8],e=(h+i+j)/3,f=(k+l+m)/3,g=(n+o+s)/3,t[u]=e,t[u+1]=f,t[u+2]=g,t[u+3]=e,t[u+4]=f,t[u+5]=g,t[u+6]=e,t[u+7]=f,t[u+8]=g}Lb.bufferData(Lb.ARRAY_BUFFER,b.normalArray,Lb.DYNAMIC_DRAW),q(c.attributes.normal),Lb.vertexAttribPointer(c.attributes.normal,3,Lb.FLOAT,!1,0,0)}b.hasUvs&&d.map&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglUvBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,b.uvArray,Lb.DYNAMIC_DRAW),q(c.attributes.uv),Lb.vertexAttribPointer(c.attributes.uv,2,Lb.FLOAT,!1,0,0)),b.hasColors&&d.vertexColors!==a.NoColors&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,b.__webglColorBuffer),Lb.bufferData(Lb.ARRAY_BUFFER,b.colorArray,Lb.DYNAMIC_DRAW),q(c.attributes.color),Lb.vertexAttribPointer(c.attributes.color,3,Lb.FLOAT,!1,0,0)),r(),Lb.drawArrays(Lb.TRIANGLES,0,b.count),b.count=0},this.renderBufferDirect=function(b,c,d,e,f,g,h){if(e.visible!==!1){G(g);var i=M(b,c,d,e,g),j=!1,k=e.wireframe?1:0,l="direct_"+f.id+"_"+i.id+"_"+k;if(l!==Rb&&(Rb=l,j=!0),j&&p(),g instanceof a.Mesh){var m=e.wireframe===!0?Lb.LINES:Lb.TRIANGLES,n=f.attributes.index;if(n){var q,r;n.array instanceof Uint32Array&&uc.get("OES_element_index_uint")?(q=Lb.UNSIGNED_INT,r=4):(q=Lb.UNSIGNED_SHORT,r=2);var s=f.offsets;if(0===s.length)j&&(o(e,i,f,0),Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,n.buffer)),Lb.drawElements(m,n.array.length,q,0),Mb.info.render.calls++,Mb.info.render.vertices+=n.array.length,Mb.info.render.faces+=n.array.length/3;else{j=!0;for(var t=0,u=h.length;u>t;t++){var v=s[h[t]];j&&(o(e,i,f,v.index),Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,n.buffer)),Lb.drawElements(m,v.count,q,v.start*r),Mb.info.render.calls++,Mb.info.render.vertices+=v.count,Mb.info.render.faces+=v.count/3}}}else if(!e.wireframe){j&&o(e,i,f,0);var w=f.attributes.position;Lb.drawArrays(m,0,w.array.length/3),Mb.info.render.calls++,Mb.info.render.vertices+=w.array.length/3,Mb.info.render.faces+=w.array.length/9}}else if(g instanceof a.PointCloud){var m=Lb.POINTS,n=f.attributes.index;if(n){var q,r;n.array instanceof Uint32Array&&uc.get("OES_element_index_uint")?(q=Lb.UNSIGNED_INT,r=4):(q=Lb.UNSIGNED_SHORT,r=2);var s=f.offsets;if(0===s.length)j&&(o(e,i,f,0),Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,n.buffer)),Lb.drawElements(m,n.array.length,q,0),Mb.info.render.calls++,Mb.info.render.points+=n.array.length;else{s.length>1&&(j=!0);for(var t=0,u=s.length;u>t;t++){var x=s[t].index;j&&(o(e,i,f,x),Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,n.buffer)),Lb.drawElements(m,s[t].count,q,s[t].start*r),Mb.info.render.calls++,Mb.info.render.points+=s[t].count}}}else{j&&o(e,i,f,0);var w=f.attributes.position,s=f.offsets;if(0===s.length)Lb.drawArrays(m,0,w.array.length/3),Mb.info.render.calls++,Mb.info.render.points+=w.array.length/3;else for(var t=0,u=s.length;u>t;t++)Lb.drawArrays(m,s[t].index,s[t].count),Mb.info.render.calls++,Mb.info.render.points+=s[t].count}}else if(g instanceof a.Line){var m=g.mode===a.LineStrip?Lb.LINE_STRIP:Lb.LINES;db(e.linewidth);var n=f.attributes.index;if(n){var q,r;n.array instanceof Uint32Array?(q=Lb.UNSIGNED_INT,r=4):(q=Lb.UNSIGNED_SHORT,r=2);var s=f.offsets;if(0===s.length)j&&(o(e,i,f,0),Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,n.buffer)),Lb.drawElements(m,n.array.length,q,0),Mb.info.render.calls++,Mb.info.render.vertices+=n.array.length;else{s.length>1&&(j=!0);for(var t=0,u=s.length;u>t;t++){var x=s[t].index;j&&(o(e,i,f,x),Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,n.buffer)),Lb.drawElements(m,s[t].count,q,s[t].start*r),Mb.info.render.calls++,Mb.info.render.vertices+=s[t].count}}}else{j&&o(e,i,f,0);var w=f.attributes.position,s=f.offsets;if(0===s.length)Lb.drawArrays(m,0,w.array.length/3),Mb.info.render.calls++,Mb.info.render.vertices+=w.array.length/3;else for(var t=0,u=s.length;u>t;t++)Lb.drawArrays(m,s[t].index,s[t].count),Mb.info.render.calls++,Mb.info.render.vertices+=s[t].count}}}},this.renderBuffer=function(b,c,d,e,f,g){if(e.visible!==!1){G(g);var h=M(b,c,d,e,g),i=h.attributes,j=!1,k=e.wireframe?1:0,l=f.id+"_"+h.id+"_"+k;if(l!==Rb&&(Rb=l,j=!0),j&&p(),!e.morphTargets&&i.position>=0?j&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglVertexBuffer),q(i.position),Lb.vertexAttribPointer(i.position,3,Lb.FLOAT,!1,0,0)):g.morphTargetBase&&s(e,f,g),j){if(f.__webglCustomAttributesList)for(var m=0,n=f.__webglCustomAttributesList.length;n>m;m++){var o=f.__webglCustomAttributesList[m];i[o.buffer.belongsToAttribute]>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,o.buffer),q(i[o.buffer.belongsToAttribute]),Lb.vertexAttribPointer(i[o.buffer.belongsToAttribute],o.size,Lb.FLOAT,!1,0,0))}i.color>=0&&(g.geometry.colors.length>0||g.geometry.faces.length>0?(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglColorBuffer),q(i.color),Lb.vertexAttribPointer(i.color,3,Lb.FLOAT,!1,0,0)):void 0!==e.defaultAttributeValues&&Lb.vertexAttrib3fv(i.color,e.defaultAttributeValues.color)),i.normal>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglNormalBuffer),q(i.normal),Lb.vertexAttribPointer(i.normal,3,Lb.FLOAT,!1,0,0)),i.tangent>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglTangentBuffer),q(i.tangent),Lb.vertexAttribPointer(i.tangent,4,Lb.FLOAT,!1,0,0)),i.uv>=0&&(g.geometry.faceVertexUvs[0]?(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglUVBuffer),q(i.uv),Lb.vertexAttribPointer(i.uv,2,Lb.FLOAT,!1,0,0)):void 0!==e.defaultAttributeValues&&Lb.vertexAttrib2fv(i.uv,e.defaultAttributeValues.uv)),i.uv2>=0&&(g.geometry.faceVertexUvs[1]?(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglUV2Buffer),q(i.uv2),Lb.vertexAttribPointer(i.uv2,2,Lb.FLOAT,!1,0,0)):void 0!==e.defaultAttributeValues&&Lb.vertexAttrib2fv(i.uv2,e.defaultAttributeValues.uv2)),e.skinning&&i.skinIndex>=0&&i.skinWeight>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglSkinIndicesBuffer),q(i.skinIndex),Lb.vertexAttribPointer(i.skinIndex,4,Lb.FLOAT,!1,0,0),Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglSkinWeightsBuffer),q(i.skinWeight),Lb.vertexAttribPointer(i.skinWeight,4,Lb.FLOAT,!1,0,0)),i.lineDistance>=0&&(Lb.bindBuffer(Lb.ARRAY_BUFFER,f.__webglLineDistanceBuffer),q(i.lineDistance),Lb.vertexAttribPointer(i.lineDistance,1,Lb.FLOAT,!1,0,0))}if(r(),g instanceof a.Mesh){var t=f.__typeArray===Uint32Array?Lb.UNSIGNED_INT:Lb.UNSIGNED_SHORT;e.wireframe?(db(e.wireframeLinewidth),j&&Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,f.__webglLineBuffer),Lb.drawElements(Lb.LINES,f.__webglLineCount,t,0)):(j&&Lb.bindBuffer(Lb.ELEMENT_ARRAY_BUFFER,f.__webglFaceBuffer),Lb.drawElements(Lb.TRIANGLES,f.__webglFaceCount,t,0)),Mb.info.render.calls++,Mb.info.render.vertices+=f.__webglFaceCount,Mb.info.render.faces+=f.__webglFaceCount/3}else if(g instanceof a.Line){var u=g.mode===a.LineStrip?Lb.LINE_STRIP:Lb.LINES;db(e.linewidth),Lb.drawArrays(u,0,f.__webglLineCount),Mb.info.render.calls++}else g instanceof a.PointCloud&&(Lb.drawArrays(Lb.POINTS,0,f.__webglParticleCount),Mb.info.render.calls++,Mb.info.render.points+=f.__webglParticleCount)}},this.render=function(b,c,d,e){if(c instanceof a.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var f=b.fog;Rb="",Qb=-1,Sb=null,qc=!0,b.autoUpdate===!0&&b.updateMatrixWorld(),void 0===c.parent&&c.updateMatrixWorld(),b.traverse(function(b){b instanceof a.SkinnedMesh&&b.skeleton.update()}),c.matrixWorldInverse.getInverse(c.matrixWorld),nc.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),mc.setFromMatrix(nc),Eb.length=0,Hb.length=0,Ib.length=0,Jb.length=0,Kb.length=0,w(b),Mb.sortObjects===!0&&(Hb.sort(t),Ib.sort(u)),Kc.render(b,c),Mb.info.render.calls=0,Mb.info.render.vertices=0,Mb.info.render.faces=0,Mb.info.render.points=0,this.setRenderTarget(d),(this.autoClear||e)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);for(var g=0,h=Gb.length;h>g;g++){var i=Gb[g],j=i.object;j.visible&&(_(j,c),z(i))}if(b.overrideMaterial){var k=b.overrideMaterial;k["static"]?(this.setBlending(k["static"].blending,k["static"].blendEquation,k["static"].blendSrc,k["static"].blendDst),this.setDepthTest(k["static"].depthTest),this.setDepthWrite(k["static"].depthWrite),eb(k["static"].polygonOffset,k["static"].polygonOffsetFactor,k["static"].polygonOffsetUnits)):(this.setBlending(k.blending,k.blendEquation,k.blendSrc,k.blendDst),this.setDepthTest(k.depthTest),this.setDepthWrite(k.depthWrite),eb(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits)),x(Hb,c,Eb,f,!0,k),x(Ib,c,Eb,f,!0,k),y(Gb,"",c,Eb,f,!1,k)}else{var k=null;this.setBlending(a.NoBlending),x(Hb,c,Eb,f,!1,k),y(Gb,"opaque",c,Eb,f,!1,k),x(Ib,c,Eb,f,!0,k),y(Gb,"transparent",c,Eb,f,!0,k)}Lc.render(b,c),Mc.render(b,c,ic,jc),d&&d.generateMipmaps&&d.minFilter!==a.NearestFilter&&d.minFilter!==a.LinearFilter&&lb(d),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(a,b,c,d,e){var f=M(a,b,c,d,e);Rb="",Mb.setMaterialFaces(d),e.immediateRenderCallback?e.immediateRenderCallback(f,Lb,mc):e.render(function(a){Mb.renderBufferImmediate(a,f,d)})};var Xc={},Yc=0,Zc={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(b,c){b===a.CullFaceNone?Lb.disable(Lb.CULL_FACE):(Lb.frontFace(c===a.FrontFaceDirectionCW?Lb.CW:Lb.CCW),Lb.cullFace(b===a.CullFaceBack?Lb.BACK:b===a.CullFaceFront?Lb.FRONT:Lb.FRONT_AND_BACK),Lb.enable(Lb.CULL_FACE))},this.setMaterialFaces=function(b){var c=b.side===a.DoubleSide,d=b.side===a.BackSide;Ub!==c&&(c?Lb.disable(Lb.CULL_FACE):Lb.enable(Lb.CULL_FACE),Ub=c),Vb!==d&&(Lb.frontFace(d?Lb.CW:Lb.CCW),Vb=d)},this.setDepthTest=function(a){$b!==a&&(a?Lb.enable(Lb.DEPTH_TEST):Lb.disable(Lb.DEPTH_TEST),$b=a)},this.setDepthWrite=function(a){_b!==a&&(Lb.depthMask(a),_b=a)},this.setBlending=function(b,c,d,e){b!==Wb&&(b===a.NoBlending?Lb.disable(Lb.BLEND):b===a.AdditiveBlending?(Lb.enable(Lb.BLEND),Lb.blendEquation(Lb.FUNC_ADD),Lb.blendFunc(Lb.SRC_ALPHA,Lb.ONE)):b===a.SubtractiveBlending?(Lb.enable(Lb.BLEND),Lb.blendEquation(Lb.FUNC_ADD),Lb.blendFunc(Lb.ZERO,Lb.ONE_MINUS_SRC_COLOR)):b===a.MultiplyBlending?(Lb.enable(Lb.BLEND),Lb.blendEquation(Lb.FUNC_ADD),Lb.blendFunc(Lb.ZERO,Lb.SRC_COLOR)):b===a.CustomBlending?Lb.enable(Lb.BLEND):(Lb.enable(Lb.BLEND),Lb.blendEquationSeparate(Lb.FUNC_ADD,Lb.FUNC_ADD),Lb.blendFuncSeparate(Lb.SRC_ALPHA,Lb.ONE_MINUS_SRC_ALPHA,Lb.ONE,Lb.ONE_MINUS_SRC_ALPHA)),Wb=b),b===a.CustomBlending?(c!==Xb&&(Lb.blendEquation(nb(c)),Xb=c),(d!==Yb||e!==Zb)&&(Lb.blendFunc(nb(d),nb(e)),Yb=d,Zb=e)):(Xb=null,Yb=null,Zb=null)},this.uploadTexture=function(b){void 0===b.__webglInit&&(b.__webglInit=!0,b.addEventListener("dispose",Pc),b.__webglTexture=Lb.createTexture(),Mb.info.memory.textures++),Lb.bindTexture(Lb.TEXTURE_2D,b.__webglTexture),Lb.pixelStorei(Lb.UNPACK_FLIP_Y_WEBGL,b.flipY),Lb.pixelStorei(Lb.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b.premultiplyAlpha),Lb.pixelStorei(Lb.UNPACK_ALIGNMENT,b.unpackAlignment),b.image=gb(b.image,zc);var c=b.image,d=a.Math.isPowerOfTwo(c.width)&&a.Math.isPowerOfTwo(c.height),e=nb(b.format),f=nb(b.type);fb(Lb.TEXTURE_2D,b,d);var g,h=b.mipmaps;if(b instanceof a.DataTexture)if(h.length>0&&d){for(var i=0,j=h.length;j>i;i++)g=h[i],Lb.texImage2D(Lb.TEXTURE_2D,i,e,g.width,g.height,0,e,f,g.data);b.generateMipmaps=!1}else Lb.texImage2D(Lb.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(b instanceof a.CompressedTexture)for(var i=0,j=h.length;j>i;i++)g=h[i],b.format!==a.RGBAFormat&&b.format!==a.RGBFormat?Hc().indexOf(e)>-1?Lb.compressedTexImage2D(Lb.TEXTURE_2D,i,e,g.width,g.height,0,g.data):console.warn("Attempt to load unsupported compressed texture format"):Lb.texImage2D(Lb.TEXTURE_2D,i,e,g.width,g.height,0,e,f,g.data);else if(h.length>0&&d){for(var i=0,j=h.length;j>i;i++)g=h[i],Lb.texImage2D(Lb.TEXTURE_2D,i,e,e,f,g);b.generateMipmaps=!1}else Lb.texImage2D(Lb.TEXTURE_2D,0,e,e,f,b.image);b.generateMipmaps&&d&&Lb.generateMipmap(Lb.TEXTURE_2D),b.needsUpdate=!1,b.onUpdate&&b.onUpdate()},this.setTexture=function(a,b){Lb.activeTexture(Lb.TEXTURE0+b),a.needsUpdate?Mb.uploadTexture(a):Lb.bindTexture(Lb.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(b){var c=b instanceof a.WebGLRenderTargetCube;if(b&&void 0===b.__webglFramebuffer){void 0===b.depthBuffer&&(b.depthBuffer=!0),void 0===b.stencilBuffer&&(b.stencilBuffer=!0),b.addEventListener("dispose",Qc),b.__webglTexture=Lb.createTexture(),Mb.info.memory.textures++;var d=a.Math.isPowerOfTwo(b.width)&&a.Math.isPowerOfTwo(b.height),e=nb(b.format),f=nb(b.type);if(c){b.__webglFramebuffer=[],b.__webglRenderbuffer=[],Lb.bindTexture(Lb.TEXTURE_CUBE_MAP,b.__webglTexture),fb(Lb.TEXTURE_CUBE_MAP,b,d);for(var g=0;6>g;g++)b.__webglFramebuffer[g]=Lb.createFramebuffer(),b.__webglRenderbuffer[g]=Lb.createRenderbuffer(),Lb.texImage2D(Lb.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,e,b.width,b.height,0,e,f,null),jb(b.__webglFramebuffer[g],b,Lb.TEXTURE_CUBE_MAP_POSITIVE_X+g),kb(b.__webglRenderbuffer[g],b);d&&Lb.generateMipmap(Lb.TEXTURE_CUBE_MAP)}else b.__webglFramebuffer=Lb.createFramebuffer(),b.__webglRenderbuffer=b.shareDepthFrom?b.shareDepthFrom.__webglRenderbuffer:Lb.createRenderbuffer(),Lb.bindTexture(Lb.TEXTURE_2D,b.__webglTexture),fb(Lb.TEXTURE_2D,b,d),Lb.texImage2D(Lb.TEXTURE_2D,0,e,b.width,b.height,0,e,f,null),jb(b.__webglFramebuffer,b,Lb.TEXTURE_2D),b.shareDepthFrom?b.depthBuffer&&!b.stencilBuffer?Lb.framebufferRenderbuffer(Lb.FRAMEBUFFER,Lb.DEPTH_ATTACHMENT,Lb.RENDERBUFFER,b.__webglRenderbuffer):b.depthBuffer&&b.stencilBuffer&&Lb.framebufferRenderbuffer(Lb.FRAMEBUFFER,Lb.DEPTH_STENCIL_ATTACHMENT,Lb.RENDERBUFFER,b.__webglRenderbuffer):kb(b.__webglRenderbuffer,b),d&&Lb.generateMipmap(Lb.TEXTURE_2D);c?Lb.bindTexture(Lb.TEXTURE_CUBE_MAP,null):Lb.bindTexture(Lb.TEXTURE_2D,null),Lb.bindRenderbuffer(Lb.RENDERBUFFER,null),Lb.bindFramebuffer(Lb.FRAMEBUFFER,null)}var h,i,j,k,l;b?(h=c?b.__webglFramebuffer[b.activeCubeFace]:b.__webglFramebuffer,i=b.width,j=b.height,k=0,l=0):(h=null,i=gc,j=hc,k=ec,l=fc),h!==Pb&&(Lb.bindFramebuffer(Lb.FRAMEBUFFER,h),Lb.viewport(k,l,i,j),Pb=h),ic=i,jc=j},this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},a.WebGLRenderTarget=function(b,c,d){this.uuid=a.Math.generateUUID(),this.name="",this.width=b,this.height=c,d=d||{},this.wrapS=void 0!==d.wrapS?d.wrapS:a.ClampToEdgeWrapping,this.wrapT=void 0!==d.wrapT?d.wrapT:a.ClampToEdgeWrapping,this.magFilter=void 0!==d.magFilter?d.magFilter:a.LinearFilter,this.minFilter=void 0!==d.minFilter?d.minFilter:a.LinearMipMapLinearFilter,this.anisotropy=void 0!==d.anisotropy?d.anisotropy:1,this.offset=new a.Vector2(0,0),this.repeat=new a.Vector2(1,1),this.format=void 0!==d.format?d.format:a.RGBAFormat,this.type=void 0!==d.type?d.type:a.UnsignedByteType,this.depthBuffer=void 0!==d.depthBuffer?d.depthBuffer:!0,this.stencilBuffer=void 0!==d.stencilBuffer?d.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null,window.VAPI&&window.VAPI.globalEvents.trigger("veroldEngine:textureDebugger:registerTexture",this)},a.WebGLRenderTarget.prototype={constructor:a.WebGLRenderTarget,setSize:function(a,b){this.width=a,this.height=b},clone:function(){var b=new a.WebGLRenderTarget(this.width,this.height);return b.name=this.name,b.wrapS=this.wrapS,b.wrapT=this.wrapT,b.magFilter=this.magFilter,b.minFilter=this.minFilter,b.anisotropy=this.anisotropy,b.offset.copy(this.offset),b.repeat.copy(this.repeat),b.format=this.format,b.type=this.type,b.depthBuffer=this.depthBuffer,b.stencilBuffer=this.stencilBuffer,b.generateMipmaps=this.generateMipmaps,b.shareDepthFrom=this.shareDepthFrom,b},dispose:function(){this.dispatchEvent({type:"dispose"})}},a.EventDispatcher.prototype.apply(a.WebGLRenderTarget.prototype),a.WebGLRenderTargetCube=function(b,c,d){a.WebGLRenderTarget.call(this,b,c,d),this.activeCubeFace=0},a.WebGLRenderTargetCube.prototype=Object.create(a.WebGLRenderTarget.prototype),a.WebGLRenderTargetCube.prototype.constructor=a.WebGLRenderTargetCube,a.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case"OES_texture_float":d=a.getExtension("OES_texture_float");break;case"OES_texture_float_linear":d=a.getExtension("OES_texture_float_linear");break;case"OES_texture_half_float_linear":d=a.getExtension("OES_texture_half_float_linear");break;case"OES_standard_derivatives":d=a.getExtension("OES_standard_derivatives");break;case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return null===d&&console.log("THREE.WebGLRenderer: "+c+" extension not supported."),b[c]=d,d}},a.WebGLProgram=function(){var b=0,c=function(a){var b,c,d=[];for(var e in a)b=a[e],b!==!1&&(c="#define "+e+" "+b,d.push(c));return d.join("\n")},d=function(a,b,c){for(var d={},e=0,f=c.length;f>e;e++){var g=c[e];d[g]=a.getUniformLocation(b,g)}return d},e=function(a,b,c){for(var d={},e=0,f=c.length;f>e;e++){var g=c[e];d[g]=a.getAttribLocation(b,g)}return d};return function(f,g,h,i){var j=f,k=j.context,l=h.defines,m=h.__webglShader.uniforms,n=h.attributes,o=h.__webglShader.vertexShader,p=h.__webglShader.fragmentShader,q=h.index0AttributeName;void 0===q&&i.morphTargets===!0&&(q="position");var r="SHADOWMAP_TYPE_BASIC";i.shadowMapType===a.PCFShadowMap?r="SHADOWMAP_TYPE_PCF":i.shadowMapType===a.PCFSoftShadowMap&&(r="SHADOWMAP_TYPE_PCF_SOFT");var s=null;if(j.hdrOutputEnabled&&i.hdrOutputEnabled!==!1){var t=i.hdrOutputType?i.hdrOutputType:j.hdrOutputType;t===a.HDRRGBM?s="HDR_OUTPUT_RGBM":t===a.HDRRGBD?s="HDR_OUTPUT_RGBD":t===a.HDRLOGLUV?s="HDR_OUTPUT_LOGLUV":t===a.HDRRGBE&&(s="HDR_OUTPUT_RGBE")}var u="ENVMAP_TYPE_CUBE",v="ENVMAP_MODE_REFLECTION",w="ENVMAP_BLENDING_MULTIPLY";if(i.envMap){switch(h.envMap.mapping){case a.CubeReflectionMapping:case a.CubeRefractionMapping:u="ENVMAP_TYPE_CUBE";break;case a.EquirectangularReflectionMapping:case a.EquirectangularRefractionMapping:u="ENVMAP_TYPE_EQUIREC";break;case a.SphericalReflectionMapping:u="ENVMAP_TYPE_SPHERE"}switch(h.envMap.mapping){case a.CubeRefractionMapping:case a.EquirectangularRefractionMapping:v="ENVMAP_MODE_REFRACTION"}switch(h.combine){case a.MultiplyOperation:w="ENVMAP_BLENDING_MULTIPLY";break;case a.MixOperation:w="ENVMAP_BLENDING_MIX";break;case a.AddOperation:w="ENVMAP_BLENDING_ADD"}}var x,y,z=c(l),A=k.createProgram();h instanceof a.RawShaderMaterial?(x="",y=""):(x=["precision "+i.precision+" float;","precision "+i.precision+" int;",z,i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",j.gammaInput?"#define GAMMA_INPUT":"",j.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+v:"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+r:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",""].join("\n"),y=["precision "+i.precision+" float;","precision "+i.precision+" int;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",z,"#define HDR_TYPE_RGBM "+a.HDRRGBM,"#define HDR_TYPE_RGBD "+a.HDRRGBD,"#define HDR_TYPE_RGBE "+a.HDRRGBE,"#define HDR_TYPE_LOGLUV "+a.HDRLOGLUV,j.hdrInputEnabled&&i.hdrInputEnabled!==!1?"#define HDR_INPUT":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",j.gammaInput?"#define GAMMA_INPUT":"",j.gammaOutput?"#define GAMMA_OUTPUT":"",s?"#define "+s:"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+u:"",i.envMap?"#define "+v:"",i.envMap?"#define "+w:"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+r:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));var B=new a.WebGLShader(k,k.VERTEX_SHADER,x+o),C=new a.WebGLShader(k,k.FRAGMENT_SHADER,y+p);k.attachShader(A,B),k.attachShader(A,C),void 0!==q&&k.bindAttribLocation(A,0,q),k.linkProgram(A),k.getProgramParameter(A,k.LINK_STATUS)===!1&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",k.getProgramParameter(A,k.VALIDATE_STATUS)),console.error("gl.getError()",k.getError())),""!==k.getProgramInfoLog(A)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",k.getProgramInfoLog(A)),k.deleteShader(B),k.deleteShader(C);var D=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];i.useVertexTexture?(D.push("boneTexture"),D.push("boneTextureWidth"),D.push("boneTextureHeight")):D.push("boneGlobalMatrices"),i.logarithmicDepthBuffer&&D.push("logDepthBufFC");
for(var E in m)D.push(E);this.uniforms=d(k,A,D),D=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var F=0;F<i.maxMorphTargets;F++)D.push("morphTarget"+F);for(var F=0;F<i.maxMorphNormals;F++)D.push("morphNormal"+F);for(var G in n)D.push(G);return this.attributes=e(k,A,D),this.attributesKeys=Object.keys(this.attributes),this.id=b++,this.code=g,this.usedTimes=1,this.program=A,this.vertexShader=B,this.fragmentShader=C,this}}(),a.WebGLShader=function(){var a=function(a){for(var b=a.split("\n"),c=0;c<b.length;c++)b[c]=c+1+": "+b[c];return b.join("\n")};return function(b,c,d){var e=b.createShader(c);return b.shaderSource(e,d),b.compileShader(e),b.getShaderParameter(e,b.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==b.getShaderInfoLog(e)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b.getShaderInfoLog(e)),console.warn(a(d))),e}}(),a.LensFlarePlugin=function(b,c){function d(a){var c=m.createProgram(),d=m.createShader(m.FRAGMENT_SHADER),e=m.createShader(m.VERTEX_SHADER),f="precision "+b.getPrecision()+" float;\n";return m.shaderSource(d,f+a.fragmentShader),m.shaderSource(e,f+a.vertexShader),m.compileShader(d),m.compileShader(e),m.attachShader(c,d),m.attachShader(c,e),m.linkProgram(c),c}var e,f,g,h,i,j,k,l,m=b.context,n=function(){var a=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),b=new Uint16Array([0,1,2,0,2,3]);e=m.createBuffer(),f=m.createBuffer(),m.bindBuffer(m.ARRAY_BUFFER,e),m.bufferData(m.ARRAY_BUFFER,a,m.STATIC_DRAW),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,f),m.bufferData(m.ELEMENT_ARRAY_BUFFER,b,m.STATIC_DRAW),k=m.createTexture(),l=m.createTexture(),m.bindTexture(m.TEXTURE_2D,k),m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),m.bindTexture(m.TEXTURE_2D,l),m.texImage2D(m.TEXTURE_2D,0,m.RGBA,16,16,0,m.RGBA,m.UNSIGNED_BYTE,null),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),j=m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;var c;c=j?{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},g=d(c),h={vertex:m.getAttribLocation(g,"position"),uv:m.getAttribLocation(g,"uv")},i={renderType:m.getUniformLocation(g,"renderType"),map:m.getUniformLocation(g,"map"),occlusionMap:m.getUniformLocation(g,"occlusionMap"),opacity:m.getUniformLocation(g,"opacity"),color:m.getUniformLocation(g,"color"),scale:m.getUniformLocation(g,"scale"),rotation:m.getUniformLocation(g,"rotation"),screenPosition:m.getUniformLocation(g,"screenPosition")}};this.render=function(d,o,p,q){if(0!==c.length){var r=new a.Vector3,s=q/p,t=.5*p,u=.5*q,v=16/q,w=new a.Vector2(v*s,v),x=new a.Vector3(1,1,0),y=new a.Vector2(1,1);void 0===g&&n(),m.useProgram(g),m.enableVertexAttribArray(h.vertex),m.enableVertexAttribArray(h.uv),m.uniform1i(i.occlusionMap,0),m.uniform1i(i.map,1),m.bindBuffer(m.ARRAY_BUFFER,e),m.vertexAttribPointer(h.vertex,2,m.FLOAT,!1,16,0),m.vertexAttribPointer(h.uv,2,m.FLOAT,!1,16,8),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,f),m.disable(m.CULL_FACE),m.depthMask(!1);for(var z=0,A=c.length;A>z;z++){v=16/q,w.set(v*s,v);var B=c[z];if(r.set(B.matrixWorld.elements[12],B.matrixWorld.elements[13],B.matrixWorld.elements[14]),r.applyMatrix4(o.matrixWorldInverse),r.applyProjection(o.projectionMatrix),x.copy(r),y.x=x.x*t+t,y.y=x.y*u+u,j||y.x>0&&y.x<p&&y.y>0&&y.y<q){m.activeTexture(m.TEXTURE1),m.bindTexture(m.TEXTURE_2D,k),m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,y.x-8,y.y-8,16,16,0),m.uniform1i(i.renderType,0),m.uniform2f(i.scale,w.x,w.y),m.uniform3f(i.screenPosition,x.x,x.y,x.z),m.disable(m.BLEND),m.enable(m.DEPTH_TEST),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0),m.activeTexture(m.TEXTURE0),m.bindTexture(m.TEXTURE_2D,l),m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,y.x-8,y.y-8,16,16,0),m.uniform1i(i.renderType,1),m.disable(m.DEPTH_TEST),m.activeTexture(m.TEXTURE1),m.bindTexture(m.TEXTURE_2D,k),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0),B.positionScreen.copy(x),B.customUpdateCallback?B.customUpdateCallback(B):B.updateLensFlares(),m.uniform1i(i.renderType,2),m.enable(m.BLEND);for(var C=0,D=B.lensFlares.length;D>C;C++){var E=B.lensFlares[C];E.opacity>.001&&E.scale>.001&&(x.x=E.x,x.y=E.y,x.z=E.z,v=E.size*E.scale/q,w.x=v*s,w.y=v,m.uniform3f(i.screenPosition,x.x,x.y,x.z),m.uniform2f(i.scale,w.x,w.y),m.uniform1f(i.rotation,E.rotation),m.uniform1f(i.opacity,E.opacity),m.uniform3f(i.color,E.color.r,E.color.g,E.color.b),b.setBlending(E.blending,E.blendEquation,E.blendSrc,E.blendDst),b.setTexture(E.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}}}m.enable(m.CULL_FACE),m.enable(m.DEPTH_TEST),m.depthMask(!0),b.resetGLState()}}},a.ShadowMapPlugin=function(b,c,d,e){function f(a,b,c){if(b.visible){var e=d[b.id];if(e&&b.castShadow&&(b.frustumCulled===!1||p.intersectsObject(b)===!0))for(var g=0,h=e.length;h>g;g++){var i=e[g];b._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,b.matrixWorld),u.push(i)}for(var g=0,h=b.children.length;h>g;g++)f(a,b.children[g],c)}}function g(b,c){var d=new a.DirectionalLight;d.isVirtual=!0,d.onlyShadow=!0,d.castShadow=!0,d.shadowCameraNear=b.shadowCameraNear,d.shadowCameraFar=b.shadowCameraFar,d.shadowCameraLeft=b.shadowCameraLeft,d.shadowCameraRight=b.shadowCameraRight,d.shadowCameraBottom=b.shadowCameraBottom,d.shadowCameraTop=b.shadowCameraTop,d.shadowCameraVisible=b.shadowCameraVisible,d.shadowDarkness=b.shadowDarkness,d.shadowBias=b.shadowCascadeBias[c],d.shadowMapWidth=b.shadowCascadeWidth[c],d.shadowMapHeight=b.shadowCascadeHeight[c],d.pointsWorld=[],d.pointsFrustum=[];for(var e=d.pointsWorld,f=d.pointsFrustum,g=0;8>g;g++)e[g]=new a.Vector3,f[g]=new a.Vector3;var h=b.shadowCascadeNearZ[c],i=b.shadowCascadeFarZ[c];return f[0].set(-1,-1,h),f[1].set(1,-1,h),f[2].set(-1,1,h),f[3].set(1,1,h),f[4].set(-1,-1,i),f[5].set(1,-1,i),f[6].set(-1,1,i),f[7].set(1,1,i),d}function h(a,b){var c=a.shadowCascadeArray[b];c.position.copy(a.position),c.target.position.copy(a.target.position),c.lookAt(c.target.position),c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b];var d=a.shadowCascadeNearZ[b],e=a.shadowCascadeFarZ[b],f=c.pointsFrustum;f[0].z=d,f[1].z=d,f[2].z=d,f[3].z=d,f[4].z=e,f[5].z=e,f[6].z=e,f[7].z=e}function i(a,b){var c=b.shadowCamera,d=b.pointsFrustum,e=b.pointsWorld;r.set(1/0,1/0,1/0),s.set(-1/0,-1/0,-1/0);for(var f=0;8>f;f++){var g=e[f];g.copy(d[f]),g.unproject(a),g.applyMatrix4(c.matrixWorldInverse),g.x<r.x&&(r.x=g.x),g.x>s.x&&(s.x=g.x),g.y<r.y&&(r.y=g.y),g.y>s.y&&(s.y=g.y),g.z<r.z&&(r.z=g.z),g.z>s.z&&(s.z=g.z)}c.left=r.x,c.right=s.x,c.top=s.y,c.bottom=r.y,c.updateProjectionMatrix()}function j(b){return b.material instanceof a.MeshFaceMaterial?b.material.materials[0]:b.material}var k,l,m,n,o=b.context,p=new a.Frustum,q=new a.Matrix4,r=new a.Vector3,s=new a.Vector3,t=new a.Vector3,u=[],v=a.ShaderLib.depthRGBA,w=a.UniformsUtils.clone(v.uniforms);k=new a.ShaderMaterial({uniforms:w,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader}),l=new a.ShaderMaterial({uniforms:w,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,morphTargets:!0}),m=new a.ShaderMaterial({uniforms:w,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,skinning:!0}),n=new a.ShaderMaterial({uniforms:w,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,morphTargets:!0,skinning:!0}),k._shadowPass=!0,l._shadowPass=!0,m._shadowPass=!0,n._shadowPass=!0,this.dispose=function(){k.dispose(),k=null,m.dispose(),m=null,l.dispose(),l=null,n.dispose(),n=null,b=null,u.splice(0,u.length)},this.render=function(d,r){if(b.shadowMapEnabled!==!1){var s,v,w,x,y,z,A,B,C,D,E,F,G,H=[],I=0,J=null;for(o.clearColor(1,1,1,1),o.disable(o.BLEND),o.enable(o.CULL_FACE),o.frontFace(o.CCW),o.cullFace(b.shadowMapCullFace===a.CullFaceFront?o.FRONT:o.BACK),b.setDepthTest(!0),s=0,v=c.length;v>s;s++)if(G=c[s],G.castShadow)if(G instanceof a.DirectionalLight&&G.shadowCascade)for(y=0;y<G.shadowCascadeCount;y++){var K;if(G.shadowCascadeArray[y])K=G.shadowCascadeArray[y];else{K=g(G,y),K.originalCamera=r;var L=new a.Gyroscope;L.position.copy(G.shadowCascadeOffset),L.add(K),L.add(K.target),r.add(L),G.shadowCascadeArray[y]=K,console.log("Created virtualLight",K)}h(G,y),H[I]=K,I++}else H[I]=G,I++;for(s=0,v=H.length;v>s;s++){if(G=H[s],!G.shadowMap){var M=a.LinearFilter;b.shadowMapType===a.PCFSoftShadowMap&&(M=a.NearestFilter);var N={minFilter:M,magFilter:M,format:a.RGBAFormat};G.shadowMap=new a.WebGLRenderTarget(G.shadowMapWidth,G.shadowMapHeight,N),G.shadowMap.name=(""!==G.name?G.name:"Light, "+G.id+",")+" shadow map",G.shadowMapSize=new a.Vector2(G.shadowMapWidth,G.shadowMapHeight),G.shadowMatrix=new a.Matrix4}if(!G.shadowCamera){if(G instanceof a.SpotLight)G.shadowCamera=new a.PerspectiveCamera(G.shadowCameraFov,G.shadowMapWidth/G.shadowMapHeight,G.shadowCameraNear,G.shadowCameraFar);else{if(!(G instanceof a.DirectionalLight)){console.error("Unsupported light type for shadow");continue}G.shadowCamera=new a.OrthographicCamera(G.shadowCameraLeft,G.shadowCameraRight,G.shadowCameraTop,G.shadowCameraBottom,G.shadowCameraNear,G.shadowCameraFar)}d.add(G.shadowCamera),d.autoUpdate===!0&&d.updateMatrixWorld()}G.shadowCameraVisible&&!G.cameraHelper&&(G.cameraHelper=new a.CameraHelper(G.shadowCamera),d.add(G.cameraHelper)),G.isVirtual&&G.originalCamera==r&&i(r,G),z=G.shadowMap,A=G.shadowMatrix,B=G.shadowCamera,B.position.setFromMatrixPosition(G.matrixWorld),t.setFromMatrixPosition(G.target.matrixWorld),B.lookAt(t),B.updateMatrixWorld(),B.matrixWorldInverse.getInverse(B.matrixWorld),G.cameraHelper&&(G.cameraHelper.visible=G.shadowCameraVisible),G.shadowCameraVisible&&G.cameraHelper.update(),A.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),A.multiply(B.projectionMatrix),A.multiply(B.matrixWorldInverse),q.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse),p.setFromMatrix(q),b.setRenderTarget(z),b.clear(),u.length=0,f(d,d,B);var O,P,Q;for(w=0,x=u.length;x>w;w++)E=u[w],F=E.object,C=E.buffer,O=j(F),P=void 0!==F.geometry.morphTargets&&F.geometry.morphTargets.length>0&&O.morphTargets,Q=F instanceof a.SkinnedMesh&&O.skinning,D=F.customDepthMaterial?F.customDepthMaterial:Q?P?n:m:P?l:k,b.setMaterialFaces(O),C instanceof a.BufferGeometry?b.renderBufferDirect(B,c,J,D,C,F,E.offsetIndices):b.renderBuffer(B,c,J,D,C,F);for(w=0,x=e.length;x>w;w++)E=e[w],F=E.object,F.visible&&F.castShadow&&(F._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,F.matrixWorld),b.renderImmediateObject(B,c,J,k,F))}var R=b.getClearColor(),S=b.getClearAlpha();o.clearColor(R.r,R.g,R.b,S),o.enable(o.BLEND),b.shadowMapCullFace===a.CullFaceFront&&o.cullFace(o.BACK),b.resetGLState()}}},a.SpritePlugin=function(b,c){function d(){var a=l.createProgram(),c=l.createShader(l.VERTEX_SHADER),d=l.createShader(l.FRAGMENT_SHADER);return l.shaderSource(c,["precision "+b.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),l.shaderSource(d,["precision "+b.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),l.compileShader(c),l.compileShader(d),l.attachShader(a,c),l.attachShader(a,d),l.linkProgram(a),a}function e(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var f,g,h,i,j,k,l=b.context,m=new a.Vector3,n=new a.Quaternion,o=new a.Vector3,p=function(){var b=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),c=new Uint16Array([0,1,2,0,2,3]);f=l.createBuffer(),g=l.createBuffer(),l.bindBuffer(l.ARRAY_BUFFER,f),l.bufferData(l.ARRAY_BUFFER,b,l.STATIC_DRAW),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,g),l.bufferData(l.ELEMENT_ARRAY_BUFFER,c,l.STATIC_DRAW),h=d(),i={position:l.getAttribLocation(h,"position"),uv:l.getAttribLocation(h,"uv")},j={uvOffset:l.getUniformLocation(h,"uvOffset"),uvScale:l.getUniformLocation(h,"uvScale"),rotation:l.getUniformLocation(h,"rotation"),scale:l.getUniformLocation(h,"scale"),color:l.getUniformLocation(h,"color"),map:l.getUniformLocation(h,"map"),opacity:l.getUniformLocation(h,"opacity"),modelViewMatrix:l.getUniformLocation(h,"modelViewMatrix"),projectionMatrix:l.getUniformLocation(h,"projectionMatrix"),fogType:l.getUniformLocation(h,"fogType"),fogDensity:l.getUniformLocation(h,"fogDensity"),fogNear:l.getUniformLocation(h,"fogNear"),fogFar:l.getUniformLocation(h,"fogFar"),fogColor:l.getUniformLocation(h,"fogColor"),alphaTest:l.getUniformLocation(h,"alphaTest")};var e=document.createElement("canvas");e.width=8,e.height=8;var m=e.getContext("2d");m.fillStyle="white",m.fillRect(0,0,8,8),k=new a.Texture(e),k.needsUpdate=!0};this.render=function(d,q){if(0!==c.length){void 0===h&&p(),l.useProgram(h),l.enableVertexAttribArray(i.position),l.enableVertexAttribArray(i.uv),l.disable(l.CULL_FACE),l.enable(l.BLEND),l.bindBuffer(l.ARRAY_BUFFER,f),l.vertexAttribPointer(i.position,2,l.FLOAT,!1,16,0),l.vertexAttribPointer(i.uv,2,l.FLOAT,!1,16,8),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,g),l.uniformMatrix4fv(j.projectionMatrix,!1,q.projectionMatrix.elements),l.activeTexture(l.TEXTURE0),l.uniform1i(j.map,0);var r=0,s=0,t=d.fog;t?(l.uniform3f(j.fogColor,t.color.r,t.color.g,t.color.b),t instanceof a.Fog?(l.uniform1f(j.fogNear,t.near),l.uniform1f(j.fogFar,t.far),l.uniform1i(j.fogType,1),r=1,s=1):t instanceof a.FogExp2&&(l.uniform1f(j.fogDensity,t.density),l.uniform1i(j.fogType,2),r=2,s=2)):(l.uniform1i(j.fogType,0),r=0,s=0);for(var u=0,v=c.length;v>u;u++){var w=c[u];w._modelViewMatrix.multiplyMatrices(q.matrixWorldInverse,w.matrixWorld),w.z=-w._modelViewMatrix.elements[14]}c.sort(e);for(var x=[],u=0,v=c.length;v>u;u++){var w=c[u],y=w.material;l.uniform1f(j.alphaTest,y.alphaTest),l.uniformMatrix4fv(j.modelViewMatrix,!1,w._modelViewMatrix.elements),w.matrixWorld.decompose(m,n,o),x[0]=o.x,x[1]=o.y;var z=0;d.fog&&y.fog&&(z=s),r!==z&&(l.uniform1i(j.fogType,z),r=z),null!==y.map?(l.uniform2f(j.uvOffset,y.map.offset.x,y.map.offset.y),l.uniform2f(j.uvScale,y.map.repeat.x,y.map.repeat.y)):(l.uniform2f(j.uvOffset,0,0),l.uniform2f(j.uvScale,1,1)),l.uniform1f(j.opacity,y.opacity),l.uniform3f(j.color,y.color.r,y.color.g,y.color.b),l.uniform1f(j.rotation,y.rotation),l.uniform2fv(j.scale,x),b.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),b.setDepthTest(y.depthTest),b.setDepthWrite(y.depthWrite),y.map&&y.map.image&&y.map.image.width?b.setTexture(y.map,0):b.setTexture(k,0),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0)}l.enable(l.CULL_FACE),b.resetGLState()}}},a.GeometryUtils={merge:function(b,c,d){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var e;c instanceof a.Mesh&&(c.matrixAutoUpdate&&c.updateMatrix(),e=c.matrix,c=c.geometry),b.merge(c,e,d)},center:function(a){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),a.center()}},a.ImageUtils={crossOrigin:void 0,loadTexture:function(b,c,d,e){var f=new a.ImageLoader;f.crossOrigin=this.crossOrigin;var g=new a.Texture(void 0,c);return f.load(b,function(a){g.image=a,g.needsUpdate=!0,d&&d(g)},void 0,function(a){e&&e(a)}),g.sourceFile=b,g},loadTextureCube:function(b,c,d){var e=[],f=new a.ImageLoader;f.crossOrigin=this.crossOrigin;var g=new a.CubeTexture(e,c);g.flipY=!1;for(var h=0,i=function(a){f.load(b[a],function(b){g.images[a]=b,h+=1,6===h&&(g.needsUpdate=!0,d&&d(g))})},j=0,k=b.length;k>j;++j)i(j);return g},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(a,b){var c=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},d=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},e=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b=1|b;var f=a.width,g=a.height,h=document.createElement("canvas");h.width=f,h.height=g;var i=h.getContext("2d");i.drawImage(a,0,0);for(var j=i.getImageData(0,0,f,g).data,k=i.createImageData(f,g),l=k.data,m=0;f>m;m++)for(var n=0;g>n;n++){var o=0>n-1?0:n-1,p=n+1>g-1?g-1:n+1,q=0>m-1?0:m-1,r=m+1>f-1?f-1:m+1,s=[],t=[0,0,j[4*(n*f+m)]/255*b];s.push([-1,0,j[4*(n*f+q)]/255*b]),s.push([-1,-1,j[4*(o*f+q)]/255*b]),s.push([0,-1,j[4*(o*f+m)]/255*b]),s.push([1,-1,j[4*(o*f+r)]/255*b]),s.push([1,0,j[4*(n*f+r)]/255*b]),s.push([1,1,j[4*(p*f+r)]/255*b]),s.push([0,1,j[4*(p*f+m)]/255*b]),s.push([-1,1,j[4*(p*f+q)]/255*b]);for(var u=[],v=s.length,w=0;v>w;w++){var x=s[w],y=s[(w+1)%v];x=d(x,t),y=d(y,t),u.push(e(c(x,y)))}for(var z=[0,0,0],w=0;w<u.length;w++)z[0]+=u[w][0],z[1]+=u[w][1],z[2]+=u[w][2];z[0]/=u.length,z[1]/=u.length,z[2]/=u.length;var A=4*(n*f+m);l[A]=(z[0]+1)/2*255|0,l[A+1]=(z[1]+1)/2*255|0,l[A+2]=255*z[2]|0,l[A+3]=255}return i.putImageData(k,0,0),h},generateDataTexture:function(b,c,d){for(var e=b*c,f=new Uint8Array(3*e),g=Math.floor(255*d.r),h=Math.floor(255*d.g),i=Math.floor(255*d.b),j=0;e>j;j++)f[3*j]=g,f[3*j+1]=h,f[3*j+2]=i;var k=new a.DataTexture(f,b,c,a.RGBFormat);return k.needsUpdate=!0,k}},a.SceneUtils={createMultiMaterialObject:function(b,c){for(var d=new a.Object3D,e=0,f=c.length;f>e;e++)d.add(new a.Mesh(b,c[e]));return d},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(b,c,d){var e=new a.Matrix4;e.getInverse(d.matrixWorld),b.applyMatrix(e),c.remove(b),d.add(b)}},a.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(a){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(a){var b=a.familyName.toLowerCase(),c=this;c.faces[b]=c.faces[b]||{},c.faces[b][a.cssFontWeight]=c.faces[b][a.cssFontWeight]||{},c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return a},drawText:function(b){var c,d=this.getFace(),e=this.size/d.resolution,f=0,g=String(b).split(""),h=g.length,i=[];for(c=0;h>c;c++){var j=new a.Path,k=this.extractGlyphPoints(g[c],d,e,f,j);f+=k.offset,i.push(k.path)}var l=f/2;return{paths:i,offset:l}},extractGlyphPoints:function(b,c,d,e,f){var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z=[],A=c.glyphs[b]||c.glyphs["?"];if(A){if(A.o)for(j=A._cachedOutline||(A._cachedOutline=A.o.split(" ")),l=j.length,m=d,n=d,g=0;l>g;)switch(k=j[g++]){case"m":o=j[g++]*m+e,p=j[g++]*n,f.moveTo(o,p);break;case"l":o=j[g++]*m+e,p=j[g++]*n,f.lineTo(o,p);break;case"q":if(q=j[g++]*m+e,r=j[g++]*n,u=j[g++]*m+e,v=j[g++]*n,f.quadraticCurveTo(u,v,q,r),y=z[z.length-1])for(s=y.x,t=y.y,h=1,i=this.divisions;i>=h;h++){var B=h/i;a.Shape.Utils.b2(B,s,u,q),a.Shape.Utils.b2(B,t,v,r)}break;case"b":if(q=j[g++]*m+e,r=j[g++]*n,u=j[g++]*m+e,v=j[g++]*n,w=j[g++]*m+e,x=j[g++]*n,f.bezierCurveTo(u,v,w,x,q,r),y=z[z.length-1])for(s=y.x,t=y.y,h=1,i=this.divisions;i>=h;h++){var B=h/i;a.Shape.Utils.b3(B,s,u,w,q),a.Shape.Utils.b3(B,t,v,x,r)}}return{offset:A.ha*d,path:f}}}},a.FontUtils.generateShapes=function(b,c){c=c||{};var d=void 0!==c.size?c.size:100,e=void 0!==c.curveSegments?c.curveSegments:4,f=void 0!==c.font?c.font:"helvetiker",g=void 0!==c.weight?c.weight:"normal",h=void 0!==c.style?c.style:"normal";a.FontUtils.size=d,a.FontUtils.divisions=e,a.FontUtils.face=f,a.FontUtils.weight=g,a.FontUtils.style=h;for(var i=a.FontUtils.drawText(b),j=i.paths,k=[],l=0,m=j.length;m>l;l++)Array.prototype.push.apply(k,j[l].toShapes());return k},function(a){var b=1e-10,c=function(a,b){var c=a.length;if(3>c)return null;var f,g,h,i=[],j=[],k=[];if(d(a)>0)for(g=0;c>g;g++)j[g]=g;else for(g=0;c>g;g++)j[g]=c-1-g;var l=c,m=2*l;for(g=l-1;l>2;){if(m--<=0)return console.log("Warning, unable to triangulate polygon!"),b?k:i;if(f=g,f>=l&&(f=0),g=f+1,g>=l&&(g=0),h=g+1,h>=l&&(h=0),e(a,f,g,h,l,j)){var n,o,p,q,r;for(n=j[f],o=j[g],p=j[h],i.push([a[n],a[o],a[p]]),k.push([j[f],j[g],j[h]]),q=g,r=g+1;l>r;q++,r++)j[q]=j[r];l--,m=2*l}}return b?k:i},d=function(a){for(var b=a.length,c=0,d=b-1,e=0;b>e;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},e=function(a,c,d,e,f,g){var h,i,j,k,l,m,n,o,p;if(i=a[g[c]].x,j=a[g[c]].y,k=a[g[d]].x,l=a[g[d]].y,m=a[g[e]].x,n=a[g[e]].y,b>(k-i)*(n-j)-(l-j)*(m-i))return!1;var q,r,s,t,u,v,w,x,y,z,A,B,C,D,E;for(q=m-k,r=n-l,s=i-m,t=j-n,u=k-i,v=l-j,h=0;f>h;h++)if(o=a[g[h]].x,p=a[g[h]].y,!(o===i&&p===j||o===k&&p===l||o===m&&p===n)&&(w=o-i,x=p-j,y=o-k,z=p-l,A=o-m,B=p-n,E=q*z-r*y,C=u*x-v*w,D=s*B-t*A,E>=-b&&D>=-b&&C>=-b))return!1;return!0};return a.Triangulate=c,a.Triangulate.area=d,a}(a.FontUtils),self._typeface_js={faces:a.FontUtils.faces,loadFace:a.FontUtils.loadFace},a.typeface_js=self._typeface_js,a.Audio=function(b){a.Object3D.call(this),this.type="Audio",this.context=b.context,this.source=this.context.createBufferSource(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.panner=this.context.createPanner(),this.panner.connect(this.gain)},a.Audio.prototype=Object.create(a.Object3D.prototype),a.Audio.prototype.constructor=a.Audio,a.Audio.prototype.load=function(a){var b=this,c=new XMLHttpRequest;return c.open("GET",a,!0),c.responseType="arraybuffer",c.onload=function(){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a,b.source.connect(b.panner),b.source.start(0)})},c.send(),this},a.Audio.prototype.setLoop=function(a){this.source.loop=a},a.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a},a.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a},a.Audio.prototype.updateMatrixWorld=function(){var b=new a.Vector3;return function(c){a.Object3D.prototype.updateMatrixWorld.call(this,c),b.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(b.x,b.y,b.z)}}(),a.AudioListener=function(){a.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext)},a.AudioListener.prototype=Object.create(a.Object3D.prototype),a.AudioListener.prototype.constructor=a.AudioListener,a.AudioListener.prototype.updateMatrixWorld=function(){var b=new a.Vector3,c=new a.Quaternion,d=new a.Vector3,e=new a.Vector3,f=new a.Vector3,g=new a.Vector3;return function(h){a.Object3D.prototype.updateMatrixWorld.call(this,h);var i=this.context.listener,j=this.up;this.matrixWorld.decompose(b,c,d),e.set(0,0,-1).applyQuaternion(c),f.subVectors(b,g),i.setPosition(b.x,b.y,b.z),i.setOrientation(e.x,e.y,e.z,j.x,j.y,j.z),i.setVelocity(f.x,f.y,f.z),g.copy(b)}}(),a.Curve=function(){},a.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},a.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},a.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPoint(b/a));return c},a.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPointAt(b/a));return c},a.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},a.Curve.prototype.getLengths=function(a){if(a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b,c,d=[],e=this.getPoint(0),f=0;for(d.push(0),c=1;a>=c;c++)b=this.getPoint(c/a),f+=b.distanceTo(e),d.push(f),e=b;return this.cacheArcLengths=d,d},a.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},a.Curve.prototype.getUtoTmapping=function(a,b){var c,d=this.getLengths(),e=0,f=d.length;c=b?b:a*d[f-1];for(var g,h=0,i=f-1;i>=h;)if(e=Math.floor(h+(i-h)/2),g=d[e]-c,0>g)h=e+1;else{if(!(g>0)){i=e;break}i=e-1}if(e=i,d[e]==c){var j=e/(f-1);return j}var k=d[e],l=d[e+1],m=l-k,n=(c-k)/m,j=(e+n)/(f-1);return j},a.Curve.prototype.getTangent=function(a){var b=1e-4,c=a-b,d=a+b;0>c&&(c=0),d>1&&(d=1);var e=this.getPoint(c),f=this.getPoint(d),g=f.clone().sub(e);return g.normalize()},a.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)},a.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){var b=6*a*a-6*a,c=3*a*a-4*a+1,d=-6*a*a+6*a,e=3*a*a-2*a;return b+c+d+e},interpolate:function(a,b,c,d,e){var f=.5*(c-a),g=.5*(d-b),h=e*e,i=e*h;return(2*b-2*c+f+g)*i+(-3*b+3*c-2*f-g)*h+f*e+b}},a.Curve.create=function(b,c){return b.prototype=Object.create(a.Curve.prototype),b.prototype.constructor=b,b.prototype.getPoint=c,b},a.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},a.CurvePath.prototype=Object.create(a.Curve.prototype),a.CurvePath.prototype.constructor=a.CurvePath,a.CurvePath.prototype.add=function(a){this.curves.push(a)},a.CurvePath.prototype.checkConnection=function(){},a.CurvePath.prototype.closePath=function(){var b=this.curves[0].getPoint(0),c=this.curves[this.curves.length-1].getPoint(1);b.equals(c)||this.curves.push(new a.LineCurve(c,b))},a.CurvePath.prototype.getPoint=function(a){for(var b,c,d=a*this.getLength(),e=this.getCurveLengths(),f=0;f<e.length;){if(e[f]>=d){b=e[f]-d,c=this.curves[f];var g=1-b/c.getLength();return c.getPointAt(g)}f++}return null},a.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},a.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a,b=[],c=0,d=this.curves.length;for(a=0;d>a;a++)c+=this.curves[a].getLength(),b.push(c);return this.cacheLengths=b,b},a.CurvePath.prototype.getBoundingBox=function(){var b,c,d,e,f,g,h=this.getPoints();b=c=Number.NEGATIVE_INFINITY,e=f=Number.POSITIVE_INFINITY;var i,j,k,l,m=h[0]instanceof a.Vector3;for(l=m?new a.Vector3:new a.Vector2,j=0,k=h.length;k>j;j++)i=h[j],i.x>b?b=i.x:i.x<e&&(e=i.x),i.y>c?c=i.y:i.y<f&&(f=i.y),m&&(i.z>d?d=i.z:i.z<g&&(g=i.z)),l.add(i);var n={minX:e,minY:f,maxX:b,maxY:c};return m&&(n.maxZ=d,n.minZ=g),n},a.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,!0);return this.createGeometry(b)},a.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,!0);return this.createGeometry(b)},a.CurvePath.prototype.createGeometry=function(b){for(var c=new a.Geometry,d=0;d<b.length;d++)c.vertices.push(new a.Vector3(b[d].x,b[d].y,b[d].z||0));return c},a.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},a.CurvePath.prototype.getTransformedPoints=function(a,b){var c,d,e=this.getPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},a.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c,d,e=this.getSpacedPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},a.CurvePath.prototype.getWrapPoints=function(a,b){var c,d,e,f,g,h,i=this.getBoundingBox();for(c=0,d=a.length;d>c;c++){e=a[c],f=e.x,g=e.y,h=f/i.maxX,h=b.getUtoTmapping(h,f);var j=b.getPoint(h),k=b.getTangent(h);k.set(-k.y,k.x).multiplyScalar(g),e.x=j.x+k.x,e.y=j.y+k.y
}return a},a.Gyroscope=function(){a.Object3D.call(this)},a.Gyroscope.prototype=Object.create(a.Object3D.prototype),a.Gyroscope.prototype.constructor=a.Gyroscope,a.Gyroscope.prototype.updateMatrixWorld=function(){var b=new a.Vector3,c=new a.Quaternion,d=new a.Vector3,e=new a.Vector3,f=new a.Quaternion,g=new a.Vector3;return function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(e,f,g),this.matrix.decompose(b,c,d),this.matrixWorld.compose(e,c,g)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var h=0,i=this.children.length;i>h;h++)this.children[h].updateMatrixWorld(a)}}(),a.Path=function(b){a.CurvePath.call(this),this.actions=[],b&&this.fromPoints(b)},a.Path.prototype=Object.create(a.CurvePath.prototype),a.Path.prototype.constructor=a.Path,a.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},a.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;c>b;b++)this.lineTo(a[b].x,a[b].y)},a.Path.prototype.moveTo=function(){var b=Array.prototype.slice.call(arguments);this.actions.push({action:a.PathActions.MOVE_TO,args:b})},a.Path.prototype.lineTo=function(b,c){var d=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,f=e[e.length-2],g=e[e.length-1],h=new a.LineCurve(new a.Vector2(f,g),new a.Vector2(b,c));this.curves.push(h),this.actions.push({action:a.PathActions.LINE_TO,args:d})},a.Path.prototype.quadraticCurveTo=function(b,c,d,e){var f=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,h=g[g.length-2],i=g[g.length-1],j=new a.QuadraticBezierCurve(new a.Vector2(h,i),new a.Vector2(b,c),new a.Vector2(d,e));this.curves.push(j),this.actions.push({action:a.PathActions.QUADRATIC_CURVE_TO,args:f})},a.Path.prototype.bezierCurveTo=function(b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,j=i[i.length-2],k=i[i.length-1],l=new a.CubicBezierCurve(new a.Vector2(j,k),new a.Vector2(b,c),new a.Vector2(d,e),new a.Vector2(f,g));this.curves.push(l),this.actions.push({action:a.PathActions.BEZIER_CURVE_TO,args:h})},a.Path.prototype.splineThru=function(b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,e=d[d.length-2],f=d[d.length-1],g=[new a.Vector2(e,f)];Array.prototype.push.apply(g,b);var h=new a.SplineCurve(g);this.curves.push(h),this.actions.push({action:a.PathActions.CSPLINE_THRU,args:c})},a.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,h=g[g.length-2],i=g[g.length-1];this.absarc(a+h,b+i,c,d,e,f)},a.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},a.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1];this.absellipse(a+i,b+j,c,d,e,f,g)},a.Path.prototype.absellipse=function(b,c,d,e,f,g,h){var i=Array.prototype.slice.call(arguments),j=new a.EllipseCurve(b,c,d,e,f,g,h);this.curves.push(j);var k=j.getPoint(1);i.push(k.x),i.push(k.y),this.actions.push({action:a.PathActions.ELLIPSE,args:i})},a.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;a>c;c++)b.push(this.getPoint(c/a));return b},a.Path.prototype.getPoints=function(b,c){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(b,c);b=b||12;var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=[];for(d=0,e=this.actions.length;e>d;d++)switch(f=this.actions[d],g=f.action,h=f.args,g){case a.PathActions.MOVE_TO:v.push(new a.Vector2(h[0],h[1]));break;case a.PathActions.LINE_TO:v.push(new a.Vector2(h[0],h[1]));break;case a.PathActions.QUADRATIC_CURVE_TO:for(i=h[2],j=h[3],m=h[0],n=h[1],v.length>0?(q=v[v.length-1],o=q.x,p=q.y):(q=this.actions[d-1].args,o=q[q.length-2],p=q[q.length-1]),r=1;b>=r;r++)s=r/b,t=a.Shape.Utils.b2(s,o,m,i),u=a.Shape.Utils.b2(s,p,n,j),v.push(new a.Vector2(t,u));break;case a.PathActions.BEZIER_CURVE_TO:for(i=h[4],j=h[5],m=h[0],n=h[1],k=h[2],l=h[3],v.length>0?(q=v[v.length-1],o=q.x,p=q.y):(q=this.actions[d-1].args,o=q[q.length-2],p=q[q.length-1]),r=1;b>=r;r++)s=r/b,t=a.Shape.Utils.b3(s,o,m,k,i),u=a.Shape.Utils.b3(s,p,n,l,j),v.push(new a.Vector2(t,u));break;case a.PathActions.CSPLINE_THRU:q=this.actions[d-1].args;var w=new a.Vector2(q[q.length-2],q[q.length-1]),x=[w],y=b*h[0].length;x=x.concat(h[0]);var z=new a.SplineCurve(x);for(r=1;y>=r;r++)v.push(z.getPointAt(r/y));break;case a.PathActions.ARC:var A,B=h[0],C=h[1],D=h[2],E=h[3],F=h[4],G=!!h[5],H=F-E,I=2*b;for(r=1;I>=r;r++)s=r/I,G||(s=1-s),A=E+s*H,t=B+D*Math.cos(A),u=C+D*Math.sin(A),v.push(new a.Vector2(t,u));break;case a.PathActions.ELLIPSE:var A,B=h[0],C=h[1],J=h[2],K=h[3],E=h[4],F=h[5],G=!!h[6],H=F-E,I=2*b;for(r=1;I>=r;r++)s=r/I,G||(s=1-s),A=E+s*H,t=B+J*Math.cos(A),u=C+K*Math.sin(A),v.push(new a.Vector2(t,u))}var L=v[v.length-1],M=1e-10;return Math.abs(L.x-v[0].x)<M&&Math.abs(L.y-v[0].y)<M&&v.splice(v.length-1,1),c&&v.push(v[0]),v},a.Path.prototype.toShapes=function(b,c){function d(b){var c,d,e,f,g,h=[],i=new a.Path;for(c=0,d=b.length;d>c;c++)e=b[c],g=e.args,f=e.action,f==a.PathActions.MOVE_TO&&0!=i.actions.length&&(h.push(i),i=new a.Path),i[f].apply(i,g);return 0!=i.actions.length&&h.push(i),h}function e(b){for(var c=[],d=0,e=b.length;e>d;d++){var f=b[d],g=new a.Shape;g.actions=f.actions,g.curves=f.curves,c.push(g)}return c}function f(a,b){for(var c=1e-10,d=b.length,e=!1,f=d-1,g=0;d>g;f=g++){var h=b[f],i=b[g],j=i.x-h.x,k=i.y-h.y;if(Math.abs(k)>c){if(0>k&&(h=b[g],j=-j,i=b[f],k=-k),a.y<h.y||a.y>i.y)continue;if(a.y==h.y){if(a.x==h.x)return!0}else{var l=k*(a.x-h.x)-j*(a.y-h.y);if(0==l)return!0;if(0>l)continue;e=!e}}else{if(a.y!=h.y)continue;if(i.x<=a.x&&a.x<=h.x||h.x<=a.x&&a.x<=i.x)return!0}}return e}var g=d(this.actions);if(0==g.length)return[];if(c===!0)return e(g);var h,i,j,k=[];if(1==g.length)return i=g[0],j=new a.Shape,j.actions=i.actions,j.curves=i.curves,k.push(j),k;var l=!a.Shape.Utils.isClockWise(g[0].getPoints());l=b?!l:l;var m,n=[],o=[],p=[],q=0;o[q]=void 0,p[q]=[];var r,s;for(r=0,s=g.length;s>r;r++)i=g[r],m=i.getPoints(),h=a.Shape.Utils.isClockWise(m),h=b?!h:h,h?(!l&&o[q]&&q++,o[q]={s:new a.Shape,p:m},o[q].s.actions=i.actions,o[q].s.curves=i.curves,l&&q++,p[q]=[]):p[q].push({h:i,p:m[0]});if(!o[0])return e(g);if(o.length>1){for(var t=!1,u=[],v=0,w=o.length;w>v;v++)n[v]=[];for(var v=0,w=o.length;w>v;v++)for(var x=(o[v],p[v]),y=0;y<x.length;y++){for(var z=x[y],A=!0,B=0;B<o.length;B++)f(z.p,o[B].p)&&(v!=B&&u.push({froms:v,tos:B,hole:y}),A?(A=!1,n[B].push(z)):t=!0);A&&n[v].push(z)}u.length>0&&(t||(p=n))}var C,D,E;for(r=0,s=o.length;s>r;r++)for(j=o[r].s,k.push(j),C=p[r],D=0,E=C.length;E>D;D++)j.holes.push(C[D].h);return k},a.Shape=function(){a.Path.apply(this,arguments),this.holes=[]},a.Shape.prototype=Object.create(a.Path.prototype),a.Shape.prototype.constructor=a.Shape,a.Shape.prototype.extrude=function(b){var c=new a.ExtrudeGeometry(this,b);return c},a.Shape.prototype.makeGeometry=function(b){var c=new a.ShapeGeometry(this,b);return c},a.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},a.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},a.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},a.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},a.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},a.Shape.Utils={triangulateShape:function(b,c){function d(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function e(a,b,c,e,f){var g=1e-10,h=b.x-a.x,i=b.y-a.y,j=e.x-c.x,k=e.y-c.y,l=a.x-c.x,m=a.y-c.y,n=i*j-h*k,o=i*l-h*m;if(Math.abs(n)>g){var p;if(n>0){if(0>o||o>n)return[];if(p=k*l-j*m,0>p||p>n)return[]}else{if(o>0||n>o)return[];if(p=k*l-j*m,p>0||n>p)return[]}if(0==p)return!f||0!=o&&o!=n?[a]:[];if(p==n)return!f||0!=o&&o!=n?[b]:[];if(0==o)return[c];if(o==n)return[e];var q=p/n;return[{x:a.x+q*h,y:a.y+q*i}]}if(0!=o||k*l!=j*m)return[];var r=0==h&&0==i,s=0==j&&0==k;if(r&&s)return a.x!=c.x||a.y!=c.y?[]:[a];if(r)return d(c,e,a)?[a]:[];if(s)return d(a,b,c)?[c]:[];var t,u,v,w,x,y,z,A;return 0!=h?(a.x<b.x?(t=a,v=a.x,u=b,w=b.x):(t=b,v=b.x,u=a,w=a.x),c.x<e.x?(x=c,z=c.x,y=e,A=e.x):(x=e,z=e.x,y=c,A=c.x)):(a.y<b.y?(t=a,v=a.y,u=b,w=b.y):(t=b,v=b.y,u=a,w=a.y),c.y<e.y?(x=c,z=c.y,y=e,A=e.y):(x=e,z=e.y,y=c,A=c.y)),z>=v?z>w?[]:w==z?f?[]:[x]:A>=w?[x,u]:[x,y]:v>A?[]:v==A?f?[]:[t]:A>=w?[t,u]:[t,y]}function f(a,b,c,d){var e=1e-10,f=b.x-a.x,g=b.y-a.y,h=c.x-a.x,i=c.y-a.y,j=d.x-a.x,k=d.y-a.y,l=f*i-g*h,m=f*k-g*j;if(Math.abs(l)>e){var n=j*i-k*h;return l>0?m>=0&&n>=0:m>=0||n>=0}return m>0}function g(a,b){function c(a,b){var c=s.length-1,d=a-1;0>d&&(d=c);var e=a+1;e>c&&(e=0);var g=f(s[a],s[d],s[e],h[b]);if(!g)return!1;var i=h.length-1,j=b-1;0>j&&(j=i);var k=b+1;return k>i&&(k=0),g=f(h[b],h[j],h[k],s[a]),g?!0:!1}function d(a,b){var c,d,f;for(c=0;c<s.length;c++)if(d=c+1,d%=s.length,f=e(a,b,s[c],s[d],!0),f.length>0)return!0;return!1}function g(a,c){var d,f,g,h,i;for(d=0;d<t.length;d++)for(f=b[t[d]],g=0;g<f.length;g++)if(h=g+1,h%=f.length,i=e(a,c,f[g],f[h],!0),i.length>0)return!0;return!1}for(var h,i,j,k,l,m,n,o,p,q,r,s=a.concat(),t=[],u=[],v=0,w=b.length;w>v;v++)t.push(v);for(var x=0,y=2*t.length;t.length>0;){if(y--,0>y){console.log("Infinite Loop! Holes left:"+t.length+", Probably Hole outside Shape!");break}for(j=x;j<s.length;j++){k=s[j],i=-1;for(var v=0;v<t.length;v++)if(m=t[v],n=k.x+":"+k.y+":"+m,void 0===u[n]){h=b[m];for(var z=0;z<h.length;z++)if(l=h[z],c(j,z)&&!d(k,l)&&!g(k,l)){i=z,t.splice(v,1),o=s.slice(0,j+1),p=s.slice(j),q=h.slice(i),r=h.slice(0,i+1),s=o.concat(q).concat(r).concat(p),x=j;break}if(i>=0)break;u[n]=!0}if(i>=0)break}}return s}for(var h,i,j,k,l,m,n={},o=b.concat(),p=0,q=c.length;q>p;p++)Array.prototype.push.apply(o,c[p]);for(h=0,i=o.length;i>h;h++)l=o[h].x+":"+o[h].y,void 0!==n[l]&&console.log("Duplicate point",l),n[l]=h;var r=g(b,c),s=a.FontUtils.Triangulate(r,!1);for(h=0,i=s.length;i>h;h++)for(k=s[h],j=0;3>j;j++)l=k[j].x+":"+k[j].y,m=n[l],void 0!==m&&(k[j]=m);return s.concat()},isClockWise:function(b){return a.FontUtils.Triangulate.area(b)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){var c=1-a;return 3*c*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}},a.LineCurve=function(a,b){this.v1=a,this.v2=b},a.LineCurve.prototype=Object.create(a.Curve.prototype),a.LineCurve.prototype.constructor=a.LineCurve,a.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);return b.multiplyScalar(a).add(this.v1),b},a.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},a.LineCurve.prototype.getTangent=function(){var a=this.v2.clone().sub(this.v1);return a.normalize()},a.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},a.QuadraticBezierCurve.prototype=Object.create(a.Curve.prototype),a.QuadraticBezierCurve.prototype.constructor=a.QuadraticBezierCurve,a.QuadraticBezierCurve.prototype.getPoint=function(b){var c=new a.Vector2;return c.x=a.Shape.Utils.b2(b,this.v0.x,this.v1.x,this.v2.x),c.y=a.Shape.Utils.b2(b,this.v0.y,this.v1.y,this.v2.y),c},a.QuadraticBezierCurve.prototype.getTangent=function(b){var c=new a.Vector2;return c.x=a.Curve.Utils.tangentQuadraticBezier(b,this.v0.x,this.v1.x,this.v2.x),c.y=a.Curve.Utils.tangentQuadraticBezier(b,this.v0.y,this.v1.y,this.v2.y),c.normalize()},a.CubicBezierCurve=function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},a.CubicBezierCurve.prototype=Object.create(a.Curve.prototype),a.CubicBezierCurve.prototype.constructor=a.CubicBezierCurve,a.CubicBezierCurve.prototype.getPoint=function(b){var c,d;return c=a.Shape.Utils.b3(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),d=a.Shape.Utils.b3(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new a.Vector2(c,d)},a.CubicBezierCurve.prototype.getTangent=function(b){var c,d;c=a.Curve.Utils.tangentCubicBezier(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),d=a.Curve.Utils.tangentCubicBezier(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var e=new a.Vector2(c,d);return e.normalize(),e},a.SplineCurve=function(a){this.points=void 0==a?[]:a},a.SplineCurve.prototype=Object.create(a.Curve.prototype),a.SplineCurve.prototype.constructor=a.SplineCurve,a.SplineCurve.prototype.getPoint=function(b){var c=this.points,d=(c.length-1)*b,e=Math.floor(d),f=d-e,g=c[0==e?e:e-1],h=c[e],i=c[e>c.length-2?c.length-1:e+1],j=c[e>c.length-3?c.length-1:e+2],k=new a.Vector2;return k.x=a.Curve.Utils.interpolate(g.x,h.x,i.x,j.x,f),k.y=a.Curve.Utils.interpolate(g.y,h.y,i.y,j.y,f),k},a.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g},a.EllipseCurve.prototype=Object.create(a.Curve.prototype),a.EllipseCurve.prototype.constructor=a.EllipseCurve,a.EllipseCurve.prototype.getPoint=function(b){var c=this.aEndAngle-this.aStartAngle;0>c&&(c+=2*Math.PI),c>2*Math.PI&&(c-=2*Math.PI);var d;d=this.aClockwise===!0?this.aEndAngle+(1-b)*(2*Math.PI-c):this.aStartAngle+b*c;var e=new a.Vector2;return e.x=this.aX+this.xRadius*Math.cos(d),e.y=this.aY+this.yRadius*Math.sin(d),e},a.ArcCurve=function(b,c,d,e,f,g){a.EllipseCurve.call(this,b,c,d,d,e,f,g)},a.ArcCurve.prototype=Object.create(a.EllipseCurve.prototype),a.ArcCurve.prototype.constructor=a.ArcCurve,a.LineCurve3=a.Curve.create(function(a,b){this.v1=a,this.v2=b},function(b){var c=new a.Vector3;return c.subVectors(this.v2,this.v1),c.multiplyScalar(b),c.add(this.v1),c}),a.QuadraticBezierCurve3=a.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c},function(b){var c=new a.Vector3;return c.x=a.Shape.Utils.b2(b,this.v0.x,this.v1.x,this.v2.x),c.y=a.Shape.Utils.b2(b,this.v0.y,this.v1.y,this.v2.y),c.z=a.Shape.Utils.b2(b,this.v0.z,this.v1.z,this.v2.z),c}),a.CubicBezierCurve3=a.Curve.create(function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},function(b){var c=new a.Vector3;return c.x=a.Shape.Utils.b3(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c.y=a.Shape.Utils.b3(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y),c.z=a.Shape.Utils.b3(b,this.v0.z,this.v1.z,this.v2.z,this.v3.z),c}),a.SplineCurve3=a.Curve.create(function(a){this.points=void 0==a?[]:a},function(b){var c=this.points,d=(c.length-1)*b,e=Math.floor(d),f=d-e,g=c[0==e?e:e-1],h=c[e],i=c[e>c.length-2?c.length-1:e+1],j=c[e>c.length-3?c.length-1:e+2],k=new a.Vector3;return k.x=a.Curve.Utils.interpolate(g.x,h.x,i.x,j.x,f),k.y=a.Curve.Utils.interpolate(g.y,h.y,i.y,j.y,f),k.z=a.Curve.Utils.interpolate(g.z,h.z,i.z,j.z,f),k}),a.ClosedSplineCurve3=a.Curve.create(function(a){this.points=void 0==a?[]:a},function(b){var c=this.points,d=(c.length-0)*b,e=Math.floor(d),f=d-e;e+=e>0?0:(Math.floor(Math.abs(e)/c.length)+1)*c.length;var g=c[(e-1)%c.length],h=c[e%c.length],i=c[(e+1)%c.length],j=c[(e+2)%c.length],k=new a.Vector3;return k.x=a.Curve.Utils.interpolate(g.x,h.x,i.x,j.x,f),k.y=a.Curve.Utils.interpolate(g.y,h.y,i.y,j.y,f),k.z=a.Curve.Utils.interpolate(g.z,h.z,i.z,j.z,f),k}),a.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(b){if(b.initialized===!0)return b;for(var c=0;c<b.hierarchy.length;c++){for(var d=0;d<b.hierarchy[c].keys.length;d++)if(b.hierarchy[c].keys[d].time<0&&(b.hierarchy[c].keys[d].time=0),void 0!==b.hierarchy[c].keys[d].rot&&!(b.hierarchy[c].keys[d].rot instanceof a.Quaternion)){var e=b.hierarchy[c].keys[d].rot;b.hierarchy[c].keys[d].rot=(new a.Quaternion).fromArray(e)}if(b.hierarchy[c].keys.length&&void 0!==b.hierarchy[c].keys[0].morphTargets){for(var f={},d=0;d<b.hierarchy[c].keys.length;d++)for(var g=0;g<b.hierarchy[c].keys[d].morphTargets.length;g++){var h=b.hierarchy[c].keys[d].morphTargets[g];f[h]=-1}b.hierarchy[c].usedMorphTargets=f;for(var d=0;d<b.hierarchy[c].keys.length;d++){var i={};for(var h in f){for(var g=0;g<b.hierarchy[c].keys[d].morphTargets.length;g++)if(b.hierarchy[c].keys[d].morphTargets[g]===h){i[h]=b.hierarchy[c].keys[d].morphTargetsInfluences[g];break}g===b.hierarchy[c].keys[d].morphTargets.length&&(i[h]=0)}b.hierarchy[c].keys[d].morphTargetsInfluences=i}}for(var d=1;d<b.hierarchy[c].keys.length;d++)b.hierarchy[c].keys[d].time===b.hierarchy[c].keys[d-1].time&&(b.hierarchy[c].keys.splice(d,1),d--);for(var d=0;d<b.hierarchy[c].keys.length;d++)b.hierarchy[c].keys[d].index=d}return b.initialized=!0,b},parse:function(b){var c=function(a,b){b.push(a);for(var d=0;d<a.children.length;d++)c(a.children[d],b)},d=[];if(b instanceof a.SkinnedMesh)for(var e=0;e<b.skeleton.bones.length;e++)d.push(b.skeleton.bones[e]);else c(b,d);return d},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){var b=this.animations.indexOf(a);-1!==b&&this.animations.splice(b,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].resetBlendWeights();for(var b=0;b<this.animations.length;b++)this.animations[b].update(a)}},a.Animation=function(b,c){this.root=b,this.data=a.AnimationHandler.init(c),this.hierarchy=a.AnimationHandler.parse(b),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=a.AnimationHandler.LINEAR},a.Animation.prototype.keyTypes=["pos","rot","scl"],a.Animation.prototype.play=function(b,c){this.currentTime=void 0!==b?b:0,this.weight=void 0!==c?c:1,this.isPlaying=!0,this.reset(),a.AnimationHandler.play(this)},a.Animation.prototype.stop=function(){this.isPlaying=!1,a.AnimationHandler.stop(this)},a.Animation.prototype.reset=function(){for(var a=0,b=this.hierarchy.length;b>a;a++){var c=this.hierarchy[a];void 0===c.animationCache&&(c.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}}),void 0===c.animationCache.animations[this.data.name]&&(c.animationCache.animations[this.data.name]={},c.animationCache.animations[this.data.name].prevKey={pos:0,rot:0,scl:0},c.animationCache.animations[this.data.name].nextKey={pos:0,rot:0,scl:0},c.animationCache.animations[this.data.name].originalMatrix=c.matrix);for(var d=c.animationCache.animations[this.data.name],e=0;3>e;e++){var f=this.keyTypes[e],g=this.data.hierarchy[a].keys[0],h=this.getNextKeyWith(f,a,1);if(g&&g[f]&&h&&h[f]){for(;h.time<this.currentTime&&h.index>g.index;)g=h,h=this.getNextKeyWith(f,a,h.index+1);d.prevKey[f]=g,d.nextKey[f]=h}}}},a.Animation.prototype.resetBlendWeights=function(){for(var a=0,b=this.hierarchy.length;b>a;a++){var c=this.hierarchy[a];void 0!==c.animationCache&&(c.animationCache.blending.positionWeight=0,c.animationCache.blending.quaternionWeight=0,c.animationCache.blending.scaleWeight=0)}},a.Animation.prototype.update=function(){var b=[],c=new a.Vector3,d=new a.Vector3,e=new a.Quaternion,f=function(a,b){var c,d,e,f,h,i,j,k,l,m=[],n=[];return c=(a.length-1)*b,d=Math.floor(c),e=c-d,m[0]=0===d?d:d-1,m[1]=d,m[2]=d>a.length-2?d:d+1,m[3]=d>a.length-3?d:d+2,i=a[m[0]],j=a[m[1]],k=a[m[2]],l=a[m[3]],f=e*e,h=e*f,n[0]=g(i[0],j[0],k[0],l[0],e,f,h),n[1]=g(i[1],j[1],k[1],l[1],e,f,h),n[2]=g(i[2],j[2],k[2],l[2],e,f,h),n},g=function(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b};return function(g){if(this.isPlaying!==!1&&(this.currentTime+=g*this.timeScale,0!==this.weight)){var h=this.data.length;(this.currentTime>h||this.currentTime<0)&&(this.loop?(this.currentTime%=h,this.currentTime<0&&(this.currentTime+=h),this.reset()):this.stop());for(var i=0,j=this.hierarchy.length;j>i;i++)for(var k=this.hierarchy[i],l=k.animationCache.animations[this.data.name],m=k.animationCache.blending,n=0;3>n;n++){var o=this.keyTypes[n],p=l.prevKey[o],q=l.nextKey[o];if(p&&p[o]&&q&&q[o]){if(this.timeScale>0&&q.time<=this.currentTime||this.timeScale<0&&p.time>=this.currentTime){for(p=this.data.hierarchy[i].keys[0],q=this.getNextKeyWith(o,i,1);q.time<this.currentTime&&q.index>p.index;)p=q,q=this.getNextKeyWith(o,i,q.index+1);l.prevKey[o]=p,l.nextKey[o]=q}var r=(this.currentTime-p.time)/(q.time-p.time),s=p[o],t=q[o];if(0>r&&(r=0),r>1&&(r=1),"pos"===o){if(this.interpolationType===a.AnimationHandler.LINEAR){d.x=s[0]+(t[0]-s[0])*r,d.y=s[1]+(t[1]-s[1])*r,d.z=s[2]+(t[2]-s[2])*r;var u=this.weight/(this.weight+m.positionWeight);k.position.lerp(d,u),m.positionWeight+=this.weight}else if(this.interpolationType===a.AnimationHandler.CATMULLROM||this.interpolationType===a.AnimationHandler.CATMULLROM_FORWARD){b[0]=this.getPrevKeyWith("pos",i,p.index-1).pos,b[1]=s,b[2]=t,b[3]=this.getNextKeyWith("pos",i,q.index+1).pos,r=.33*r+.33;var v=f(b,r),u=this.weight/(this.weight+m.positionWeight);m.positionWeight+=this.weight;var w=k.position;if(w.x=w.x+(v[0]-w.x)*u,w.y=w.y+(v[1]-w.y)*u,w.z=w.z+(v[2]-w.z)*u,this.interpolationType===a.AnimationHandler.CATMULLROM_FORWARD){var x=f(b,1.01*r);c.set(x[0],x[1],x[2]),c.sub(w),c.y=0,c.normalize();var y=Math.atan2(c.x,c.z);k.rotation.set(0,y,0)}}}else if("rot"===o)if(a.Quaternion.slerp(s,t,e,r),0===m.quaternionWeight)k.quaternion.copy(e),m.quaternionWeight=this.weight;else{var u=this.weight/(this.weight+m.quaternionWeight);a.Quaternion.slerp(k.quaternion,e,k.quaternion,u),m.quaternionWeight+=this.weight}else if("scl"===o){d.x=s[0]+(t[0]-s[0])*r,d.y=s[1]+(t[1]-s[1])*r,d.z=s[2]+(t[2]-s[2])*r;var u=this.weight/(this.weight+m.scaleWeight);k.scale.lerp(d,u),m.scaleWeight+=this.weight}}}return!0}}}(),a.Animation.prototype.getNextKeyWith=function(b,c,d){var e=this.data.hierarchy[c].keys;if(void 0!==e&&e.length>0){for(this.interpolationType===a.AnimationHandler.CATMULLROM||this.interpolationType===a.AnimationHandler.CATMULLROM_FORWARD?d=d<e.length-1?d:e.length-1:d%=e.length;d<e.length;d++)if(this.interpolationType===a.AnimationHandler.CATMULLROM||this.interpolationType===a.AnimationHandler.CATMULLROM_FORWARD?d=d<e.length-1?d:e.length-1:d%=e.length,void 0!==e[d][b])return e[d];return this.data.hierarchy[c].keys[0]}return null},a.Animation.prototype.getPrevKeyWith=function(b,c,d){var e=this.data.hierarchy[c].keys;if(void 0!==e&&e.length>0){for(d=this.interpolationType===a.AnimationHandler.CATMULLROM||this.interpolationType===a.AnimationHandler.CATMULLROM_FORWARD?d>0?d:0:d>=0?d:d+e.length;d>=0;d--)if(void 0!==e[d][b])return e[d];return this.data.hierarchy[c].keys[e.length-1]}return null},a.KeyFrameAnimation=function(b){this.root=b.node,this.data=a.AnimationHandler.init(b),this.hierarchy=a.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0;for(var c=0,d=this.hierarchy.length;d>c;c++){var e=this.data.hierarchy[c].keys,f=this.data.hierarchy[c].sids,g=this.hierarchy[c];if(e.length&&f){for(var h=0;h<f.length;h++){var i=f[h],j=this.getNextKeyWith(i,c,0);j&&j.apply(i)}g.matrixAutoUpdate=!1,this.data.hierarchy[c].node.updateMatrix(),g.matrixWorldNeedsUpdate=!0}}},a.KeyFrameAnimation.prototype.play=function(b){if(this.currentTime=void 0!==b?b:0,this.isPlaying===!1){this.isPlaying=!0;var c,d,e,f=this.hierarchy.length;for(c=0;f>c;c++){d=this.hierarchy[c],e=this.data.hierarchy[c],void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey=null,e.animationCache.nextKey=null,e.animationCache.originalMatrix=d.matrix);var g=this.data.hierarchy[c].keys;g.length&&(e.animationCache.prevKey=g[0],e.animationCache.nextKey=g[1],this.startTime=Math.min(g[0].time,this.startTime),this.endTime=Math.max(g[g.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,a.AnimationHandler.play(this)},a.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,a.AnimationHandler.stop(this);for(var b=0;b<this.data.hierarchy.length;b++){var c=this.hierarchy[b],d=this.data.hierarchy[b];if(void 0!==d.animationCache){var e=d.animationCache.originalMatrix;e.copy(c.matrix),c.matrix=e,delete d.animationCache}}},a.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying!==!1){this.currentTime+=a*this.timeScale;var b=this.data.length;this.loop===!0&&this.currentTime>b&&(this.currentTime%=b),this.currentTime=Math.min(this.currentTime,b);for(var c=0,d=this.hierarchy.length;d>c;c++){var e=this.hierarchy[c],f=this.data.hierarchy[c],g=f.keys,h=f.animationCache;if(g.length){var i=h.prevKey,j=h.nextKey;if(j.time<=this.currentTime){for(;j.time<this.currentTime&&j.index>i.index;)i=j,j=g[i.index+1];h.prevKey=i,h.nextKey=j}j.time>=this.currentTime?i.interpolate(j,this.currentTime):i.interpolate(j,j.time),this.data.hierarchy[c].node.updateMatrix(),e.matrixWorldNeedsUpdate=!0}}}},a.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c%=d.length;c<d.length;c++)if(d[c].hasTarget(a))return d[c];return d[0]},a.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=c>=0?c:c+d.length;c>=0;c--)if(d[c].hasTarget(a))return d[c];return d[d.length-1]},a.MorphAnimation=function(a){this.mesh=a,this.frames=a.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.lastFrame=0,this.currentFrame=0,this.isPlaying=!1},a.MorphAnimation.prototype={constructor:a.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(a){if(this.isPlaying!==!1){this.currentTime+=a,this.loop===!0&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration);var b=this.duration/this.frames,c=Math.floor(this.currentTime/b);c!=this.currentFrame&&(this.mesh.morphTargetInfluences[this.lastFrame]=0,this.mesh.morphTargetInfluences[this.currentFrame]=1,this.mesh.morphTargetInfluences[c]=0,this.lastFrame=this.currentFrame,this.currentFrame=c),this.mesh.morphTargetInfluences[c]=this.currentTime%b/b,this.mesh.morphTargetInfluences[this.lastFrame]=1-this.mesh.morphTargetInfluences[c]}}},a.BoxGeometry=function(b,c,d,e,f,g){function h(b,c,d,e,f,g,h,j){var k,l,m,n=i.widthSegments,o=i.heightSegments,p=f/2,q=g/2,r=i.vertices.length;"x"===b&&"y"===c||"y"===b&&"x"===c?k="z":"x"===b&&"z"===c||"z"===b&&"x"===c?(k="y",o=i.depthSegments):("z"===b&&"y"===c||"y"===b&&"z"===c)&&(k="x",n=i.depthSegments);var s=n+1,t=o+1,u=f/n,v=g/o,w=new a.Vector3;for(w[k]=h>0?1:-1,m=0;t>m;m++)for(l=0;s>l;l++){var x=new a.Vector3;x[b]=(l*u-p)*d,x[c]=(m*v-q)*e,x[k]=h,i.vertices.push(x)}for(m=0;o>m;m++)for(l=0;n>l;l++){var y=l+s*m,z=l+s*(m+1),A=l+1+s*(m+1),B=l+1+s*m,C=new a.Vector2(l/n,1-m/o),D=new a.Vector2(l/n,1-(m+1)/o),E=new a.Vector2((l+1)/n,1-(m+1)/o),F=new a.Vector2((l+1)/n,1-m/o),G=new a.Face3(y+r,z+r,B+r);G.normal.copy(w),G.vertexNormals.push(w.clone(),w.clone(),w.clone()),G.materialIndex=j,i.faces.push(G),i.faceVertexUvs[0].push([C,D,F]),G=new a.Face3(z+r,A+r,B+r),G.normal.copy(w),G.vertexNormals.push(w.clone(),w.clone(),w.clone()),G.materialIndex=j,i.faces.push(G),i.faceVertexUvs[0].push([D.clone(),E,F.clone()])}}a.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:b,height:c,depth:d,widthSegments:e,heightSegments:f,depthSegments:g},this.widthSegments=e||1,this.heightSegments=f||1,this.depthSegments=g||1;var i=this,j=b/2,k=c/2,l=d/2;h("z","y",-1,-1,d,c,j,0),h("z","y",1,-1,d,c,-j,1),h("x","z",1,1,b,d,k,2),h("x","z",1,-1,b,d,-k,3),h("x","y",1,-1,b,c,l,4),h("x","y",-1,-1,b,c,-l,5),this.mergeVertices()},a.BoxGeometry.prototype=Object.create(a.Geometry.prototype),a.BoxGeometry.prototype.constructor=a.BoxGeometry,a.CircleGeometry=function(b,c,d,e){a.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:b,segments:c,thetaStart:d,thetaLength:e},b=b||50,c=void 0!==c?Math.max(3,c):8,d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI;var f,g=[],h=new a.Vector3,i=new a.Vector2(.5,.5);for(this.vertices.push(h),g.push(i),f=0;c>=f;f++){var j=new a.Vector3,k=d+f/c*e;j.x=b*Math.cos(k),j.y=b*Math.sin(k),this.vertices.push(j),g.push(new a.Vector2((j.x/b+1)/2,(j.y/b+1)/2))}var l=new a.Vector3(0,0,1);for(f=1;c>=f;f++)this.faces.push(new a.Face3(f,f+1,0,[l.clone(),l.clone(),l.clone()])),this.faceVertexUvs[0].push([g[f].clone(),g[f+1].clone(),i.clone()]);this.computeFaceNormals(),this.boundingSphere=new a.Sphere(new a.Vector3,b)},a.CircleGeometry.prototype=Object.create(a.Geometry.prototype),a.CircleGeometry.prototype.constructor=a.CircleGeometry,a.CubeGeometry=function(b,c,d,e,f,g){return console.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry."),new a.BoxGeometry(b,c,d,e,f,g)},a.CylinderGeometry=function(b,c,d,e,f,g,h,i){a.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:b,radiusBottom:c,height:d,radialSegments:e,heightSegments:f,openEnded:g,thetaStart:h,thetaLength:i},b=void 0!==b?b:20,c=void 0!==c?c:20,d=void 0!==d?d:100,e=e||8,f=f||1,g=void 0!==g?g:!1,h=void 0!==h?h:0,i=void 0!==i?i:2*Math.PI;var j,k,l=d/2,m=[],n=[];for(k=0;f>=k;k++){var o=[],p=[],q=k/f,r=q*(c-b)+b;for(j=0;e>=j;j++){var s=j/e,t=new a.Vector3;t.x=r*Math.sin(s*i+h),t.y=-q*d+l,t.z=r*Math.cos(s*i+h),this.vertices.push(t),o.push(this.vertices.length-1),p.push(new a.Vector2(s,1-q))}m.push(o),n.push(p)}var u,v,w=(c-b)/d;for(j=0;e>j;j++)for(0!==b?(u=this.vertices[m[0][j]].clone(),v=this.vertices[m[0][j+1]].clone()):(u=this.vertices[m[1][j]].clone(),v=this.vertices[m[1][j+1]].clone()),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*w).normalize(),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*w).normalize(),k=0;f>k;k++){var x=m[k][j],y=m[k+1][j],z=m[k+1][j+1],A=m[k][j+1],B=u.clone(),C=u.clone(),D=v.clone(),E=v.clone(),F=n[k][j].clone(),G=n[k+1][j].clone(),H=n[k+1][j+1].clone(),I=n[k][j+1].clone();this.faces.push(new a.Face3(x,y,A,[B,C,E])),this.faceVertexUvs[0].push([F,G,I]),this.faces.push(new a.Face3(y,z,A,[C.clone(),D,E.clone()])),this.faceVertexUvs[0].push([G.clone(),H,I.clone()])}if(g===!1&&b>0)for(this.vertices.push(new a.Vector3(0,l,0)),j=0;e>j;j++){var x=m[0][j],y=m[0][j+1],z=this.vertices.length-1,B=new a.Vector3(0,1,0),C=new a.Vector3(0,1,0),D=new a.Vector3(0,1,0),F=n[0][j].clone(),G=n[0][j+1].clone(),H=new a.Vector2(G.x,0);this.faces.push(new a.Face3(x,y,z,[B,C,D])),this.faceVertexUvs[0].push([F,G,H])}if(g===!1&&c>0)for(this.vertices.push(new a.Vector3(0,-l,0)),j=0;e>j;j++){var x=m[f][j+1],y=m[f][j],z=this.vertices.length-1,B=new a.Vector3(0,-1,0),C=new a.Vector3(0,-1,0),D=new a.Vector3(0,-1,0),F=n[f][j+1].clone(),G=n[f][j].clone(),H=new a.Vector2(G.x,1);this.faces.push(new a.Face3(x,y,z,[B,C,D])),this.faceVertexUvs[0].push([F,G,H])}this.computeFaceNormals()},a.CylinderGeometry.prototype=Object.create(a.Geometry.prototype),a.CylinderGeometry.prototype.constructor=a.CylinderGeometry,a.ExtrudeGeometry=function(b,c){return"undefined"==typeof b?void(b=[]):(a.Geometry.call(this),this.type="ExtrudeGeometry",b=b instanceof Array?b:[b],this.addShapeList(b,c),void this.computeFaceNormals())},a.ExtrudeGeometry.prototype=Object.create(a.Geometry.prototype),a.ExtrudeGeometry.prototype.constructor=a.ExtrudeGeometry,a.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;c>d;d++){var e=a[d];this.addShape(e,b)}},a.ExtrudeGeometry.prototype.addShape=function(b,c){function d(a,b,c){return b||console.log("die"),b.clone().multiplyScalar(c).add(a)}function e(b,c,d){var e,f,g=1e-10,h=1,i=b.x-c.x,j=b.y-c.y,k=d.x-b.x,l=d.y-b.y,m=i*i+j*j,n=i*l-j*k;if(Math.abs(n)>g){var o=Math.sqrt(m),p=Math.sqrt(k*k+l*l),q=c.x-j/o,r=c.y+i/o,s=d.x-l/p,t=d.y+k/p,u=((s-q)*l-(t-r)*k)/(i*l-j*k);
e=q+i*u-b.x,f=r+j*u-b.y;var v=e*e+f*f;if(2>=v)return new a.Vector2(e,f);h=Math.sqrt(v/2)}else{var w=!1;i>g?k>g&&(w=!0):-g>i?-g>k&&(w=!0):Math.sign(j)==Math.sign(l)&&(w=!0),w?(e=-j,f=i,h=Math.sqrt(m)):(e=i,f=j,h=Math.sqrt(m/2))}return new a.Vector2(e/h,f/h)}function f(){if(u){var a=0,b=T*a;for(W=0;U>W;W++)S=L[W],j(S[2]+b,S[1]+b,S[0]+b);for(a=w+2*t,b=T*a,W=0;U>W;W++)S=L[W],j(S[0]+b,S[1]+b,S[2]+b)}else{for(W=0;U>W;W++)S=L[W],j(S[2],S[1],S[0]);for(W=0;U>W;W++)S=L[W],j(S[0]+T*w,S[1]+T*w,S[2]+T*w)}}function g(){var a=0;for(h(M,a),a+=M.length,D=0,E=J.length;E>D;D++)C=J[D],h(C,a),a+=C.length}function h(a,b){var c,d;for(W=a.length;--W>=0;){c=W,d=W-1,0>d&&(d=a.length-1);var e=0,f=w+2*t;for(e=0;f>e;e++){var g=T*e,h=T*(e+1),i=b+c+g,j=b+d+g,l=b+d+h,m=b+c+h;k(i,j,l,m,a,e,f,c,d)}}}function i(b,c,d){F.vertices.push(new a.Vector3(b,c,d))}function j(b,c,d){b+=G,c+=G,d+=G,F.faces.push(new a.Face3(b,c,d,null,null,z));var e=B.generateTopUV(F,b,c,d);F.faceVertexUvs[0].push(e)}function k(b,c,d,e){b+=G,c+=G,d+=G,e+=G,F.faces.push(new a.Face3(b,c,e,null,null,A)),F.faces.push(new a.Face3(c,d,e,null,null,A));var f=B.generateSideWallUV(F,b,c,d,e);F.faceVertexUvs[0].push([f[0],f[1],f[3]]),F.faceVertexUvs[0].push([f[1],f[2],f[3]])}var l,m,n,o,p,q=void 0!==c.amount?c.amount:100,r=void 0!==c.bevelThickness?c.bevelThickness:6,s=void 0!==c.bevelSize?c.bevelSize:r-2,t=void 0!==c.bevelSegments?c.bevelSegments:3,u=void 0!==c.bevelEnabled?c.bevelEnabled:!0,v=void 0!==c.curveSegments?c.curveSegments:12,w=void 0!==c.steps?c.steps:1,x=c.extrudePath,y=!1,z=c.material,A=c.extrudeMaterial,B=void 0!==c.UVGenerator?c.UVGenerator:a.ExtrudeGeometry.WorldUVGenerator;x&&(l=x.getSpacedPoints(w),y=!0,u=!1,m=void 0!==c.frames?c.frames:new a.TubeGeometry.FrenetFrames(x,w,!1),n=new a.Vector3,o=new a.Vector3,p=new a.Vector3),u||(t=0,r=0,s=0);var C,D,E,F=this,G=this.vertices.length,H=b.extractPoints(v),I=H.shape,J=H.holes,K=!a.Shape.Utils.isClockWise(I);if(K){for(I=I.reverse(),D=0,E=J.length;E>D;D++)C=J[D],a.Shape.Utils.isClockWise(C)&&(J[D]=C.reverse());K=!1}var L=a.Shape.Utils.triangulateShape(I,J),M=I;for(D=0,E=J.length;E>D;D++)C=J[D],I=I.concat(C);for(var N,O,P,Q,R,S,T=I.length,U=L.length,V=(M.length,180/Math.PI,[]),W=0,X=M.length,Y=X-1,Z=W+1;X>W;W++,Y++,Z++){Y===X&&(Y=0),Z===X&&(Z=0);{M[W],M[Y],M[Z]}V[W]=e(M[W],M[Y],M[Z])}var $,_=[],ab=V.concat();for(D=0,E=J.length;E>D;D++){for(C=J[D],$=[],W=0,X=C.length,Y=X-1,Z=W+1;X>W;W++,Y++,Z++)Y===X&&(Y=0),Z===X&&(Z=0),$[W]=e(C[W],C[Y],C[Z]);_.push($),ab=ab.concat($)}for(N=0;t>N;N++){for(P=N/t,Q=r*(1-P),O=s*Math.sin(P*Math.PI/2),W=0,X=M.length;X>W;W++)R=d(M[W],V[W],O),i(R.x,R.y,-Q);for(D=0,E=J.length;E>D;D++)for(C=J[D],$=_[D],W=0,X=C.length;X>W;W++)R=d(C[W],$[W],O),i(R.x,R.y,-Q)}for(O=s,W=0;T>W;W++)R=u?d(I[W],ab[W],O):I[W],y?(o.copy(m.normals[0]).multiplyScalar(R.x),n.copy(m.binormals[0]).multiplyScalar(R.y),p.copy(l[0]).add(o).add(n),i(p.x,p.y,p.z)):i(R.x,R.y,0);var bb;for(bb=1;w>=bb;bb++)for(W=0;T>W;W++)R=u?d(I[W],ab[W],O):I[W],y?(o.copy(m.normals[bb]).multiplyScalar(R.x),n.copy(m.binormals[bb]).multiplyScalar(R.y),p.copy(l[bb]).add(o).add(n),i(p.x,p.y,p.z)):i(R.x,R.y,q/w*bb);for(N=t-1;N>=0;N--){for(P=N/t,Q=r*(1-P),O=s*Math.sin(P*Math.PI/2),W=0,X=M.length;X>W;W++)R=d(M[W],V[W],O),i(R.x,R.y,q+Q);for(D=0,E=J.length;E>D;D++)for(C=J[D],$=_[D],W=0,X=C.length;X>W;W++)R=d(C[W],$[W],O),y?i(R.x,R.y+l[w-1].y,l[w-1].x+Q):i(R.x,R.y,q+Q)}f(),g()},a.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(b,c,d,e){var f=b.vertices,g=f[c],h=f[d],i=f[e];return[new a.Vector2(g.x,g.y),new a.Vector2(h.x,h.y),new a.Vector2(i.x,i.y)]},generateSideWallUV:function(b,c,d,e,f){var g=b.vertices,h=g[c],i=g[d],j=g[e],k=g[f];return Math.abs(h.y-i.y)<.01?[new a.Vector2(h.x,1-h.z),new a.Vector2(i.x,1-i.z),new a.Vector2(j.x,1-j.z),new a.Vector2(k.x,1-k.z)]:[new a.Vector2(h.y,1-h.z),new a.Vector2(i.y,1-i.z),new a.Vector2(j.y,1-j.z),new a.Vector2(k.y,1-k.z)]}},a.ShapeGeometry=function(b,c){a.Geometry.call(this),this.type="ShapeGeometry",b instanceof Array==!1&&(b=[b]),this.addShapeList(b,c),this.computeFaceNormals()},a.ShapeGeometry.prototype=Object.create(a.Geometry.prototype),a.ShapeGeometry.prototype.constructor=a.ShapeGeometry,a.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;d>c;c++)this.addShape(a[c],b);return this},a.ShapeGeometry.prototype.addShape=function(b,c){void 0===c&&(c={});var d,e,f,g=void 0!==c.curveSegments?c.curveSegments:12,h=c.material,i=void 0===c.UVGenerator?a.ExtrudeGeometry.WorldUVGenerator:c.UVGenerator,j=this.vertices.length,k=b.extractPoints(g),l=k.shape,m=k.holes,n=!a.Shape.Utils.isClockWise(l);if(n){for(l=l.reverse(),d=0,e=m.length;e>d;d++)f=m[d],a.Shape.Utils.isClockWise(f)&&(m[d]=f.reverse());n=!1}var o=a.Shape.Utils.triangulateShape(l,m),p=l;for(d=0,e=m.length;e>d;d++)f=m[d],l=l.concat(f);{var q,r,s=l.length,t=o.length;p.length}for(d=0;s>d;d++)q=l[d],this.vertices.push(new a.Vector3(q.x,q.y,0));for(d=0;t>d;d++){r=o[d];var u=r[0]+j,v=r[1]+j,w=r[2]+j;this.faces.push(new a.Face3(u,v,w,null,null,h)),this.faceVertexUvs[0].push(i.generateTopUV(this,u,v,w))}},a.LatheGeometry=function(b,c,d,e){a.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:b,segments:c,phiStart:d,phiLength:e},c=c||12,d=d||0,e=e||2*Math.PI;for(var f=1/(b.length-1),g=1/c,h=0,i=c;i>=h;h++)for(var j=d+h*g*e,k=Math.cos(j),l=Math.sin(j),m=0,n=b.length;n>m;m++){var o=b[m],p=new a.Vector3;p.x=k*o.x-l*o.y,p.y=l*o.x+k*o.y,p.z=o.z,this.vertices.push(p)}for(var q=b.length,h=0,i=c;i>h;h++)for(var m=0,n=b.length-1;n>m;m++){var r=m+q*h,s=r,t=r+q,k=r+1+q,u=r+1,v=h*g,w=m*f,x=v+g,y=w+f;this.faces.push(new a.Face3(s,t,u)),this.faceVertexUvs[0].push([new a.Vector2(v,w),new a.Vector2(x,w),new a.Vector2(v,y)]),this.faces.push(new a.Face3(t,k,u)),this.faceVertexUvs[0].push([new a.Vector2(x,w),new a.Vector2(x,y),new a.Vector2(v,y)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},a.LatheGeometry.prototype=Object.create(a.Geometry.prototype),a.LatheGeometry.prototype.constructor=a.LatheGeometry,a.PlaneGeometry=function(b,c,d,e){console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint."),a.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:b,height:c,widthSegments:d,heightSegments:e},this.fromBufferGeometry(new a.PlaneBufferGeometry(b,c,d,e))},a.PlaneGeometry.prototype=Object.create(a.Geometry.prototype),a.PlaneGeometry.prototype.constructor=a.PlaneGeometry,a.PlaneBufferGeometry=function(b,c,d,e,f,g){a.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:b,height:c,widthSegments:d,heightSegments:e};var h=b/2,i=c/2,j=d||1,k=e||1,l=j+1,m=k+1,n=b/j,o=c/k,p=new Float32Array(l*m*3),q=new Float32Array(l*m*3),r=new Float32Array(l*m*2),s=0,t=0,u=g?Math.floor(m*-g):k;f=f?f:1;for(var v=0;m>v;v++){for(var w=v*o-i,x=g?Math.floor(l*g):0,y=0;l>y;y++){var z=y*n-h;p[s]=z,p[s+1]=-w,q[s+2]=1,r[t]=x*f/j,r[t+1]=u*f/k,s+=3,t+=2,x++}u--}s=0;for(var A=new(p.length/3>65535?Uint32Array:Uint16Array)(j*k*6),v=0;k>v;v++)for(var y=0;j>y;y++){var B=y+l*v,C=y+l*(v+1),D=y+1+l*(v+1),E=y+1+l*v;A[s]=B,A[s+1]=C,A[s+2]=E,A[s+3]=C,A[s+4]=D,A[s+5]=E,s+=6}this.addAttribute("index",new a.BufferAttribute(A,1)),this.addAttribute("position",new a.BufferAttribute(p,3)),this.addAttribute("normal",new a.BufferAttribute(q,3)),this.addAttribute("uv",new a.BufferAttribute(r,2))},a.PlaneBufferGeometry.prototype=Object.create(a.BufferGeometry.prototype),a.PlaneBufferGeometry.prototype.constructor=a.PlaneBufferGeometry,a.RingGeometry=function(b,c,d,e,f,g){a.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:b,outerRadius:c,thetaSegments:d,phiSegments:e,thetaStart:f,thetaLength:g},b=b||0,c=c||50,f=void 0!==f?f:0,g=void 0!==g?g:2*Math.PI,d=void 0!==d?Math.max(3,d):8,e=void 0!==e?Math.max(1,e):8;var h,i,j=[],k=b,l=(c-b)/e;for(h=0;e+1>h;h++){for(i=0;d+1>i;i++){var m=new a.Vector3,n=f+i/d*g;m.x=k*Math.cos(n),m.y=k*Math.sin(n),this.vertices.push(m),j.push(new a.Vector2((m.x/c+1)/2,(m.y/c+1)/2))}k+=l}var o=new a.Vector3(0,0,1);for(h=0;e>h;h++){var p=h*(d+1);for(i=0;d>i;i++){var n=i+p,q=n,r=n+d+1,s=n+d+2;this.faces.push(new a.Face3(q,r,s,[o.clone(),o.clone(),o.clone()])),this.faceVertexUvs[0].push([j[q].clone(),j[r].clone(),j[s].clone()]),q=n,r=n+d+2,s=n+1,this.faces.push(new a.Face3(q,r,s,[o.clone(),o.clone(),o.clone()])),this.faceVertexUvs[0].push([j[q].clone(),j[r].clone(),j[s].clone()])}}this.computeFaceNormals(),this.boundingSphere=new a.Sphere(new a.Vector3,k)},a.RingGeometry.prototype=Object.create(a.Geometry.prototype),a.RingGeometry.prototype.constructor=a.RingGeometry,a.SphereGeometry=function(b,c,d,e,f,g,h){a.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:b,widthSegments:c,heightSegments:d,phiStart:e,phiLength:f,thetaStart:g,thetaLength:h},b=b||50,c=Math.max(3,Math.floor(c)||8),d=Math.max(2,Math.floor(d)||6),e=void 0!==e?e:0,f=void 0!==f?f:2*Math.PI,g=void 0!==g?g:0,h=void 0!==h?h:Math.PI;var i,j,k=[],l=[];for(j=0;d>=j;j++){var m=[],n=[];for(i=0;c>=i;i++){var o=i/c,p=j/d,q=new a.Vector3;q.x=-b*Math.cos(e+o*f)*Math.sin(g+p*h),q.y=b*Math.cos(g+p*h),q.z=b*Math.sin(e+o*f)*Math.sin(g+p*h),this.vertices.push(q),m.push(this.vertices.length-1),n.push(new a.Vector2(o,1-p))}k.push(m),l.push(n)}for(j=0;d>j;j++)for(i=0;c>i;i++){var r=k[j][i+1],s=k[j][i],t=k[j+1][i],u=k[j+1][i+1],v=this.vertices[r].clone().normalize(),w=this.vertices[s].clone().normalize(),x=this.vertices[t].clone().normalize(),y=this.vertices[u].clone().normalize(),z=l[j][i+1].clone(),A=l[j][i].clone(),B=l[j+1][i].clone(),C=l[j+1][i+1].clone();Math.abs(this.vertices[r].y)===b?(z.x=(z.x+A.x)/2,this.faces.push(new a.Face3(r,t,u,[v,x,y])),this.faceVertexUvs[0].push([z,B,C])):Math.abs(this.vertices[t].y)===b?(B.x=(B.x+C.x)/2,this.faces.push(new a.Face3(r,s,t,[v,w,x])),this.faceVertexUvs[0].push([z,A,B])):(this.faces.push(new a.Face3(r,s,u,[v,w,y])),this.faceVertexUvs[0].push([z,A,C]),this.faces.push(new a.Face3(s,t,u,[w.clone(),x,y.clone()])),this.faceVertexUvs[0].push([A.clone(),B,C.clone()]))}this.computeFaceNormals(),this.boundingSphere=new a.Sphere(new a.Vector3,b)},a.SphereGeometry.prototype=Object.create(a.Geometry.prototype),a.SphereGeometry.prototype.constructor=a.SphereGeometry,a.TextGeometry=function(b,c){c=c||{};var d=a.FontUtils.generateShapes(b,c);c.amount=void 0!==c.height?c.height:50,void 0===c.bevelThickness&&(c.bevelThickness=10),void 0===c.bevelSize&&(c.bevelSize=8),void 0===c.bevelEnabled&&(c.bevelEnabled=!1),a.ExtrudeGeometry.call(this,d,c),this.type="TextGeometry"},a.TextGeometry.prototype=Object.create(a.ExtrudeGeometry.prototype),a.TextGeometry.prototype.constructor=a.TextGeometry,a.TorusGeometry=function(b,c,d,e,f){a.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:b,tube:c,radialSegments:d,tubularSegments:e,arc:f},b=b||100,c=c||40,d=d||8,e=e||6,f=f||2*Math.PI;for(var g=new a.Vector3,h=[],i=[],j=0;d>=j;j++)for(var k=0;e>=k;k++){var l=k/e*f,m=j/d*Math.PI*2;g.x=b*Math.cos(l),g.y=b*Math.sin(l);var n=new a.Vector3;n.x=(b+c*Math.cos(m))*Math.cos(l),n.y=(b+c*Math.cos(m))*Math.sin(l),n.z=c*Math.sin(m),this.vertices.push(n),h.push(new a.Vector2(k/e,j/d)),i.push(n.clone().sub(g).normalize())}for(var j=1;d>=j;j++)for(var k=1;e>=k;k++){var o=(e+1)*j+k-1,p=(e+1)*(j-1)+k-1,q=(e+1)*(j-1)+k,r=(e+1)*j+k,s=new a.Face3(o,p,r,[i[o].clone(),i[p].clone(),i[r].clone()]);this.faces.push(s),this.faceVertexUvs[0].push([h[o].clone(),h[p].clone(),h[r].clone()]),s=new a.Face3(p,q,r,[i[p].clone(),i[q].clone(),i[r].clone()]),this.faces.push(s),this.faceVertexUvs[0].push([h[p].clone(),h[q].clone(),h[r].clone()])}this.computeFaceNormals()},a.TorusGeometry.prototype=Object.create(a.Geometry.prototype),a.TorusGeometry.prototype.constructor=a.TorusGeometry,a.TorusKnotGeometry=function(b,c,d,e,f,g,h){function i(b,c,d,e,f){var g=Math.cos(b),h=Math.sin(b),i=c/d*b,j=Math.cos(i),k=e*(2+j)*.5*g,l=e*(2+j)*h*.5,m=f*e*Math.sin(i)*.5;return new a.Vector3(k,l,m)}a.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:b,tube:c,radialSegments:d,tubularSegments:e,p:f,q:g,heightScale:h},b=b||100,c=c||40,d=d||64,e=e||8,f=f||2,g=g||3,h=h||1;for(var j=new Array(d),k=new a.Vector3,l=new a.Vector3,m=new a.Vector3,n=0;d>n;++n){j[n]=new Array(e);var o=n/d*2*f*Math.PI,p=i(o,g,f,b,h),q=i(o+.01,g,f,b,h);k.subVectors(q,p),l.addVectors(q,p),m.crossVectors(k,l),l.crossVectors(m,k),m.normalize(),l.normalize();for(var r=0;e>r;++r){var s=r/e*2*Math.PI,t=-c*Math.cos(s),u=c*Math.sin(s),v=new a.Vector3;v.x=p.x+t*l.x+u*m.x,v.y=p.y+t*l.y+u*m.y,v.z=p.z+t*l.z+u*m.z,j[n][r]=this.vertices.push(v)-1}}for(var n=0;d>n;++n)for(var r=0;e>r;++r){var w=(n+1)%d,x=(r+1)%e,y=j[n][r],z=j[w][r],A=j[w][x],B=j[n][x],C=new a.Vector2(n/d,r/e),D=new a.Vector2((n+1)/d,r/e),E=new a.Vector2((n+1)/d,(r+1)/e),F=new a.Vector2(n/d,(r+1)/e);this.faces.push(new a.Face3(y,z,B)),this.faceVertexUvs[0].push([C,D,F]),this.faces.push(new a.Face3(z,A,B)),this.faceVertexUvs[0].push([D.clone(),E,F.clone()])}this.computeFaceNormals(),this.computeVertexNormals()},a.TorusKnotGeometry.prototype=Object.create(a.Geometry.prototype),a.TorusKnotGeometry.prototype.constructor=a.TorusKnotGeometry,a.TubeGeometry=function(b,c,d,e,f,g){function h(b,c,d){return E.vertices.push(new a.Vector3(b,c,d))-1}a.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:b,segments:c,radius:d,radialSegments:e,closed:f},c=c||64,d=d||1,e=e||8,f=f||!1,g=g||a.TubeGeometry.NoTaper;var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=[],E=this,F=c+1,G=new a.Vector3,H=new a.TubeGeometry.FrenetFrames(b,c,f),I=H.tangents,J=H.normals,K=H.binormals;for(this.tangents=I,this.normals=J,this.binormals=K,r=0;F>r;r++)for(D[r]=[],l=r/(F-1),q=b.getPointAt(l),i=I[r],j=J[r],k=K[r],n=d*g(l),s=0;e>s;s++)m=s/e*2*Math.PI,o=-n*Math.cos(m),p=n*Math.sin(m),G.copy(q),G.x+=o*j.x+p*k.x,G.y+=o*j.y+p*k.y,G.z+=o*j.z+p*k.z,D[r][s]=h(G.x,G.y,G.z);for(r=0;c>r;r++)for(s=0;e>s;s++)t=f?(r+1)%c:r+1,u=(s+1)%e,v=D[r][s],w=D[t][s],x=D[t][u],y=D[r][u],z=new a.Vector2(r/c,s/e),A=new a.Vector2((r+1)/c,s/e),B=new a.Vector2((r+1)/c,(s+1)/e),C=new a.Vector2(r/c,(s+1)/e),this.faces.push(new a.Face3(v,w,y)),this.faceVertexUvs[0].push([z,A,C]),this.faces.push(new a.Face3(w,x,y)),this.faceVertexUvs[0].push([A.clone(),B,C.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},a.TubeGeometry.prototype=Object.create(a.Geometry.prototype),a.TubeGeometry.prototype.constructor=a.TubeGeometry,a.TubeGeometry.NoTaper=function(){return 1},a.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)},a.TubeGeometry.FrenetFrames=function(b,c,d){function e(){o[0]=new a.Vector3,p[0]=new a.Vector3,g=Number.MAX_VALUE,h=Math.abs(n[0].x),i=Math.abs(n[0].y),j=Math.abs(n[0].z),g>=h&&(g=h,m.set(1,0,0)),g>=i&&(g=i,m.set(0,1,0)),g>=j&&m.set(0,0,1),q.crossVectors(n[0],m).normalize(),o[0].crossVectors(n[0],q),p[0].crossVectors(n[0],o[0])}var f,g,h,i,j,k,l,m=(new a.Vector3,new a.Vector3),n=(new a.Vector3,[]),o=[],p=[],q=new a.Vector3,r=new a.Matrix4,s=c+1,t=1e-4;for(this.tangents=n,this.normals=o,this.binormals=p,k=0;s>k;k++)l=k/(s-1),n[k]=b.getTangentAt(l),n[k].normalize();for(e(),k=1;s>k;k++)o[k]=o[k-1].clone(),p[k]=p[k-1].clone(),q.crossVectors(n[k-1],n[k]),q.length()>t&&(q.normalize(),f=Math.acos(a.Math.clamp(n[k-1].dot(n[k]),-1,1)),o[k].applyMatrix4(r.makeRotationAxis(q,f))),p[k].crossVectors(n[k],o[k]);if(d)for(f=Math.acos(a.Math.clamp(o[0].dot(o[s-1]),-1,1)),f/=s-1,n[0].dot(q.crossVectors(o[0],o[s-1]))>0&&(f=-f),k=1;s>k;k++)o[k].applyMatrix4(r.makeRotationAxis(n[k],f*k)),p[k].crossVectors(n[k],o[k])},a.PolyhedronGeometry=function(b,c,d,e){function f(b){var c=b.normalize().clone();c.index=l.vertices.push(c)-1;var d=i(b)/2/Math.PI+.5,e=j(b)/Math.PI+.5;return c.uv=new a.Vector2(d,1-e),c}function g(b,c,d){var e=new a.Face3(b.index,c.index,d.index,[b.clone(),c.clone(),d.clone()]);l.faces.push(e),u.copy(b).add(c).add(d).divideScalar(3);var f=i(u);l.faceVertexUvs[0].push([k(b.uv,b,f),k(c.uv,c,f),k(d.uv,d,f)])}function h(a,b){for(var c=Math.pow(2,b),d=(Math.pow(4,b),f(l.vertices[a.a])),e=f(l.vertices[a.b]),h=f(l.vertices[a.c]),i=[],j=0;c>=j;j++){i[j]=[];for(var k=f(d.clone().lerp(h,j/c)),m=f(e.clone().lerp(h,j/c)),n=c-j,o=0;n>=o;o++)i[j][o]=0==o&&j==c?k:f(k.clone().lerp(m,o/n))}for(var j=0;c>j;j++)for(var o=0;2*(c-j)-1>o;o++){var p=Math.floor(o/2);o%2==0?g(i[j][p+1],i[j+1][p],i[j][p]):g(i[j][p+1],i[j+1][p+1],i[j+1][p])}}function i(a){return Math.atan2(a.z,-a.x)}function j(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}function k(b,c,d){return 0>d&&1===b.x&&(b=new a.Vector2(b.x-1,b.y)),0===c.x&&0===c.z&&(b=new a.Vector2(d/2/Math.PI+.5,b.y)),b.clone()}a.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:b,indices:c,radius:d,detail:e},d=d||1,e=e||0;for(var l=this,m=0,n=b.length;n>m;m+=3)f(new a.Vector3(b[m],b[m+1],b[m+2]));for(var o=this.vertices,p=[],m=0,q=0,n=c.length;n>m;m+=3,q++){var r=o[c[m]],s=o[c[m+1]],t=o[c[m+2]];p[q]=new a.Face3(r.index,s.index,t.index,[r.clone(),s.clone(),t.clone()])}for(var u=new a.Vector3,m=0,n=p.length;n>m;m++)h(p[m],e);for(var m=0,n=this.faceVertexUvs[0].length;n>m;m++){var v=this.faceVertexUvs[0][m],w=v[0].x,x=v[1].x,y=v[2].x,z=Math.max(w,Math.max(x,y)),A=Math.min(w,Math.min(x,y));z>.9&&.1>A&&(.2>w&&(v[0].x+=1),.2>x&&(v[1].x+=1),.2>y&&(v[2].x+=1))}for(var m=0,n=this.vertices.length;n>m;m++)this.vertices[m].multiplyScalar(d);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new a.Sphere(new a.Vector3,d)},a.PolyhedronGeometry.prototype=Object.create(a.Geometry.prototype),a.PolyhedronGeometry.prototype.constructor=a.PolyhedronGeometry,a.DodecahedronGeometry=function(b,c){this.parameters={radius:b,detail:c};var d=(1+Math.sqrt(5))/2,e=1/d,f=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-e,-d,0,-e,d,0,e,-d,0,e,d,-e,-d,0,-e,d,0,e,-d,0,e,d,0,-d,0,-e,d,0,-e,-d,0,e,d,0,e],g=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];a.PolyhedronGeometry.call(this,f,g,b,c)},a.DodecahedronGeometry.prototype=Object.create(a.Geometry.prototype),a.DodecahedronGeometry.prototype.constructor=a.DodecahedronGeometry,a.IcosahedronGeometry=function(b,c){var d=(1+Math.sqrt(5))/2,e=[-1,d,0,1,d,0,-1,-d,0,1,-d,0,0,-1,d,0,1,d,0,-1,-d,0,1,-d,d,0,-1,d,0,1,-d,0,-1,-d,0,1],f=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];a.PolyhedronGeometry.call(this,e,f,b,c),this.type="IcosahedronGeometry",this.parameters={radius:b,detail:c}},a.IcosahedronGeometry.prototype=Object.create(a.Geometry.prototype),a.IcosahedronGeometry.prototype.constructor=a.IcosahedronGeometry,a.OctahedronGeometry=function(b,c){this.parameters={radius:b,detail:c};var d=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],e=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];a.PolyhedronGeometry.call(this,d,e,b,c),this.type="OctahedronGeometry",this.parameters={radius:b,detail:c}},a.OctahedronGeometry.prototype=Object.create(a.Geometry.prototype),a.OctahedronGeometry.prototype.constructor=a.OctahedronGeometry,a.TetrahedronGeometry=function(b,c){var d=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],e=[2,1,0,0,3,2,1,3,0,2,3,1];a.PolyhedronGeometry.call(this,d,e,b,c),this.type="TetrahedronGeometry",this.parameters={radius:b,detail:c}},a.TetrahedronGeometry.prototype=Object.create(a.Geometry.prototype),a.TetrahedronGeometry.prototype.constructor=a.TetrahedronGeometry,a.ParametricGeometry=function(b,c,d){a.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:b,slices:c,stacks:d};var e,f,g,h,i,j=this.vertices,k=this.faces,l=this.faceVertexUvs[0],m=c+1;for(e=0;d>=e;e++)for(i=e/d,f=0;c>=f;f++)h=f/c,g=b(h,i),j.push(g);var n,o,p,q,r,s,t,u;for(e=0;d>e;e++)for(f=0;c>f;f++)n=e*m+f,o=e*m+f+1,p=(e+1)*m+f+1,q=(e+1)*m+f,r=new a.Vector2(f/c,e/d),s=new a.Vector2((f+1)/c,e/d),t=new a.Vector2((f+1)/c,(e+1)/d),u=new a.Vector2(f/c,(e+1)/d),k.push(new a.Face3(n,o,q)),l.push([r,s,u]),k.push(new a.Face3(o,p,q)),l.push([s.clone(),t,u.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},a.ParametricGeometry.prototype=Object.create(a.Geometry.prototype),a.ParametricGeometry.prototype.constructor=a.ParametricGeometry,a.AxisHelper=function(b){b=b||1;var c=new Float32Array([0,0,0,b,0,0,0,0,0,0,b,0,0,0,0,0,0,b]),d=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),e=new a.BufferGeometry;e.addAttribute("position",new a.BufferAttribute(c,3)),e.addAttribute("color",new a.BufferAttribute(d,3));var f=new a.LineBasicMaterial({vertexColors:a.VertexColors});a.Line.call(this,e,f,a.LinePieces)},a.AxisHelper.prototype=Object.create(a.Line.prototype),a.AxisHelper.prototype.constructor=a.AxisHelper,a.ArrowHelper=function(){var b=new a.Geometry;b.vertices.push(new a.Vector3(0,0,0),new a.Vector3(0,1,0));var c=new a.CylinderGeometry(0,.5,1,5,1);return c.applyMatrix((new a.Matrix4).makeTranslation(0,-.5,0)),function(d,e,f,g,h,i){a.Object3D.call(this),void 0===g&&(g=16776960),void 0===f&&(f=1),void 0===h&&(h=.2*f),void 0===i&&(i=.2*h),this.position.copy(e),this.line=new a.Line(b,new a.LineBasicMaterial({color:g})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new a.Mesh(c,new a.MeshBasicMaterial({color:g})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(d),this.setLength(f,h,i)}}(),a.ArrowHelper.prototype=Object.create(a.Object3D.prototype),a.ArrowHelper.prototype.constructor=a.ArrowHelper,a.ArrowHelper.prototype.setDirection=function(){var b,c=new a.Vector3;return function(a){a.y>.99999?this.quaternion.set(0,0,0,1):a.y<-.99999?this.quaternion.set(1,0,0,0):(c.set(a.z,0,-a.x).normalize(),b=Math.acos(a.y),this.quaternion.setFromAxisAngle(c,b))}}(),a.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a),void 0===c&&(c=.2*b),this.line.scale.set(1,a-b,1),this.line.updateMatrix(),this.cone.scale.set(c,b,c),this.cone.position.y=a,this.cone.updateMatrix()},a.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a),this.cone.material.color.set(a)},a.BoxHelper=function(b){var c=new a.BufferGeometry;c.addAttribute("position",new a.BufferAttribute(new Float32Array(72),3)),a.Line.call(this,c,new a.LineBasicMaterial({color:16776960}),a.LinePieces),void 0!==b&&this.update(b)},a.BoxHelper.prototype=Object.create(a.Line.prototype),a.BoxHelper.prototype.constructor=a.BoxHelper,a.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,d=b.boundingBox.max,e=this.geometry.attributes.position.array;e[0]=d.x,e[1]=d.y,e[2]=d.z,e[3]=c.x,e[4]=d.y,e[5]=d.z,e[6]=c.x,e[7]=d.y,e[8]=d.z,e[9]=c.x,e[10]=c.y,e[11]=d.z,e[12]=c.x,e[13]=c.y,e[14]=d.z,e[15]=d.x,e[16]=c.y,e[17]=d.z,e[18]=d.x,e[19]=c.y,e[20]=d.z,e[21]=d.x,e[22]=d.y,e[23]=d.z,e[24]=d.x,e[25]=d.y,e[26]=c.z,e[27]=c.x,e[28]=d.y,e[29]=c.z,e[30]=c.x,e[31]=d.y,e[32]=c.z,e[33]=c.x,e[34]=c.y,e[35]=c.z,e[36]=c.x,e[37]=c.y,e[38]=c.z,e[39]=d.x,e[40]=c.y,e[41]=c.z,e[42]=d.x,e[43]=c.y,e[44]=c.z,e[45]=d.x,e[46]=d.y,e[47]=c.z,e[48]=d.x,e[49]=d.y,e[50]=d.z,e[51]=d.x,e[52]=d.y,e[53]=c.z,e[54]=c.x,e[55]=d.y,e[56]=d.z,e[57]=c.x,e[58]=d.y,e[59]=c.z,e[60]=c.x,e[61]=c.y,e[62]=d.z,e[63]=c.x,e[64]=c.y,e[65]=c.z,e[66]=d.x,e[67]=c.y,e[68]=d.z,e[69]=d.x,e[70]=c.y,e[71]=c.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1},a.BoundingBoxHelper=function(b,c){var d=void 0!==c?c:8947848;this.object=b,this.box=new a.Box3,a.Mesh.call(this,new a.BoxGeometry(1,1,1),new a.MeshBasicMaterial({color:d,wireframe:!0}))},a.BoundingBoxHelper.prototype=Object.create(a.Mesh.prototype),a.BoundingBoxHelper.prototype.constructor=a.BoundingBoxHelper,a.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},a.CameraHelper=function(b){function c(a,b,c){d(a,c),d(b,c)}function d(b,c){e.vertices.push(new a.Vector3),e.colors.push(new a.Color(c)),void 0===g[b]&&(g[b]=[]),g[b].push(e.vertices.length-1)}var e=new a.Geometry,f=new a.LineBasicMaterial({color:16777215,vertexColors:a.FaceColors}),g={},h=16755200,i=16711680,j=43775,k=16777215,l=3355443;c("n1","n2",h),c("n2","n4",h),c("n4","n3",h),c("n3","n1",h),c("f1","f2",h),c("f2","f4",h),c("f4","f3",h),c("f3","f1",h),c("n1","f1",h),c("n2","f2",h),c("n3","f3",h),c("n4","f4",h),c("p","n1",i),c("p","n2",i),c("p","n3",i),c("p","n4",i),c("u1","u2",j),c("u2","u3",j),c("u3","u1",j),c("c","t",k),c("p","c",l),c("cn1","cn2",l),c("cn3","cn4",l),c("cf1","cf2",l),c("cf3","cf4",l),a.Line.call(this,e,f,a.LinePieces),this.camera=b,this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=g,this.update()},a.CameraHelper.prototype=Object.create(a.Line.prototype),a.CameraHelper.prototype.constructor=a.CameraHelper,a.CameraHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},a.CameraHelper.prototype.update=function(){var b,c,d=new a.Vector3,e=new a.Camera,f=function(a,f,g,h){d.set(f,g,h).unproject(e);var i=c[a];if(void 0!==i)for(var j=0,k=i.length;k>j;j++)b.vertices[i[j]].copy(d)};return function(){b=this.geometry,c=this.pointMap;var a=1,d=1;e.projectionMatrix.copy(this.camera.projectionMatrix),f("c",0,0,-1.00001),f("t",0,0,1),f("n1",-a,-d,-1.00001),f("n2",a,-d,-1.00001),f("n3",-a,d,-1.00001),f("n4",a,d,-1.00001),f("f1",-a,-d,1),f("f2",a,-d,1),f("f3",-a,d,1),f("f4",a,d,1),f("u1",.7*a,1.1*d,-1.00001),f("u2",.7*-a,1.1*d,-1.00001),f("u3",0,2*d,-1.00001),f("cf1",-a,0,1),f("cf2",a,0,1),f("cf3",0,-d,1),f("cf4",0,d,1),f("cn1",-a,0,-1.00001),f("cn2",a,0,-1.00001),f("cn3",0,-d,-1.00001),f("cn4",0,d,-1.00001),b.verticesNeedUpdate=!0}}(),a.DirectionalLightHelper=function(b,c){a.Object3D.call(this),this.light=b,this.light.updateMatrixWorld(),this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1,c=c||1;var d=new a.Geometry;d.vertices.push(new a.Vector3(-c,c,0),new a.Vector3(c,c,0),new a.Vector3(c,-c,0),new a.Vector3(-c,-c,0),new a.Vector3(-c,c,0));var e=new a.LineBasicMaterial({fog:!1});e.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new a.Line(d,e),this.add(this.lightPlane),d=new a.Geometry,d.vertices.push(new a.Vector3,new a.Vector3),e=new a.LineBasicMaterial({fog:!1}),e.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new a.Line(d,e),this.add(this.targetLine),this.update()},a.DirectionalLightHelper.prototype=Object.create(a.Object3D.prototype),a.DirectionalLightHelper.prototype.constructor=a.DirectionalLightHelper,a.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},a.DirectionalLightHelper.prototype.update=function(){var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3;return function(){b.setFromMatrixPosition(this.light.matrixWorld),c.setFromMatrixPosition(this.light.target.matrixWorld),d.subVectors(c,b),this.lightPlane.lookAt(d),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(d),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),a.EdgesHelper=function(b,c){var d=void 0!==c?c:16777215,e=[0,0],f={},g=function(a,b){return a-b},h=["a","b","c"],i=new a.BufferGeometry,j=b.geometry.clone();j.mergeVertices(),j.computeFaceNormals();for(var k=j.vertices,l=j.faces,m=0,n=0,o=l.length;o>n;n++)for(var p=l[n],q=0;3>q;q++){e[0]=p[h[q]],e[1]=p[h[(q+1)%3]],e.sort(g);var r=e.toString();void 0===f[r]?(f[r]={vert1:e[0],vert2:e[1],face1:n,face2:void 0},m++):f[r].face2=n}var s=new Float32Array(2*m*3),t=0;for(var r in f){var u=f[r];if(void 0===u.face2||l[u.face1].normal.dot(l[u.face2].normal)<.9999){var v=k[u.vert1];s[t++]=v.x,s[t++]=v.y,s[t++]=v.z,v=k[u.vert2],s[t++]=v.x,s[t++]=v.y,s[t++]=v.z}}i.addAttribute("position",new a.BufferAttribute(s,3)),a.Line.call(this,i,new a.LineBasicMaterial({color:d}),a.LinePieces),this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1},a.EdgesHelper.prototype=Object.create(a.Line.prototype),a.EdgesHelper.prototype.constructor=a.EdgesHelper,a.FaceNormalsHelper=function(b,c,d,e){this.object=b,this.size=void 0!==c?c:1;for(var f=void 0!==d?d:16776960,g=void 0!==e?e:1,h=new a.Geometry,i=this.object.geometry.faces,j=0,k=i.length;k>j;j++)h.vertices.push(new a.Vector3,new a.Vector3);a.Line.call(this,h,new a.LineBasicMaterial({color:f,linewidth:g}),a.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new a.Matrix3,this.update()},a.FaceNormalsHelper.prototype=Object.create(a.Line.prototype),a.FaceNormalsHelper.prototype.constructor=a.FaceNormalsHelper,a.FaceNormalsHelper.prototype.update=function(){var a=this.geometry.vertices,b=this.object,c=b.geometry.vertices,d=b.geometry.faces,e=b.matrixWorld;b.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(e);for(var f=0,g=0,h=d.length;h>f;f++,g+=2){var i=d[f];a[g].copy(c[i.a]).add(c[i.b]).add(c[i.c]).divideScalar(3).applyMatrix4(e),a[g+1].copy(i.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[g])}return this.geometry.verticesNeedUpdate=!0,this},a.GridHelper=function(b,c){var d=new a.Geometry,e=new a.LineBasicMaterial({vertexColors:a.VertexColors});this.color1=new a.Color(4473924),this.color2=new a.Color(8947848);for(var f=-b;b>=f;f+=c){d.vertices.push(new a.Vector3(-b,0,f),new a.Vector3(b,0,f),new a.Vector3(f,0,-b),new a.Vector3(f,0,b));var g=0===f?this.color1:this.color2;d.colors.push(g,g,g,g)}a.Line.call(this,d,e,a.LinePieces)},a.GridHelper.prototype=Object.create(a.Line.prototype),a.GridHelper.prototype.constructor=a.GridHelper,a.GridHelper.prototype.setColors=function(a,b){this.color1.set(a),this.color2.set(b),this.geometry.colorsNeedUpdate=!0},a.HemisphereLightHelper=function(b,c){a.Object3D.call(this),this.light=b,this.light.updateMatrixWorld(),this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new a.Color,new a.Color];var d=new a.SphereGeometry(c,4,2);d.applyMatrix((new a.Matrix4).makeRotationX(-Math.PI/2));for(var e=0,f=8;f>e;e++)d.faces[e].color=this.colors[4>e?0:1];var g=new a.MeshBasicMaterial({vertexColors:a.FaceColors,wireframe:!0});this.lightSphere=new a.Mesh(d,g),this.add(this.lightSphere),this.update()},a.HemisphereLightHelper.prototype=Object.create(a.Object3D.prototype),a.HemisphereLightHelper.prototype.constructor=a.HemisphereLightHelper,a.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},a.HemisphereLightHelper.prototype.update=function(){var b=new a.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(b.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),a.PointLightHelper=function(b,c){this.light=b,this.light.updateMatrixWorld();var d=new a.SphereGeometry(c,12,8),e=new a.MeshBasicMaterial({wireframe:!0,fog:!1});e.color.copy(this.light.color).multiplyScalar(this.light.intensity),a.Mesh.call(this,d,e),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},a.PointLightHelper.prototype=Object.create(a.Mesh.prototype),a.PointLightHelper.prototype.constructor=a.PointLightHelper,a.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},a.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},a.SkeletonHelper=function(b){this.bones=this.getBoneList(b);for(var c=new a.Geometry,d=0;d<this.bones.length;d++){var e=this.bones[d];e.parent instanceof a.Bone&&(c.vertices.push(new a.Vector3),c.vertices.push(new a.Vector3),c.colors.push(new a.Color(0,0,1)),c.colors.push(new a.Color(0,1,0)))}var f=new a.LineBasicMaterial({vertexColors:a.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});
a.Line.call(this,c,f,a.LinePieces),this.root=b,this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1,this.update()},a.SkeletonHelper.prototype=Object.create(a.Line.prototype),a.SkeletonHelper.prototype.constructor=a.SkeletonHelper,a.SkeletonHelper.prototype.getBoneList=function(b){var c=[];b instanceof a.Bone&&c.push(b);for(var d=0;d<b.children.length;d++)c.push.apply(c,this.getBoneList(b.children[d]));return c},a.SkeletonHelper.prototype.update=function(){for(var b=this.geometry,c=(new a.Matrix4).getInverse(this.root.matrixWorld),d=new a.Matrix4,e=0,f=0;f<this.bones.length;f++){var g=this.bones[f];g.parent instanceof a.Bone&&(d.multiplyMatrices(c,g.matrixWorld),b.vertices[e].setFromMatrixPosition(d),d.multiplyMatrices(c,g.parent.matrixWorld),b.vertices[e+1].setFromMatrixPosition(d),e+=2)}b.verticesNeedUpdate=!0,b.computeBoundingSphere()},a.SpotLightHelper=function(b){a.Object3D.call(this),this.light=b,this.light.updateMatrixWorld(),this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1;var c=new a.CylinderGeometry(0,1,1,8,1,!0);c.applyMatrix((new a.Matrix4).makeTranslation(0,-.5,0)),c.applyMatrix((new a.Matrix4).makeRotationX(-Math.PI/2));var d=new a.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new a.Mesh(c,d),this.add(this.cone),this.update()},a.SpotLightHelper.prototype=Object.create(a.Object3D.prototype),a.SpotLightHelper.prototype.constructor=a.SpotLightHelper,a.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},a.SpotLightHelper.prototype.update=function(){var b=new a.Vector3,c=new a.Vector3;return function(){var a=this.light.distance?this.light.distance:1e4,d=a*Math.tan(this.light.angle);this.cone.scale.set(d,d,a),b.setFromMatrixPosition(this.light.matrixWorld),c.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(c.sub(b)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),a.VertexNormalsHelper=function(b,c,d,e){this.object=b,this.size=void 0!==c?c:1;for(var f=void 0!==d?d:16711680,g=void 0!==e?e:1,h=new a.Geometry,i=(b.geometry.vertices,b.geometry.faces),j=0,k=i.length;k>j;j++)for(var l=i[j],m=0,n=l.vertexNormals.length;n>m;m++)h.vertices.push(new a.Vector3,new a.Vector3);a.Line.call(this,h,new a.LineBasicMaterial({color:f,linewidth:g}),a.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new a.Matrix3,this.update()},a.VertexNormalsHelper.prototype=Object.create(a.Line.prototype),a.VertexNormalsHelper.prototype.constructor=a.VertexNormalsHelper,a.VertexNormalsHelper.prototype.update=function(){var b=new a.Vector3;return function(){var a=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var c=this.geometry.vertices,d=this.object.geometry.vertices,e=this.object.geometry.faces,f=this.object.matrixWorld,g=0,h=0,i=e.length;i>h;h++)for(var j=e[h],k=0,l=j.vertexNormals.length;l>k;k++){var m=j[a[k]],n=d[m],o=j.vertexNormals[k];c[g].copy(n).applyMatrix4(f),b.copy(o).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),b.add(c[g]),g+=1,c[g].copy(b),g+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),a.VertexTangentsHelper=function(b,c,d,e){this.object=b,this.size=void 0!==c?c:1;for(var f=void 0!==d?d:255,g=void 0!==e?e:1,h=new a.Geometry,i=(b.geometry.vertices,b.geometry.faces),j=0,k=i.length;k>j;j++)for(var l=i[j],m=0,n=l.vertexTangents.length;n>m;m++)h.vertices.push(new a.Vector3),h.vertices.push(new a.Vector3);a.Line.call(this,h,new a.LineBasicMaterial({color:f,linewidth:g}),a.LinePieces),this.matrixAutoUpdate=!1,this.update()},a.VertexTangentsHelper.prototype=Object.create(a.Line.prototype),a.VertexTangentsHelper.prototype.constructor=a.VertexTangentsHelper,a.VertexTangentsHelper.prototype.update=function(){var b=new a.Vector3;return function(){var a=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var c=this.geometry.vertices,d=this.object.geometry.vertices,e=this.object.geometry.faces,f=this.object.matrixWorld,g=0,h=0,i=e.length;i>h;h++)for(var j=e[h],k=0,l=j.vertexTangents.length;l>k;k++){var m=j[a[k]],n=d[m],o=j.vertexTangents[k];c[g].copy(n).applyMatrix4(f),b.copy(o).transformDirection(f).multiplyScalar(this.size),b.add(c[g]),g+=1,c[g].copy(b),g+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),a.WireframeHelper=function(b,c){var d=void 0!==c?c:16777215,e=[0,0],f={},g=function(a,b){return a-b},h=["a","b","c"],i=new a.BufferGeometry,j=!1;if(b.geometry instanceof a.Geometry){for(var k=b.geometry.vertices,l=b.geometry.faces,m=0,n=new Uint32Array(6*l.length),o=0,p=l.length;p>o;o++)for(var q=l[o],r=0;3>r;r++){e[0]=q[h[r]],e[1]=q[h[(r+1)%3]],e.sort(g);var s=e.toString();void 0===f[s]&&(n[2*m]=e[0],n[2*m+1]=e[1],f[s]=!0,m++)}for(var t=new Float32Array(2*m*3),o=0,p=m;p>o;o++)for(var r=0;2>r;r++){var u=k[n[2*o+r]],v=6*o+3*r;t[v+0]=u.x,t[v+1]=u.y,t[v+2]=u.z}i.addAttribute("position",new a.BufferAttribute(t,3))}else if(b.geometry instanceof a.BufferGeometry)if(void 0!==b.geometry.attributes.index){var k=b.geometry.attributes.position.array,w=b.geometry.attributes.index.array,x=b.geometry.drawcalls,m=0;0===x.length&&(x=[{count:w.length,index:0,start:0}]);for(var y=new Uint16Array(2*w.length),z=0,A=x.length;A>z;++z){var B=x[z].start,C=x[z].count,v=x[z].index;i.drawcalls.push({count:2*C,index:v,start:2*B});for(var o=B,D=B+C;D>o;o+=3)for(var r=0;3>r;r++)y[2*(o+r)]=w[o+r],y[2*(o+r)+1]=w[o+(r+1)%3]}if(i.addAttribute("position",new a.BufferAttribute(k,3)),i.addAttribute("index",new a.BufferAttribute(y,1)),b.geometry.attributes.skinIndex&&b.geometry.attributes.skinWeight){var E=b.geometry.attributes.skinIndex.array,F=b.geometry.attributes.skinWeight.array;i.addAttribute("skinWeight",new a.BufferAttribute(F,4)),i.addAttribute("skinIndex",new a.BufferAttribute(E,4)),j=!0}}else{for(var k=b.geometry.attributes.position.array,m=k.length/3,G=m/3,t=new Float32Array(2*m*3),o=0,p=G;p>o;o++)for(var r=0;3>r;r++){var v=18*o+6*r,H=9*o+3*r;t[v+0]=k[H],t[v+1]=k[H+1],t[v+2]=k[H+2];var I=9*o+3*((r+1)%3);t[v+3]=k[I],t[v+4]=k[I+1],t[v+5]=k[I+2]}i.addAttribute("position",new a.BufferAttribute(t,3))}j&&b.skeleton&&(this.skeleton=b.skeleton,this.bindMatrix=b.bindMatrix,this.bindMatrixInverse=b.bindMatrixInverse),a.Line.call(this,i,new a.LineBasicMaterial({color:d,skinning:j}),a.LinePieces),this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1},a.WireframeHelper.prototype=Object.create(a.Line.prototype),a.WireframeHelper.prototype.constructor=a.WireframeHelper,a.ImmediateRenderObject=function(){a.Object3D.call(this),this.render=function(){}},a.ImmediateRenderObject.prototype=Object.create(a.Object3D.prototype),a.ImmediateRenderObject.prototype.constructor=a.ImmediateRenderObject,a.MorphBlendMesh=function(b,c){a.Mesh.call(this,b,c),this.animationsMap={},this.animationsList=[];var d=this.geometry.morphTargets.length,e="__default",f=0,g=d-1,h=d/1;this.createAnimation(e,f,g,h),this.setAnimationWeight(e,1)},a.MorphBlendMesh.prototype=Object.create(a.Mesh.prototype),a.MorphBlendMesh.prototype.constructor=a.MorphBlendMesh,a.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){var e={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=e,this.animationsList.push(e)},a.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b,c=/([a-z]+)_?(\d+)/,d={},e=this.geometry,f=0,g=e.morphTargets.length;g>f;f++){var h=e.morphTargets[f],i=h.name.match(c);if(i&&i.length>1){{var j=i[1];i[2]}d[j]||(d[j]={start:1/0,end:-1/0});var k=d[j];f<k.start&&(k.start=f),f>k.end&&(k.end=f),b||(b=j)}}for(var j in d){var k=d[j];this.createAnimation(j,k.start,k.end,a)}this.firstAnimation=b},a.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];b&&(b.direction=1,b.directionBackwards=!1)},a.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];b&&(b.direction=-1,b.directionBackwards=!0)},a.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},a.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},a.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},a.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},a.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0,c=this.animationsMap[a];return c&&(b=c.time),b},a.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1,c=this.animationsMap[a];return c&&(b=c.duration),b},a.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")},a.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];b&&(b.active=!1)},a.MorphBlendMesh.prototype.update=function(b){for(var c=0,d=this.animationsList.length;d>c;c++){var e=this.animationsList[c];if(e.active){var f=e.duration/e.length;e.time+=e.direction*b,e.mirroredLoop?(e.time>e.duration||e.time<0)&&(e.direction*=-1,e.time>e.duration&&(e.time=e.duration,e.directionBackwards=!0),e.time<0&&(e.time=0,e.directionBackwards=!1)):(e.time=e.time%e.duration,e.time<0&&(e.time+=e.duration));var g=e.startFrame+a.Math.clamp(Math.floor(e.time/f),0,e.length-1),h=e.weight;g!==e.currentFrame&&(this.morphTargetInfluences[e.lastFrame]=0,this.morphTargetInfluences[e.currentFrame]=1*h,this.morphTargetInfluences[g]=0,e.lastFrame=e.currentFrame,e.currentFrame=g);var i=e.time%f/f;e.directionBackwards&&(i=1-i),this.morphTargetInfluences[e.currentFrame]=i*h,this.morphTargetInfluences[e.lastFrame]=(1-i)*h}}},window.THREE=a,a}),define("VeroldEngine/Materials/EngineMaterials",["underscore","three"],function(a,b){var c={wireframe:{wireframe:!0,transparent:!0,blending:b.MultiplyBlending,polygonOffset:!0,polygonOffsetFactor:1,polygonOffsetUnits:1,uniforms:{wireColor:{type:"c",value:new b.Color(11184810)}},vertexShader:[b.ShaderChunk.skinning_pars_vertex,b.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",b.ShaderChunk.skinbase_vertex,b.ShaderChunk.skinning_vertex,b.ShaderChunk.default_vertex,b.ShaderChunk.logdepthbuf_vertex,"#if !defined( USE_LOGDEPTHBUF )","gl_Position.z = ( (gl_Position.z / gl_Position.w) - 0.00003 ) * gl_Position.w;","#endif","}"].join("\n"),fragmentShader:["uniform vec3 wireColor;",b.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",b.ShaderChunk.logdepthbuf_fragment,"gl_FragColor = vec4( wireColor, 1.0 );","}"].join("\n")},skybox:{side:b.BackSide,useFog:!0,fog:!0,vertexColors:b.NoColors,uniforms:b.UniformsUtils.merge([b.UniformsLib.fog,{color:{type:"c",value:new b.Color(16711680)}},{skyboxFogPower:{type:"f",value:0}},{skyboxFogScale:{type:"f",value:0}},{environmentTexture:{type:"t",value:null}}]),vertexShader:["varying vec3 vCameraVector;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vCameraVector = worldPosition.xyz - cameraPosition;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","gl_Position.z = 1.0;","}"].join("\n"),fragmentShader:[b.ShaderChunk.fog_pars_fragment,"uniform vec3 color;","uniform float skyboxFogPower;","uniform float skyboxFogScale;","uniform samplerCube environmentTexture;","varying vec3 vCameraVector;","void main() {","vec3 cameraVectorN = normalize( vCameraVector );","vec4 environmentColor = textureCube( environmentTexture, vec3( -vCameraVector.x, vCameraVector.yz )  );","gl_FragColor = vec4( environmentColor.xyz, 1.0 );","#ifdef USE_FOG","float fogFactor = clamp( pow( (1.0 - cameraVectorN.y), skyboxFogPower * 12.0 ), 0.0, 1.0) + (skyboxFogScale * 2.0 - 1.0);","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif","}"].join("\n")},picking:{depthTest:!0,depthWrite:!0,transparent:!1,side:b.DoubleSide,uniforms:{color:{type:"c",value:16711680}},vertexShader:[b.ShaderChunk.skinning_pars_vertex,"void main() {",b.ShaderChunk.skinbase_vertex,b.ShaderChunk.skinnormal_vertex,b.ShaderChunk.defaultnormal_vertex,b.ShaderChunk.skinning_vertex,b.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 color;","void main() {","gl_FragColor = vec4( color, 1.0 );","}"].join("\n")}};return c}),define("VeroldEngine/Components/VeroldComponent",["underscore","backbone"],function(a,b){function c(){}return a.extend(c.prototype,{getId:function(){return this.__verold__.id},getScriptName:function(){var a=this.getAssetRegistry().getAssetById(this.getScriptId());return a.getName()},getScriptId:function(){return this.__verold__.scriptId},componentDataChanged:function(a,b){var c=this.getAssetRegistry().getAssetById(this.getScriptId()),d=this.veroldEntity.getComponentData(this.getId());this.getComponentManager()._buildAttributes(c,d,this),this.attributesChanged&&"pending"!==this.veroldEntity.state_base&&this.attributesChanged(a,b),this.trigger("attributesChanged",a,b)},getDefaultAttributes:function(){var b=this.getAssetRegistry().getAssetById(this.getScriptId()),c=b.getProperty("attributes")||{},d={};return a.each(c,function(a,b){d[b]=a.default},this),d},setAttribute:function(b,c,d){if(this.veroldEntity&&a.isString(b)){var e={};e["components."+this.getId()+".componentData."+b]=c,this.veroldEntity.set(e,d)}},getAttribute:function(b){if(this.veroldEntity&&a.isString(b)){var c=this.veroldEntity.getComponentData(this.getId());return c[b]}},getProperty:function(b){if(this.veroldEntity&&a.isString(b)){var c=this.veroldEntity.entityModel.get("components."+this.getId());return c[b]}},resetAttribute:function(b){if(this.veroldEntity&&a.isString(b)){var c=this.getAttribute(b);this.setAttribute(b,c)}},getEntity:function(){return this.veroldEntity},getObject:function(){return console.warn("VeroldComponent.getObject() is deprecated. Please use VeroldComponent.getEntity()."),this.veroldEntity},getComponentManager:function(){return this.veroldEntity.componentManager},remove:function(){this.getEntity().removeComponent(this)},getEngine:function(){return this.veroldEntity.veroldEngine},enable:function(){this.__verold__.enabled=!0,this.trigger("enable")},disable:function(){this.__verold__.enabled=!1,this.trigger("disable")},isEnabled:function(){return this.__verold__.enabled},hasThreeData:function(){return!(!this.veroldEntity||!this.veroldEntity.threeData)},getThreeData:function(){return this.veroldEntity.threeData},getThreeObject:function(){return this.veroldEntity.threeData},getEvents:function(){return this.events},getRenderer:function(){return this.getEngine().getBaseRenderer()},getThreeRenderer:function(){var a=this.getEngine().getBaseRenderer().threeRenderer;return a},getThreeComposer:function(){var a=this.getEngine().getBaseRenderer().threeComposer;return a},getInput:function(){return this.veroldEntity.veroldEngine.Input},getScene:function(){return this.veroldEntity.getParentAsset()},getThreeScene:function(){return this.veroldEntity.getParentAsset().threeData},getAssetRegistry:function(){return this.getEngine().assetRegistry},reload:function(){var a=[this.getScriptId(),this.veroldEntity.getComponentData(this.getId()),this.getId()],b=this.getEntity();b.removeComponent(a[2]),b.addComponent(a[0],a[1],a[2])},preInit:function(){},init:function(){},shutdown:void 0,preUpdate:void 0,update:void 0,postUpdate:void 0,render:void 0,suspend:void 0,resume:void 0,attributesChanged:void 0,objectCreated:void 0,objectLoaded:void 0,sceneLoaded:void 0},b.Events),window.VAPI=window.VAPI||{},window.VAPI.VeroldComponent=c,c}),define("VeroldEngine/libs/three/postprocessing/EffectComposer",["three"],function(a){a.EffectComposer=function(b,c){if(this.renderer=b,void 0===c){var d=b.getPixelRatio(),e=Math.floor(b.context.canvas.width/d)||1,f=Math.floor(b.context.canvas.height/d)||1,g={minFilter:a.LinearFilter,magFilter:a.LinearFilter,format:a.RGBFormat,stencilBuffer:!1};c=new a.WebGLRenderTarget(e,f,g),c.name="EffectComposer Render Target"}this.renderTarget1=c,this.renderTarget2=c.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],this.enabled=!0,void 0===a.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),this.copyPass=new a.ShaderPass(a.CopyShader)},a.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=a},addPass:function(a){this.passes.push(a)},insertPass:function(a,b){this.passes.splice(b,0,a)},render:function(b){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var c,d,e=!1,f=this.passes.length;for(d=0;f>d;d++)if(c=this.passes[d],c.enabled){if(c.render(this.renderer,this.writeBuffer,this.readBuffer,b,e),c.needsSwap){if(e){var g=this.renderer.context;g.stencilFunc(g.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,b),g.stencilFunc(g.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof a.MaskPass?e=!0:c instanceof a.ClearMaskPass&&(e=!1)}},reset:function(a){if(void 0===a){a=this.renderTarget1.clone();var b=this.renderer.getPixelRatio();a.width=Math.floor(this.renderer.context.canvas.width/b),a.height=Math.floor(this.renderer.context.canvas.height/b)}var c=this.renderTarget1,d=this.renderTarget2;c&&c.dispose(),d&&d.dispose(),this.renderTarget1=a,this.renderTarget2=a.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(a,b){var c=this.renderTarget1.clone();c.width=a,c.height=b,this.reset(c)},dispose:function(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose(),this.passes=void 0,this.renderer=void 0}}}),define("VeroldEngine/libs/three/postprocessing/BloomPass",["three"],function(a){a.BloomPass=function(b,c,d,e,f){b=void 0!==b?b:1,c=void 0!==c?c:25,d=void 0!==d?d:4,this.setSize(e,f),void 0===a.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var g=a.CopyShader;this.copyUniforms=a.UniformsUtils.clone(g.uniforms),this.copyUniforms.opacity.value=b,this.materialCopy=new a.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader,blending:a.AdditiveBlending,transparent:!0}),void 0===a.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");var h=a.ConvolutionShader;this.convolutionUniforms=a.UniformsUtils.clone(h.uniforms),this.convolutionUniforms.uImageIncrement.value=a.BloomPass.blurx,this.convolutionUniforms.cKernel.value=a.ConvolutionShader.buildKernel(d),this.materialConvolution=new a.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,defines:{KERNEL_SIZE_FLOAT:c.toFixed(1),KERNEL_SIZE_INT:c.toFixed(0)}}),void 0===a.ClampShader&&console.error("THREE.BloomPass relies on THREE.ClampShader");var i=a.ClampShader;this.clampUniforms=a.UniformsUtils.clone(i.uniforms),this.materialClamp=new a.ShaderMaterial({uniforms:this.clampUniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader}),this.enabled=!0,this.needsSwap=!1,this.clear=!1,this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene.add(this.quad)},a.BloomPass.prototype={render:function(b,c,d,e,f){f&&b.context.disable(b.context.STENCIL_TEST),this.quad.material=this.materialClamp,this.clampUniforms.tDiffuse.value=d,b.render(this.scene,this.camera,c,!0),this.quad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=c,this.convolutionUniforms.uImageIncrement.value=a.BloomPass.blurX,b.render(this.scene,this.camera,this.renderTargetX,!0),this.convolutionUniforms.tDiffuse.value=this.renderTargetX,this.convolutionUniforms.uImageIncrement.value=a.BloomPass.blurY,b.render(this.scene,this.camera,this.renderTargetY,!0),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY,f&&b.context.enable(b.context.STENCIL_TEST),b.render(this.scene,this.camera,d,this.clear)},setSigma:function(b){if(b){var c=2*Math.ceil(3*b)+1;this.materialConvolution.defines={KERNEL_SIZE_FLOAT:c.toFixed(1),KERNEL_SIZE_INT:c.toFixed(0)},this.materialConvolution.needsUpdate=!0,this.convolutionUniforms.cKernel.value=a.ConvolutionShader.buildKernel(b)}},setSize:function(b,c){this.resolutionX=void 0!==b?b:256,this.resolutionY=void 0!==c?c:256;var d={minFilter:a.LinearFilter,magFilter:a.LinearFilter,format:a.RGBFormat};this.renderTargetX&&this.renderTargetX.dispose(),this.renderTargetY&&this.renderTargetY.dispose(),this.renderTargetX=new a.WebGLRenderTarget(this.resolutionX,this.resolutionY,d),this.renderTargetX.name="Bloom Convolution X",this.renderTargetY=new a.WebGLRenderTarget(this.resolutionX,this.resolutionY,d),this.renderTargetY.name="Bloom Convolution Y"},dispose:function(){this.renderTargetX.dispose(),this.renderTargetY.dispose(),this.copyUniforms=void 0,this.convolutionUniforms=void 0,this.materialCopy.dispose(),this.materialConvolution.dispose(),this.quad.geometry.dispose(),this.quad=void 0,this.scene=void 0,this.camera=void 0}},a.BloomPass.blurX=new a.Vector2(.001953125,0),a.BloomPass.blurY=new a.Vector2(0,.001953125)}),define("VeroldEngine/libs/three/postprocessing/BokehPass",["three"],function(a){a.BokehPass=function(b,c,d){this.scene=b,this.camera=c;var e=void 0!==d.focus?d.focus:1,f=void 0!==d.aspect?d.aspect:c.aspect,g=void 0!==d.aperture?d.aperture:.025,h=void 0!==d.maxblur?d.maxblur:1,i=d.width||window.innerWidth||1,j=d.height||window.innerHeight||1;this.renderTargetColor=new a.WebGLRenderTarget(i,j,{minFilter:a.LinearFilter,magFilter:a.LinearFilter,format:a.RGBFormat}),this.renderTargetDepth=this.renderTargetColor.clone(),this.materialDepth=new a.MeshDepthMaterial,void 0===a.BokehShader&&console.error("THREE.BokehPass relies on THREE.BokehShader");var k=a.BokehShader,l=a.UniformsUtils.clone(k.uniforms);l.tDepth.value=this.renderTargetDepth,l.focus.value=e,l.aspect.value=f,l.aperture.value=g,l.maxblur.value=h,this.materialBokeh=new a.ShaderMaterial({uniforms:l,vertexShader:k.vertexShader,fragmentShader:k.fragmentShader}),this.uniforms=l,this.enabled=!0,this.needsSwap=!1,this.renderToScreen=!1,this.clear=!1,this.camera2=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene2=new a.Scene,this.quad2=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene2.add(this.quad2)},a.BokehPass.prototype={render:function(a,b,c){this.quad2.material=this.materialBokeh,this.scene.overrideMaterial=this.materialDepth,a.render(this.scene,this.camera,this.renderTargetDepth,!0),this.uniforms.tColor.value=c,this.renderToScreen?a.render(this.scene2,this.camera2):a.render(this.scene2,this.camera2,b,this.clear),this.scene.overrideMaterial=null}}}),define("VeroldEngine/libs/three/postprocessing/DotScreenPass",["three"],function(a){a.DotScreenPass=function(b,c,d){void 0===a.DotScreenShader&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var e=a.DotScreenShader;this.uniforms=a.UniformsUtils.clone(e.uniforms),void 0!==b&&this.uniforms.center.value.copy(b),void 0!==c&&(this.uniforms.angle.value=c),void 0!==d&&(this.uniforms.scale.value=d),this.material=new a.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene.add(this.quad)},a.DotScreenPass.prototype={render:function(a,b,c){this.uniforms.tDiffuse.value=c,this.uniforms.tSize.value.set(c.width,c.height),this.quad.material=this.material,this.renderToScreen?a.render(this.scene,this.camera):a.render(this.scene,this.camera,b,!1)}}}),define("VeroldEngine/libs/three/postprocessing/FilmPass",["three"],function(a){a.FilmPass=function(b,c,d,e){void 0===a.FilmShader&&console.error("THREE.FilmPass relies on THREE.FilmShader");var f=a.FilmShader;this.uniforms=a.UniformsUtils.clone(f.uniforms),this.material=new a.ShaderMaterial({uniforms:this.uniforms,vertexShader:f.vertexShader,fragmentShader:f.fragmentShader}),void 0!==e&&(this.uniforms.grayscale.value=e),void 0!==b&&(this.uniforms.nIntensity.value=b),void 0!==c&&(this.uniforms.sIntensity.value=c),void 0!==d&&(this.uniforms.sCount.value=d),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene.add(this.quad)},a.FilmPass.prototype={render:function(a,b,c,d){this.uniforms.tDiffuse.value=c,this.uniforms.time.value=(this.uniforms.time.value+d)%10+.1,this.quad.material=this.material,this.renderToScreen?a.render(this.scene,this.camera):a.render(this.scene,this.camera,b,!1)},dispose:function(){this.quad.geometry.dispose(),this.quad=void 0,this.material.dispose(),this.material=void 0,this.uniforms=void 0,this.scene=void 0,this.camera=void 0}}}),define("VeroldEngine/libs/three/postprocessing/MaskPass",["three"],function(a){a.MaskPass=function(a,b){this.scene=a,this.camera=b,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},a.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1),d.depthMask(!1);var e,f;this.inverse?(e=0,f=1):(e=1,f=0),d.enable(d.STENCIL_TEST),d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE),d.stencilFunc(d.ALWAYS,e,4294967295),d.clearStencil(f),a.render(this.scene,this.camera,c,this.clear),a.render(this.scene,this.camera,b,this.clear),d.colorMask(!0,!0,!0,!0),d.depthMask(!0),d.stencilFunc(d.EQUAL,1,4294967295),d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}},a.ClearMaskPass=function(){this.enabled=!0},a.ClearMaskPass.prototype={render:function(a){var b=a.context;b.disable(b.STENCIL_TEST)}}}),define("VeroldEngine/libs/three/postprocessing/RenderPass",["three"],function(a){a.RenderPass=function(b,c,d,e,f){this.scene=b,this.camera=c,this.overrideMaterial=d,this.clearColor=e,this.clearAlpha=void 0!==f?f:0,this.oldClearColor=new a.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},a.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=void 0!==this.overrideMaterial?this.overrideMaterial:this.scene.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha)),a.render(this.scene,this.camera,c,this.clear),this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null},dispose:function(){this.scene=void 0,this.camera=void 0}}}),define("VeroldEngine/libs/three/postprocessing/SavePass",["three"],function(a){a.SavePass=function(b){void 0===a.CopyShader&&console.error("THREE.SavePass relies on THREE.CopyShader");var c=a.CopyShader;this.textureID="tDiffuse",this.uniforms=a.UniformsUtils.clone(c.uniforms),this.material=new a.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}),this.renderTarget=b,void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:a.LinearFilter,magFilter:a.LinearFilter,format:a.RGBFormat,stencilBuffer:!1},this.renderTarget=new a.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters)),this.enabled=!0,this.needsSwap=!1,this.clear=!1,this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene.add(this.quad)},a.SavePass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c),this.quad.material=this.material,a.render(this.scene,this.camera,this.renderTarget,this.clear)}}}),define("VeroldEngine/libs/three/shaders/BasicShader",["three"],function(a){a.BasicShader={uniforms:{},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["void main() {","gl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/BilinearMipmapShader",["three"],function(a){a.BilinearDownSampleShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new a.Vector2}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tDiffuse;","uniform vec2 resolution;",a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","vec2 offset = 0.5 / resolution;","vec4 colour;","vec4 samples[ 4 ];","samples[0] = texture2D( tDiffuse, vUv + vec2( -offset.x, -offset.x ) );","samples[1] = texture2D( tDiffuse, vUv + vec2( offset.x, -offset.x ) );","samples[2] = texture2D( tDiffuse, vUv + vec2( offset.x, offset.y ) );","samples[3] = texture2D( tDiffuse, vUv + vec2( -offset.x, offset.y ) );","for ( int i = 0; i < 4; i++ ) {","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","colour += vec4( HDRDecodeLOGLUV( samples[i] ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","colour += vec4( HDRDecodeRGBM( samples[i] ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","colour += vec4( HDRDecodeRGBD( samples[i] ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","colour += vec4( HDRDecodeRGBE( samples[i] ), 1.0 );","#else","colour += samples[i];","#endif","#else","colour += samples[i];","#endif","}","gl_FragColor = colour * 0.25;",a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/BleachBypassShader",["three"],function(a){a.BleachBypassShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 base = texture2D( tDiffuse, vUv );","vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );","float lum = dot( lumCoeff, base.rgb );","vec3 blend = vec3( lum );","float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );","vec3 result1 = 2.0 * base.rgb * blend;","vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );","vec3 newColor = mix( result1, result2, L );","float A2 = opacity * base.a;","vec3 mixRGB = A2 * newColor.rgb;","mixRGB += ( ( 1.0 - A2 ) * base.rgb );","gl_FragColor = vec4( mixRGB, base.a );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/BlendShader",["three"],function(a){a.BlendShader={uniforms:{tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},mixRatio:{type:"f",value:.5},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform float mixRatio;","uniform sampler2D tDiffuse1;","uniform sampler2D tDiffuse2;","varying vec2 vUv;","void main() {","vec4 texel1 = texture2D( tDiffuse1, vUv );","vec4 texel2 = texture2D( tDiffuse2, vUv );","gl_FragColor = opacity * mix( texel1, texel2, mixRatio );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/BokehShader",["three"],function(a){a.BokehShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:.025},maxblur:{type:"f",value:1},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","uniform float maxblur;","uniform float aperture;","uniform float focus;","uniform float aspect;","uniform float opacity;","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","void main() {","vec2 aspectcorrect = vec2( 1.0, aspect );","float depth1 = unpackDepth( texture2D( tDepth, vUv ) );","float factor = depth1 - focus;","vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );","vec2 dofblur9 = dofblur * 0.9;","vec2 dofblur7 = dofblur * 0.7;","vec2 dofblur4 = dofblur * 0.4;","vec4 col = vec4( 0.0 );","col += texture2D( tDiffuse, vUv.xy );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tDiffuse, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tDiffuse, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );","gl_FragColor = col / 41.0;","gl_FragColor.a = opacity;","}"].join("\n")}
}),define("VeroldEngine/libs/three/shaders/BokehShader2",["three"],function(a){a.BokehShader2={uniforms:{textureWidth:{type:"f",value:1},textureHeight:{type:"f",value:1},focalDepth:{type:"f",value:1},focalLength:{type:"f",value:24},fstop:{type:"f",value:.9},tColor:{type:"t",value:null},tDepth:{type:"t",value:null},maxblur:{type:"f",value:1},showFocus:{type:"i",value:0},manualdof:{type:"i",value:0},vignetting:{type:"i",value:0},depthblur:{type:"i",value:0},threshold:{type:"f",value:.5},gain:{type:"f",value:2},bias:{type:"f",value:.5},fringe:{type:"f",value:.7},znear:{type:"f",value:.1},zfar:{type:"f",value:100},noise:{type:"i",value:1},dithering:{type:"f",value:1e-4},pentagon:{type:"i",value:0},shaderFocus:{type:"i",value:1},focusCoords:{type:"v2",value:new a.Vector2}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tColor;","uniform sampler2D tDepth;","uniform float textureWidth;","uniform float textureHeight;","const float PI = 3.14159265;","float width = textureWidth; //texture width","float height = textureHeight; //texture height","vec2 texel = vec2(1.0/width,1.0/height);","uniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below","uniform float focalLength; //focal length in mm","uniform float fstop; //f-stop value","uniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)","/*","make sure that these two values are the same for your camera, otherwise distances will be wrong.","*/","uniform float znear; // camera clipping start","uniform float zfar; // camera clipping end","//------------------------------------------","//user variables","const int samples = SAMPLES; //samples on the first ring","const int rings = RINGS; //ring count","const int maxringsamples = rings * samples;","uniform bool manualdof; // manual dof calculation","float ndofstart = 1.0; // near dof blur start","float ndofdist = 2.0; // near dof blur falloff distance","float fdofstart = 1.0; // far dof blur start","float fdofdist = 3.0; // far dof blur falloff distance","float CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)","uniform bool vignetting; // use optical lens vignetting","float vignout = 1.3; // vignetting outer border","float vignin = 0.0; // vignetting inner border","float vignfade = 22.0; // f-stops till vignete fades","uniform bool shaderFocus;","bool autofocus = shaderFocus;","//use autofocus in shader - use with focusCoords","// disable if you use external focalDepth value","uniform vec2 focusCoords;","// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)","// if center of screen use vec2(0.5, 0.5);","uniform float maxblur;","//clamp value of max blur (0.0 = no blur, 1.0 default)","uniform float threshold; // highlight threshold;","uniform float gain; // highlight gain;","uniform float bias; // bokeh edge bias","uniform float fringe; // bokeh chromatic aberration / fringing","uniform bool noise; //use noise instead of pattern for sample dithering","uniform float dithering;","float namount = dithering; //dither amount","uniform bool depthblur; // blur the depth buffer","float dbsize = 1.25; // depth blur size","/*","next part is experimental","not looking good with small sample and ring count","looks okay starting from samples = 4, rings = 4","*/","uniform bool pentagon; //use pentagon as bokeh shape?","float feather = 0.4; //pentagon shape feather","//------------------------------------------","float penta(vec2 coords) {","//pentagonal shape","float scale = float(rings) - 1.3;","vec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);","vec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);","vec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);","vec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);","vec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);","vec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);","vec4  one = vec4( 1.0 );","vec4 P = vec4((coords),vec2(scale, scale));","vec4 dist = vec4(0.0);","float inorout = -4.0;","dist.x = dot( P, HS0 );","dist.y = dot( P, HS1 );","dist.z = dot( P, HS2 );","dist.w = dot( P, HS3 );","dist = smoothstep( -feather, feather, dist );","inorout += dot( dist, one );","dist.x = dot( P, HS4 );","dist.y = HS5.w - abs( P.z );","dist = smoothstep( -feather, feather, dist );","inorout += dist.x;","return clamp( inorout, 0.0, 1.0 );","}","float bdepth(vec2 coords) {","// Depth buffer blur","float d = 0.0;","float kernel[9];","vec2 offset[9];","vec2 wh = vec2(texel.x, texel.y) * dbsize;","offset[0] = vec2(-wh.x,-wh.y);","offset[1] = vec2( 0.0, -wh.y);","offset[2] = vec2( wh.x -wh.y);","offset[3] = vec2(-wh.x,  0.0);","offset[4] = vec2( 0.0,   0.0);","offset[5] = vec2( wh.x,  0.0);","offset[6] = vec2(-wh.x, wh.y);","offset[7] = vec2( 0.0,  wh.y);","offset[8] = vec2( wh.x, wh.y);","kernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;","kernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;","kernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;","for( int i=0; i<9; i++ ) {","float tmp = texture2D(tDepth, coords + offset[i]).r;","d += tmp * kernel[i];","}","return d;","}","vec3 color(vec2 coords,float blur) {","//processing the sample","vec3 col = vec3(0.0);","col.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;","col.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;","col.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;","vec3 lumcoeff = vec3(0.299,0.587,0.114);","float lum = dot(col.rgb, lumcoeff);","float thresh = max((lum-threshold)*gain, 0.0);","return col+mix(vec3(0.0),col,thresh*blur);","}","vec2 rand(vec2 coord) {","// generating noise / pattern texture for dithering","float noiseX = ((fract(1.0-coord.s*(width/2.0))*0.25)+(fract(coord.t*(height/2.0))*0.75))*2.0-1.0;","float noiseY = ((fract(1.0-coord.s*(width/2.0))*0.75)+(fract(coord.t*(height/2.0))*0.25))*2.0-1.0;","if (noise) {","noiseX = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233))) * 43758.5453),0.0,1.0)*2.0-1.0;","noiseY = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233)*2.0)) * 43758.5453),0.0,1.0)*2.0-1.0;","}","return vec2(noiseX,noiseY);","}","vec3 debugFocus(vec3 col, float blur, float depth) {","float edge = 0.002*depth; //distance based edge smoothing","float m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);","float e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);","col = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);","col = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);","return col;","}","float linearize(float depth) {","return -zfar * znear / (depth * (zfar - znear) - zfar);","}","float vignette() {","float dist = distance(vUv.xy, vec2(0.5,0.5));","dist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);","return clamp(dist,0.0,1.0);","}","float gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {","float rings2 = float(rings);","float step = PI*2.0 / float(ringsamples);","float pw = cos(j*step)*i;","float ph = sin(j*step)*i;","float p = 1.0;","if (pentagon) {","p = penta(vec2(pw,ph));","}","col += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;","return 1.0 * mix(1.0, i /rings2, bias) * p;","}","void main() {","//scene depth calculation","float depth = linearize(texture2D(tDepth,vUv.xy).x);","// Blur depth?","if (depthblur) {","depth = linearize(bdepth(vUv.xy));","}","//focal plane calculation","float fDepth = focalDepth;","if (autofocus) {","fDepth = linearize(texture2D(tDepth,focusCoords).x);","}","// dof blur factor calculation","float blur = 0.0;","if (manualdof) {","float a = depth-fDepth; // Focal plane","float b = (a-fdofstart)/fdofdist; // Far DoF","float c = (-a-ndofstart)/ndofdist; // Near Dof","blur = (a>0.0) ? b : c;","} else {","float f = focalLength; // focal length in mm","float d = fDepth*1000.0; // focal plane in mm","float o = depth*1000.0; // depth in mm","float a = (o*f)/(o-f);","float b = (d*f)/(d-f);","float c = (d-f)/(d*fstop*CoC);","blur = abs(a-b)*c;","}","blur = clamp(blur,0.0,1.0);","// calculation of pattern for dithering","vec2 noise = rand(vUv.xy)*namount*blur;","// getting blur x and y step factor","float w = (1.0/width)*blur*maxblur+noise.x;","float h = (1.0/height)*blur*maxblur+noise.y;","// calculation of final color","vec3 col = vec3(0.0);","if(blur < 0.05) {","//some optimization thingy","col = texture2D(tColor, vUv.xy).rgb;","} else {","col = texture2D(tColor, vUv.xy).rgb;","float s = 1.0;","int ringsamples;","for (int i = 1; i <= rings; i++) {","/*unboxstart*/","ringsamples = i * samples;","for (int j = 0 ; j < maxringsamples ; j++) {","if (j >= ringsamples) break;","s += gather(float(i), float(j), ringsamples, col, w, h, blur);","}","/*unboxend*/","}","col /= s; //divide by sample count","}","if (showFocus) {","col = debugFocus(col, blur, depth);","}","if (vignetting) {","col *= vignette();","}","gl_FragColor.rgb = col;","gl_FragColor.a = 1.0;","} "].join("\n")}}),define("VeroldEngine/libs/three/shaders/BrightnessContrastShader",["three"],function(a){a.BrightnessContrastShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:0},contrast:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float brightness;","uniform float contrast;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","gl_FragColor.rgb += brightness;","if (contrast > 0.0) {","gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;","} else {","gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;","}","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/ColorCorrectionShader",["three"],function(a){a.ColorCorrectionShader={uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new a.Vector3(2,2,2)},mulRGB:{type:"v3",value:new a.Vector3(1,1,1)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 powRGB;","uniform vec3 mulRGB;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","gl_FragColor.rgb = mulRGB * pow( gl_FragColor.rgb, powRGB );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/ColorifyShader",["three"],function(a){a.ColorifyShader={uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new a.Color(16777215)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","gl_FragColor = vec4( v * color, texel.w );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/ConvolutionShader",["three"],function(a){a.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new a.Vector2(.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vec2 imageCoord = vUv;","vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","imageCoord += uImageIncrement;","}","gl_FragColor = sum;","}"].join("\n"),buildKernel:function(a){function b(a,b){return Math.exp(-(a*a)/(2*b*b))}var c,d,e,f,g=49,h=2*Math.ceil(3*a)+1;for(h>g&&(h=g),f=.5*(h-1),d=new Array(h),e=0,c=0;h>c;++c)d[c]=b(c-f,a),e+=d[c];for(c=0;h>c;++c)d[c]/=e;return d}}}),define("VeroldEngine/libs/three/shaders/CopyShader",["three"],function(a){a.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/ClampShader",["three"],function(a){a.ClampShader={uniforms:{tDiffuse:{type:"t",value:null},threshold:{type:"f",value:.8}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float threshold;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor.xyz = max( texel.xyz - threshold, 0.0 ) * 5.0;","gl_FragColor.w = 1.0;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/DOFMipMapShader",["three"],function(a){a.DOFMipMapShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float focus;","uniform float maxblur;","uniform sampler2D tColor;","uniform sampler2D tDepth;","varying vec2 vUv;","void main() {","vec4 depth = texture2D( tDepth, vUv );","float factor = depth.x - focus;","vec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );","gl_FragColor = col;","gl_FragColor.a = 1.0;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/DotScreenShader",["three"],function(a){a.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new a.Vector2(256,256)},center:{type:"v2",value:new a.Vector2(.5,.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","float s = sin( angle ), c = cos( angle );","vec2 tex = vUv * tSize - center;","vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","return ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","vec4 color = texture2D( tDiffuse, vUv );","float average = ( color.r + color.g + color.b ) / 3.0;","gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/EdgeShader",["three"],function(a){a.EdgeShader={uniforms:{tDiffuse:{type:"t",value:null},aspect:{type:"v2",value:new a.Vector2(512,512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","uniform vec2 aspect;","vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);","mat3 G[9];","const mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );","const mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );","const mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );","const mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );","const mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );","const mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );","const mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );","const mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );","const mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );","void main(void)","{","G[0] = g0,","G[1] = g1,","G[2] = g2,","G[3] = g3,","G[4] = g4,","G[5] = g5,","G[6] = g6,","G[7] = g7,","G[8] = g8;","mat3 I;","float cnv[9];","vec3 sample;","for (float i=0.0; i<3.0; i++) {","for (float j=0.0; j<3.0; j++) {","sample = texture2D(tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;","I[int(i)][int(j)] = length(sample);","}","}","for (int i=0; i<9; i++) {","float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);","cnv[i] = dp3 * dp3;","}","float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);","float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);","gl_FragColor = vec4(vec3(sqrt(M/S)), 1.0);","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/EdgeShader2",["three"],function(a){a.EdgeShader2={uniforms:{tDiffuse:{type:"t",value:null},aspect:{type:"v2",value:new a.Vector2(512,512)},colour:{type:"c",value:new a.Color(16777215)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","uniform vec2 aspect;","uniform vec3 colour;","vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);","mat3 G[2];","const mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );","const mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );","void main(void)","{","mat3 I;","float cnv[2];","vec3 sample;","G[0] = g0;","G[1] = g1;","I[0][0] = length(texture2D( tDiffuse, vUv + texel * vec2(-1.0,-1.0) ).rgb);","I[0][1] = length(texture2D( tDiffuse, vUv + texel * vec2(-1.0,0.0) ).rgb);","I[0][2] = length(texture2D( tDiffuse, vUv + texel * vec2(-1.0,1.0) ).rgb);","I[1][0] = length(texture2D( tDiffuse, vUv + texel * vec2(0.0,-1.0) ).rgb);","I[1][1] = length(texture2D( tDiffuse, vUv + texel * vec2(0.0,0.0) ).rgb);","I[1][2] = length(texture2D( tDiffuse, vUv + texel * vec2(0.0,1.0) ).rgb);","I[2][0] = length(texture2D( tDiffuse, vUv + texel * vec2(1.0,-1.0) ).rgb);","I[2][1] = length(texture2D( tDiffuse, vUv + texel * vec2(1.0,0.0) ).rgb);","I[2][2] = length(texture2D( tDiffuse, vUv + texel * vec2(1.0,1.0) ).rgb);","for (int i=0; i<2; i++) {","float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);","cnv[i] = dp3 * dp3; ","}","gl_FragColor = vec4(colour, sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));","} "].join("\n")}}),define("VeroldEngine/libs/three/shaders/FilmShader",["three"],function(a){a.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:.5},sIntensity:{type:"f",value:.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, vUv );","float x = vUv.x * vUv.y * time *  1000.0;","x = mod( x, 13.0 ) * mod( x, 123.0 );","float dx = mod( x, 0.01 );","vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );","vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","if( grayscale ) {","cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","}","gl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/FocusShader",["three"],function(a){a.FocusShader={uniforms:{tDiffuse:{type:"t",value:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:.94},waveFactor:{type:"f",value:.00125}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float screenWidth;","uniform float screenHeight;","uniform float sampleDistance;","uniform float waveFactor;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 color, org, tmp, add;","float sample_dist, f;","vec2 vin;","vec2 uv = vUv;","add = color = org = texture2D( tDiffuse, uv );","vin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );","sample_dist = dot( vin, vin ) * 2.0;","f = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;","vec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );","add += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","color = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );","color = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );","gl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/FresnelShader",["three"],function(a){a.FresnelShader={uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},vertexShader:["uniform float mRefractionRatio;","uniform float mFresnelBias;","uniform float mFresnelScale;","uniform float mFresnelPower;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );","vec3 I = worldPosition.xyz - cameraPosition;","vReflect = reflect( I, worldNormal );","vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );","vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );","vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );","vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","vec4 refractedColor = vec4( 1.0 );","refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;","refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;","refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;","gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/FXAAShader",["three"],function(a){a.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new a.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","varying vec2 vUv;","#define FXAA_REDUCE_MIN   (1.0/128.0)","#define FXAA_REDUCE_MUL   (1.0/8.0)","#define FXAA_SPAN_MAX     8.0","void main() {","vec3 rgbNW = clamp( texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz, 0.0, 1.0);","vec3 rgbNE = clamp( texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz, 0.0, 1.0);","vec3 rgbSW = clamp( texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz, 0.0, 1.0);","vec3 rgbSE = clamp( texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz, 0.0, 1.0);","vec4 rgbaM  = clamp( texture2D( tDiffuse,  gl_FragCoord.xy  * resolution ), 0.0, 1.0);","vec3 rgbM  = rgbaM.xyz;","float opacity  = rgbaM.w;","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float lumaNW = dot( rgbNW, luma );","float lumaNE = dot( rgbNE, luma );","float lumaSW = dot( rgbSW, luma );","float lumaSE = dot( rgbSE, luma );","float lumaM  = dot( rgbM,  luma );","float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );","float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );","vec2 dir;","dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );","float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );","dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),","max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),","dir * rcpDirMin)) * resolution;","vec3 rgbA = 0.5 * (","clamp( texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz, 0.0, 1.0) +","clamp( texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz, 0.0, 1.0) );","vec3 rgbB = rgbA * 0.5 + 0.25 * (","clamp( texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz, 0.0, 1.0) +","clamp( texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz, 0.0, 1.0) );","float lumaB = dot( rgbB, luma );","if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {","gl_FragColor = vec4( rgbA, opacity );","} else {","gl_FragColor = vec4( rgbB, opacity );","}","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/GammaShader",["three"],function(a){a.GammaShader={uniforms:{tDiffuse:{type:"t",value:null}},defines:{GAMMA_VALUE:2},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#if !defined(GAMMA_VALUE)","#define GAMMA_VALUE 0.5","#endif","uniform sampler2D tDiffuse;","varying vec2 vUv;",a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","vec4 texel = texture2D( tDiffuse, vUv );","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","gl_FragColor = vec4( HDRDecodeLOGLUV( texel ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","gl_FragColor = vec4( HDRDecodeRGBM( texel ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","gl_FragColor = vec4( HDRDecodeRGBD( texel ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","gl_FragColor = vec4( HDRDecodeRGBE( texel ), 1.0 );","#else","gl_FragColor = texel;","#endif","#else","gl_FragColor = texel;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * gl_FragColor.xyz;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/HorizontalBlurShader",["three"],function(a){a.HorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float h;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/HorizontalTiltShiftShader",["three"],function(a){a.HorizontalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},r:{type:"f",value:.35}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float h;","uniform float r;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","float hh = h * abs( r - vUv.y );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/HueSaturationShader",["three"],function(a){a.HueSaturationShader={uniforms:{tDiffuse:{type:"t",value:null},hue:{type:"f",value:0},saturation:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float hue;","uniform float saturation;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","float angle = hue * 3.14159265;","float s = sin(angle), c = cos(angle);","vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;","float len = length(gl_FragColor.rgb);","gl_FragColor.rgb = vec3(","dot(gl_FragColor.rgb, weights.xyz),","dot(gl_FragColor.rgb, weights.zxy),","dot(gl_FragColor.rgb, weights.yzx)",");","float average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;","if (saturation > 0.0) {","gl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));","} else {","gl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);","}","}"].join("\n")}
}),define("VeroldEngine/libs/three/shaders/KaleidoShader",["three"],function(a){a.KaleidoShader={uniforms:{tDiffuse:{type:"t",value:null},sides:{type:"f",value:6},angle:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float sides;","uniform float angle;","varying vec2 vUv;","void main() {","vec2 p = vUv - 0.5;","float r = length(p);","float a = atan(p.y, p.x) + angle;","float tau = 2. * 3.1416 ;","a = mod(a, tau/sides);","a = abs(a - tau/sides/2.) ;","p = r * vec2(cos(a), sin(a));","vec4 color = texture2D(tDiffuse, p + 0.5);","gl_FragColor = color;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/LuminosityShader",["three"],function(a){a.LuminosityShader={uniforms:{tDiffuse:{type:"t",value:null},maxLuminance:{type:"f",value:100}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","#ifdef MAX_LUMINANCE","uniform float maxLuminance;","#endif","varying vec2 vUv;",a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","vec4 texel = texture2D( tDiffuse, vUv );","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","texel.xyz = HDRDecodeLOGLUV( texel );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","texel.xyz = HDRDecodeRGBM( texel );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","texel.xyz = HDRDecodeRGBD( texel );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","texel.xyz = HDRDecodeRGBE( texel );","#endif","#endif","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","#ifdef MAX_LUMINANCE","v = clamp( v, 0.0, maxLuminance );","#endif","gl_FragColor = vec4( v, v, v, texel.w );",a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/MirrorShader",["three"],function(a){a.MirrorShader={uniforms:{tDiffuse:{type:"t",value:null},side:{type:"i",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform int side;","varying vec2 vUv;","void main() {","vec2 p = vUv;","if (side == 0){","if (p.x > 0.5) p.x = 1.0 - p.x;","}else if (side == 1){","if (p.x < 0.5) p.x = 1.0 - p.x;","}else if (side == 2){","if (p.y < 0.5) p.y = 1.0 - p.y;","}else if (side == 3){","if (p.y > 0.5) p.y = 1.0 - p.y;","} ","vec4 color = texture2D(tDiffuse, p);","gl_FragColor = color;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/NormalMapShader",["three"],function(a){a.NormalMapShader={uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new a.Vector2(512,512)},scale:{type:"v2",value:new a.Vector2(1,1)},height:{type:"f",value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float height;","uniform vec2 resolution;","uniform sampler2D heightMap;","varying vec2 vUv;","void main() {","float val = texture2D( heightMap, vUv ).x;","float valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;","float valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;","gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/RGBShiftShader",["three"],function(a){a.RGBShiftShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:.005},angle:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float amount;","uniform float angle;","varying vec2 vUv;","void main() {","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, vUv + offset);","vec4 cga = texture2D(tDiffuse, vUv);","vec4 cb = texture2D(tDiffuse, vUv - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/SepiaShader",["three"],function(a){a.SepiaShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:1},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float amount;","uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 color = texture2D( tDiffuse, vUv );","vec3 c = color.rgb;","color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );","color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );","color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );","gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), opacity * color.a );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/SSAOShader",["three"],function(a){a.SSAOShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new a.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:.5},lumInfluence:{type:"f",value:.5},noiseAmount:{type:"f",value:3e-4},radius:{type:"f",value:5},diffArea:{type:"f",value:.4},gDisplace:{type:"f",value:.4},fogEnabled:{type:"i",value:1},fogDensity:{type:"f",value:.0025},depthScale:{type:"f",value:1e3},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int fogEnabled;","uniform float fogDensity;","uniform float depthScale;","uniform float cameraNear;","uniform float cameraFar;","uniform bool onlyAO;","uniform vec2 size;","uniform float aoClamp;","uniform float lumInfluence;","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","varying vec2 vUv;","#define DL 2.399963229728653","#define EULER 2.718281828459045","float width = size.x;","float height = size.y;","float cameraFarPlusNear = cameraFar + cameraNear;","float cameraFarMinusNear = cameraFar - cameraNear;","float cameraCoef = 2.0 * cameraNear;","const int samples = 16;","uniform float radius;","const bool useNoise = true;","uniform float noiseAmount;","uniform float diffArea;","uniform float gDisplace;","uniform float opacity;","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","vec2 rand( const vec2 coord ) {","vec2 noise;","if ( useNoise ) {","float nx = dot ( coord, vec2( 12.9898, 78.233 ) );","float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );","noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );","} else {","float ff = fract( 1.0 - coord.s * ( width / 2.0 ) );","float gg = fract( coord.t * ( height / 2.0 ) );","noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;","}","return ( noise * 2.0  - 1.0 ) * noiseAmount;","}","float doFog() {","float zdepth = unpackDepth( texture2D( tDepth, vUv ) );","float depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );","float depthShift = depth * 0.001;","float densityShift = fogDensity * 1000.0;","float fogFactor = 1.0 - clamp( 1.0 / exp( densityShift * densityShift * depthShift * depthShift ), 0.0, 1.0);","	return fogFactor;","}","float readDepth( const in vec2 coord ) {","return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );","}","float compareDepths( const in float depth1, const in float depth2, inout int far ) {","float garea = 2.0;","float diff = ( depth1 - depth2 ) * depthScale;","if ( diff < gDisplace ) {","garea = diffArea;","} else {","far = 1;","}","float dd = diff - gDisplace;","float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );","return gauss;","}","float calcAO( float depth, float dw, float dh ) {","float dd = radius - depth * radius;","vec2 vv = vec2( dw, dh );","vec2 coord1 = vUv + dd * vv;","vec2 coord2 = vUv - dd * vv;","float temp1 = 0.0;","float temp2 = 0.0;","int far = 0;","temp1 = compareDepths( depth, readDepth( coord1 ), far );","if ( far > 0 ) {","temp2 = compareDepths( readDepth( coord2 ), depth, far );","temp1 += ( 1.0 - temp1 ) * temp2;","}","return temp1;","}","void main() {","vec2 noise = rand( vUv );","float depth = readDepth( vUv );","float tt = clamp( depth, aoClamp, 1.0 );","float w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );","float h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );","float ao = 0.0;","float dz = 1.0 / float( samples );","float z = 1.0 - dz / 2.0;","float l = 0.0;","for ( int i = 0; i <= samples; i ++ ) {","float r = sqrt( 1.0 - z );","float pw = cos( l ) * r;","float ph = sin( l ) * r;","ao += calcAO( depth, pw * w, ph * h );","z = z - dz;","l = l + DL;","}","ao /= float( samples );","ao = 1.0 - ao;","if ( fogEnabled == 1 ) {","ao = mix( ao, 1.0, doFog() );","}","vec3 color = texture2D( tDiffuse, vUv ).rgb;","vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );","float lum = dot( color.rgb, lumcoeff );","vec3 luminance = vec3( lum );","vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","if ( onlyAO ) {","final = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","}","gl_FragColor = vec4( final, opacity );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/TriangleBlurShader",["three"],function(a){a.TriangleBlurShader={uniforms:{texture:{type:"t",value:null},delta:{type:"v2",value:new a.Vector2(1,1)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define ITERATIONS 10.0","uniform sampler2D texture;","uniform vec2 delta;","varying vec2 vUv;","float random( vec3 scale, float seed ) {","return fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );","}","void main() {","vec4 color = vec4( 0.0 );","float total = 0.0;","float offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );","for ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {","float percent = ( t + offset - 0.5 ) / ITERATIONS;","float weight = 1.0 - abs( percent );","color += texture2D( texture, vUv + delta * percent ) * weight;","total += weight;","}","gl_FragColor = color / total;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/ToneMapShader",["three"],function(a){a.ToneMapShader={uniforms:{tDiffuse:{type:"t",value:null},averageLuminance:{type:"f",value:1},luminanceMap:{type:"t",value:null},maxLuminance:{type:"f",value:16},exposureBias:{type:"f",value:.6},maxLuminanceRT:{type:"t",value:null}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","#ifdef ADAPT_WHITE_BALANCE","uniform sampler2D maxLuminanceRT;","#else","uniform float maxLuminance;","#endif","varying vec2 vUv;","uniform float exposureBias;","#ifdef SAMPLE_LUMINANCE","uniform sampler2D luminanceMap;","#else","uniform float averageLuminance;","#endif",a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"uniform float whiteScale;","const float A = 0.15;","const float B = 0.50;","const float C = 0.10;","const float D = 0.20;","const float E = 0.02;","const float F = 0.30;","vec3 UC2Tonemap( vec3 x ) {","return ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;","}","const vec3 LUM_CONVERT = vec3(0.299, 0.587, 0.114);","vec3 ToneMap( vec3 vColor ) {","#ifdef SAMPLE_LUMINANCE","vec4 lumAvg = texture2D(luminanceMap, vUv);","float fLumAvg = lumAvg.r;","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","fLumAvg = HDRDecodeLOGLUV( lumAvg ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","fLumAvg = HDRDecodeRGBM( lumAvg ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","fLumAvg = HDRDecodeRGBD( lumAvg ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","fLumAvg = HDRDecodeRGBE( lumAvg ).r;","#endif","#endif","#else","float fLumAvg = averageLuminance;","#endif","#ifdef ADAPT_WHITE_BALANCE","vec3 maxLum = texture2D( maxLuminanceRT, vUv ).rgb;","vec3 white = 1.0 / UC2Tonemap( maxLum );","#else","vec3 white = vec3(maxLuminance);","#endif","vec3 curr = UC2Tonemap( (exposureBias / (fLumAvg + 0.025)) * vColor );","return curr * white;","}","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","gl_FragColor = vec4( ToneMap( HDRDecodeLOGLUV( texel ) ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","gl_FragColor = vec4( ToneMap( HDRDecodeRGBM( texel ) ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","gl_FragColor = vec4( ToneMap( HDRDecodeRGBD( texel ) ), 1.0 );","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","gl_FragColor = vec4( ToneMap( HDRDecodeRGBE( texel ) ), 1.0 );","#else","gl_FragColor = vec4( ToneMap( texel.xyz ), texel.w );","#endif","#else","gl_FragColor = vec4( ToneMap( texel.xyz ), texel.w );","#endif","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/UnpackDepthRGBAShader",["three"],function(a){a.UnpackDepthRGBAShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","void main() {","float depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );","gl_FragColor = opacity * vec4( vec3( depth ), 1.0 );","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/VerticalBlurShader",["three"],function(a){a.VerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float v;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/VerticalTiltShiftShader",["three"],function(a){a.VerticalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512},r:{type:"f",value:.35}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float v;","uniform float r;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","float vv = v * abs( r - vUv.y );","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")}}),define("VeroldEngine/libs/three/shaders/VignetteShader",["three"],function(a){a.VignetteShader={uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float offset;","uniform float darkness;","uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );","gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a * opacity );","}"].join("\n")}}),define("VeroldEngine/libs/three/postprocessing/ShaderPass",["three","VeroldEngine/libs/three/shaders/BasicShader","VeroldEngine/libs/three/shaders/BilinearMipmapShader","VeroldEngine/libs/three/shaders/BleachBypassShader","VeroldEngine/libs/three/shaders/BlendShader","VeroldEngine/libs/three/shaders/BokehShader","VeroldEngine/libs/three/shaders/BokehShader2","VeroldEngine/libs/three/shaders/BrightnessContrastShader","VeroldEngine/libs/three/shaders/ColorCorrectionShader","VeroldEngine/libs/three/shaders/ColorifyShader","VeroldEngine/libs/three/shaders/ConvolutionShader","VeroldEngine/libs/three/shaders/CopyShader","VeroldEngine/libs/three/shaders/ClampShader","VeroldEngine/libs/three/shaders/DOFMipMapShader","VeroldEngine/libs/three/shaders/DotScreenShader","VeroldEngine/libs/three/shaders/EdgeShader","VeroldEngine/libs/three/shaders/EdgeShader2","VeroldEngine/libs/three/shaders/FilmShader","VeroldEngine/libs/three/shaders/FocusShader","VeroldEngine/libs/three/shaders/FresnelShader","VeroldEngine/libs/three/shaders/FXAAShader","VeroldEngine/libs/three/shaders/GammaShader","VeroldEngine/libs/three/shaders/HorizontalBlurShader","VeroldEngine/libs/three/shaders/HorizontalTiltShiftShader","VeroldEngine/libs/three/shaders/HueSaturationShader","VeroldEngine/libs/three/shaders/KaleidoShader","VeroldEngine/libs/three/shaders/LuminosityShader","VeroldEngine/libs/three/shaders/MirrorShader","VeroldEngine/libs/three/shaders/NormalMapShader","VeroldEngine/libs/three/shaders/RGBShiftShader","VeroldEngine/libs/three/shaders/SepiaShader","VeroldEngine/libs/three/shaders/SSAOShader","VeroldEngine/libs/three/shaders/TriangleBlurShader","VeroldEngine/libs/three/shaders/ToneMapShader","VeroldEngine/libs/three/shaders/UnpackDepthRGBAShader","VeroldEngine/libs/three/shaders/VerticalBlurShader","VeroldEngine/libs/three/shaders/VerticalTiltShiftShader","VeroldEngine/libs/three/shaders/VignetteShader"],function(a){a.ShaderPass=function(b,c){this.textureID=void 0!==c?c:"tDiffuse",this.uniforms=a.UniformsUtils.clone(b.uniforms),this.material=new a.ShaderMaterial({blending:a.NormalBlending,transparent:!0,uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene.add(this.quad)},a.ShaderPass.prototype={render:function(a,b,c){if(this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c),this.quad.material=this.material,this.renderToScreen){var d=a.getViewport();this.viewPort&&a.setViewport(this.viewPort.x,this.viewPort.y,this.viewPort.width,this.viewPort.height),(this.clearColor||this.clearDepth)&&a.clear(!!this.clearColor,!!this.clearDepth,!1),a.render(this.scene,this.camera),this.viewPort&&a.setViewport(d.x,d.y,d.width,d.height)}else this.renderToTexture?((this.clearColor||this.clearDepth)&&a.clear(this.clearColor,this.clearDepth,!1),a.render(this.scene,this.camera,this.renderToTexture)):a.render(this.scene,this.camera,b,this.clear)},dispose:function(){this.quad.geometry.dispose(),this.quad=void 0,this.camera=void 0,this.scene=void 0,this.material.dispose(),this.material=void 0,this.uniforms=void 0}}}),define("VeroldEngine/libs/three/postprocessing/TexturePass",["three"],function(a){a.TexturePass=function(b,c){void 0===a.CopyShader&&console.error("THREE.TexturePass relies on THREE.CopyShader");var d=a.CopyShader;this.uniforms=a.UniformsUtils.clone(d.uniforms),this.uniforms.opacity.value=void 0!==c?c:1,this.uniforms.tDiffuse.value=b,this.material=new a.ShaderMaterial({uniforms:this.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader}),this.enabled=!0,this.needsSwap=!1,this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene.add(this.quad)},a.TexturePass.prototype={render:function(a,b,c){this.quad.material=this.material,a.render(this.scene,this.camera,c)}}}),define("VeroldEngine/libs/three/postprocessing/AdaptiveToneMappingPass",["three"],function(a){a.AdaptiveToneMappingPass=function(b,c){this.resolution=void 0!==c?c:256,this.needsUpdate=!0,this.adaptive=void 0!==b?!!b:!0,this.needsManualDownSample=!1,this.luminanceRT=null,this.previousLuminanceRT=null,this.currentLuminanceRT=null,this.currentLuminanceRTDownSampled=[],this.maxLuminanceRT=null,this.previousMaxLuminanceRT=null,this.currentMaxLuminanceRT=[],void 0===a.CopyShader&&console.error("THREE.AdaptiveToneMappingPass relies on THREE.CopyShader");var d=a.CopyShader;this.copyUniforms=a.UniformsUtils.clone(d.uniforms),this.materialCopy=new a.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:a.NoBlending,depthTest:!1,depthWrite:!1}),void 0===a.LuminosityShader&&console.error("THREE.AdaptiveToneMappingPass relies on THREE.LuminosityShader"),this.materialLuminance=new a.ShaderMaterial({uniforms:a.UniformsUtils.clone(a.LuminosityShader.uniforms),vertexShader:a.LuminosityShader.vertexShader,fragmentShader:a.LuminosityShader.fragmentShader,blending:a.NoBlending,depthTest:!1,depthWrite:!1,name:"Luminance",defines:{MAX_LUMINANCE:""}}),this.adaptLuminanceShader={defines:{MIP_LEVEL_1X1:Math.log2(this.resolution).toFixed(1)},uniforms:{lastLum:{type:"t",value:null},currentLum:{type:"t",value:null},delta:{type:"f",value:.016},tau:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D lastLum;","uniform sampler2D currentLum;","uniform float delta;","uniform float tau;",a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","vec4 lastLum = texture2D( lastLum, vUv, MIP_LEVEL_1X1 );","vec4 currentLum = texture2D( currentLum, vUv, MIP_LEVEL_1X1 );","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","float fLastLum = HDRDecodeLOGLUV( lastLum ).r;","float fCurrentLum = HDRDecodeLOGLUV( currentLum ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","float fLastLum = HDRDecodeRGBM( lastLum ).r;","float fCurrentLum = HDRDecodeRGBM( currentLum ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","float fLastLum = HDRDecodeRGBD( lastLum ).r;","float fCurrentLum = HDRDecodeRGBD( currentLum ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","float fLastLum = HDRDecodeRGBE( lastLum ).r;","float fCurrentLum = HDRDecodeRGBE( currentLum ).r;","#else","float fLastLum = lastLum.r;","float fCurrentLum = currentLum.r;","#endif","#else","float fLastLum = lastLum.r;","float fCurrentLum = currentLum.r;","#endif","float fAdaptedLum = fLastLum + (fCurrentLum - fLastLum) * (1.0 - exp(-delta * tau));","gl_FragColor = vec4( vec3( fAdaptedLum ), 1.0 );",a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},this.materialAdaptiveLum=new a.ShaderMaterial({uniforms:this.adaptLuminanceShader.uniforms,vertexShader:this.adaptLuminanceShader.vertexShader,fragmentShader:this.adaptLuminanceShader.fragmentShader,defines:this.adaptLuminanceShader.defines,blending:a.NoBlending,depthTest:!1,depthWrite:!1,name:"Adaptive Luminance"}),void 0===a.ToneMapShader&&console.error("THREE.AdaptiveToneMappingPass relies on THREE.ToneMapShader"),this.materialToneMap=new a.ShaderMaterial({uniforms:a.UniformsUtils.clone(a.ToneMapShader.uniforms),vertexShader:a.ToneMapShader.vertexShader,fragmentShader:a.ToneMapShader.fragmentShader,blending:a.NoBlending,depthTest:!1,depthWrite:!1,name:"Tone Map"}),this.downSampleShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new a.Vector2},encode:{type:"i",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tDiffuse;","uniform vec2 resolution;",a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","vec2 offset = 0.5 / resolution;","vec4 luminosity;","vec4 samples[ 4 ];","samples[0] = texture2D( tDiffuse, vUv + vec2( -offset.x, -offset.x ) );","samples[1] = texture2D( tDiffuse, vUv + vec2( offset.x, -offset.x ) );","samples[2] = texture2D( tDiffuse, vUv + vec2( offset.x, offset.y ) );","samples[3] = texture2D( tDiffuse, vUv + vec2( -offset.x, offset.y ) );","for ( int i = 0; i < 4; i++ ) {","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","luminosity[ i ] = HDRDecodeLOGLUV( samples[i] ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","luminosity[ i ] = HDRDecodeRGBM( samples[i] ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","luminosity[ i ] = HDRDecodeRGBD( samples[i] ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","luminosity[ i ] = HDRDecodeRGBE( samples[i] ).r;","#else","luminosity[ i ] = samples[i].r;","#endif","#else","luminosity[ i ] = samples[i].r;","#endif","}","float newLum = dot(luminosity, vec4(0.25));","gl_FragColor = vec4( vec3( newLum ), 1.0 );",a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},this.materialDownSample=new a.ShaderMaterial({uniforms:this.downSampleShader.uniforms,vertexShader:this.downSampleShader.vertexShader,fragmentShader:this.downSampleShader.fragmentShader,blending:a.NoBlending,depthTest:!1,depthWrite:!1,name:"down-sample"}),this.maxLuminanceShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new a.Vector2}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tDiffuse;","uniform vec2 resolution;",a.ShaderChunk.hdr_decode_pars_fragment,a.ShaderChunk.hdr_encode_pars_fragment,"void main() {","vec2 offset = 0.5 / resolution;","vec4 luminosity;","vec4 samples[ 4 ];","samples[0] = texture2D( tDiffuse, vUv + vec2( -offset.x, -offset.x ) );","samples[1] = texture2D( tDiffuse, vUv + vec2( offset.x, -offset.x ) );","samples[2] = texture2D( tDiffuse, vUv + vec2( offset.x, offset.y ) );","samples[3] = texture2D( tDiffuse, vUv + vec2( -offset.x, offset.y ) );","for ( int i = 0; i < 4; i++ ) {","#if defined( HDR_INPUT ) && defined( HDR_INPUT_TYPE )","#if ( HDR_INPUT_TYPE == HDR_TYPE_LOGLUV )","luminosity[ i ] = HDRDecodeLOGLUV( samples[i] ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBM )","luminosity[ i ] = HDRDecodeRGBM( samples[i] ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBD )","luminosity[ i ] = HDRDecodeRGBD( samples[i] ).r;","#elif ( HDR_INPUT_TYPE == HDR_TYPE_RGBE )","luminosity[ i ] = HDRDecodeRGBE( samples[i] ).r;","#else","luminosity[ i ] = samples[i].r;","#endif","#else","luminosity[ i ] = samples[i].r;","#endif","}","float maxLum = max( max(luminosity.r, luminosity.g), max( luminosity.b, luminosity.a ));","gl_FragColor = vec4( vec3( maxLum ), 1.0 );",a.ShaderChunk.hdr_encode_fragment,"}"].join("\n")},this.materialMaxLuminance=new a.ShaderMaterial({uniforms:this.maxLuminanceShader.uniforms,vertexShader:this.maxLuminanceShader.vertexShader,fragmentShader:this.maxLuminanceShader.fragmentShader,blending:a.NoBlending,depthTest:!1,depthWrite:!1,name:"max-luminance"}),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.camera=new a.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new a.Scene,this.quad=new a.Mesh(new a.PlaneGeometry(2,2),null),this.scene.add(this.quad)},a.AdaptiveToneMappingPass.prototype={render:function(a,b,c,d){this.needsUpdate&&(this.resetRenderTargets(a,c),this.needsUpdate=!1),this.adaptive&&(this.quad.material=this.materialLuminance,this.materialLuminance.uniforms.tDiffuse.value=c,a.render(this.scene,this.camera,this.currentLuminanceRT),this.materialAdaptiveLum.uniforms.delta.value=d,this.adaptiveWhiteLevel&&(this.determineMaxLuminance(a),this.quad.material=this.materialAdaptiveLum,this.materialAdaptiveLum.uniforms.lastLum.value=this.previousMaxLuminanceRT,this.materialAdaptiveLum.uniforms.currentLum.value=this.currentMaxLuminanceRT[this.currentMaxLuminanceRT.length-1],a.render(this.scene,this.camera,this.maxLuminanceRT),this.materialToneMap.uniforms.maxLuminanceRT.value=this.maxLuminanceRT),this.needsManualDownSample?(this.downSampleLuminance(a),this.materialAdaptiveLum.uniforms.currentLum.value=this.currentLuminanceRTDownSampled[this.currentLuminanceRTDownSampled.length-1]):this.materialAdaptiveLum.uniforms.currentLum.value=this.currentLuminanceRT,this.quad.material=this.materialAdaptiveLum,this.materialAdaptiveLum.uniforms.lastLum.value=this.previousLuminanceRT,a.render(this.scene,this.camera,this.luminanceRT),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.luminanceRT,a.render(this.scene,this.camera,this.previousLuminanceRT),this.copyUniforms.tDiffuse.value=this.maxLuminanceRT,a.render(this.scene,this.camera,this.previousMaxLuminanceRT)),this.quad.material=this.materialToneMap,this.materialToneMap.uniforms.tDiffuse.value=c,a.render(this.scene,this.camera,b,this.clear)},downSampleLuminance:function(a){this.quad.material=this.materialDownSample,this.materialDownSample.uniforms.tDiffuse.value=this.currentLuminanceRT;for(var b=0;b<this.currentLuminanceRTDownSampled.length;b++)this.materialDownSample.uniforms.resolution.value.x=Math.pow(2,this.currentLuminanceRTDownSampled.length-b),this.materialDownSample.uniforms.resolution.value.y=Math.pow(2,this.currentLuminanceRTDownSampled.length-b),a.render(this.scene,this.camera,this.currentLuminanceRTDownSampled[b],!0),this.materialDownSample.uniforms.tDiffuse.value=this.currentLuminanceRTDownSampled[b]},determineMaxLuminance:function(a){this.quad.material=this.materialMaxLuminance,this.materialMaxLuminance.uniforms.tDiffuse.value=this.currentLuminanceRT;for(var b=0;b<this.currentMaxLuminanceRT.length;b++)this.materialMaxLuminance.uniforms.resolution.value.x=Math.pow(2,this.currentMaxLuminanceRT.length-b),this.materialMaxLuminance.uniforms.resolution.value.y=Math.pow(2,this.currentMaxLuminanceRT.length-b),a.render(this.scene,this.camera,this.currentMaxLuminanceRT[b],!0),this.materialMaxLuminance.uniforms.tDiffuse.value=this.currentMaxLuminanceRT[b]},resetRenderTargets:function(b,c){var d,e,f,g;if(this.luminanceRT&&this.luminanceRT.dispose(),this.currentLuminanceRT&&this.currentLuminanceRT.dispose(),this.previousLuminanceRT&&this.previousLuminanceRT.dispose(),this.currentLuminanceRTDownSampled){for(d=0;d<this.currentLuminanceRTDownSampled.length;d++)this.currentLuminanceRTDownSampled[d].dispose();
this.currentLuminanceRTDownSampled=[]}if(this.maxLuminanceRT&&this.maxLuminanceRT.dispose(),this.previousMaxLuminanceRT&&this.previousMaxLuminanceRT.dispose(),this.currentMaxLuminanceRT){for(d=0;d<this.currentMaxLuminanceRT.length;d++)this.currentMaxLuminanceRT[d].dispose();this.currentMaxLuminanceRT=[]}if(f={minFilter:a.LinearFilter,magFilter:a.LinearFilter,format:c.format,type:c.type},c.type===a.FloatType?(g=new a.WebGLExtensions(b.getContext()),this.needsManualDownSample=g.get("OES_texture_half_float_linear")||g.get("OES_texture_float_linear")?!1:!0):this.needsManualDownSample=b.hdrOutputEnabled&&b.hdrOutputType?!0:!1,this.needsManualDownSample?(f.minFilter=a.NearestFilter,f.magFilter=a.NearestFilter):(f.minFilter=a.LinearFilter,f.magFilter=a.LinearFilter),this.luminanceRT=new a.WebGLRenderTarget(this.resolution,this.resolution,f),this.luminanceRT.generateMipmaps=!1,this.luminanceRT.name="Average Luminance",this.previousLuminanceRT=new a.WebGLRenderTarget(this.resolution,this.resolution,f),this.previousLuminanceRT.generateMipmaps=!1,this.previousLuminanceRT.name="Previous Luminance",this.needsManualDownSample||(f.minFilter=a.LinearMipMapLinearFilter),this.currentLuminanceRT=new a.WebGLRenderTarget(this.resolution,this.resolution,f),this.currentLuminanceRT.name="Current Luminance",this.adaptive&&(this.materialToneMap.defines.SAMPLE_LUMINANCE="",this.materialToneMap.uniforms.luminanceMap.value=this.luminanceRT),this.materialLuminance.needsUpdate=!0,this.materialAdaptiveLum.needsUpdate=!0,this.materialToneMap.needsUpdate=!0,this.materialDownSample.needsUpdate=!0,b.hdrOutputEnabled&&(this.materialLuminance.hdrOutputType=b.hdrOutputType,this.materialAdaptiveLum.hdrOutputType=b.hdrOutputType,this.materialDownSample.hdrOutputType=b.hdrOutputType,this.materialToneMap.hdrOutputEnabled=!1,this.materialLuminance.hdrInputEnabled=!0,this.materialLuminance.defines.HDR_INPUT_TYPE=b.hdrOutputType,this.materialAdaptiveLum.hdrInputEnabled=!0,this.materialAdaptiveLum.defines.HDR_INPUT_TYPE=b.hdrOutputType,this.materialToneMap.hdrInputEnabled=!0,this.materialToneMap.defines.HDR_INPUT_TYPE=b.hdrOutputType,this.materialDownSample.hdrInputEnabled=!0,this.materialDownSample.defines.HDR_INPUT_TYPE=b.hdrOutputType),f.minFilter=a.NearestFilter,f.magFilter=a.NearestFilter,this.needsManualDownSample){for(this.currentLuminanceRT.generateMipmaps=!1,this.currentLuminanceRTDownSampled=new Array(parseInt(Math.log2(this.resolution))),d=1;d<=this.currentLuminanceRTDownSampled.length;d++)e=parseInt(this.resolution/Math.pow(2,d)),this.currentLuminanceRTDownSampled[d-1]=new a.WebGLRenderTarget(e,e,f),this.currentLuminanceRTDownSampled[d-1].name="Current Luminance RT"+(d-1);this.materialAdaptiveLum.defines.MIP_LEVEL_1X1="0.0"}else this.materialAdaptiveLum.defines.MIP_LEVEL_1X1=Math.log2(this.resolution).toFixed(1);for(this.currentMaxLuminanceRT=new Array(parseInt(Math.log2(this.resolution))),d=1;d<=this.currentMaxLuminanceRT.length;d++)e=parseInt(this.resolution/Math.pow(2,d)),this.currentMaxLuminanceRT[d-1]=new a.WebGLRenderTarget(e,e,f),this.currentMaxLuminanceRT[d-1].name="Current Max Luminance RT"+(d-1);this.previousMaxLuminanceRT=new a.WebGLRenderTarget(1,1,f),this.previousMaxLuminanceRT.name="Previous Max Luminance",this.maxLuminanceRT=new a.WebGLRenderTarget(1,1,f),this.maxLuminanceRT.name="Current Max Luminance",this.seedTargets(b)},seedTargets:function(b){this.quad.material=new a.MeshBasicMaterial({color:7829367,opacity:.5}),b.render(this.scene,this.camera,this.luminanceRT),b.render(this.scene,this.camera,this.previousLuminanceRT),b.render(this.scene,this.camera,this.currentLuminanceRT),b.render(this.scene,this.camera,this.previousMaxLuminanceRT)},setAdaptive:function(a){a?(this.adaptive=!0,this.materialToneMap.defines.SAMPLE_LUMINANCE="",this.materialToneMap.uniforms.luminanceMap.value=this.luminanceRT):(this.adaptive=!1,delete this.materialToneMap.defines.SAMPLE_LUMINANCE,this.materialToneMap.uniforms.luminanceMap.value=void 0),this.materialToneMap.needsUpdate=!0},setAdaptiveWhiteLevel:function(a){a&&this.adaptive?(this.adaptiveWhiteLevel=!0,this.materialToneMap.defines.ADAPT_WHITE_BALANCE="",this.materialToneMap.uniforms.maxLuminanceRT.value=this.maxLuminanceRT):(this.adaptiveWhiteLevel=!1,delete this.materialToneMap.defines.ADAPT_WHITE_BALANCE,this.materialToneMap.uniforms.maxLuminanceRT.value=void 0),this.materialToneMap.needsUpdate=!0},setAdaptionRate:function(a){a&&(this.materialAdaptiveLum.uniforms.tau.value=Math.abs(a))},setMaxLuminance:function(a){if(a){var b=.15,c=.5,d=.1,e=.2,f=.02,g=.3;this.materialToneMap.uniforms.maxLuminance.value=1/((a*(b*a+d*c)+e*f)/(a*(b*a+c)+e*g))-f/g,this.materialLuminance.uniforms.maxLuminance.value=a,this.materialLuminance.defines&&this.materialLuminance.defines.MAX_LUMINANCE||(this.materialLuminance.defines.MAX_LUMINANCE="",this.materialLuminance.needsUpdate=!0)}},setAverageLuminance:function(a){a&&(this.materialToneMap.uniforms.averageLuminance.value=a)},setExposure:function(a){a&&(this.materialToneMap.uniforms.exposureBias.value=a)},dispose:function(){this.luminanceRT&&this.luminanceRT.dispose(),this.previousLuminanceRT&&this.previousLuminanceRT.dispose(),this.currentLuminanceRT&&this.currentLuminanceRT.dispose(),this.materialLuminance&&this.materialLuminance.dispose(),this.materialAdaptiveLum&&this.materialAdaptiveLum.dispose(),this.materialCopy&&this.materialCopy.dispose(),this.materialToneMap&&this.materialToneMap.dispose()}}}),define("VeroldEngine/Components/ComponentManager",["underscore","backbone","async","three","VeroldEngine/libs/uuid","VeroldEngine/Components/VeroldComponent","VeroldEngine/libs/three/postprocessing/EffectComposer","VeroldEngine/libs/three/postprocessing/BloomPass","VeroldEngine/libs/three/postprocessing/BokehPass","VeroldEngine/libs/three/postprocessing/DotScreenPass","VeroldEngine/libs/three/postprocessing/FilmPass","VeroldEngine/libs/three/postprocessing/MaskPass","VeroldEngine/libs/three/postprocessing/RenderPass","VeroldEngine/libs/three/postprocessing/SavePass","VeroldEngine/libs/three/postprocessing/ShaderPass","VeroldEngine/libs/three/postprocessing/TexturePass","VeroldEngine/libs/three/postprocessing/AdaptiveToneMappingPass"],function(a,b,c,d,e){function f(a){this.components={},this.veroldEntity=a.veroldEntity}var g={},h={preUpdate:"preUpdate",update:"update",postUpdate:"postUpdate",preRender:"preRender",render:"render",postRender:"postRender",preRenderView:"preRenderView",postRenderView:"postRenderView",blur:"suspend",focus:"resume"};return a.extend(f.prototype,b.Events,{initialize:function(){var a=this.veroldEntity.entityModel.get("components"),b=this._sortComponentKeys(a),d=this;c.forEach(b,function(b,c){var e=a[b],f=d.veroldEntity.getComponentData(b);d.components[b]?c():d._createComponent(e.scriptId,f,b,!!e.enabled,function(){c()})},function(){})},_sortComponentKeys:function(b){var c=this.veroldEntity.entityModel.get("componentsOrder"),d=a.clone(b);if(c&&c.length){for(var e=[],f=0;f<c.length;f++)d[c[f]]&&(e.push(c[f]),delete d[c[f]]);for(var g in d)e.push(g);return e}return a.keys(b)},onEntityComponentsChanges:function(b){function c(a){var b=d.veroldEntity.entityModel.get("components."+a),c=d.veroldEntity.veroldEngine.assetRegistry.getAssetById(b.scriptId);c&&c.entityModel.isBuiltIn&&(b.isBuiltIn=!0)}var d=this;if(this.veroldEntity.veroldEngine.componentSettings.enabled){var e=b.changed.components,f=b._previousAttributes.components;a.each(e,function(b,d){var e,g;if(a.isUndefined(b))this.unloadComponent(d),this._removeComponent(d);else if(e=this.components[d]){var h=f[d].componentData;b.enabled?e.enable():b.enabled===!1&&e.disable(),c(d),b.componentData&&e.componentDataChanged(b.componentData,h)}else{c(d);var i=this.veroldEntity.entityModel.get("components."+d);g={scriptId:i.scriptId,componentData:{},enabled:b.enabled};var j=this.veroldEntity.getPrefabObject();if(j){var k=j.entityModel.get("components."+d);k&&a.extend(g.componentData,i.componentData,k.componentData)}a.isEmpty(g.componentData)&&(g.componentData=i.componentData),g.scriptId&&this._createComponent(g.scriptId,g.componentData,d,!!g.enabled)}},this)}},_assignAttribute:function(b,c,e){if("asset"===c.type&&e[b]){var f=e[b];if(!a.isObject(f)){var g=this.veroldEntity.veroldEngine.assetRegistry.getAssetById(f);e[b]=g,g&&this.veroldEntity.registerDependency(g.id)}}else"object"===c.type?a.isObject(e[b])||(e[b]=this.veroldEntity.veroldEngine.getEntityById(e[b])):"c"===c.type?e[b]=new d.Color(e[b]):"a"===c.type?"asset"===c.subType.type?a.each(e[b],function(a,c){e[b][c]=this.veroldEntity.veroldEngine.assetRegistry.getAssetById(a)},this):"object"===c.subType.type?a.each(e[b],function(a,c){e[b][c]=this.veroldEntity.veroldEngine.getEntityById(a)},this):"custom"===c.subType.type&&a.each(e[b],function(b){a.each(c.subType.attributes,function(a,c){this._assignAttribute(c,a,b)},this)},this):"custom"===c.type&&(e[b]||(e[b]={}),a.each(c.attributes,function(a,c){this._assignAttribute(c,a,e[b])},this))},_buildAttributes:function(b,c,d){var e=b.entityModel.get("payload.attributes")||{};a.each(e,function(a,b){this._assignAttribute(b,a,c)},this),a.extend(d,c)},_buildEvents:function(b){var c=b.entityModel.get("payload.events")||{};a.each(c,function(a,b){this.veroldEntity.registerComponentEvent(b,a.parameters,a.scope,a.action,a.category,a.filter)},this)},_offloadEvents:function(b){var c=b.entityModel.get("payload.events")||{};a.each(c,function(a,b){this.veroldEntity.removeComponentEvent(b,a.scope)},this)},_createComponent:function(b,c,d,f,g){var h,i,j,k,l=require("VeroldEngine/AssetRegistry/ScriptAsset");return b instanceof l&&(b=b.id),d||(d=e()),this.components[d]?console.error("Component with id: "+d+" already exists!"):(j=b&&this.veroldEntity.veroldEngine.assetRegistry.getAssetById(b),j||(j=a.first(this.veroldEntity.veroldEngine.assetRegistry.Scripts.find({name:b}))),j?j.isRunnable()?void j.load({load:a.bind(function(){h=j.scriptData.klass,i=j.entityModel.get("name");try{if(k=new h,this.components[d]=k,k.__verold__={},k.__verold__.id=d,k.__verold__.scriptName=i,k.__verold__.componentData=a.deepClone(c),k.__verold__.scriptId=b,k.__verold__.enabled=f,k.veroldEntity=this.veroldEntity,k.events=this.veroldEntity.veroldEngine.globalEvents,!this.veroldEntity.getParentAsset().loadComponents){if(this.trigger("add",d),a.isFunction(g))return g(k);return}if(this.veroldEntity.veroldEngine.componentSettings.runtime?"function"==typeof k.preInit&&k.preInit():this.veroldEntity.veroldEngine.componentSettings.editor&&"function"==typeof k.preInitEditor&&k.preInitEditor(),this._buildEvents(j),"pending"!==this.veroldEntity.state_base&&this.loadComponent(d),this.trigger("add",d),a.isFunction(g))return g(k)}catch(e){console.error("Error while creating component: "+i),console.error(e.stack)}},this)}):(console.info("Skipping component: "+d+" using script "+j.getName()),this.trigger("add",d),null):void console.warn("Unable to find script asset for "+b))},loadComponent:function(b){var c=this.components[b];if(!c)return void console.warn("Trying to load component, "+b+", that doesn't exist for entity, "+this.veroldEntity.id);var d=this.veroldEntity.veroldEngine.assetRegistry.getAssetById(c.__verold__.scriptId),e=d.getDefaultComponentData(),f=a.extend(e||{},a.deepClone(c.__verold__.componentData)),i=this;if(this.veroldEntity.veroldEngine.componentSettings.runtime){if("function"==typeof c.init&&(this._buildAttributes(d,f,c),c.init()),a.each(h,function(a,b){"function"==typeof c[a]&&this.veroldEntity.veroldEngine.on(b,c[a],c)},this),a.each(g,function(a,b){"function"==typeof c[a]&&this.veroldEntity.on(b,c[a],c)},this),"function"==typeof c.objectCreated&&("loaded"===this.veroldEntity.state_base?c.objectCreated():this.veroldEntity.once("load_base",c.objectCreated,c)),"function"==typeof c.componentsLoaded&&("loaded"===this.veroldEntity.state_components?c.componentsLoaded():this.veroldEntity.once("load_components",c.componentsLoaded,c)),"function"==typeof c.objectLoaded&&("loaded"===this.veroldEntity.state_base&&"loaded"===this.veroldEntity.state_hierarchy?c.objectLoaded():this.veroldEntity.once("load_base_and_hierarchy",c.objectLoaded,c)),"function"==typeof c.sceneLoaded){var j=this.veroldEntity.getParentAsset();j.isLoaded()?c.sceneLoaded():j.once("load",c.sceneLoaded,c)}"function"==typeof c.enabled&&c.listenTo(c,"enable",c.enabled),"function"==typeof c.disabled&&c.listenTo(c,"disable",c.disabled)}else if(this.veroldEntity.veroldEngine.componentSettings.editor){if("function"==typeof c.editorInit)try{i._buildAttributes(d,f,c),c.editorInit()}catch(k){console.error("Failed to start editor component, error caught: ",k.message)}d&&"function"==typeof c.reload&&d.on("script_changed",c.reload,c)}},unloadComponent:function(b){var c,d;if(this.components){if(a.isObject(b)?a.each(this.components,function(a,d){c||a!==b||(c=a,b=d)},this):c=this.components[b],!a.isObject(c))return;d=this.veroldEntity.veroldEngine.assetRegistry.Scripts.assets[c.__verold__.scriptId];try{if(!this.veroldEntity||!this.veroldEntity.veroldEngine)return;if(this.veroldEntity.veroldEngine.componentSettings.runtime?(a.each(h,function(a,b){"function"==typeof c[a]&&this.veroldEntity.veroldEngine.off(b,c[a],c)},this),a.each(g,function(a,b){"function"==typeof c[a]&&this.veroldEntity.off(b,c[a],c)},this),"pending"!==this.veroldEntity.state_base&&"function"==typeof c.shutdown&&c.shutdown()):this.veroldEntity.veroldEngine.componentSettings.editor&&(this._offloadEvents(d),"pending"!==this.veroldEntity.state_base&&"function"==typeof c.editorShutdown&&c.editorShutdown(),d&&"function"==typeof c.reload&&d.off("script_changed",c.reload,c)),"function"==typeof c.stopListening&&c.stopListening(),"function"==typeof c.objectCreated&&this.veroldEntity.off("load_base",c.objectCreated,c),"function"==typeof c.componentsLoaded&&this.veroldEntity.off("load_components",c.componentsLoaded,c),"function"==typeof c.objectLoaded&&this.veroldEntity.off("load_base_and_hierarchy",c.objectLoaded,c),"function"==typeof c.sceneLoaded){var e=this.veroldEntity.getParentAsset();e.off("load_base_and_hierarchy",c.sceneLoaded,c)}"function"==typeof c.init&&this.veroldEntity.off("load_started",c.init,c)}catch(f){console.error("Error while destroying component: "+c.__verold__.scriptName),console.error(f.stack)}}},_removeComponent:function(a){if(this.components[a]){var b=this.components[a];this.components[a]=void 0,delete this.components[a],b.veroldEntity=void 0,b.events=void 0,b.__verold__=void 0,this.trigger("remove",a)}},unloadComponents:function(){this.veroldEntity.getParentAsset().loadComponents&&a.each(this.components,function(a,b){this.unloadComponent(b)},this)},loadComponents:function(){this.veroldEntity.getParentAsset().loadComponents&&a.each(this.components,function(a,b){this.loadComponent(b)},this),this.veroldEntity.trigger("load_components")},get:function(b){var c=[];if(a.isString(b)){var d=b;return this.components[d]?[this.components[d]]:(a.each(["scriptName","scriptId"],function(a){if(c.length<1){var b={};b[a]=d,c=this.get(b)}},this),c)}return a.isObject(b)&&a.size(b)?(this.components&&a.each(this.components,function(d){var e=!0;d&&(a.each(b,function(a,b){d.__verold__[b]!==a&&(e=!1)}),e&&c.push(d))}),c):[]},all:function(){return a.toArray(this.components)},first:function(b){return a.first(b?this.get(b):this.all())},each:function(b,c){return a.each(this.components,b,c)}}),window.VAPI=window.VAPI||{},window.VAPI.ComponentManager=f,f}),define("VeroldEngine/VeroldEntity",["underscore","backbone","three","async","VeroldEngine/libs/uuid","VeroldEngine/models/entity","VeroldEngine/Materials/EngineMaterials","VeroldEngine/Components/ComponentManager"],function(a,b,c,d,e,f,g,h){var i=function(){this.veroldEngine=void 0,this.id=void 0,this.type=void 0,this.componentManager=void 0,this.state_base="pending",this.state_hierarchy="pending",this.state_components="pending",this.state_dependencies="pending",this.threeData=null,this.entityModel=void 0,this.loadingProgress={},this.threeData=void 0,this.events={}};return i.prototype={events:{load:{params:[],action:!1,category:"Loading"},load_base:{params:[],action:!1,category:"Loading"},load_hierarchy:{params:[],action:!1,category:"Loading"},startTimer:{params:[{name:"time",description:"The time (in seconds) that will elapse before the 'endTimer' event is fired.",type:"f","default":5}],action:!0,category:"General"},endTimer:{params:[],action:!1,category:"General"}},initialize:function(a){if(!a.veroldEngine||!a.entityModel)return console.error("Can't create an asset/object without an engine reference or a backbone model."),!1;this.veroldEngine=a.veroldEngine,this.isVeroldEntity=!0,this.state_base="pending",this.state_hierarchy="pending",this.state_dependencies="pending",this.id=a.entityModel.get("id"),this.type=a.entityModel.get("type"),this.entityModel=a.entityModel;var b=this.entityModel.get("payload");b||(b={},this.entityModel.set({payload:b},{silent:!0})),void 0===b.visible&&(b.visible=!0);var c=this.entityModel.get("components");c||this.entityModel.set({components:{}},{silent:!0}),this.entityModel.on("change:name",this.onEntityNameChanged,this),this.entityModel.on("change:payload.*",this.onEntityPayloadChanged,this),this.entityModel.on("change:children.*",this.onEntityChildrenChanged,this),this.entityModel.isPersistent!==!1&&(this.entityModel.isPersistent=!0),this.on("startTimer",this.startTimer,this),this.on("load_base",this.onLoadBase,this),this.on("load_hierarchy",this.onLoadHierarchy,this),this.on("load_dependencies",this.onLoadDependencies,this),this.on("load_hierarchy_failure",this.onLoadHierarchyFailure,this),this.on("load_base_failure",this.onLoadBaseFailure,this),this.on("load_components",this.onLoadComponents,this),this.veroldEngine.on("scriptDeleted",this.onScriptDeleted,this)},uninitialize:function(){this.stopListening(),this.off("startTimer",this.startTimer,this),this.off("load_base",this.onLoadBase,this),this.off("load_hierarchy",this.onLoadHierarchy,this),this.off("load_dependencies",this.onLoadDependencies,this),this.off("load_hierarchy_failure",this.onLoadHierarchyFailure,this),this.off("load_base_failure",this.onLoadBaseFailure,this),this.off("load_components",this.onLoadComponents,this),this.veroldEngine.off("scriptDeleted",this.onScriptDeleted,this),this.entityModel.off("change:name",this.onEntityNameChanged,this),this.entityModel.off("change:payload.*",this.onEntityPayloadChanged,this),this.entityModel.off("change:children.*",this.onEntityChildrenChanged,this),this.componentManager&&(this.entityModel.off("change:components.*",this.componentManager.onEntityComponentsChanges,this.componentManager),this.componentManager.unloadComponents(),this.componentManager=null),this._uninitPrefabBindings(),this.unload(),this.entityModel.veroldEngine=void 0,this.entityModel=void 0,this.loadingProgress=void 0,this.id=void 0,this.type=void 0,this.state_base="pending",this.state_hierarchy="pending",this.state_dependencies="pending",this.threeData=void 0,this.veroldEngine=void 0},initializeComponents:function(){this.componentManager||(this.componentManager=new h({veroldEntity:this}),this.entityModel.on("change:components.*",this.componentManager.onEntityComponentsChanges,this.componentManager),this.componentManager.initialize())},startTimer:function(a){function b(e){d+=e,d>=a&&(c.veroldEngine.off("update",b,c),c.trigger("endTimer"))}var c=this,d=0;this.veroldEngine.on("update",b,this)},onScriptDeleted:function(b){if(this.componentManager){var c=this.getComponentsByScriptId(b);a.each(c,function(a,b){console.log("Removing component from "+this.type+", "+this.id+", because the script asset has been deleted."),this.removeComponent(b,{save:!0})},this)}},registerDependency:function(a){var b=this.getParentAsset();b.registerDependency(a)},traverse:function(a){var b=this.getParentAsset(),c=this.entityModel.get("children");for(var d in c)if(c[d]){var e=b.getObjectById(d);if(e){var f=a(e,this);if(f)break;e.traverse(a)}}},isMatch:function(b){if(!a.isObject(b))return!0;for(var c in b){var d=b[c];if(void 0!==d)if(a.isArray(d)){for(var e in d)if(this.entityModel.get(c)===d[e]||this.entityModel[c]===d[e])return!0}else if(this.entityModel.get(c)===d||this.entityModel[c]===d)return!0}return!1},getThreeData:function(a){return this.threeData||this.load(a),this.threeData},getEntityModel:function(){return this.entityModel},getObject:function(a){var b=null;return this.traverse(function(c){return c.isMatch(a)?(b=c,1):void 0}),b},getObjectById:function(){console.warn("VeroldEntity.getObjectById(id) must be implemented by derrived class.")},getObjectByName:function(a){var b=this.getObjects({name:a});return b&&b.length?b[0]:null},getObjectsByName:function(a){var b=this.getObjects({name:a});return b},getObjects:function(a){var b=[];return this.traverse(function(c){c.isMatch(a)&&b.push(c)}),b},getChildById:function(a){return this.entityModel.get("children")[a]?this.getParentAsset().getObjectById(a):null},getDescendants:function(a){return console.log("getDescendants is deprecated. Please use getObjects instead."),this.getObjects(a)},getDecendants:function(a){return this.getDescendants(a)},getDescendantByName:function(){return this.getDescendants({name:"name"})[0]},getChildren:function(b){var c={},d=this.entityModel.get("children");return b?a.each(d,function(a,d){if(a){var e=this.getChildById(d);e.isMatch(b)&&(c[e.id]=e)}},this):a.each(d,function(a,b){if(a){var d=this.getChildById(b);c[d.id]=d}},this),c},getParentAsset:function(){var a=this.entityModel.get("parentAssetId");return this.entityModel.isAsset()?this:a?this.veroldEngine.assetRegistry.getAssetById(a):null},getParentObject:function(){var a=this.getParentAsset(),b=a.getObjectById(this.entityModel.get("parentId"));return b},getPrefabInstanceTop:function(){if(this.isPrefabInstanceTop())return this;var a=this.entityModel.get("prefabInstanceId");return a?this.getParentAsset().getObjectById(a):null},getPrefabAsset:function(){var a=this.entityModel.get("prefabAssetId");return a?this.veroldEngine.assetRegistry.getAssetById(a):null},getPrefabObject:function(){var a=this.entityModel.get("prefabObjectId");if(a){var b=this.getPrefabAsset();if(b){if(a===b.id)return b;var c=b.getObjectById(a);return c||console.warn("VeroldEntity.getPrefabObject(): The prefab object being requested doesn't exist in its parent asset. Either the ID is invalid or the asset hasn't been loaded yet."),c}console.error(this.veroldEngine.engineName+" - VeroldEntity.getPrefabObject() - The instance object doesn't have a valid prefab defined or isn't tied to a prefab.")}return null},getSourceAssetId:function(){return this.entityModel.get("sourceAssetId")},getSourceAsset:function(){var a=this.entityModel.get("sourceAssetId");return a?this.veroldEngine.assetRegistry.getAssetById(a):null},getSourceObjectId:function(){return this.entityModel.get("sourceObjectId")},getSourceObject:function(){var a=this.entityModel.get("sourceObjectId");if(a){var b=this.getSourceAsset();if(b){if(a===b.id)return b;var c=b.getObjectById(a);return c||console.warn("VeroldEntity.getSourceObject(): The source object being requested doesn't exist in its parent asset. Either the ID is invalid or the asset hasn't been loaded yet."),c}console.warn(this.veroldEngine.engineName+" - VeroldEntity.getSourceObject() - The instance object doesn't have a valid source asset defined.")}return null},isInstance:function(){var a=this.entityModel.get("sourceAssetId");return a?!0:!1},isPrefabInstance:function(){var a=this.entityModel.get("prefabAssetId");return a?!0:!1},isPrefabInstanceTop:function(){return this.entityModel.get("prefabObjectId")&&this.entityModel.get("prefabObjectId")===this.entityModel.get("prefabAssetId")?!0:!1},isComponentsLoaded:function(){return!this.veroldEngine.componentSettings.enabled||"loaded"===this.state_components},when:function(b,c,d){a.isFunction(c)&&("load"===b&&this.isLoaded()||"load_base"===b&&this.isBaseLoaded()||"load_hierarchy"===b&&this.isHierarchyLoaded()||"load_dependencies"===b&&this.isDependenciesLoaded()||"load_components"===b&&this.isComponentsLoaded()?c.call(d,this):this.once(b,c,d))},onLoadBase:function(){if(this.state_base="loaded","loaded"===this.state_hierarchy&&this.trigger("load_base_and_hierarchy",this),("loaded"===this.state_dependencies||"failed"===this.state_dependencies)&&(this.trigger("load_base_and_dependencies",this),"loaded"===this.state_hierarchy&&this.isComponentsLoaded())){var a=this;setTimeout(function(){a.entityModel&&a.trigger("load",a)},0)}},onLoadHierarchy:function(){if(this.state_hierarchy="loaded","loaded"===this.state_base&&this.trigger("load_base_and_hierarchy",this),("loaded"===this.state_dependencies||"failed"===this.state_dependencies)&&(this.trigger("load_hierarchy_and_dependencies",this),"loaded"===this.state_base&&this.isComponentsLoaded())){var a=this;setTimeout(function(){a.entityModel&&a.trigger("load",a)},0)}},onLoadDependencies:function(){if(this.state_dependencies="loaded","loaded"===this.state_base&&(this.trigger("load_base_and_dependencies",this),"loaded"===this.state_hierarchy&&(this.trigger("load_hierarchy_and_dependencies",this),this.isComponentsLoaded()))){var a=this;setTimeout(function(){a.entityModel&&a.trigger("load",a)},0)}},onLoadComponents:function(){if(this.state_components="loaded","loaded"===this.state_base&&"loaded"===this.state_hierarchy&&"loaded"===this.state_dependencies){var a=this;setTimeout(function(){a.entityModel&&a.trigger("load",a)},0)}},onLoadBaseFailure:function(){this.state_base="failed"},onLoadHierarchyFailure:function(){this.state_hierarchy="failed"},onLoadDependenciesFailure:function(){this.state_dependencies="failed","loaded"===this.state_base&&(this.trigger("load_base_and_dependencies",this),"loaded"===this.state_hierarchy&&(this.trigger("load_hierarchy_and_dependencies",this),this.isComponentsLoaded()&&this.trigger("load",this)))},load:function(a){a||(a={}),(a.success||a.success_base||a.success_hierarchy||a.failure)&&console.error("Passing in deprecated callback names to 'load' method!!!"),a.load&&this.listenToOnce(this,"load",function(){a.load(this)}),a.load_base&&this.listenToOnce(this,"load_base",function(){a.load_base(this)}),a.load_base_and_hierarchy&&this.listenToOnce(this,"load_base_and_hierarchy",function(){a.load_base_and_hierarchy(this)}),a.load_base_and_dependencies&&this.listenToOnce(this,"load_base_and_dependencies",function(){a.load_base_and_dependencies(this)}),a.load_hierarchy&&this.listenToOnce(this,"load_hierarchy",function(){a.load_hierarchy(this)}),a.load_hierarchy_and_dependencies&&this.listenToOnce(this,"load_hierarchy_and_dependencies",function(){a.load_hierarchy_and_dependencies(this)}),a.load_dependencies&&this.listenToOnce(this,"load_dependencies",function(){a.load_dependencies(this)}),a.load_components&&this.listenToOnce(this,"load_components",function(){a.load_components(this)}),a.load_base_failure&&this.listenToOnce(this,"load_base_failure",function(){a.load_base_failure(this)}),a.load_hierarchy_failure&&this.listenToOnce(this,"load_hierarchy_failure",function(){a.load_hierarchy_failure(this)}),a.load_dependencies_failure&&this.listenToOnce(this,"load_dependencies_failure",function(){a.load_dependencies_failure(this)});var b=this;this.once("load",function(){var a=b.getParentAsset();a.trigger("objectLoaded",b)},this),this.load_base(),this.load_hierarchy(),this.load_dependencies()},reset:function(){},getDataSizeTotalDownload:void 0,getDataSizeTotalInMemory:void 0,getDataSizeGeometryDownload:void 0,getDataSizeGeometryInMemory:void 0,getDataSizeTextureDownload:void 0,getDataSizeTextureInMemory:void 0,getDataSizeAnimationDownload:void 0,getDataSizeAnimationInMemory:void 0,getListOfReferencedGeometries:function(){var b={},c=this.entityModel.get("children");return a.each(c,function(c,d){if(c){var e=this.getChildById(d);if(e){var f=e.getListOfReferencedGeometries();a.each(f,function(a,c){b[c]=f[c]},this)}}},this),b},getListOfReferencedTextures:function(){var b={},c=this.entityModel.get("children");return a.each(c,function(c,d){if(c){var e=this.getChildById(d);if(e){var f=e.getListOfReferencedTextures();a.each(f,function(a,c){b[c]=f[c]},this)}}},this),b},load_base:function(){if("loaded"===this.state_base)this.trigger("load_base",this);else if("pending"===this.state_base){this.state_base="loading",this.trigger("load_started",this),this.componentManager.loadComponents();var a=this.entityModel.toJSON();if(this.isInstance()){var b=this.getSourceObject();if(!b)return void this.trigger("load_base_failure",this)}this._loadThreeData(a)}},load_dependencies:function(){this.trigger("load_dependencies",this)},clearComponents:function(a){this.set({components:{}},a)},_linkupComponentReferences:function(b){var c=this.getPrefabInstanceTop();if(c){var d=c.getPrefabIdMapping();a.each(b,function(c,e){a.isArray(c)?a.each(c,function(a,c){d[a]&&(b[e][c]=d[a])}):a.isString(c)&&d[c]&&(b[e]=d[c])})}},revertComponentsToPrefab:function(b){var c=this.getPrefabObject();if(c){var d={},e=this.entityModel.get("components"),f=c.entityModel.get("components");this.clearComponents(),a.each(e,function(a,b){f[b]&&(d[b]={scriptId:f[b].scriptId,componentData:{}})},this),a.each(f,function(a,b){d[b]||(d[b]={scriptId:a.scriptId,componentData:{}})},this),this.set({components:d},b)}},revertToPrefab:function(b){var c=this,e=this.getPrefabObject();if(e){var f=!1,g=this.isPrefabInstanceTop(),h=this.entityModel.get("payload"),i=(e.entityModel.get("payload"),{});a.each(h,function(a,b){(!g||"position"!==b&&"orientation"!==b)&&(f=!0,i[b]=void 0)},this),g&&(i.position=h.position,i.orientation=h.orientation),this.revertComponentsToPrefab(),this.set({payload:i},{save:b?b.save&&f:!1,success:function(){if(b&&!b.nonRecursive){var e=c.entityModel.get("children"),f=a.keys(e);d.forEach(f,function(a,d){if(e[a]){var f=c.getParentAsset().getObjectById(a);f?f.revertToPrefab({save:b.save,success:function(){d()},failure:function(){d()}}):d()}else d()},function(){c._revertChildrenToPrefab(b)})}else b&&b.success&&b.success(c)}})}else b&&b.failure&&b.failure()},revertAllToPrefab:function(a){var b=this.getPrefabInstanceTop();b&&(a&&a.nonRecursive&&delete a.nonRecursive,b.revertToPrefab(a))},_revertChildrenToPrefab:function(b){var c=this,e={},f=this.getPrefabObject(),g=this.getPrefabAsset();if(f){var h=this._determineChildDifferences(f),i=a.keys(h);d.forEach(i,function(a,d){if(h[a])e["children."+a]=!1,d();else{var f=c.getParentAsset(),i=g.getObjectById(a);i.copyTo(f.id,{persistent:c.entityModel.isPersistent,save:b.save,success:function(a){g.linkupPrefab(a,i,{save:b.save,prefabInstanceId:c.entityModel.get("prefabInstanceId")}),e["children."+a.id]=!0,d()}})}},function(){a.isEmpty(e)?b&&b.success&&b.success():c.set(e,b)})}else b&&b.success&&b.success()},_determineChildDifferences:function(b){var c=this.entityModel.get("prefabAssetId"),d=b.entityModel.get("children"),e=this.entityModel.get("children"),f={},g={};return a.each(e,function(a,b){if(a){var e=this.getParentAsset().getObjectById(b);if(e){var h=e.entityModel.get("prefabObjectId"),i=e.entityModel.get("prefabAssetId");h&&i===c&&d[h]?g[h]=e:f[b]=!0}}},this),a.each(d,function(a,c){if(a){var d=b.getParentAsset().getObjectById(c);d&&!g[c]&&(f[c]=!1)}},this),f},pushToPrefab:function(b){this.dontAcceptPrefabUpdates=!0;var c=this,e=this.getPrefabObject();e&&c._pushChildrenToPrefab(e,{save:b?b.save:!1,success:function(){e.copyProperties(c,{success:function(){e.copyComponents(c,{success:function(){var f=[],g=e.entityModel.get("components"),h=c.entityModel.get("components");a.each(g,function(a,b){h[b]||f.push("components."+b)},c);for(var i=0;i<f.length;i++)e.unset(f[i],{save:!1});b&&b.save&&e.save({success:function(){c.revertToPrefab({save:b?b.save:!1,nonRecursive:!0,success:function(){var e=c.entityModel.get("children"),f=a.keys(e);b&&b.nonRecursive&&(f={}),d.forEach(f,function(a,d){if(e[a]){var f=c.getParentAsset().getObjectById(a);f?f.pushToPrefab({save:b?b.save:!1,nonRecursive:!1,success:function(){d()}}):d()}else d()},function(){b&&b.success&&(c.dontAcceptPrefabUpdates=!1,b.success())})}})}})}})}})}})},pushAllToPrefab:function(a){var b=this.getPrefabInstanceTop();
b&&(a&&a.nonRecursive&&delete a.nonRecursive,b.pushToPrefab(a))},_pushChildrenToPrefab:function(b,c){var e={},f=b.getParentAsset(),g=this,h=this._determineChildDifferences(b),i=a.keys(h);d.forEach(i,function(a,d){if(h[a]){var i=g.getParentAsset().getObjectById(a);i?i.copyTo(f.id,{persistent:f.entityModel.isPersistent,save:c.save,success:function(a){a.traverse(function(a){a.unset("prefabObjectId",{silent:!0}),a.unset("prefabAssetId",{silent:!0}),a.unset("prefabInstanceId",{silent:!0})}),a.unset("prefabObjectId",{silent:!0}),a.unset("prefabAssetId",{silent:!0}),a.unset("prefabInstanceId",{silent:!0}),f.linkupPrefab(i,a,{save:c.save,prefabInstanceId:g.entityModel.get("prefabInstanceId"),success:function(){b.addChild(a,{save:c.save,keepPrefabLinks:!0,success:function(){d()}})}})}}):d()}else e["children."+a]=!1,d()},function(){a.isEmpty(e)?c&&c.success&&c.success():b.set(e,c)})},copyProperties:function(b,c){var d={payload:{}},e=b.entityModel.get("payload"),f=this.entityModel.get("payload");a.extend(d.payload,f,e),this.set(d,c)},copyComponents:function(b,c){var d={components:{}},e=b.entityModel.get("components"),f=this.entityModel.get("components");a.extend(d.components,f,e),a.each(e,function(b,c){f[c]&&a.extend(d.components[c].componentData,f[c].componentData,b.componentData)},this),this.set(d,c)},mergeProperties:function(b,c){var d={payload:{}},e=b.entityModel.get("payload"),f=this.entityModel.get("payload");a.extend(d.payload,e,f),this.set(d,c)},mergeComponents:function(b,c){var d={components:{}},e=b.entityModel.get("components"),f=this.entityModel.get("components");a.extend(d.components,e,f),a.each(e,function(b,c){f[c]&&a.extend(d.components[c].componentData,b.componentData,f[c].componentData)},this),this.set(d,c)},_loadThreeData:function(a){function b(c){c.off("load_base",b,d),d.threeData=c.cloneThreeData(),d.threeData.veroldEntityId=d.id,d.threeData.name=d.entityModel.get("name"),d.applyPayloadSettings_loaded(a.payload),d.trigger("load_base",d);var e=d.getParentAsset();e.trigger("objectLoaded",d)}var d=this;if(this.isInstance()){this._initPrefabBindings();var e=d.getSourceObject();e.on("load_base",b,this),e.load()}else{this.threeData=new c.Object3D,this.threeData.veroldEntityId=this.id,this.threeData.name=this.entityModel.get("name"),this.applyPayloadSettings_loaded(a.payload),this.trigger("load_base",this);var f=this.getParentAsset();f.trigger("objectLoaded",this)}},_initPrefabBindings:function(){var a=this.getPrefabObject();a&&(a.entityModel.on("change:payload.*",this.onPrefabEntityPayloadChanged,this),a.entityModel.on("change:components.*",this.onPrefabEntityComponentsChanged,this),a.entityModel.on("change:children.*",this.onPrefabEntityChildrenChanged,this));var b=this.getSourceObject();b?b.on("load_progress_source",this.onSourceLoadProgress,this):console.error("Source object can't be found for instance "+this.type+", "+this.id)},_uninitPrefabBindings:function(){var a=this.getPrefabObject();a&&(a.entityModel.off("change:payload.*",this.onPrefabEntityPayloadChanged,this),a.entityModel.off("change:components.*",this.onPrefabEntityComponentsChanged,this),a.entityModel.off("change:children.*",this.onPrefabEntityChildrenChanged,this));var b=this.getSourceObject();b&&b.off("load_progress_source",this.onSourceLoadProgress,this)},isHierarchyFinished:function(){return"loaded"===this.state_hierarchy||"failure"===this.state_hierarchy},isBaseFinished:function(){return"loaded"===this.state_base||"failure"===this.state_base},isHierarchyFailed:function(){return"failure"===this.state_hierarchy},isBaseFailed:function(){return"failure"===this.state_base},onChildLoadProgress:function(){this.trigger("load_progress",this)},load_hierarchy:function(){if("loaded"===this.state_hierarchy)this.trigger("load_hierarchy",this);else if("pending"===this.state_hierarchy){var b=this;this.state_hierarchy="loading";var c=this.getParentAsset(),e=this.entityModel.get("children"),f=a.keys(e);d.forEach(f,function(a,d){var f=e[a];if(f){var g=c.getObjectById(a);if(g){g.set({parentId:b.id},{silent:!0});var h=!1;b.listenToOnce(g,"load_base",function(a){function c(){b.threeData.add(a.threeData),b.veroldEngine.needsRender=!0,"light"===a.type&&(console.log("A light was added to object "+b.id+" so we'll rebuild all shaders."),b.veroldEngine.trigger("rebuildMaterials")),"loaded"!==g.state_hierarchy||h||(h=!0,d())}"loaded"===b.state_base?c():(b.listenToOnce(b,"load_base",c),b.load_base())}),b.listenToOnce(g,"load_hierarchy",function(){"loaded"===g.state_base&&g.threeData.parent&&!h&&(h=!0,d())}),g.load()}else{console.warn("The "+b.type+", "+b.id+", has a child, "+a+", that can't be found.");var i="children."+a,j={};j[i]=!1,b.set(j,{silent:!0}),d()}}else d()},function(){b.trigger("load_hierarchy",b)})}},unload:function(b){b||(b={}),this.componentManager&&this.componentManager.unloadComponents(),"pending"!==this.state_base&&this.threeData&&this.threeData.parent&&this.threeData.parent.remove(this.threeData);var c=this,e=this.getParentAsset(),f=this.entityModel.get("children"),g=a.keys(f);d.forEach(g,function(a,c){if(f[a]){var d=e.getObjectById(a);d?b.nonRecursive?c():d.unload({success:function(){c()},failure:function(){console.warning("There was a problem unloading, ",d),c()}}):c()}else c()},function(){c.state_base="pending",c.state_hierarchy="pending",c.state_dependencies="pending",c.threeData=null,c.loadingProgress={base:0,hierarchy:0,dependencies:0},b&&b.success&&b.success(c)})},isLoaded:function(){return"loaded"===this.state_base&&"loaded"===this.state_hierarchy&&"loaded"===this.state_dependencies?!0:!1},isBaseLoaded:function(){return"loaded"===this.state_base?!0:!1},isHierarchyLoaded:function(){return"loaded"===this.state_hierarchy?!0:!1},isDependenciesLoaded:function(){return"loaded"===this.state_dependencies?!0:!1},isPersistent:function(){return this.entityModel.isPersistent?!0:!1},_generateUuid:function(){var a,b,c="";for(a=0;32>a;a++)b=16*Math.random()|0,(8===a||12===a||16===a||20===a)&&(c+="-"),c+=(12===a?4:16===a?3&b|8:b).toString(16);return c},applyPayloadSettings_loaded:function(a){if("pending"!==this.state_base&&a){var b,d;if(a){var e,f=this.getProperty("static");if(this.threeData.matrixAutoUpdate=!(f&&!this.veroldEngine.isEditor),this.threeData.rotationAutoUpdate=!(f&&!this.veroldEngine.isEditor),void 0!==this.threeData.position&&(b=this.getPosition(),this.threeData.position.set(b.x,b.y,b.z)),void 0!==this.threeData.quaternion&&(d=this.getQuaternion(),this.threeData.quaternion.set(d.x,d.y,d.z,d.w)),void 0!==this.threeData.scale){var g=this.getScale();this.threeData.scale.set(g.x,g.y,g.z)}if(a.hasOwnProperty("center")){var h=this.getCenter();h&&(this.threeData.center?this.threeData.center.set(h.x,h.y,h.z):this.threeData.center=new c.Vector3(h.x,h.y,h.z))}this.getProperty("editorOnly")&&!this.veroldEngine.isEditor&&(this.threeData.visible=!1),void 0!==this.threeData.visible&&(this.getProperty("editorOnly")?this.veroldEngine.isEditor&&(e=this.getProperty("visible"),void 0!==e&&(this.threeData.visible=e)):(e=this.getProperty("visible"),void 0!==e&&(this.threeData.visible=e))),void 0!==this.threeData.castShadow&&(e=this.getProperty("castShadow"),void 0!==e&&(this.threeData.castShadow=e)),void 0!==this.threeData.receiveShadow&&(e=this.getProperty("receiveShadow"),void 0!==e&&(this.threeData.receiveShadow=e)),void 0!==this.threeData.frustumCulled&&(e=this.getProperty("frustumCulled"),void 0!==e&&(this.threeData.frustumCulled=e)),f&&(this.threeData.matrixWorldNeedsUpdate=!0,this.threeData.updateMatrix())}}},applyPayloadSettings_unloaded:function(){},set:function(a,b){a.id&&this.id!==a.id&&console.warn(this.veroldEngine.engineName+":VeroldEntity - ID specified in JSON when calling 'set' doesn't match the ID of the object. Was this intended?"),this.entityModel.set(a,b),b&&(b.remote||b.silent||b.undo)||this.veroldEngine.globalEvents.trigger("entityPayloadChange",this.entityModel,a),b&&(b.save&&this.entityModel.isPersistent&&this.veroldEngine.isWritable?this.save(b):b.success&&b.success(this))},hardSet:function(b,c){var d=this.entityModel.get("children");this.entityModel.clearData(),a.each(d,function(a,c){a&&!b.children[c]&&this.entityModel.isValidEntityId(c)?b.children[c]=!1:a&&(b.children[c]=!0)},this),this.set(b,c)},hardSubSet:function(b,c,d){var e=this.entityModel.toJSON();a.isObject(e[b])&&a.each(e[b],function(a,b){void 0===c[b]&&(c[b]=void 0)},this);var f={};f[b]=c,this.set(f,d)},save:function(a){if(a||(a={}),this.entityModel.isPersistent&&window.socket){var b=this,c={};c.connectionId=window.socket?window.socket.io.engine.id:null,c.parentAssetId=this.getParentAsset().id,this.entityModel.save(c,{silent:!0,success:function(){a.success&&a.success(b)},error:function(c,d){a.failure&&a.failure(b),console.log(b.veroldEngine?b.veroldEngine.engineName:"Verold Engine:VeroldEntity - Object failed to save: ",c,d)}})}},unset:function(a,b){a.id&&this.id!==a.id&&console.warn(this.veroldEngine.engineName+":VeroldEntity - ID specified in JSON when calling 'unset' doesn't match the ID of the object. Was this intended?"),b||(b={}),this.entityModel.unset(a,b);b.save&&this.entityModel.isPersistent&&window.socket&&this.veroldEngine.isWritable?this.save(b):b.success&&b.success(this)},destroy:function(a){var b=this.getParentAsset();b.destroyObject(this.id,a)},clone:function(b){var c,e=this.getParentAsset(),f=this;if(b||(b={}),b.persistent&&!b.nonRecursive){var g={};g.connectionId=window.socket?window.socket.io.engine.id:null,g.parentAssetId=e.id,this.entityModel.getClone(g,function(a){c=a.id,a.veroldEngine=f.veroldEngine,f.veroldEngine.globalEvents.trigger("entityAddedChange",a),e.whenObjectRegistered(c,function(){var a=e.getObjectById(c);a.traverse(function(a){f.veroldEngine.globalEvents.trigger("entityAddedChange",a.entityModel)}),b.success&&b.success(a)})})}else{var h={};h.id=e.generateUniqueObjectID(b.id?b.id:this.entityModel.id),h.name=void 0!==b.name?b.name:this.entityModel.get("name"),b.keepPrefabLinks&&this.isPrefabInstance()||this.isPrefabInstanceTop()?(b.keepPrefabLinks=!0,h.prefabObjectId=this.entityModel.get("prefabObjectId"),h.prefabAssetId=this.entityModel.get("prefabAssetId"),this.isPrefabInstanceTop()&&(b.prefabInstanceId=h.id),h.prefabInstanceId=b.prefabInstanceId?b.prefabInstanceId:this.entityModel.get("prefabInstanceId")):this.isPrefabInstance()||(b.keepPrefabLinks=!1),h.type=this.entityModel.get("type"),h.sourceObjectId=this.entityModel.get("sourceObjectId"),h.sourceAssetId=this.entityModel.get("sourceAssetId"),h.payload=this.entityModel.clonePayload(),h.components=this.entityModel.cloneComponents(),e.createObject(h,{persistent:!1,success:function(c){var g=f.entityModel.get("children");if(g&&!b.nonRecursive){var h=a.keys(g);d.forEach(h,function(a,d){if(g[a]){var f=e.getObjectById(a);f.clone({persistent:!1,prefabInstanceId:b.prefabInstanceId,keepPrefabLinks:b.keepPrefabLinks,success:function(a){c.addChild(a,{keepPrefabLinks:b.keepPrefabLinks,success:function(){d()}})}})}},function(){b.success&&b.success(c)})}else b.success&&b.success(c)}})}},cloneThreeData:function(){if(this.threeData){var a=this.threeData.children;this.threeData.children=[];var b=this.threeData.clone();return this.threeData.children=a,b}},mirrorThreeData:function(b){function c(b,e){var f=b.children;b.children=[];var g=b.clone();return b.children=f,g.position=b.position,g.quaternion=b.quaternion,g.scale=b.scale,e&&a.each(f,function(a,b){var e=c(f[b],!0);g.add(e),d.veroldEngine.needsRender=!0},this),g}var d=this;if(this.threeData){var e=c(this.threeData,b.recursive);return e}},copyTo:function(a,b){var c=this.veroldEngine.assetRegistry.getAssetById(a);c?this.clone({persistent:b.persistent,save:b.save,success:function(c){c.moveTo(a,b)}}):console.warn("Non-existent asset specified in copyTo()")},moveTo:function(a,b){var c=this,e=this.veroldEngine.assetRegistry.getAssetById(a);if(e){if(this.id===a)return;var f=this.getParentAsset(),g=this.getParentObject();g&&g.removeChildById(this.id);var h=[this.id];this.traverse(function(a){h.push(a.id)}),this.entityModel.set({parentId:null},{silent:!0}),d.forEach(h,function(a,d){var g=f.getObjectById(a);f.entityModel.subEntities.remove(g.entityModel),e.entityModel.subEntities.add(g.entityModel),e.objects[g.id].uninitialize(),g.entityModel.veroldEngine=c.veroldEngine,e.objects[g.id]=g,b&&b.persistent&&g.entityModel.isPersistent?g.save({success:function(){console.log("Moved "+g.type+", "+g.id+", to new asset."),d()},failure:function(){console.error("Failed to moved "+g.type+", "+g.id+", to new asset."),d()}}):d()},function(){b.success&&b.success(c)})}else console.warn("Non-existent asset specified in moveTo()")},addChildById:function(a,b){function d(a,b,d){var e={};if(d.retainTransform&&f.threeData){var g=new c.Matrix4;if(g.getInverse(f.threeData.matrixWorld),a&&a.threeData){var h=new c.Matrix4;h.copy(a.threeData.matrixWorld),b.threeData&&b.threeData.applyMatrix(h)}var i=new c.Vector3,j=new c.Vector3,k=new c.Quaternion;if(b.threeData)b.threeData.applyMatrix(g),i.copy(b.threeData.position),j.copy(b.threeData.scale),k.copy(b.threeData.quaternion);else{var l=new c.Matrix4;i.copy(b.getPosition()),k.copy(b.getQuaternion()),j.copy(b.getScale()),l.compose(i,k,j),l.multiply(g),l.decompose(i,k,j)}e["payload.position"]={x:i.x,y:i.y,z:i.z},e["payload.orientation"]={x:k.x,y:k.y,z:k.z,w:k.w},e["payload.scale"]={x:j.x,y:j.y,z:j.z},e.parentId=f.id,b.set(e,{save:d.save,success:d.success})}else b.set({parentId:f.id},d)}function e(a,b,c){if(a&&a.id!==f.id){var d={};d[h]=!1,a.set(d,c)}else c&&c.success&&c.success(f)}var f=this,g=this.getParentAsset().getObjectById(a);if(g){if(a===this.id)return;b||(b={});var h="children."+a,i=g.getParentObject();e(i,g,{save:b.save,failure:function(){console.error("addChildById: Failed to remove new child from old parent. Aborting."),b&&b.failure&&b.failure(f)},success:function(){d(i,g,{save:b.retainTransform&&b.save,retainTransform:b.retainTransform,failure:function(){if(console.error("addChildById: Failed to set the transform of the new child. Reverting."),i){var a={};a[h]=!0,i.set(a,{save:b.save})}b&&b.failure&&b.failure(f)},success:function(){b.keepPrefabLinks||g.isPrefabInstance()&&!g.isPrefabInstanceTop()&&g.breakPrefabLink({save:b.save});var a={};a[h]=!0,f.set(a,{save:b.save,failure:function(){if(console.error("addChildById: Failed to add the new child. Reverting."),i){var a={};a[h]=!0,i.set(a,{save:b.save})}b&&b.failure&&b.failure(f)},success:function(){b&&b.success&&b.success(f)}})}})}})}else console.error(this.veroldEngine.engineName+" - VeroldEntity.addChildById - the object being added is not part of this asset. If it is an object from a different asset (e.g. scene, model, etc.), it must first be moved to this asset using moveTo()")},addChild:function(a,b){this.addChildById(a.id,b)},removeChildById:function(a,b){var c=this.getParentAsset().getObjectById(a);if(c)if(b||(b={}),this.entityModel.get("children")[c.id]){var d="children."+c.id,e={};e[d]=!1,this.set(e,b)}else console.warn(this.veroldEngine.engineName+" - VeroldEntity.removeChildById - the object is not a direct child of this object. If you're trying to delete the object, call destroyObject()");else console.warn(this.veroldEngine.engineName+" - VeroldEntity.removeChildById - the object being removed is not part of this asset.")},removeChild:function(a,b){this.removeChildById(a.id,b)},onEntityNameChanged:function(a,b){var c=a.changed;c.name&&this.threeData&&void 0!==this.threeData.name&&(this.threeData.name=b)},onEntityPayloadChanged:function(a){var b=a.changed;"loaded"===this.state_base&&(b.payload||(b.payload={}),this.applyPayloadSettings_loaded(b.payload)),this.applyPayloadSettings_unloaded(b.payload)},onEntityChildrenChanged:function(b){var c=b.changed,e=this,f=this.getParentAsset(),g=a.keys(c.children);d.forEach(g,function(a,b){var d=f.getObjectById(a);if(c.children[a]&&d){if(e.veroldEngine.isPrimaryEngine()&&d.registerInitialDependencies(),"pending"!==e.state_base){var g=!1;d.load({load_base:function(a){"loaded"!==e.state_base?a.listenToOnce(e,"load_base",function(){e.threeData.add(a.threeData),e.veroldEngine.needsRender=!0}):(e.threeData.add(a.threeData),e.veroldEngine.needsRender=!0),"light"===a.type&&(console.log("A light was added to object, "+e.id+", so we'll rebuild all shaders."),e.veroldEngine.trigger("rebuildMaterials")),"loaded"!==d.state_hierarchy||g||(g=!0,b())},load_hierarchy:function(){"loaded"===d.state_base&&d.threeData.parent&&!g&&(g=!0,b())}})}}else d&&(e.veroldEngine.isPrimaryEngine()&&d.unregisterInitialDependencies(),"pending"!==e.state_base&&(e.threeData.remove(f.objects[a].threeData),"light"===d.type&&(console.log("A light was removed from object, "+e.id+", so we'll rebuild all shaders."),e.veroldEngine.trigger("rebuildMaterials")))),b()},function(){e.trigger("load_hierarchy");var a=e.getParentObject();a&&"loaded"===a.state_hierarchy&&a.trigger("load_hierarchy")}),f.trigger("sizeNeedsUpdate",this)},onSourceLoadProgress:function(){this.trigger("load_progress",this)},onPrefabEntityPayloadChanged:function(b){if(!this.dontAcceptPrefabUpdates){var c=b.changed,d=this.entityModel.get("payload"),e={},f=this.isPrefabInstanceTop();a.each(c.payload,function(a,b){(!f||"position"!==b&&"orientation"!==b&&"scale"!==b)&&(void 0===d[b]||null===d[b])&&(e[b]=a)},this),"loaded"===this.state_base&&this.applyPayloadSettings_loaded(e),this.applyPayloadSettings_unloaded(e)}},onPrefabEntityComponentsChanged:function(b){if(!this.dontAcceptPrefabUpdates&&this.componentManager){var c=b.changed.components,d=this.getPrefabObject(),e=d.entityModel.get("components"),f=this.entityModel.get("components");f||(f={});var g={components:{}},h=[];a.each(c,function(b,c){return b?void(f[c]||(g.components[c]={scriptId:e[c].scriptId,componentData:{}})):void(f[c]&&a.isEmpty(f[c].componentData)&&h.push("components."+c))},this),h.length&&(a.each(h,function(a){this.unset(a)},this),a.isEmpty(g.components)&&this.save()),a.isEmpty(g.components)||this.set(g,{save:!0})}},onPrefabEntityChildrenChanged:function(){if(!this.dontAcceptPrefabUpdates){var b=this,c=this.getPrefabAsset(),d=this.veroldEngine.isWritable&&this.entityModel.isPersistent?!0:!1,e=this.getPrefabObject(),f=this._determineChildDifferences(e);a.each(f,function(a,e){if(a){var f=this.getParentAsset().getObjectById(e);f&&f.destroy()}else{var g=this.getParentAsset(),h=c.getObjectById(e);h.copyTo(g.id,{persistent:this.entityModel.isPersistent,save:d,success:function(a){c.linkupPrefab(a,h,{save:d,prefabInstanceId:b.entityModel.get("prefabInstanceId"),success:function(){b.addChild(a,{save:d,keepPrefabLinks:!0})}})}})}},this)}},generateUniqueObjectName:function(a){var b=this.getParentAsset();return b.generateUniqueObjectName(a)},generateUniqueObjectID:function(a){var b=this.getParentAsset();return b.generateUniqueObjectID(a)},alignToPosition:function(b,d,e){var f=this.getQuaternion(),g=this.getScale(),h=this.getCenter(),i=new c.Quaternion;i.set(f.x,f.y,f.z,f.w);var j=this.getProperty("boundingbox");if(!j)return void console.warn("No bounding box specified for "+this.type+" "+this.id+" so we can't align it.");var k={};k.min=new c.Vector3(j.min.x,j.min.y,j.min.z),k.max=new c.Vector3(j.max.x,j.max.y,j.max.z),k.min.applyQuaternion(i),k.max.applyQuaternion(i);var l=new c.Vector3(h.x,h.y,h.z);l.applyQuaternion(i),k.min.multiply(g),k.max.multiply(g),l.multiply(g),d&&a.each(d,function(a,c){var e=Math.min(k.min[c],k.max[c]),f=Math.max(k.min[c],k.max[c]),g=.5*d[c]+.5;b[c]-=(1-g)*e+g*f},this);var m={"payload.position":{x:b.x,y:b.y,z:b.z}};this.set(m,e)},getScale:function(){var a=this.getProperty("scale");return a?new c.Vector3(a.x,a.y,a.z):new c.Vector3(1,1,1)},setScale:function(a,b,c,d){void 0===c&&console.warn("Calling setScale with invalid arguments. Expected setScale( x, y, z, options )."),this.set({"payload.scale":{x:a,y:b,z:c}},d)},getName:function(){return this.entityModel.get("name")},setName:function(a,b){return this.set({name:a},b)},getDescription:function(){return this.entityModel.get("description")},setDescription:function(a,b){return this.set({description:a},b)},getPosition:function(a){var b=a;a||(b=new c.Vector3);var d=this.getProperty("position");return d&&b.copy(d),b},setPosition:function(a,b,c,d){void 0===c&&console.warn("Calling setPosition with invalid arguments. Expected setPosition( x, y, z, options )."),this.set({"payload.position":{x:a,y:b,z:c}},d)},getQuaternion:function(){var a=this.getProperty("orientation");return a?new c.Quaternion(a.x,a.y,a.z,a.w):new c.Quaternion},setQuaternion:function(a,b,c,d,e){void 0===d&&console.warn("Calling setQuaternion with invalid arguments. Expected setQuaternion( x, y, z, w, options )."),this.set({"payload.orientation":{x:a,y:b,z:c,w:d}},e)},getCenter:function(a){var b=a;a||(b=new c.Vector3);var d=this.getProperty("boundingbox");return d?(b.copy(d.min),b.add(d.max),b.multiplyScalar(.5)):b.set(0,0,0),b},getCenterInParentSpace:function(){var a=this.getCenter(),b=this.getQuaternion(),c=this.getScale(),d=this.getPosition();return a.multiply(c),a.applyQuaternion(b),a.add(d),a},setProperty:function(a,b,c){var d={};d["payload."+a]=b,this.set(d,c)},setPropertyRecursive:function(b,c,e){var f=this;if(e||(e={}),this.entityModel.isPersistent&&e.save){var g={};g[b]=c,this.entityModel.setPayloadRecursive(g,function(){e.success&&e.success(this)})}else this.setProperty(b,c,{success:function(){var g=a.keys(f.entityModel.get("children"));d.forEach(g,function(a,d){var e=f.getObjectById(a);e?e.setPropertyRecursive(b,c,{success:d}):d()},function(){e.success&&e.success(f)})}})},getProperty:function(a){var b=this.entityModel.get("payload");if(b&&void 0!==b[a])return b[a];var c=this.getPrefabObject();if(c)return c.getProperty(a);var d=this.getSourceObject();return d?d.getProperty(a):void 0},getPreviousProperty:function(a){var b=this.entityModel.previous("payload");if(b&&void 0!==b[a])return b[a];var c=this.getPrefabObject();if(c)return c.getPreviousProperty(a);var d=this.getSourceObject();return d?d.getPreviousProperty(a):void 0},setMaterialRecursive:function(b){this.setMaterial&&this.setMaterial(b);var c=this.getChildren();a.each(c,function(a){a.setMaterialRecursive(b)},this)},breakPrefabLink:function(b){if(!this.isPrefabInstance())return console.warn("breakPrefabLink: Can't call this on an entity that isn't an instance."),void(b&&b.success&&b.success());var c=this;b=b?b:{};var e=this.entityModel.get("children"),f=a.keys(e);d.forEach(f,function(a,d){if(e[a]&&!b.nonRecursive){var f=c.getParentAsset().getObjectById(a);f?f.breakPrefabLink({silent:b.silent,save:b.save,nonRecursive:b.nonRecursive,success:function(){d()},failure:function(){d()}}):d()}else d()},function(){c._uninitPrefabBindings(),c.mergeProperties(c.getPrefabObject(),{silent:b.silent}),c.mergeComponents(c.getPrefabObject());var a={};a.prefabInstanceId=void 0,a.prefabObjectId=void 0,a.prefabAssetId=void 0,c.set(a,{silent:!0,save:b.save,success:function(){b.success&&b.success()}})})},getPrefabIdMapping:function(){var a={};return this.traverse(function(b){b.getPrefabObject()&&(a[b.getPrefabObject().id]=b.id)}),a},scaleToSize:function(a,b){var c=this._determineScaleToSize(a),d={"payload.scale":{x:c,y:c,z:c}};this.set(d,b)},_determineScaleToSize:function(a){var b=this.getProperty("boundingbox");if(b){var d={};d.min=new c.Vector3(b.min.x,b.min.y,b.min.z),d.max=new c.Vector3(b.max.x,b.max.y,b.max.z);var e=d.min.distanceTo(d.max),f=a/e;return 0>=f&&(f=1),f}return console.warn("No bounding box specified for "+this.type+" "+this.id+" so we can't scale it."),1},updateGeometryLoadingProgress:void 0,updateTextureLoadingProgress:void 0,updateAnimationLoadingProgress:void 0,updateDependencyLoadingProgress:function(){this.loadingProgress.dependencies=0,a.each(this.dependencies,function(a){a.asset&&a.asset.loadingProgress&&(this.loadingProgress.dependencies+=a.asset.loadingProgress.base)},this)},getComponentData:function(b,c){var d=this.entityModel.get("components"),e=d[b];if(e){var f={},g=this.getPrefabObject();if(g){var h=g.getComponentData(b,c);h&&a.extend(f,a.deepClone(h))}return a.extend(f,a.deepClone(e.componentData)),this._linkupComponentReferences(f),c?f[c]:f}if(b)return null;var i={},j=this.getComponents();return a.each(j,function(a,b){i[b]=this.getComponentData(b)},this),i},getPreviousComponentData:function(b,c){var d=this.entityModel.previous("components"),e=d[b];if(e){var f={},g=this.getPrefabObject();if(g){var h=g.getPreviousComponentData(b,c);h&&a.extend(f,a.deepClone(h))}return a.extend(f,a.deepClone(e.componentData)),this._linkupComponentReferences(f),c?f[c]:f}if(b)return null;var i={},j=this.getComponents();return a.each(j,function(a,b){i[b]=this.getPreviousComponentData(b)},this),i},getComponentByScriptId:function(b){var c=this.getComponents({scriptId:b});return a.isEmpty(c)?null:a.values(c)[0]},getComponentsByScriptId:function(a){return this.getComponents({scriptId:a})},getComponentsByScriptName:function(a){return this.getComponents({scriptName:a})},getComponentById:function(a){return this.componentManager&&this.componentManager.components[a]?this.componentManager.components[a]:null},getComponents:function(b){if(b){var c={};return a.each(this.componentManager.components,function(a,d){(b.id===d||a&&(b.scriptName===a.__verold__.scriptName||b.scriptId===a.__verold__.scriptId))&&(c[d]=a)},this),c}return this.componentManager.components},getComponentsInHierarchy:function(b){var c={},d=this.getDescendants();return a.each(d,function(d){a.extend(c,d.getComponents(b))},this),c},addComponent:function(b,c,d,f){function g(b){b===h&&f&&a.isFunction(f.success)&&f.success(k.componentManager.components[h])}var h=d?d:e(),i={scriptId:b,componentData:c?c:{},enabled:!0},j=this.veroldEngine.assetRegistry.getAssetById(b);j&&j.entityModel.isBuiltIn&&(i.isBuiltIn=!0);var k=this,l={};l["components."+h]=i,this.componentManager.once("add",g,this),this.set(l,{save:f&&f.save?f.save:!1})},removeComponent:function(b,c){function d(d){b===d&&c&&a.isFunction(c.success)&&c.success(d)}a.isObject(b)&&a.each(this.componentManager.components,function(a,c){a===b&&(b=c)},this),this.componentManager.once("remove",d,this);var e="components."+b;this.unset(e,{save:c&&c.save?c.save:!1})},cleanupReferences:function(b){var c={},d=this,e=this.getParentAsset();if(!e||e.id!==this.entityModel.get("parentAssetId"))return void console.error("This object doesn't have a valid parentAssetId assigned to it. What's up wit' dat?");var f=!1,g=this.getParentObject();if(g){var h=g.getChildById(this.id);h||(f=!0)}else f=!0;f&&(e.traverse(function(a,b){a.id===d.id&&(c.parentId=b.id,f=!1)}),f&&a.each(e.objects,function(a){var b=a.getChildren();b[this.id]&&(c.parentId=a.id,f=!1)},this),f&&g?g.addChildById(this.id):this.set(c,b))},registerComponentEvent:function(a,b,c,d,e,f){if("other"===c)if(f&&f.length)for(var g=0;g<f.length;g++){var h=f[g],i=this.veroldEngine.assetRegistry.getPrototypeForType(h);i.events[a]={params:b,action:d,category:e}}else VAPI.VeroldEntity.prototype.events[a]={params:b,action:d,category:e};else this.events[a]={params:b,action:d,category:e}},removeComponentEvent:function(a,b){"other"===b?VAPI.VeroldObject.prototype.events[a]&&delete VAPI.VeroldObject.prototype.events[a]:this.events[a]&&delete this.events[a]},getEvents:function(){var b={};a.extend(b,b,this.events);for(var c=Object.getPrototypeOf(this);c;)c.hasOwnProperty("events")&&a.extend(b,b,c.events),c=Object.getPrototypeOf(c);return b}},a.extend(i.prototype,b.Events),window.VAPI=window.VAPI||{},window.VAPI.VeroldEntity=i,window.VAPI.VeroldObject=i,i}),define("VeroldEngine/Objects/VeroldObject",["underscore","three","VeroldEngine/VeroldEntity"],function(a,b,c){var d=function(){c.call(this),this._workVector3=new b.Vector3};return d.prototype=new c,d.prototype.events={toggleVisibility:{params:[],action:!0,category:"Rendering"},setVisible:{params:[],action:!0,category:"Rendering"},setInvisible:{params:[],action:!0,category:"Rendering"}},d.prototype.initialize=function(a){c.prototype.initialize.call(this,a),this.on("setVisible",this.setVisible,this),this.on("setInvisible",this.setInvisible,this),this.on("toggleVisibility",this.toggleVisibility,this)},d.prototype.uninitialize=function(a){c.prototype.uninitialize.call(this,a),this.off("setVisible",this.setVisible,this),this.off("setInvisible",this.setInvisible,this),this.off("toggleVisibility",this.toggleVisibility,this)},d.prototype.reset=function(){this.threeData&&(this.threeData.position.copy(this.getPosition()),this.threeData.quaternion.copy(this.getQuaternion()),this.threeData.scale.copy(this.getScale()))},d.prototype.alignToObject=function(c,d){var e;if(a.isString(c))e=this.veroldEngine.getEntityById(c);else{if(!(c instanceof VAPI.VeroldObject))return void console.warn("VeroldObject.alignToObject - You must pass this method either a valid object ID or a reference to a VeroldObject");e=c}if(e){var f,g=e.getPositionInWorldSpace(),h=this.getParentObject();if(h&&h.threeData)if(h.threeData.matrixWorldInverse)f=g.applyMatrix4(h.threeData.matrixWorldInverse);else{var i=new b.Matrix4;i.getInverse(h.threeData.matrixWorld),f=g.applyMatrix4(i)}else f=g;var j=e.getQuaternionInWorldSpace();if(h&&h.threeData&&h instanceof VAPI.VeroldObject){var k=h.getQuaternionInWorldSpace();j.multiply(k.inverse())}this.threeData&&(this.threeData.position.copy(f),this.threeData.quaternion.copy(j)),this.set({payload:{position:{x:f.x,y:f.y,z:f.z},orientation:{x:j.x,y:j.y,z:j.z,w:j.w}}},d)}},d.prototype.getPositionInWorldSpace=function(a){var c=a;return a||(c=new b.Vector3),this.threeData?(this.threeData.updateMatrixWorld(),c.setFromMatrixPosition(this.threeData.matrixWorld),c):(console.warn("getPositionInWorldSpace called before threeData has been loaded. Three.js data is currently required for world position to be calculated."),c)},d.prototype.getQuaternionInWorldSpace=function(a){var c=new b.Matrix4,d=a;return a||(d=new b.Quaternion),this.threeData?(this.threeData.updateMatrixWorld(),c.extractRotation(this.threeData.matrixWorld),d.setFromRotationMatrix(c),d):(console.warn("getRotationInWorldSpace called before threeData has been loaded. Three.js data is currently required for world position to be calculated."),d)},d.prototype.getCenterInWorldSpace=function(a){var c=a;return a||(c=new b.Vector3),this.getCenter(c),this.transformLocalToWorldSpace(c,c),c},d.prototype.transformLocalToWorldSpace=function(a,c){if(!a)return void console.warn("transformLocalToWorldSpace called without an local vector as input.");var d=c;return c||(d=new b.Vector3),d.copy(a),this.threeData?(this.threeData.updateMatrixWorld(),d.applyMatrix4(this.threeData.matrixWorld),d):(console.warn("transformLocalToWorldSpace called before threeData has been loaded. Three.js data is currently required for world position to be calculated."),d)},d.prototype.getObjectById=function(a){return this.getObject({id:a})},d.prototype.getDataSizeTotalDownload=function(a){a||(a={});var b=this.getDataSizeGeometryDownload(a);return b+=this.getDataSizeTextureDownload(a),0},d.prototype.getDataSizeTotalInMemory=function(){var a=this.getDataSizeGeometryInMemory();return a+=this.getDataSizeTextureInMemory(),0},d.prototype.getDataSizeGeometryDownload=function(){var b=this.getListOfReferencedGeometries(),c=0;return a.each(b,function(a){a&&(c+=a.getDataSizeGeometryDownload())},this),c},d.prototype.getDataSizeGeometryInMemory=function(){var b=this.getListOfReferencedGeometries(),c=0;return a.each(b,function(a){a&&(c+=a.getDataSizeGeometryInMemory())},this),c},d.prototype.getDataSizeTextureDownload=function(){var b=this.getListOfReferencedTextures(),c=0;return a.each(b,function(a){a&&(c+=a.getDataSizeTextureDownload())},this),c},d.prototype.getDataSizeTextureInMemory=function(){var b=this.getListOfReferencedTextures(),c=0;return a.each(b,function(a){a&&(c+=a.getDataSizeTextureInMemory())},this),c},d.prototype.registerInitialDependencies=function(b){var c=this.entityModel.get("children");a.each(c,function(a,c){if(a){var d=this.getParentAsset().getObjectById(c);d&&d.registerInitialDependencies(b)}},this)},d.prototype.unregisterInitialDependencies=function(b){var c=this.entityModel.get("children");
a.each(c,function(a,c){if(a){var d=this.getParentAsset().getObjectById(c);d&&d.unregisterInitialDependencies(b)}},this)},d.prototype.setVisibility=function(a,b){console.warn("setVisibility is deprecated. Please use setVisible and setInvisible."),this.setProperty("visible",a,{save:b})},d.prototype.setVisible=function(a){this.setProperty("visible",!0,a),this.veroldEngine.needsRender=!0},d.prototype.setInvisible=function(a){this.setProperty("visible",!1,a),this.veroldEngine.needsRender=!0},d.prototype.toggleVisibility=function(a){var b=this.getProperty("visible")?!1:!0;this.setProperty("visible",b,a),this.veroldEngine.needsRender=!0},window.VAPI=window.VAPI||{},window.VAPI.VeroldObject=d,d}),define("VeroldEngine/Objects/CameraObject",["underscore","three","VeroldEngine/Objects/VeroldObject"],function(a,b,c){var d={name:"Camera_With_No_Name",type:"PerspectiveCamera",orientation:{x:0,y:0,z:0,w:1},position:{x:5,y:5,z:5},fov:50,aspect:16/9,near:.01,far:12e3,right:1,left:-1,top:1,bottom:-1},e=function(){c.call(this)};return e.prototype=new c,e.prototype.events={},e.prototype._loadThreeData=function(a,b){this.isInstance()&&this._initPrefabBindings();var c=d.type,e=this.entityModel.get("payload");a.payload&&a.payload.type&&(c=e.type),this._createThreeCamera(c),this.threeData.veroldEntityId=this.id,e.fov=void 0!==a.payload.fov?a.payload.fov:d.fov,e.aspect=void 0!==a.payload.aspect?a.payload.aspect:d.aspect,e.near=void 0!==a.payload.near?a.payload.near:d.near,e.far=void 0!==a.payload.far?a.payload.far:d.far,e.left=void 0!==a.payload.left?a.payload.left:d.left,e.right=void 0!==a.payload.right?a.payload.right:d.right,e.top=void 0!==a.payload.top?a.payload.top:d.top,e.bottom=void 0!==a.payload.bottom?a.payload.bottom:d.bottom,this.applyPayloadSettings_loaded(e,b),this.trigger("load_base",this)},e.prototype.applyPayloadSettings_loaded=function(a){if(a){var d,e=this.entityModel.get("payload");a.type&&(d=e.type);var f=this.threeData instanceof b.PerspectiveCamera?"PerspectiveCamera":"OrthographicCamera";d&&d!==f&&this._createThreeCamera(d),"PerspectiveCamera"===f?(this.threeData.fov=a.fov?e.fov:this.threeData.fov,this.threeData.aspect=a.aspect?e.aspect:this.threeData.aspect,this.threeData.near=a.near?e.near:this.threeData.near,this.threeData.far=a.far?e.far:this.threeData.far):"OrthographicCamera"===f&&(this.threeData.near=a.near?e.near:this.threeData.near,this.threeData.far=a.far?e.far:this.threeData.far,this.threeData.left=a.left?e.left:this.threeData.left,this.threeData.right=a.right?e.right:this.threeData.right,this.threeData.top=a.top?e.top:this.threeData.top,this.threeData.bottom=a.bottom?e.bottom:this.threeData.bottom),this.threeData.updateProjectionMatrix(),c.prototype.applyPayloadSettings_loaded.call(this,a)}this.trigger("updated",this)},e.prototype._createThreeCamera=function(a){"PerspectiveCamera"===a?this.threeData=new b.PerspectiveCamera:"OrthographicCamera"===a&&(this.threeData=new b.OrthographicCamera)},window.VAPI=window.VAPI||{},window.VAPI.CameraObject=e,e}),define("VeroldEngine/Objects/LightObject",["underscore","three","VeroldEngine/Objects/VeroldObject"],function(a,b,c){var d={type:"DirectionalLight",color:12303291,intensity:1,position:{x:20,y:-20,z:20},target:null,distance:10,orientation:{x:0,y:0,z:0,w:1},scale:{x:1,y:1,z:1},castShadow:!1,shadowCameraNear:1.4,shadowCameraFar:50,shadowCameraLeft:-12,shadowCameraRight:12,shadowCameraTop:12,shadowCameraBottom:-12,shadowBias:-.0015,shadowDarkness:.5,shadowMapWidth:1024,shadowMapHeight:1024,shadowCameraVisible:!1,shadowCascade:!1,shadowCascadeCount:3,shadowCascadeNearZ:[-1,.9,.97],shadowCascadeFarZ:[.9,.97,.992],shadowCascadeWidth:[1024,1024,1024],shadowCascadeHeight:[1024,1024,1024],shadowCascadeBias:[-2e-4,-4e-4,-.001],shadowCascadeOffset:new b.Vector3(0,0,0)},e=function(){c.call(this)};return e.prototype=new c,e.prototype.events={setColor:{scope:"local",action:!0,category:"Materials",params:[{name:"value",type:"c",description:"The colour to set.","default":16711680},{name:"animationTime",type:"f",description:"The length of time that the change will take. i.e. this lets you animate the change.","default":0,min:0}]},setIntensity:{scope:"local",action:!0,category:"Materials",params:[{name:"value",type:"f",description:"The intensity to set.","default":1},{name:"animationTime",type:"f",description:"The length of time that the change will take. i.e. this lets you animate the change.","default":0,min:0}]}},e.prototype.initialize=function(a){c.prototype.initialize.call(this,a),this.on("setColor",this.setColor,this),this.on("setIntensity",this.setIntensity,this);var b=this.entityModel.get("payload");b.intensity=void 0!==b.intensity?b.intensity:d.intensity,b.distance=void 0!==b.distance?b.distance:d.distance,b.scale=void 0!==b.scale?b.scale:d.scale,b.shadowBias=void 0!==b.shadowBias?b.shadowBias:d.shadowBias,b.shadowMapWidth=void 0!==b.shadowMapWidth?b.shadowMapWidth:d.shadowMapWidth,b.shadowMapHeight=void 0!==b.shadowMapHeight?b.shadowMapHeight:d.shadowMapHeight,b.shadowCameraLeft=void 0!==b.shadowCameraLeft?b.shadowCameraLeft:d.shadowCameraLeft,b.shadowCameraRight=void 0!==b.shadowCameraRight?b.shadowCameraRight:d.shadowCameraRight,b.shadowCameraTop=void 0!==b.shadowCameraTop?b.shadowCameraTop:d.shadowCameraTop,b.shadowCameraBottom=void 0!==b.shadowCameraBottom?b.shadowCameraBottom:d.shadowCameraBottom,b.shadowCameraNear=void 0!==b.shadowCameraNear?b.shadowCameraNear:d.shadowCameraNear,b.shadowCameraFar=void 0!==b.shadowCameraFar?b.shadowCameraFar:d.shadowCameraFar,b.shadowCascade=void 0!==b.shadowCascade?b.shadowCascade:d.shadowCascade,b.shadowCascadeCount=void 0!==b.shadowCascadeCount?b.shadowCascadeCount:d.shadowCascadeCount,b.shadowCascadeNearZ=void 0!==b.shadowCascadeNearZ?b.shadowCascadeNearZ:d.shadowCascadeNearZ,b.shadowCascadeFarZ=void 0!==b.shadowCascadeFarZ?b.shadowCascadeFarZ:d.shadowCascadeFarZ,b.shadowCascadeWidth=void 0!==b.shadowCascadeWidth?b.shadowCascadeWidth:d.shadowCascadeWidth,b.shadowCascadeHeight=void 0!==b.shadowCascadeHeight?b.shadowCascadeHeight:d.shadowCascadeHeight,b.shadowCascadeBias=void 0!==b.shadowCascadeBias?b.shadowCascadeBias:d.shadowCascadeBias,b.shadowCascadeOffset=void 0!==b.shadowCascadeOffset?b.shadowCascadeOffset:d.shadowCascadeOffset},e.prototype.uninitialize=function(){this.off("setColor",this.setColor,this),this.off("setIntensity",this.setIntensity,this)},e.prototype._loadThreeData=function(a,b){this.isInstance()&&this._initPrefabBindings();var c=d.type,e=d.color;a.payload&&(c=this.getProperty("type"),e=this.getProperty("color")),this._createThreeLight(c,e),this.threeData.veroldEntityId=this.id,this.applyPayloadSettings_loaded(a.payload,b),this.threeData.shadowCameraVisible=!1,this.trigger("load_base",this)},e.prototype.applyPayloadSettings_loaded=function(d){if(d){var e,f=this.entityModel.get("payload");if(d.type){e=f.type;var g=this.threeData instanceof b.DirectionalLight?"DirectionalLight":null;g=this.threeData instanceof b.PointLight?"PointLight":g,g=this.threeData instanceof b.AmbientLight?"AmbientLight":g,g=this.threeData instanceof b.SpotLight?"SpotLight":g,g=this.threeData instanceof b.HemisphereLight?"HemisphereLight":g,e!==g&&this._createThreeLight(e,f.color)}var h=this.entityModel.get("payload").type;if("DirectionalLight"===h){if(this.threeData.intensity=void 0!==d.intensity?f.intensity:this.threeData.intensity,void 0!==d.target)if(a.isString(f.target)){var i=this,j=this.getParentAsset().getObjectById(f.target);j&&j.load({load_base:function(){i.threeData.target=j.threeData}})}else this.threeData.target=new b.Object3D;if(void 0!==d.shadowCameraNear&&(this.threeData.shadowCameraNear=f.shadowCameraNear,a.each(this.threeData.shadowCascadeArray,function(a){a.shadowCameraNear=f.shadowCameraNear},this)),void 0!==d.shadowCameraFar&&(this.threeData.shadowCameraFar=f.shadowCameraFar,a.each(this.threeData.shadowCascadeArray,function(a){a.shadowCameraFar=f.shadowCameraFar},this)),this.threeData.shadowCameraLeft=void 0!==d.shadowCameraLeft?f.shadowCameraLeft:this.threeData.shadowCameraLeft,this.threeData.shadowCameraRight=void 0!==d.shadowCameraRight?f.shadowCameraRight:this.threeData.shadowCameraRight,this.threeData.shadowCameraTop=void 0!==d.shadowCameraTop?f.shadowCameraTop:this.threeData.shadowCameraTop,this.threeData.shadowCameraBottom=void 0!==d.shadowCameraBottom?f.shadowCameraBottom:this.threeData.shadowCameraBottom,this.threeData.shadowBias=void 0!==d.shadowBias?f.shadowBias:this.threeData.shadowBias,this.threeData.shadowCascadeNearZ=void 0!==d.shadowCascadeNearZ?f.shadowCascadeNearZ:this.threeData.shadowCascadeNearZ,this.threeData.shadowCascadeFarZ=void 0!==d.shadowCascadeFarZ?f.shadowCascadeFarZ:this.threeData.shadowCascadeFarZ,this.threeData.shadowCascadeBias=void 0!==d.shadowCascadeBias?f.shadowCascadeBias:this.threeData.shadowCascadeBias,this.threeData.shadowCameraVisible=void 0!==d.shadowCameraVisible?f.shadowCameraVisible:this.threeData.shadowCameraVisible,(d.shadowMapWidth&&d.shadowMapWidth!==this.threeData.shadowMapWidth||d.shadowMapHeight&&d.shadowMapHeight!==this.threeData.shadowMapHeight)&&(this.threeData.shadowMapWidth=void 0!==d.shadowMapWidth?Math.min(f.shadowMapWidth,this.veroldEngine.getGPUCapability("MAX_TEXTURE_SIZE")):this.threeData.shadowMapWidth,this.threeData.shadowMapHeight=void 0!==d.shadowMapHeight?Math.min(f.shadowMapHeight,this.veroldEngine.getGPUCapability("MAX_TEXTURE_SIZE")):this.threeData.shadowMapHeight,this.disposeShadowMap()),d.shadowCascadeWidth||d.shadowCascadeHeight)for(var k=0;k<d.shadowCascadeWidth.length&&(this.threeData.shadowCascadeWidth[k]!==f.shadowCascadeWidth[k]||this.threeData.shadowCascadeHeight[k]!==f.shadowCascadeHeight[k]);k++)this.threeData.shadowCascadeWidth[k]=Math.min(f.shadowCascadeWidth[k],this.veroldEngine.getGPUCapability("MAX_TEXTURE_SIZE")),this.threeData.shadowCascadeHeight[k]=Math.min(f.shadowCascadeHeight[k],this.veroldEngine.getGPUCapability("MAX_TEXTURE_SIZE")),this.threeData.shadowCascadeArray[k]&&(this.threeData.shadowCascadeArray[k].shadowMapWidth=this.threeData.shadowCascadeWidth[k],this.threeData.shadowCascadeArray[k].shadowMapHeight=this.threeData.shadowCascadeHeight[k]),this.disposeShadowMapCascade();if(void 0!==d.castShadow&&this.threeData.castShadow!==d.castShadow)if(this.threeData.castShadow=d.castShadow,d.castShadow)this.threeData.shadowMap=null;else if(this.disposeShadowMap(),this.threeData.shadowCascade){if(this.threeData.parent){var l=this.threeData.parent;this.threeData.parent.remove(this.threeData),l.add(this.threeData)}this.disposeShadowMapCascade(),this.threeData.shadowCascadeArray=[]}if(void 0!==d.shadowCascadeOffset&&(this.threeData.shadowCascadeOffset.x=f.shadowCascadeOffset.x,this.threeData.shadowCascadeOffset.y=f.shadowCascadeOffset.y,this.threeData.shadowCascadeOffset.z=f.shadowCascadeOffset.z),void 0!==d.shadowCascade&&d.shadowCascade!==this.threeData.shadowCascade){if(this.threeData.shadowCascade=f.shadowCascade,this.threeData.parent){var l=this.threeData.parent;this.threeData.parent.remove(this.threeData),l.add(this.threeData)}this.threeData.shadowCascade?this.disposeShadowMap():(this.disposeShadowMapCascade(),this.threeData.shadowCascadeArray=[])}this.threeData.shadowCamera&&(this.threeData.shadowCamera.near=this.threeData.shadowCameraNear,this.threeData.shadowCamera.far=this.threeData.shadowCameraFar,this.threeData.shadowCamera.left=this.threeData.shadowCameraLeft,this.threeData.shadowCamera.right=this.threeData.shadowCameraRight,this.threeData.shadowCamera.top=this.threeData.shadowCameraTop,this.threeData.shadowCamera.bottom=this.threeData.shadowCameraBottom,this.threeData.shadowCamera.updateProjectionMatrix()),a.each(this.threeData.shadowCascadeArray,function(a){a.shadowCamera&&(a.shadowCamera.near=a.shadowCameraNear,a.shadowCamera.far=a.shadowCameraFar,a.shadowCamera.left=a.shadowCameraLeft,a.shadowCamera.right=a.shadowCameraRight,a.shadowCamera.top=a.shadowCameraTop,a.shadowCamera.bottom=a.shadowCameraBottom,a.shadowCamera.updateProjectionMatrix())},this)}else"PointLight"===h?(this.threeData.intensity=void 0!==d.intensity?f.intensity:this.threeData.intensity,this.threeData.distance=void 0!==d.scale?f.scale.x:this.threeData.distance):"AmbientLight"===h||"SpotLight"===h||"HemisphereLight"===h||console.error(this.veroldEngine.engineName+' - Invalid light type, "'+h+'"!');d.color&&this.threeData.color.setHex(f.color),c.prototype.applyPayloadSettings_loaded.call(this,d)}this.trigger("updated",this)},e.prototype.disposeShadowMap=function(){this.threeData.shadowMap&&(this.threeData.shadowMap.dispose(),this.threeData.shadowMap=void 0,this.threeData.cameraHelper&&this.threeData.cameraHelper.parent&&this.threeData.cameraHelper.parent.remove(this.threeData.cameraHelper),this.threeData.shadowCamera&&this.threeData.shadowCamera.parent&&this.threeData.shadowCamera.parent.remove(this.threeData.shadowCamera),this.threeData.shadowCamera=void 0,this.threeData.cameraHelper=void 0)},e.prototype.disposeShadowMapCascade=function(){a.each(this.threeData.shadowCascadeArray,function(a){a.shadowMap&&(a.shadowMap.dispose(),a.shadowMap=void 0,a.cameraHelper&&a.cameraHelper.parent&&a.cameraHelper.parent.remove(a.cameraHelper),a.shadowCamera&&a.shadowCamera.parent&&a.shadowCamera.parent.remove(a.shadowCamera),a.shadowCamera=void 0,a.cameraHelper=void 0)},this)},e.prototype._createThreeLight=function(a,c){this.threeData&&console.warn("TODO: Update referencers of this light!");var e=new b.Color(c);"DirectionalLight"===a?(this.threeData=new b.DirectionalLight(e),this.threeData.shadowCascade=d.shadowCascade,this.threeData.shadowCascadeCount=d.shadowCascadeCount,this.threeData.shadowCascadeNearZ=d.shadowCascadeNearZ,this.threeData.shadowCascadeFarZ=d.shadowCascadeFarZ,this.threeData.shadowCascadeWidth=d.shadowCascadeWidth,this.threeData.shadowCascadeHeight=d.shadowCascadeHeight,this.threeData.shadowCascadeBias=d.shadowCascadeBias,this.threeData.shadowCascadeOffset=new b.Vector3,this.threeData.shadowCascadeOffset.copy(d.shadowCascadeOffset)):"PointLight"===a?this.threeData=new b.PointLight(e):"AmbientLight"===a?this.threeData=new b.AmbientLight(e):"SpotLight"===a?this.threeData=new b.SpotLight(e):"HemisphereLight"===a&&(this.threeData=new b.HemisphereLight(e)),this.threeData.veroldEntityId=this.id,this.threeData.name=this.entityModel.get("name")},e.prototype.unload=function(a){this.threeData&&(this.threeData.shadowMap&&(console.log(this.veroldEngine.engineName+" - Deallocating shadow map texture for light "+this.entityModel.get("name")),this.disposeShadowMap()),this.threeData.shadowCascadeArray&&this.threeData.shadowCascadeArray.length>0&&(console.log(this.veroldEngine.engineName+" - Deallocating shadow cascade textures for light "+this.entityModel.get("name")),this.disposeShadowMapCascade())),c.prototype.unload.call(this,a)},e.prototype.setColor=function(a,b){function c(j){if(l+=j,l>b)k.veroldEngine.off("update",c,this),k.setProperty("color",a);else{var m=Math.min(l/b,1),n=(1-m)*g+m*d,o=(1-m)*h+m*e,p=(1-m)*i+m*f;k.threeData.color.setRGB(n,o,p)}}var d,e,f,g,h,i,j,k=this,l=0;b?(j=k.getProperty("color"),g=(j>>16&255)/255,h=(j>>8&255)/255,i=(255&j)/255,d=(a>>16&255)/255,e=(a>>8&255)/255,f=(255&a)/255,this.veroldEngine.on("update",c,this)):this.setProperty("color",a)},e.prototype.setIntensity=function(a,b){function c(g){if(f+=g,f>b)e.veroldEngine.off("update",c,this),e.setProperty("intensity",a);else{var h=Math.min(f/b,1),i=(1-h)*d+h*a;e.threeData.intensity=i}}var d,e=this,f=0;b?(d=e.getProperty("intensity"),this.veroldEngine.on("update",c,this)):this.setProperty("intensity",a)},window.VAPI=window.VAPI||{},window.VAPI.LightObject=e,e}),define("VeroldEngine/Util/BufferGeometryUtilities",["underscore","three"],function(a,b){var c=function(a){this.geometry=a};return c.prototype={constructor:c,computeTangents:function(){this.geometry.computeTangents(),this.fixZeroLengthTangents()},computeUVs:function(){var a,c,d,e=this.geometry,f=new b.Vector3;if(void 0===e.attributes.position)return void console.log("Missing required attribute: position.");c=e.attributes.position.array,d=c.length/3,a=new Float32Array(2*d);for(var g=0;d>g;++g)f.x=c[3*g],f.y=c[3*g+1],f.z=c[3*g+2],f.normalize(),f.addScalar(1),f.multiplyScalar(.5),a[2*g+0]=f.x,a[2*g+1]=f.y;e.addAttribute("uv",new b.BufferAttribute(a,2))},computeWireframeIndices:function(){var a,c=this.geometry.offsets,d=[];if(c&&this.geometry.attributes&&this.geometry.attributes.index&&this.geometry.attributes.index.array)for(var e=this.geometry.attributes.index.array,f=0;f<c.length;++f){var g=c[f],h=void 0!==g.polygonSize?g.polygonSize:3,i=3*(h-2),j=g.count/i;g.wireframe={start:d.length,count:j*h*2};for(var k=0;j>k;++k){d.push(e[g.start+k*i+0]),d.push(e[g.start+k*i+1]);for(var l=0;h-2>l;++l)d.push(d[d.length-1]),d.push(e[g.start+k*i+(3*l+2)]);d.push(d[d.length-1]),d.push(e[g.start+k*i+0])}}a=new Uint16Array(d.length);for(var m=0;m<d.length;++m)a[m]=d[m];this.geometry.addAttribute("index_wireframe",new b.BufferAttribute(a,1))},fixZeroLengthTangents:function(){var a,c,d,e=this.geometry,f=new b.Vector3,g=new b.Vector3;if(void 0===e.attributes.normal||void 0===e.attributes.tangent)return void console.warn("Missing required attributes: normal and tangent.");a=e.attributes.normal.array,c=e.attributes.tangent.array,d=c.length/4;for(var h=0;d>h;++h)if(g.x=c[4*h],g.y=c[4*h+1],g.z=c[4*h+2],0===g.lengthSq()){var i=0;f.x=a[3*h],f.y=a[3*h+1],f.z=a[3*h+2];for(var j=1;3>j;++j)Math.abs(f.getComponent(j))>Math.abs(f.getComponent(i))&&(i=j);swapIdx=(i+1)%3,g.set(0,0,0),g.setComponent(i,f.getComponent(swapIdx)),g.setComponent(swapIdx,-f.getComponent(i)),g.normalize(),c[4*h+0]=g.x,c[4*h+1]=g.y,c[4*h+2]=g.z}}},window.VAPI=window.VAPI||{},window.VAPI.BufferGeometryUtilities=c,c}),define("VeroldEngine/Loaders/BufferedBinaryLoader",["three","underscore","async","VeroldEngine/Util/BufferGeometryUtilities"],function(a,b,c,d){var e=function(a){this.veroldEngine=a};e.prototype.constructor=e,e.prototype.load=function(a,b,c,d){var e=this;i(this.veroldEngine,a,function(h,i){if(h)return console.warn("Error loading descriptor: ",h),b(null);var j=k(a)+"/";g(e.veroldEngine,j,i,d,1600,function(a,c){return a?(console.warn("Error loading attributes: "+a),b(null)):void b(f(e.veroldEngine,i,c))},c)})};var f=function(c,e,f){function g(a,b,c){var d,e,f=Math.min(b,c),g=a.length/b,h=new Float32Array(g*c);for(e=0;g>e;++e){for(d=0;f>d;++d)h[e*c+d]=a[e*b+d];for(;c>d;++d)h[e*c+d]=0}return h}var h,i,j,k=new a.BufferGeometry,l=new d(k);if(i={position:3,normal:3,tangent:4,color:4,uv:2,uv2:2,skinIndex:4,skinWeight:4},b.each(i,function(a,b){var c=f[b];void 0!==c&&c.itemSize!==a&&(c.array=g(c.array,c.itemSize,a),c.itemSize=a)}),b.each(f,function(b,c){k.addAttribute(c,new a.BufferAttribute(b.array,b.itemSize))}),k.drawcalls=e.offsets,k.offsets=e.offsets,k.bones=e.bones,k.bindPose=e.bind_pose,void 0===f.position&&k.addAttribute("position",new a.BufferAttribute(new Float32Array(0),3)),void 0===f.normal&&k.computeVertexNormals(),void 0===f.color){for(h=new Float32Array(f.position.array.length/3*4),j=0;j<h.length;++j)h[j]=1;k.addAttribute("color",new a.BufferAttribute(h,4))}return void 0===f.uv&&l.computeUVs(),void 0!==f.tangent?k.hasTangents=!0:l.computeTangents(),k},g=function(a,d,e,f,g,i,j){function k(a,b,c,d){r.push({attribute:a,path:b,type:c,itemSize:d,progress:{loaded:0,total:0}})}function l(a,b){k(a,b,Uint16Array,1)}function m(a,b){b&&n(b)&&k(a,b.path,Float32Array,b.value_size)}function n(a){return f||!a.generated||a.count>g}function o(){var a={loaded:0,total:0};b.each(r,function(b){a.loaded+=b.progress.loaded,a.total+=b.progress.total}),j(a),p=setTimeout(o,300)}var p,q=e.vertex_attributes,r=[],s={};l("index",e.indices),m("position",q.positions),m("normal",q.normals),m("tangent",q.tangents),m("color",q.colors),m("uv",q.uvs1),m("uv2",q.uvs2),m("skinIndex",q.skin_indices),m("skinWeight",q.skin_weights),c.forEach(r,function(b,c){if(n(b)){var e=d+b.path;h(a,e,b.type,function(a,d){return a?c(a):(s[b.attribute]={array:d,itemSize:b.itemSize},void c())},function(a,c){c?b.progress.total=parseInt(c,10):a.lengthComputable&&(b.progress.total=a.total),b.progress.loaded=a.loaded})}else c()},function(a){return clearTimeout(p),a?(console.warn("Error loading attributes",a),i(a)):void i(null,s)}),j&&o()},h=function(a,b,c,d,e){j(a,b,"arraybuffer",function(a,b){return a?d(a):void d(null,new c(b))},e)},i=function(a,b,c){j(a,b,null,function(a,b){return a?c(a):void c(null,JSON.parse(b))})},j=function(a,b,c,d,e){function f(){i.abort(),a.off("shutdown",f,h)}function g(a){var b=i.getResponseHeader("x-goog-meta-uncompressed-size");e&&e(a,b)}var h=this,i=new XMLHttpRequest;i.addEventListener("progress",g,!1),i.open("GET",b,!0),c&&(i.responseType=c),a.on("shutdown",f,h),i.onreadystatechange=function(){return 4===i.readyState?(a.off("shutdown",f,h),i.removeEventListener("progress",g),0===i.status||i.status>=200&&i.status<300?d(null,this.response):d(new Error("Invalid status: "+i.statusText))):void 0},i.onerror=function(b){a.off("shutdown",f,h),d(b)},i.send()},k=function(a){return a.replace(/\\/g,"/").replace(/\/[^\/]*$/,"")};return e}),define("VeroldEngine/Loaders/VeroldGeometryLoader",["three","underscore","async"],function(a,b,c){var d=5e4,e=0,f=8,g=function(a,b){var c;for(this.script=a,this.workers=[],this.queue=[],c=0;b>c;c++)this.makeWorker(c,null);this.idx=0};g.prototype.constructor=g,g.prototype.makeWorker=function(a,b){var c=this;this.workers[a]={worker:b,busy:!1},b&&(b.onmessage=function(d){switch(d.data.type){case"result":b.terminate(),c.workers[a].worker=void 0,c.workers[a].busy=!1,c.workers[a].fnDone(d.data.result),c.workers[a].fnDone=void 0,c.workers[a].fnProgress=void 0,c.dequeue(a);break;case"progress":"function"==typeof c.workers[a].fnProgress&&c.workers[a].fnProgress(d.data.progress)}},b.onerror=function(a){throw a})},g.prototype.loadGeometry=function(a,c,d){var e=this,f=!1;b.each(this.workers,function(b,g){f||b.busy||(e.makeWorker(g,new Worker(e.script)),f=!0,e.workers[g].busy=!0,e.workers[g].fnDone=c,e.workers[g].fnProgress=d,e.workers[g].worker.postMessage(a))}),f||e.queue.push({url:a,fnDone:c,fnProgress:d})},g.prototype.dequeue=function(a){var b,c;this.queue.length&&(this.makeWorker(a,new Worker(this.script)),b=this.queue.shift(),c=this.workers[a],c.busy=!0,c.fnDone=b.fnDone,c.fnProgress=b.fnProgress,c.worker.postMessage(b.url))};var h=new g("/worker.js",f),i=function(){};return i.prototype.constructor=i,i.prototype.createVertices=function(b,c,d,f,g){for(var h,i=this,j=d;j<c.xChannel.length&&d+f>j;++j)h=new a.Vector3,h.x=c.xChannel[j],h.y=c.yChannel[j],h.z=c.zChannel[j],b.vertices.push(h);d+f>=c.xChannel.length?g():setTimeout(function(){i.createVertices(b,c,d+f,f,g)},e)},i.prototype.createFaces=function(b,c,d,f,g){var h,i,j=this;switch(c.format){default:console.warn("unrecognized format: "+c.format);break;case"triangles":for(h=d;h<c.indices.length/3&&d+f>h;++h)i=new a.Face3,i.a=c.indices[3*h],i.b=c.indices[3*h+1],i.c=c.indices[3*h+2],b.faces.push(i)}d+f>=c.indices.length/3?g():setTimeout(function(){j.createFaces(b,c,d+f,f,g)},e)},i.prototype.addComputedValues=function(b,c,d,f,g){var h,i=this;for(iFace=d;iFace<b.faces.length&&d+f>iFace;++iFace)if(h=b.faces[iFace],h instanceof a.Face3){if(h.vertexNormals.push(new a.Vector3(c.xNormChannel[h.a],c.yNormChannel[h.a],c.zNormChannel[h.a])),h.vertexNormals.push(new a.Vector3(c.xNormChannel[h.b],c.yNormChannel[h.b],c.zNormChannel[h.b])),h.vertexNormals.push(new a.Vector3(c.xNormChannel[h.c],c.yNormChannel[h.c],c.zNormChannel[h.c])),c.tangents&&(h.vertexTangents.push(new a.Vector4(c.tangents[h.a].x,c.tangents[h.a].y,c.tangents[h.a].z,c.tangents[h.a].w)),h.vertexTangents.push(new a.Vector4(c.tangents[h.b].x,c.tangents[h.b].y,c.tangents[h.b].z,c.tangents[h.b].w)),h.vertexTangents.push(new a.Vector4(c.tangents[h.c].x,c.tangents[h.c].y,c.tangents[h.c].z,c.tangents[h.c].w))),c.rChannel&&c.gChannel&&c.bChannel&&c.aChannel){var j=255;h.vertexColors.push((new a.Color).setRGB(c.rChannel[h.a]/j,c.gChannel[h.a]/j,c.bChannel[h.a]/j)),h.vertexColors.push((new a.Color).setRGB(c.rChannel[h.b]/j,c.gChannel[h.b]/j,c.bChannel[h.b]/j)),h.vertexColors.push((new a.Color).setRGB(c.rChannel[h.c]/j,c.gChannel[h.c]/j,c.bChannel[h.c]/j))}}else if(h instanceof a.Face4&&(h.vertexNormals.push(new a.Vector3(c.xNormChannel[h.a],c.yNormChannel[h.a],c.zNormChannel[h.a])),h.vertexNormals.push(new a.Vector3(c.xNormChannel[h.b],c.yNormChannel[h.b],c.zNormChannel[h.b])),h.vertexNormals.push(new a.Vector3(c.xNormChannel[h.c],c.yNormChannel[h.c],c.zNormChannel[h.c])),h.vertexNormals.push(new a.Vector3(c.xNormChannel[h.d],c.yNormChannel[h.d],c.zNormChannel[h.d])),c.tangents&&(h.vertexTangents.push(new a.Vector4(c.tangents[h.a].x,c.tangents[h.a].y,c.tangents[h.a].z,c.tangents[h.a].w)),h.vertexTangents.push(new a.Vector4(c.tangents[h.b].x,c.tangents[h.b].y,c.tangents[h.b].z,c.tangents[h.b].w)),h.vertexTangents.push(new a.Vector4(c.tangents[h.c].x,c.tangents[h.c].y,c.tangents[h.c].z,c.tangents[h.c].w)),h.vertexTangents.push(new a.Vector4(c.tangents[h.d].x,c.tangents[h.d].y,c.tangents[h.d].z,c.tangents[h.d].w))),c.rChannel&&c.gChannel&&c.bChannel&&c.aChannel)){var j=255;h.vertexColors.push((new a.Color).setRGB(c.rChannel[h.a]/j,c.gChannel[h.a]/j,c.bChannel[h.a]/j)),h.vertexColors.push((new a.Color).setRGB(c.rChannel[h.b]/j,c.gChannel[h.b]/j,c.bChannel[h.b]/j)),h.vertexColors.push((new a.Color).setRGB(c.rChannel[h.c]/j,c.gChannel[h.c]/j,c.bChannel[h.c]/j)),h.vertexColors.push((new a.Color).setRGB(c.rChannel[h.d]/j,c.gChannel[h.d]/j,c.bChannel[h.d]/j))}d+f>=b.faces.length?(c.tangents&&(b.hasTangents=!0),g()):setTimeout(function(){i.addComputedValues(b,c,d+f,f,g)},e)},i.prototype.addUVs=function(b,c,d,f,g){var h,i,j,k=this;if(c.uChannel&&c.vChannel)for(h=d;h<b.faces.length&&d+f>h;++h)i=b.faces[h],j=[],i instanceof a.Face3?(j.push(new a.Vector2(c.uChannel[i.a],1-c.vChannel[i.a])),j.push(new a.Vector2(c.uChannel[i.b],1-c.vChannel[i.b])),j.push(new a.Vector2(c.uChannel[i.c],1-c.vChannel[i.c])),b.faceVertexUvs[0][h]=j):i instanceof a.Face4&&(j.push(new a.Vector2(c.uChannel[i.a],1-c.vChannel[i.a])),j.push(new a.Vector2(c.uChannel[i.b],1-c.vChannel[i.b])),j.push(new a.Vector2(c.uChannel[i.c],1-c.vChannel[i.c])),j.push(new a.Vector2(c.uChannel[i.d],1-c.vChannel[i.d])),b.faceVertexUvs[0][h]=j);else for(console.log("No UV's found so we're creating them."),h=d;h<b.faces.length&&d+f>h;++h){var l;i=b.faces[h],j=[],i instanceof a.Face3?(l=new a.Vector3(c.xChannel[i.a],c.yChannel[i.a],c.zChannel[i.a]),l.normalize(),j.push(new a.Vector2(l.x,l.y)),l=new a.Vector3(c.xChannel[i.b],c.yChannel[i.b],c.zChannel[i.b]),l.normalize(),j.push(new a.Vector2(l.x,l.y)),l=new a.Vector3(c.xChannel[i.c],c.yChannel[i.c],c.zChannel[i.c]),l.normalize(),j.push(new a.Vector2(l.x,l.y)),b.faceVertexUvs[0][h]=j):i instanceof a.Face4&&(l=new a.Vector3(c.xChannel[i.a],c.yChannel[i.a],c.zChannel[i.a]),l.normalize(),j.push(new a.Vector2(l.x,l.y)),l=new a.Vector3(c.xChannel[i.b],c.yChannel[i.b],c.zChannel[i.b]),l.normalize(),j.push(new a.Vector2(l.x,l.y)),l=new a.Vector3(c.xChannel[i.c],c.yChannel[i.c],c.zChannel[i.c]),l.normalize(),j.push(new a.Vector2(l.x,l.y)),l=new a.Vector3(c.xChannel[i.d],c.yChannel[i.d],c.zChannel[i.d]),l.normalize(),j.push(new a.Vector2(l.x,l.y)),b.faceVertexUvs[0][h]=j)}d+f>=b.faces.length?g():setTimeout(function(){k.addUVs(b,c,d+f,f,g)},e)},i.prototype.addSkinningData=function(b,c,d,f,g){var h,i,j,k,l,m,n,o,p,q,r=this;if(c.skinWeights)for(h=d,i=c.skinWeights.length;i>h&&d+f>h;h+=2)j=c.skinWeights[h],k=c.skinWeights[h+1],l=0,m=0,b.skinWeights.push(new a.Vector4(j,k,l,m));if(c.skinIndices)for(h=d,i=c.skinIndices.length;i>h&&d+f>h;h+=2)n=c.skinIndices[h],o=c.skinIndices[h+1],p=0,q=0,b.skinIndices.push(new a.Vector4(n,o,p,q));c.skinIndices||(c.skinIndices=[]),d+f>=c.skinIndices.length?g():setTimeout(function(){r.addSkinningData(b,c,d+f,f,g)},e)},i.prototype.createGeometry=function(b,e){var f=new a.Geometry,g=this;return b.faces?void this.createVertices(f,b,0,d,function(){setTimeout(function(){c.forEachSeries(b.faces,function(a,b){g.createFaces(f,a,0,d,function(){b()})},function(){return f.faces[0]?void g.addSkinningData(f,b,0,d,function(){g.addComputedValues(f,b,0,d,function(){g.addUVs(f,b,0,d,function(){f.computeBoundingBox(),f.faces[0].vertexNormals[0]||f.computeVertexNormals(),f.faces[0].normal[0]||f.computeFaceNormals(),f.hasTangents||f.computeTangents(),e(f)})})}):(console.log('The geometry, "'+f+'", has no faces!  Skipping it.'),void e(null))})},0)}):void e(null)},i.prototype.loadGeometry=function(a,b,c){var d,e=this,f=new Date;h.loadGeometry(a,function(c){setTimeout(function(){e.createGeometry(c,function(c){d=new Date,c?console.log("Finished loading: "+a+" took: "+(d.getTime()-f.getTime())/1e3+" seconds"):console.warn("Error loading: "+a+" took: "+(d.getTime()-f.getTime())/1e3+" seconds"),b(c)})},0)},c)},a.JSONLoader.prototype.load=function(a,b,c,d,e){c=c&&"string"==typeof c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c,d,e)},a.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){function g(){j.abort(),f.off("shutdown",g,i),c&&c()}function h(){return n?void(m=!1):(m=!0,void(l=setTimeout(h,500)))}var i=this,j=new XMLHttpRequest,k=0;j.withCredentials=this.withCredentials,f.on("shutdown",g,this);var l,m=!0,n=!1;h();var o=0;j.onreadystatechange=function(){if(j.readyState===j.DONE){if(n=!0,clearTimeout(l),e=null,200===j.status||0===j.status){if(j.responseText){var h=JSON.parse(j.responseText);e&&e({total:o,loaded:o}),a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+j.status+"]");f.off("shutdown",g,i)}else j.readyState===j.LOADING?m&&(setTimeout(function(){e&&(0===k&&(k=parseInt(j.getResponseHeader("x-goog-meta-uncompressed-size")||j.getResponseHeader("Content-Length"),10)),o=k,e({total:k,loaded:parseInt(j.responseText.length,10)}))},0),m=!1):j.readyState===j.HEADERS_RECEIVED&&(k=parseInt(j.getResponseHeader("x-goog-meta-uncompressed-size")||j.getResponseHeader("Content-Length"),10))},j.open("GET",b,!0),j.send(null)},a.JSONLoader.prototype.createModel=function(b,c){function d(c){function d(a,b){return a&1<<b}var e,f,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G=b.faces,H=b.vertices,I=b.normals,J=b.colors,K=0;if(void 0!==b.uvs){for(e=0;e<b.uvs.length;e++)b.uvs[e].length&&K++;for(e=0;K>e;e++)g.faceVertexUvs[e]=[]}for(i=0,j=H.length;j>i;)w=new a.Vector3,w.x=H[i++]*c,w.y=H[i++]*c,w.z=H[i++]*c,g.vertices.push(w);for(g.faceEdgeMasks=[],i=0,j=G.length;j>i;)if(o=G[i++],p=d(o,0),q=d(o,1),r=d(o,3),s=d(o,4),t=d(o,5),u=d(o,6),v=d(o,7),p){if(y=new a.Face3,y.a=G[i],y.b=G[i+1],y.c=G[i+3],z=new a.Face3,z.a=G[i+1],z.b=G[i+2],z.c=G[i+3],i+=4,q&&(n=G[i++],y.materialIndex=n,z.materialIndex=n),h=g.faces.length,g.faceEdgeMasks[h]=5,g.faceEdgeMasks[h+1]=3,r)for(e=0;K>e;e++)for(C=b.uvs[e],g.faceVertexUvs[e][h]=[],g.faceVertexUvs[e][h+1]=[],f=0;4>f;f++)m=G[i++],E=C[2*m],F=C[2*m+1],D=new a.Vector2(E,F),2!==f&&g.faceVertexUvs[e][h].push(D),0!==f&&g.faceVertexUvs[e][h+1].push(D);if(s&&(l=3*G[i++],y.normal.set(I[l++],I[l++],I[l]),z.normal.copy(y.normal)),t)for(e=0;4>e;e++)l=3*G[i++],B=new a.Vector3(I[l++],I[l++],I[l]),2!==e&&y.vertexNormals.push(B),0!==e&&z.vertexNormals.push(B);if(u&&(k=G[i++],A=J[k],y.color.setHex(A),z.color.setHex(A)),v)for(e=0;4>e;e++)k=G[i++],A=J[k],2!==e&&y.vertexColors.push(new a.Color(A)),0!==e&&z.vertexColors.push(new a.Color(A));g.faces.push(y),g.faces.push(z)}else{if(x=new a.Face3,x.a=G[i++],x.b=G[i++],x.c=G[i++],q&&(n=G[i++],x.materialIndex=n),h=g.faces.length,g.faceEdgeMasks[h]=7,r)for(e=0;K>e;e++)for(C=b.uvs[e],g.faceVertexUvs[e][h]=[],f=0;3>f;f++)m=G[i++],E=C[2*m],F=C[2*m+1],D=new a.Vector2(E,F),g.faceVertexUvs[e][h].push(D);if(s&&(l=3*G[i++],x.normal.set(I[l++],I[l++],I[l])),t)for(e=0;3>e;e++)l=3*G[i++],B=new a.Vector3(I[l++],I[l++],I[l]),x.vertexNormals.push(B);if(u&&(k=G[i++],x.color.setHex(J[k])),v)for(e=0;3>e;e++)k=G[i++],x.vertexColors.push(new a.Color(J[k]));g.faces.push(x)}}function e(){var c,d,e,f,h,i,j,k,l,m;
if(b.skinWeights)for(c=0,d=b.skinWeights.length;d>c;c+=2)e=b.skinWeights[c],f=b.skinWeights[c+1],h=0,i=0,g.skinWeights.push(new a.Vector4(e,f,h,i));if(b.skinIndices)for(c=0,d=b.skinIndices.length;d>c;c+=2)j=b.skinIndices[c],k=b.skinIndices[c+1],l=0,m=0,g.skinIndices.push(new a.Vector4(j,k,l,m));g.bones=b.bones,g.animation=b.animation}function f(c){if(void 0!==b.morphTargets){var d,e,f,h,i,j;for(d=0,e=b.morphTargets.length;e>d;d++)for(g.morphTargets[d]={},g.morphTargets[d].name=b.morphTargets[d].name,g.morphTargets[d].vertices=[],i=g.morphTargets[d].vertices,j=b.morphTargets[d].vertices,f=0,h=j.length;h>f;f+=3){var k=new a.Vector3;k.x=j[f]*c,k.y=j[f+1]*c,k.z=j[f+2]*c,i.push(k)}}if(void 0!==b.morphColors){var d,e,l,m,n,o,p;for(d=0,e=b.morphColors.length;e>d;d++)for(g.morphColors[d]={},g.morphColors[d].name=b.morphColors[d].name,g.morphColors[d].colors=[],n=g.morphColors[d].colors,o=b.morphColors[d].colors,l=0,m=o.length;m>l;l+=3)p=new a.Color(16755200),p.setRGB(o[l],o[l+1],o[l+2]),n.push(p)}}var g=new a.Geometry,h=void 0!==b.scale?1/b.scale:1;void 0!==b.skinning&&void 0!==b.skinning.indices&&b.skinning.indices.length>0&&(b.bones=b.skinning.bones,b.skinIndices=b.skinning.indices,b.skinWeights=b.skinning.weights),d(h),e(),f(h),g.computeFaceNormals(),c(g)},i}),define("VeroldEngine/Util/GeometryUtilities",["underscore","three"],function(a,b){var c=function(a,b){this.veroldEngine=a,this.geometry=b};return c.prototype={constructor:c,computeTangentsAsync:function(a,c,d){function e(){U=!0,console.log("Aborting tangent computation due to engine shutdown."),N.veroldEngine.globalEvents.off("shutdown",e,N)}function f(a,b){return $.set(a[3*b],a[3*b+1],a[3*b+2]),$}function g(a,b,c){a[3*b]+=c.x,a[3*b+1]+=c.y,a[3*b+2]+=c.z}function h(a,b,c,d,e,f,h){function i(a,b){a[b]||0==a[b]?1/0===a[b]?a[b]=1:a[b]===-1/0&&(a[b]=-1):a[b]=0}r=a.vertices[b],s=a.vertices[c],t=a.vertices[d],u=q[e],v=q[f],w=q[h],x=s.x-r.x,y=t.x-r.x,z=s.y-r.y,A=t.y-r.y,B=s.z-r.z,C=t.z-r.z,D=v.x-u.x,E=w.x-u.x,F=v.y-u.y,G=w.y-u.y,H=1/(D*G-E*F),P.set((G*x-F*y)*H,(G*z-F*A)*H,(G*B-F*C)*H),Q.set((D*y-E*x)*H,(D*A-E*z)*H,(D*C-E*B)*H),i(P,"x"),i(P,"y"),i(P,"z"),i(Q,"x"),i(Q,"y"),i(Q,"z"),g(Y,b,P),g(Y,c,P),g(Y,d,P),g(Z,b,Q),g(Z,c,Q),g(Z,d,Q)}function i(a,b){var e=0;for(a;d>e&&a<O.faces.length;a++,e++)p=O.faces[a],b(p,a);p=null,a<O.faces.length&&(M+=L*d,c&&c(M))}function j(a,b,e,f){function g(){return U?void clearTimeout(h):m>=O.faces.length?(c(e),void f()):(i(m,a),m+=d,h=setTimeout(g,0),void 0)}var h;m=0,M=b,L=(e-b)/O.faces.length,g()}function k(a,c){q=O.faceVertexUvs[0][c],a instanceof b.Face3?h(O,a.a,a.b,a.c,0,1,2):a instanceof b.Face4&&(h(O,a.a,a.b,a.d,0,1,3),h(O,a.b,a.c,a.d,1,2,3))}function l(a){for(n=0;n<a.vertexNormals.length;++n)T.copy(a.vertexNormals[n]),o=a[_[n]],I=f(Y,o),R.copy(I),R.sub(T.multiplyScalar(T.dot(I))).normalize(),S.crossVectors(a.vertexNormals[n],I),J=S.dot(f(Z,o)),K=0>J?-1:1,a.vertexTangents[n].set(R.x,R.y,R.z,K)}var m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N=this,O=this.geometry,P=new b.Vector3,Q=new b.Vector3,R=new b.Vector3,S=new b.Vector3,T=new b.Vector3,U=!1;for(N.veroldEngine.globalEvents.on("shutdown",e,this),m=0;m<O.faces.length;++m)for(p=O.faces[m],n=0;n<p.vertexNormals.length;n++)p.vertexTangents[n]=new b.Vector4;void 0===d&&(d=1e5);var V=3*O.vertices.length*4,W=new ArrayBuffer(V),X=new ArrayBuffer(V),Y=new Float32Array(W),Z=new Float32Array(X),$=new b.Vector3,_=["a","b","c","d"];j(k,0,.3,function(){P=null,Q=null,j(l,.3,1,function(){O.hasTangents=!0,$=null,Y=null,Z=null,W=null,X=null,R=null,S=null,T=null,N.veroldEngine.globalEvents.off("shutdown",e,N),a&&a()})})},computeUVs:function(){for(var a=this.geometry,c=["a","b","c","d"],d=new b.Vector3,e=0;e<a.faces.length;++e){var f=a.faces[e],g=3,h=[];f instanceof b.Face4&&(g=4);for(var i=0;g>i;++i){var j=c[i],k=a.vertices[f[j]];d.set(k.x,k.y,k.z),d.normalize(),d.addScalar(1),d.multiplyScalar(.5),h.push(new b.Vector2(d.x,d.y))}a.faceVertexUvs[0][e]=h}},computeVertexNormalsAsync:function(a,c,d,e){function f(){J=!0,console.log("Aborting normal computation due to engine shutdown."),C.veroldEngine.globalEvents.off("shutdown",f,C)}function g(a,b,c){a[3*b]+=c.x,a[3*b+1]+=c.y,a[3*b+2]+=c.z}function h(a,b){var c=0;for(a;e>c&&a<D.faces.length;++a,++c)x=D.faces[a],b(x,a);x=null,a<D.faces.length&&(B+=A*e,d&&d(B))}function i(a,b,c,f){function g(){return J?void clearTimeout(i):v>=D.faces.length?(d(c),void f()):(h(v,a),v+=e,i=setTimeout(g,0),void 0)}var i;v=0,B=b,A=(c-b)/D.faces.length,g()}function j(a){a instanceof b.Face3?(g(y,a.a,a.normal),g(y,a.b,a.normal),g(y,a.c,a.normal)):a instanceof b.Face4&&(g(y,a.a,a.normal),g(y,a.b,a.normal),g(y,a.c,a.normal),g(y,a.d,a.normal))}function k(){for(t=0,u=D.vertices.length;u>t;++t)z.x=y[3*t],z.y=y[3*t+1],z.z=y[3*t+2],z.normalize(),y[3*t]=z.x,y[3*t+1]=z.y,y[3*t+2]=z.z}function l(a){a instanceof b.Face3?(a.vertexNormals[0].set(y[3*a.a],y[3*a.a+1],y[3*a.a+2]),a.vertexNormals[1].set(y[3*a.b],y[3*a.b+1],y[3*a.b+2]),a.vertexNormals[2].set(y[3*a.c],y[3*a.c+1],y[3*a.c+2])):a instanceof b.Face4&&(a.vertexNormals[0].set(y[3*a.a],y[3*a.a+1],y[3*a.a+2]),a.vertexNormals[1].set(y[3*a.b],y[3*a.b+1],y[3*a.b+2]),a.vertexNormals[2].set(y[3*a.c],y[3*a.c+1],y[3*a.c+2]),a.vertexNormals[3].set(y[3*a.d],y[3*a.d+1],y[3*a.d+2]))}function m(a){a instanceof b.Face3?(G.set(D.vertices[3*a.c]-D.vertices[3*a.b],D.vertices[3*a.c+1]-D.vertices[3*a.b+1],D.vertices[3*a.c+2]-D.vertices[3*a.b+2]),E.set(D.vertices[3*a.a]-D.vertices[3*a.b],D.vertices[3*a.a+1]-D.vertices[3*a.b+1],D.vertices[3*a.a+2]-D.vertices[3*a.b+2]),G.cross(E),g(y,a.a,G),g(y,a.b,G),g(y,a.c,G)):a instanceof b.Face4&&(p=D.vertices[a.a],q=D.vertices[a.b],r=D.vertices[a.c],s=D.vertices[a.d],H.set(D.vertices[3*a.d]-D.vertices[3*a.b],D.vertices[3*a.d+1]-D.vertices[3*a.b+1],D.vertices[3*a.d+2]-D.vertices[3*a.b+2]),E.set(D.vertices[3*a.a]-D.vertices[3*a.b],D.vertices[3*a.a+1]-D.vertices[3*a.b+1],D.vertices[3*a.a+2]-D.vertices[3*a.b+2]),H.cross(E),g(y,a.a,H),g(y,a.b,H),g(y,a.d,H),I.set(D.vertices[3*a.d]-D.vertices[3*a.c],D.vertices[3*a.d+1]-D.vertices[3*a.c+1],D.vertices[3*a.d+2]-D.vertices[3*a.c+2]),F.set(D.vertices[3*a.b]-D.vertices[3*a.c],D.vertices[3*a.b+1]-D.vertices[3*a.c+1],D.vertices[3*a.b+2]-D.vertices[3*a.c+2]),I.cross(F),g(y,a.b,I),g(y,a.c,I),g(y,a.d,I))}function n(){k(),i(l,.5,1,o)}function o(){E=null,F=null,H=null,I=null,C.veroldEngine.globalEvents.off("shutdown",f,C),c&&c()}var p,q,r,s,t,u,v,w,x,y,z,A,B,C=this,D=this.geometry,E=new b.Vector3,F=new b.Vector3,G=new b.Vector3,H=new b.Vector3,I=new b.Vector3,J=!1;if(C.veroldEngine.globalEvents.on("shutdown",f,this),z=new b.Vector3,void 0===e&&(e=1e5),void 0===D.__tmpVertices){var K=3*D.vertices.length*4,L=new ArrayBuffer(K),M=new Float32Array(L);for(D.__tmpVertices=M,y=D.__tmpVertices,v=0,w=D.faces.length;w>v;++v)x=D.faces[v],x instanceof b.Face3?x.vertexNormals=[new b.Vector3,new b.Vector3,new b.Vector3]:x instanceof b.Face4&&(x.vertexNormals=[new b.Vector3,new b.Vector3,new b.Vector3,new b.Vector3])}else for(y=D.__tmpVertices,t=0,u=D.vertices.length;u>t;++t)y[3*t]=0,y[3*t+1]=0,y[3*t+2]=0;a?i(m,.1,.5,n):i(j,.1,.5,n)},splitUVSeams:function(){var a,c,d=this.geometry,e=["a","b","c","d"],f=[];f[d.vertices.length-1]=void 0;for(var g=0;g<d.faces.length;++g){var h=d.faces[g],i=3;h instanceof b.Face4&&(i=4);for(var j=0;i>j;++j){var k=h[e[j]];f[k]?f[k].push([g,j]):f[k]=[[g,j]]}}a=d.faceVertexUvs[0],c=d.vertices.length;for(var l=0;c>l;++l){var m=f[l];if(m)for(var n=1;n<m.length;++n){for(var o=m[n][0],p=m[n][1],q=d.faces[o],r=a[o][p],s=!1,t=0;n>t;++t){var u=m[t][0],v=m[t][1],w=d.faces[u],x=a[u][v];if(r.x===x.x&&r.y===x.y){q[e[p]]=w[e[v]],s=!0;break}}s||(d.vertices.push(d.vertices[l]),void 0!==d.colors&&d.colors.length>0&&d.colors.push(d.colors[l]),void 0!==d.normals&&d.normals.length>0&&d.normals.push(d.normals[l]),void 0!==d.skinIndices&&d.skinIndices.length>0&&d.skinIndices.push(d.skinIndices[l]),void 0!==d.skinWeights&&d.skinWeights.length>0&&d.skinWeights.push(d.skinWeights[l]),q[e[p]]=d.vertices.length-1)}}}},window.VAPI=window.VAPI||{},window.VAPI.GeometryUtilities=c,c}),define("VeroldEngine/Loaders/MultiGeometryLoader",["three","VeroldEngine/Loaders/BufferedBinaryLoader","VeroldEngine/Loaders/VeroldGeometryLoader","VeroldEngine/Util/GeometryUtilities"],function(a,b,c,d){var e=[],f=0,g=5,h=null,i=function(){for(;e.length>0&&g>f;)e.shift()();e.length?h=setTimeout(i,100):(clearTimeout(h),h=null)},j=function(a){this.veroldEngine=a,this.kDownloadWeight=.5,this.kNormalWeight=.15,this.kTangentWeight=.35};return j.prototype={constructor:j,load:function(d,g,j,k){var l=this;e.push(function(){var e,h=1,i=0;f++;var m=function(a){i=a.total,j({percent:h*a.loaded/a.total,total:a.total})},n=function(a){a.total=i,j(a)},o=function(a){l._verifyGeometry(a,g,n)};d.match(/descriptor.json$/)?(e=new b(l.veroldEngine),e.load(d,function(a){f--,g(a)},m,k.downloadAll)):".js"===d.slice(-3)?(e=new a.JSONLoader,h=l.kDownloadWeight,e.load(d,function(a){f--,o(a)},!1,m,l.veroldEngine)):".vgo"===d.slice(-4)?(e=new c(l.veroldEngine),e.loadGeometry(d,function(a){f--,o(a)},m)):(f--,console.error('MultiGeometryLoader: Unrecognized mesh file type, "'+d+'"'),g(null))}),h||(h=setTimeout(i,0))},_computeMissingVertexAttributes:function(a,b,c){var e=this,f=new d(this.veroldEngine,a);0===a.faceVertexUvs[0].length&&(console.log("Generating UV's for the mesh."),f.computeUVs()),f.splitUVSeams(),a.faces[0].vertexNormals[0]?a.hasTangents?b(a):(console.log("Generating tangents for the mesh."),this._computeTangents(a,function(){b(a)},c)):(console.log("Generating normals for the mesh."),this._computeVertexNormals(a,function(){a.hasTangents||(console.log("Generating tangents for the mesh."),e._computeTangents(a,function(){b(a)},c))},c))},_computeTangents:function(a,b,c){var e=this,f=function(a){var b={percent:0};b.percent+=e.kDownloadWeight,b.percent+=e.kNormalWeight,b.percent+=e.kTangentWeight*a,c(b)},g=new d(this.veroldEngine,a),h=a.faces.length/20;h=Math.max(h,500),h=Math.round(h),g.computeTangentsAsync(function(){b()},f,h)},_computeVertexNormals:function(a,b,c){var e=this,f=function(a){var b={percent:0};b.percent+=e.kDownloadWeight,b.percent+=e.kNormalWeight*a,c(b)},g=new d(this.veroldEngine,a),h=a.faces.length/20;h=Math.max(h,500),h=Math.round(h),g.computeVertexNormalsAsync(!1,function(){b()},f,h)},_verifyGeometry:function(a,b,c){a&&a.faces[0]?this._computeMissingVertexAttributes(a,b,c):b(null)}},window.VAPI=window.VAPI||{},window.VAPI.MultiGeometryLoader=j,j}),define("VeroldEngine/Objects/BaseMeshObject",["underscore","three","VeroldEngine/Loaders/MultiGeometryLoader","VeroldEngine/Materials/EngineMaterials","VeroldEngine/Objects/VeroldObject"],function(a,b,c,d,e){var f=function(){e.call(this)};return f.prototype=new e,f.prototype.events={setMaterial:{scope:"local",action:!0,category:"Materials",params:[{name:"material",type:"asset",filter:{material:!0}},{name:"materialIndex",type:"i",description:"Optional - if this mesh contains multiple materials, this is the material number that you want to change.","default":0}]},castShadowsEnable:{params:[],action:!0,category:"Rendering"},castShadowsDisable:{params:[],action:!0,category:"Rendering"},castShadowsToggle:{params:[],action:!0,category:"Rendering"}},f.prototype.initialize=function(a){var b=e.prototype.initialize.call(this,a);return b===!1?!1:(this.veroldEngine.on("materialUnloaded",this.onMaterialUnloaded,this),this.on("setMaterial",this.setMaterial,this),this.on("castShadowsEnable",this.castShadowsEnable,this),this.on("castShadowsDisable",this.castShadowsDisable,this),void this.on("castShadowsToggle",this.castShadowsToggle,this))},f.prototype.uninitialize=function(a){this.veroldEngine.off("materialUnloaded",this.onMaterialUnloaded,this),e.prototype.uninitialize.call(this,a),this.off("setMaterial",this.setMaterial,this),this.off("castShadowsEnable",this.castShadowsEnable,this),this.off("castShadowsDisable",this.castShadowsDisable,this),this.off("castShadowsToggle",this.castShadowsToggle,this)},f.prototype.unload=function(a){var b=this.getSourceObject();if(b&&b.off("sourceGeometryChanged",this.onSourceGeometryChanged,this),this.threeData){this.threeData.material=null;var c=this.getParentAsset();c.trigger("meshUnloaded",this),console.log(this.veroldEngine.engineName+" - Deallocating geometry for mesh "+this.entityModel.get("name")),this.isInstance()||this.threeData.geometry&&this.threeData.geometry.dispose(),this.threeData.geometry=null}e.prototype.unload.call(this,a)},f.prototype.getMaterial=function(){var b=this.getProperty("material");if(a.isArray(b)){var c=[];return a.each(b,function(a){var b=this.veroldEngine.assetRegistry.Materials.getAssetById(a);b||(b=this.veroldEngine.assetRegistry.Materials.getMissingMaterial()),c.push(b)},this),c}return this.veroldEngine.assetRegistry.Materials.getAssetById(b)?this.veroldEngine.assetRegistry.Materials.getAssetById(b):this.veroldEngine.assetRegistry.Materials.getMissingMaterial()},f.prototype.getDataSizeGeometryDownload=function(){var a=this.getProperty("size");return a?a:this.getDataSizeGeometryDownloadUncompressed()},f.prototype.getDataSizeGeometryInMemory=function(){var a=this.getProperty("size_uncompressed");return a?a:0},f.prototype.getDataSizeGeometryDownloadUncompressed=function(){var a=this.getProperty("size_uncompressed");return a?a:0},f.prototype.getListOfReferencedGeometries=function(){var a=e.prototype.getListOfReferencedGeometries.call(this),b=this.getProperty("geometryId");if(b){var c=this.veroldEngine.assetRegistry.Geometries.getAssetById(b);c&&(a[b]=c)}else{var d=this.getSourceObject();d||(d=this),a[d.id]=d}return a},f.prototype.getListOfReferencedTextures=function(){var b,c,d=e.prototype.getListOfReferencedTextures.call(this),f=this.getProperty("material");if(a.isArray(f))a.each(f,function(e){b=this.veroldEngine.assetRegistry.Materials.getAssetById(e),b&&(c=b.getListOfReferencedTextures(),a.each(c,function(a,b){d[b]=a},this))},this);else if(b=this.veroldEngine.assetRegistry.Materials.getAssetById(f))return b.getListOfReferencedTextures();return d},f.prototype.registerInitialDependencies=function(b){e.prototype.registerInitialDependencies.call(this,b);var c=this.getParentAsset();if(a.isUndefined(b)||"geometry"===b){var d=this.getProperty("geometryId");d||(d=this.id),c.registerGeometry(d)}if(a.isUndefined(b)||"material"===b){var f=this.getProperty("material");a.isArray(f)?a.each(f,function(a){c.registerMaterial(a)},this):c.registerMaterial(f)}},f.prototype.unregisterInitialDependencies=function(b){e.prototype.unregisterInitialDependencies.call(this,b);var c=this.getParentAsset();if(a.isUndefined(b)||"geometry"===b){var d=this.getProperty("geometryId");d||(d=this.id),c.unregisterGeometry(d)}if(a.isUndefined(b)||"material"===b){var f=this.getProperty("material");a.isArray(f)?a.each(f,function(a){c.unregisterMaterial(a)},this):c.unregisterMaterial(f)}},f.prototype._loadThreeData=function(c){var d=this;if(this.isInstance()){var e=this.getSourceObject();this._initPrefabBindings(),e.load({load_base:function(e){e.type!==d.type&&d.set({type:e.type},{save:!0}),e.on("sourceGeometryChanged",d.onSourceGeometryChanged,d),d.threeData=e.cloneThreeData(),d.threeData.material instanceof b.MeshFaceMaterial&&(d.threeData.material=null);var f=d.getProperty("material");a.isObject(f)&&!a.isArray(f)&&(f=a.toArray(f)),d.applyMaterialChange(f,d._getMaterialType()),d.threeData.veroldEntityId=d.id;var g=d.getParentAsset();g.trigger("meshLoaded",d),d.applyPayloadSettings_loaded(c.payload),d.trigger("load_base",d)}})}else this.listenToOnce(this,"load_base",function(){c.payload.material||(c.payload.material=!0),d.applyPayloadSettings_loaded(c.payload)}),this._createThreeMesh()},f.prototype.applyPayloadSettings_loaded=function(b){var c=this;if(e.prototype.applyPayloadSettings_loaded.call(this,b),void 0!==b){if(this.applyMaterialChange(this.getProperty("material"),this._getMaterialType()),b&&b.hasOwnProperty("customDepthMaterial")){var d=this.getProperty("customDepthMaterial"),f=this.veroldEngine.assetRegistry.Materials.getAssetById(d);f&&(f.once("load",function(){c.threeData.customDepthMaterial=c.veroldEngine.assetRegistry.Materials.materialObjectTypes[c._getMaterialType()].skinning===!0?f.threeData.depth_skinned:f.threeData.depth_static}),f.load())}b.hasOwnProperty("geometry")&&a.isObject(this.getProperty("geometry"))&&(this.isInstance()||(c.applyPrimitiveMeshChanges(),c.threeData.geometry&&c.threeData.geometry.dispose())),this.trigger("updated",this)}},f.prototype.applyPayloadSettings_unloaded=function(b){var c;if(b&&b.hasOwnProperty("material")){var d,e=this.getPreviousProperty("material"),f=this.getProperty("material");a.isArray(f)?a.each(f,function(a,b){d=this.veroldEngine.assetRegistry.Materials.getAssetById(a),d&&(c=this.getParentAsset(),void 0===e?c.registerMaterial(a):e[b]!==a&&(c.registerMaterial(a),c.unregisterMaterial(e[b])))},this):(d=this.veroldEngine.assetRegistry.Materials.getAssetById(f),d&&(c=this.getParentAsset(),void 0===e?c.registerMaterial(f):e!==f&&(c.registerMaterial(f),c.unregisterMaterial(e)))),this.trigger("sizeNeedsUpdate",this)}if(b&&b.hasOwnProperty("customDepthMaterial")){var g=this.getPreviousProperty("customDepthMaterial"),h=this.getProperty("customDepthMaterial"),i=this.veroldEngine.assetRegistry.Materials.getAssetById(h);i&&(c=this.getParentAsset(),void 0===g?c.registerMaterial(h):g!==h&&(c.registerMaterial(h),c.unregisterMaterial(g)))}},f.prototype.applyMaterialChange=function(c,d){var e=null,f=this.getPreviousProperty("material");if(e=this.veroldEngine.assetRegistry.Materials.materialObjectTypes[d].skinning===!0?"depth_skinned":"depth_static",this.isInstance()&&!c&&(c=this.getProperty("material")),a.isObject(c)){if(this.threeData.geometry.offsets){var g=this.threeData.geometry.offsets[this.threeData.geometry.offsets.length-1].materialIndex+1;a.size(c)<g&&(console.warn("Material array has shrunk for mesh, "+this.id+". It should be "+g+" but is "+a.size(c)),c=c.concat(new Array(g-a.size(c))))}var h=[];this.threeData.material||(h=new Array(a.size(c)),this.threeData.material=new b.MeshFaceMaterial(h)),a.each(f,function(a){var b=this.veroldEngine.assetRegistry.Materials.getAssetById(a);b&&b.entityModel.off("change:payload",this.onMaterialSettingsChanged,this)},this),a.each(c,function(a,b){var c=this.veroldEngine.assetRegistry.Materials.getAssetById(a);if(c){c.entityModel.on("change:payload",this.onMaterialSettingsChanged,this),c.load(),this.threeData.material.materials[b]=c.getThreeData()[d];var e=c.entityModel.get("payload");2===e.alphaBlendMode}else this.threeData.material.materials[b]=this.veroldEngine.assetRegistry.Materials.getMissingMaterial().threeData[d]},this)}else{var i=this.veroldEngine.assetRegistry.Materials.getAssetById(f);i&&i.entityModel.off("change:payload",this.onMaterialSettingsChanged,this);var j=this.veroldEngine.assetRegistry.Materials.getAssetById(c);if(j){j.entityModel.on("change:payload",this.onMaterialSettingsChanged,this),j.load(),this.threeData.material=j.getThreeData()[d],this.threeData.customDepthMaterial=null;var k=j.entityModel.get("payload");2===k.alphaBlendMode&&k.diffuseTexture&&(this.threeData.customDepthMaterial=j.getThreeData()[e])}else this.threeData.material=this.veroldEngine.assetRegistry.Materials.getMissingMaterial().threeData[d],this.threeData.customDepthMaterial=null}},f.prototype.onMaterialSettingsChanged=function(a){if(a&&this.threeData){var b=a.changed.payload;if(void 0!==b.alphaBlendMode)if(2===b.alphaBlendMode){var c=this._getMaterialType(),d=null;d=this.veroldEngine.assetRegistry.Materials.materialObjectTypes[c].skinning===!0?"depth_skinned":"depth_static";var e=this.veroldEngine.assetRegistry.Materials.getAssetById(a.get("id"));this.threeData.customDepthMaterial=e.getThreeData()[d]}else this.threeData.customDepthMaterial=null}},f.prototype.onSourceGeometryChanged=function(a){this.threeData&&this.threeData.geometry&&(this.threeData.geometry=a)},f.prototype.applyPrimitiveMeshChanges=function(){var a=this.getProperty("geometry"),b=this._createGeometricPrimitive(a),c={};b.groupsNeedUpdate=!0,b.computeBoundingBox(),c.min={x:b.boundingBox.min.x,y:b.boundingBox.min.y,z:b.boundingBox.min.z},c.max={x:b.boundingBox.max.x,y:b.boundingBox.max.y,z:b.boundingBox.max.z},this.set({"payload.boundingbox":c},{silent:!0}),b&&(this.threeData.geometry=b,this.trigger("sourceGeometryChanged",b))},f.prototype._createGeometricPrimitive=function(a,c){var d=null;switch(a.type){default:console.error(this.veroldEngine.engineName+' - BaseMeshObject: Unrecognized geometry type, "'+a.type+'"');break;case"Box":case"Cube":var e=a.scale?a.scale:{x:1,y:1,z:1};d=new b.BoxGeometry(e.x,e.y,e.z,a.segmentsX,a.segmentsY,a.segmentsZ,c);break;case"Cylinder":d=new b.CylinderGeometry(a.radiusTop,a.radiusBottom,a.height,a.segmentsRadius,a.segmentsHeight,a.openEnded);break;case"Plane":var f=a.uvMult?a.uvMult:1,g=(new b.Matrix4).makeRotationX(-Math.PI/2);d=new b.PlaneBufferGeometry(a.scale.x,a.scale.y,a.segmentsX,a.segmentsY,f),d.applyMatrix(g);break;case"Sphere":d=new b.SphereGeometry(a.radius,a.segments,a.rings);break;case"Torus":d=new b.TorusGeometry(a.radius,a.tube,a.segmentsR,a.segmentsT,a.arc)}return d&&(d.computeTangents(),d.dynamic=!0),d},f.prototype._createThreeMesh_geometryLoaded=function(a){var c,d;if(a){var e=this.entityModel.get("payload");if(!e.boundingbox){var f={};a.computeBoundingBox(),f.min={x:a.boundingBox.min.x,y:a.boundingBox.min.y,z:a.boundingBox.min.z},f.max={x:a.boundingBox.max.x,y:a.boundingBox.max.y,z:a.boundingBox.max.z},this.set({"payload.boundingbox":f},{save:!0})}var g=this.getProperty("dynamic");a.dynamic=void 0!==g?g:!1,a.computeBoundingSphere(),c=this._allocateMesh(a),c.castShadow=!0,c.receiveShadow=!0,c.material=null;var h=this.getParentAsset();h.trigger("meshLoaded",this)}else console.warn(this.veroldEngine.engineName+" - The mesh, "+this.id+", failed to download."),c=new b.Object3D;c.veroldEntityId=this.id,this.threeData=c,d=this.entityModel.get("name"),d&&(c.name=d),a?this.trigger("load_base",this):this.trigger("load_base_failure",this)},f.prototype._createThreeMesh=function(){this.threeData&&console.warn("TODO: THREE.Mesh is being recreated. Update referencers of this mesh!");var b=this,d=this.entityModel.get("payload"),e=d._geometry||d.geometry,f=d.geometryId,g=d.geometryName,h=function(a){b._createThreeMesh_geometryLoaded(a)};if(f&&g){var i=this.veroldEngine.assetRegistry.Geometries.getAssetById(f);i?i.load({load_base:function(){var a=i.createBufferGeometry(g);a?h(a):console.warn(b.veroldEngine.engineName+" - BaseMeshObject: Failed to create geometry",f,g)}}):console.error(this.veroldEngine.engineName+" - BaseMeshObject: No such geometry asset ("+f+")")}else if(e)if(a.isString(e)){var j=this.entityModel.getPath(),k={downloadAll:d.downloadAll===!0},l=new c(this.veroldEngine);l.load(j,h,function(a){b._updateLoadingProgress(a)},k)}else{var m=b._createGeometricPrimitive(e,d.flipSided);h(m)}else console.error(this.veroldEngine.engineName+" - BaseMeshObject: No geometry specified for mesh.")},f.prototype.getParentModel=function(a){a||(a=this);var b=a.getParentObject();return b?"model"===b.type||"prefab"===b.type?b:this.getParentModel(b):null},f.prototype.onMaterialUnloaded=function(a){function b(a){var b=c.veroldEngine.assetRegistry.Materials.getMissingMaterial(),e=b.id;console.log("Material that is in-use by "+c.id+" has been deleted."),void 0!==a&&(e=c.getProperty("material"),e[a]=b.id),c.applyMaterialChange(e,d)}var c=this,d=this._getMaterialType(),e=this.veroldEngine.assetRegistry.Materials.getAssetById(a);if(e&&e.entityModel.off("change:payload",this.onMaterialSettingsChanged,this),this.threeData&&this.threeData.material)if(this.threeData.material.materials)for(var f in this.threeData.material.materials){var g=this.threeData.material.materials[f].veroldEntityId;g===a&&b(f)}else this.threeData.material.veroldEntityId===a&&b()},f.prototype.isMultiMaterial=function(){var b=this.getMaterial();return a.isArray(b)},f.prototype.setMaterial=function(b,c){if(!a.isString(b)){if(!(b instanceof VAPI.MaterialAsset))return void console.error("BaseMeshObject:setMaterial should be passed a valid Id of a material asset.");b=b.id}var d=this.getProperty("material");if(this.isMultiMaterial()){var e=[];for(var f in d)e.push(d[f]);if(c>=0)e[c]=b,this.setProperty("material",e);else{for(var f in d)e[f]=b;this.setProperty("material",e)}}else this.setProperty("material",b)},f.prototype._updateLoadingProgress=function(a){this.loadingProgress.geometry=a.percent*a.total,this.trigger("load_progress",this)},f.prototype.castShadowsEnable=function(a){this.setProperty("castShadow",!0,a),this.veroldEngine.needsRender=!0},f.prototype.castShadowsDisable=function(a){console.log("OFFFFF"),this.setProperty("castShadow",!1,a),this.veroldEngine.needsRender=!0},f.prototype.castShadowsToggle=function(a){var b=this.getProperty("castShadow")?!1:!0;this.setProperty("castShadow",b,a),this.veroldEngine.needsRender=!0},window.VAPI=window.VAPI||{},window.VAPI.BaseMeshObject=f,f}),define("VeroldEngine/Objects/SkinnedMeshObject",["underscore","async","three","VeroldEngine/Objects/BaseMeshObject"],function(a,b,c,d){var e=function(){d.call(this)};return e.prototype=new d,a.extend(e.prototype,{initialize:function(a){var b=d.prototype.initialize.call(this,a);return b===!1?!1:void 0},unload:function(a){d.prototype.unload.call(this,a)},applyPayloadSettings_loaded:function(a){d.prototype.applyPayloadSettings_loaded.call(this,a)},_allocateMesh:function(a){var b=this.getProperty("useVertexTexture")!==!1&&this.veroldEngine.getGPUCapability("MAX_VERTEX_TEXTURE_IMAGE_UNITS")>0?!0:!1,d=new c.SkinnedMesh(a,void 0,b);return d.frustumCulled=!1,d},_getBindPose:function(a,b){if(a.bindPose)return b(a.bindPose);var c=this,d=this.isInstance()?this.getSourceObject():this,e=d.entityModel.get("payload"),f=this.veroldEngine.assetRegistry,g=f.Poses.getAssetById(e.pose);return g?void g.load({load:function(a){var e=d.getParentAsset(),f=e.entityModel.get("payload"),g=void 0!==f.formatVersion?f.formatVersion:4;if(a&&a.threeData){var h=a.threeData;if(g>=5){var i=c.entityModel.get("name");for(var j in h){var k=h[j];if("BindPose"===k.type&&k.children[i])return b(k.children)}}else if(g>=4&&h.length>0)return b(h[0])}return b(null)}}):b(null)},_createThreeMesh_geometryLoaded:function(a){a.boneNames=a.bones,a.bones=void 0,d.prototype._createThreeMesh_geometryLoaded.call(this,a)},_getMaterialType:function(){return this.threeData instanceof c.SkinnedMesh?"skinned":this.threeData instanceof c.Mesh?"static":"skinned"},bindToHierarchy:function(a,b){if(!(a&&this.threeData&&this.threeData.geometry&&this.threeData.geometry.boneNames))return void(b&&b());for(var d=a.getDecendants(),e=Object.keys(d),f={},g=this.threeData.geometry.boneNames,h=[],i=this,j=0;j<e.length;++j){var k=d[e[j]],l=k.entityModel.get("name");f[l]=k}f[a.entityModel.get("name")]=a;for(var m=0;m<g.length;++m){var n=g[m],k=f[n];h.push(k?k.threeData:null)}this._getBindPose(this.threeData.geometry,function(a){function d(a,b){var e=new c.Matrix4,f=new c.Matrix4,g=new c.Vector3,h=new c.Quaternion,i=new c.Vector3;return b?(pose=a?a[b.name]:null,pose?(g.set(pose.position[0],pose.position[1],pose.position[2]),h.set(pose.quaternion[0],pose.quaternion[1],pose.quaternion[2],pose.quaternion[3]),i.set(pose.scale[0],pose.scale[1],pose.scale[2]),e.compose(g,h,i)):e.compose(b.position,b.quaternion,b.scale),f=d(a,b.parent),e.multiplyMatrices(f,e),e):e}if(!a)return console.warn("Failed to get bind pose for "+i.entityModel.get("name")),void(b&&b());for(var e,f,j=[],k=0;k<g.length;++k){var l,m=new c.Matrix4;l=d(a,h[k]),m.getInverse(l),j.push(m)}e=d(a,i.threeData),f=new c.Skeleton(h,j,i.threeData.skeleton.useVertexTexture),i.threeData.bind(f,e),b&&b()})}}),window.VAPI=window.VAPI||{},window.VAPI.SkinnedMeshObject=e,e}),define("VeroldEngine/Objects/StaticMeshObject",["underscore","VeroldEngine/Objects/BaseMeshObject"],function(a,b){var c=function(){b.call(this)};return c.prototype=new b,a.extend(c.prototype,{_allocateMesh:function(a){return new THREE.Mesh(a)},_getMaterialType:function(){return"static"}}),window.VAPI=window.VAPI||{},window.VAPI.StaticMeshObject=c,c}),define("VeroldEngine/Objects/ModelObject",["underscore","three","async","VeroldEngine/Objects/VeroldObject"],function(a,b,c,d){var e=function(){d.call(this),this.isBound=!1};return e.prototype=new d,a.extend(e.prototype,{initialize:function(a){var b=d.prototype.initialize.call(this,a);return b===!1?!1:(this.entityModel.get("prefabInstanceId")||this.entityModel.set({prefabInstanceId:this.id}),b)},unload:function(a){this.animation&&this.animation.stop(),d.prototype.unload.call(this,a)},_loadThreeData:function(a,b){var c=this;this.traverse(function(a){a.entityModel.get("prefabInstanceId")||a.entityModel.set({prefabInstanceId:this.id})});var e=c.entityModel.toJSON();d.prototype._loadThreeData.call(c,e,b)},applyPayloadSettings_loaded:function(a){var b=(this.entityModel.get("payload"),this);d.prototype.applyPayloadSettings_loaded.call(this,a),c.series([function(a){return b.isBound?a():void b.load({load_hierarchy:function(){b.bindChildMeshes(function(){a()})}})},function(a){b.trigger("updated",b),a()}])},bindChildMeshes:function(a){var b=[],d=this;this.traverse(function(a){"skinned_mesh"===a.type&&b.push(a)}),c.forEachSeries(b,function(a,b){a.bindToHierarchy(d,function(){b()})},function(){d.isBound=!0,a()})}}),window.VAPI=window.VAPI||{},window.VAPI.ModelObject=e,e}),define("VeroldEngine/AssetRegistry/VeroldAsset",["underscore","three","VeroldEngine/models/entity","async","VeroldEngine/libs/uuid","VeroldEngine/VeroldEntity","VeroldEngine/Objects/VeroldObject","VeroldEngine/Objects/CameraObject","VeroldEngine/Objects/LightObject","VeroldEngine/Objects/SkinnedMeshObject","VeroldEngine/Objects/StaticMeshObject","VeroldEngine/Objects/ModelObject"],function(a,b,c,d,e,f,g,h,i,j,k,l){var m=function(){f.call(this),this.objects={},this.registry=void 0,this.loadComponents=!1,this.waitingForEntities={}};return m.prototype=new f,m.prototype.events={triggerLoad:{scope:"local",params:[],action:!0,category:"Loading"}},m.prototype.initialize=function(a){f.prototype.initialize.call(this,a),this.initializeComponents(),this.projectId=a.projectId,this.entityModel.get("dependencies")||this.entityModel.set({dependencies:{textures:{},materials:{},geometries:{},animations:{}}},{silent:!0}),this.entityModel.subEntities.on("reset",this.onEntityLoadObjects,this),this.entityModel.subEntities.on("add",this.onEntityAddObject,this),this.entityModel.subEntities.on("remove",this.onEntityRemoveObject,this),this.on("triggerLoad",this.load,this),this._initAssetObjects(),this.registry=a.registry,"initialized"===this.veroldEngine.state&&this._initDependenciesList()},m.prototype.uninitialize=function(){this.off("triggerLoad",this.load,this),this.entityModel.subEntities.off("reset",this.onEntityLoadObjects,this),this.entityModel.subEntities.off("add",this.onEntityAddObject,this),this.entityModel.subEntities.off("remove",this.onEntityRemoveObject,this),f.prototype.uninitialize.call(this);for(var a in this.objects)this.objects[a].uninitialize(),delete this.objects[a]},m.prototype._initAssetObjects=function(){function b(c,d,e){var f=c.entityModel.get("children");a.each(f,function(a,f){if(a){var g=d.getObjectById(f);g&&(e(g,c),b(g,d,e))}},this)}for(var c=0;c<this.entityModel.subEntities.models.length;c++){var d=this.entityModel.subEntities.models[c];this.objects[d.get("id")]||this._registerEntityAsObject(d)}var e={},f=this;b(this,this,function(a,b){if(e[a.id]){console.error("Cycle found in asset hierarchy. Fixing...");var c=f.objects[a.entityModel.get("parentId")],d={};d["children."+a.id]=!1,c!==b?b.set(d,{silent:!0}):e[a.id].set(d,{silent:!0})}else e[a.id]=b})},m.prototype._initDependenciesList=function(){if(this.veroldEngine.isPrimaryEngine()&&!this.dependenciesListInit){var b=this.entityModel.get("children");a.each(b,function(a,b){if(a){var c=this.getObjectById(b);c&&c.registerInitialDependencies()}},this),this.dependenciesListInit=!0}},m.prototype.getDataSizeTotalDownload=function(){var a=0;
a+=this.getDataSizeGeometryDownload(),a+=this.getDataSizeTextureDownload()},m.prototype.getDataSizeTotalInMemory=function(){var a=0;a+=this.getDataSizeGeometryInMemory(),a+=this.getDataSizeTextureInMemory()},m.prototype.getDataSizeGeometryDownload=function(){var b=0,c=this.entityModel.get("dependencies").geometries;return a.each(c,function(a,c){var d=this.getAssetById(a.sourceAssetId);if(d){var e=0;if(d!==this)e=d.getDataSizeGeometryDownload();else{var f=d.getObjectById(c);e=f.getDataSizeGeometryDownload()}e&&(b+=e)}},this),b},m.prototype.getDataSizeGeometryDownloadUncompressed=function(){var b=0,c=this.entityModel.get("dependencies").geometries;return a.each(c,function(a){var c=this.getAssetById(a.sourceAssetId);if(c){var d=c.getDataSizeGeometryDownloadUncompressed();d&&(b+=d)}},this),b},m.prototype.getDataSizeGeometryInMemory=function(){var b=0,c=this.entityModel.get("dependencies").geometries;return a.each(c,function(a,c){var d=this.getAssetById(a.sourceAssetId);if(d){var e=0;if(d!==this)e=d.getDataSizeGeometryInMemory();else{var f=d.getObjectById(c);e=f.getDataSizeGeometryInMemory()}e&&(b+=e)}},this),b},m.prototype.getDataSizeTextureDownload=function(){var b=0,c=this.entityModel.get("dependencies").textures;return a.each(c,function(a,c){var d,e=this.getAssetById(c);e&&(d=e.getDataSizeTextureDownload()),d&&(b+=d)},this),b},m.prototype.getDataSizeTextureDownload_Uncompressed=function(){var b=0,c=this.entityModel.get("dependencies").textures;return a.each(c,function(a,c){var d,e=this.getAssetById(c);e&&(d=e.getDataSizeTextureDownload_Uncompressed()),d&&(b+=d)},this),b},m.prototype.getDataSizeTextureInMemory=function(){var b=0,c=this.entityModel.get("dependencies").textures;return a.each(c,function(a,c){var d,e=this.getAssetById(c);e&&(d=e.getDataSizeTextureInMemory()),d&&(b+=d)},this),b},m.prototype.getDataSizeAnimationInMemory=function(){var b=0,c=this.entityModel.get("dependencies").animations;return a.each(c,function(a,c){var d,e=this.getAssetById(c);e&&(d=e.getDataSizeAnimationInMemory()),d&&(b+=d)},this),b},m.prototype.getDataSizeAnimationDownload=function(){var b=0,c=this.entityModel.get("dependencies").animations;return a.each(c,function(a,c){var d,e=this.getAssetById(c);e&&(d=e.getDataSizeAnimationDownload()),d&&(b+=d)},this),b},m.prototype.getAssetById=function(a){return this.veroldEngine.assetRegistry.getAssetById(a)},m.prototype.getObject=function(a){for(var b in this.objects)if(this.objects[b].isMatch(a))return this.objects[b];return null},m.prototype.getObjectById=function(a){return this.objects[a]?this.objects[a]:a===this.id?this:null},m.prototype.getObjectByName=function(a){var b=this.getObjects({name:a});return b&&b.length?b[0]:null},m.prototype.getObjects=function(b){if(a.isObject(b)){var c=[];return a.each(this.objects,function(a){a.isMatch(b)&&c.push(a)},this),c}return this.objects},m.prototype.getResource=function(a){var b=this.getResources(a);return b.length>0?b[0]:null},m.prototype.getResourcePath=function(a){var b=this.getResource(a);return b?this.entityModel.getResourcePathPrefix()+b.path:null},m.prototype.getResourcePaths=function(b){var c=this.getResources(b);return a.map(c,a.bind(function(a){return this.entityModel.getResourcePathPrefix()+a.path},this))},m.prototype.getResources=function(){return this.entityModel.getResources()},m.prototype.load_dependencies=function(){var b=this,c=this.entityModel.get("dependencies"),e=a.keys(c.textures),f=a.keys(c.animations),g=e.concat(f);d.forEach(g,function(a,c){var d=b.getAssetById(a);d?("animation"===d.type?d.on("load_progress",b.onAnimationLoadProgress,b):d.on("load_progress",b.onTextureLoadProgress,b),d.once("load",function(){c()},b),d.load()):c()},function(){b.trigger("load_dependencies",b)})},m.prototype.load_hierarchy=function(b){f.prototype.load_hierarchy.call(this,b);var c=this.entityModel.get("dependencies");a.each(c.geometries,function(a,b){var c=this.getAssetById(a.sourceAssetId),d=c.getObjectById(b);d&&d.on("load_progress",this.onGeometryLoadProgress,this)},this)},m.prototype.unload=function(b){var c=this.entityModel.get("dependencies");a.each(c.geometries,function(a,b){var c=this.getAssetById(a.sourceAssetId);if(c){var d=c.getObjectById(b);d&&d.off("load_progress",this.onGeometryLoadProgress,this)}},this),a.each(c.textures,function(a,b){var c=this.getAssetById(b);c&&c.off("load_progress",this.onTextureLoadProgress,this)},this),a.each(c.animations,function(a,b){var c=this.getAssetById(b);c&&c.off("load_progress",this.onAnimationLoadProgress,this)},this),f.prototype.unload.call(this,b),this.cleanOrphanObjects({save:!0})},m.prototype.cleanOrphanObjects=function(b){var c=a.clone(this.objects);this.traverse(function(a){delete c[a.id]}),b||(b={}),b.nonRecursive=!0,a.each(c,function(a){console.log(this.type+" asset has orphaned "+a.type+", "+a.id),a.entityModel.isPersistent&&this.destroyObject(a.id,b)},this)},m.prototype.onGeometryLoadProgress=function(){this.loadingProgress.geometriesNeedUpdate=!0},m.prototype.onTextureLoadProgress=function(){this.loadingProgress.texturesNeedUpdate=!0},m.prototype.onAnimationLoadProgress=function(){this.loadingProgress.animationsNeedUpdate=!0},m.prototype.getLoadingProgress=function(){var a=this.getDataSizeGeometryInMemory(),b=this.getDataSizeTextureDownload_Uncompressed(),c=this.getDataSizeAnimationInMemory(),d=b+a+c;return d?((this.loadingProgress.geometry?this.loadingProgress.geometry:0)+(this.loadingProgress.textures?this.loadingProgress.textures:0)+(this.loadingProgress.animations?this.loadingProgress.animations:0))/d:1},m.prototype.getLoadingProgressGeometry=function(){var a=this.getDataSizeGeometryInMemory();return a?(this.loadingProgress.geometry?this.loadingProgress.geometry:0)/a:1},m.prototype.getLoadingProgressTextures=function(){var a=this.getDataSizeTextureDownload_Uncompressed();return a?(this.loadingProgress.textures?this.loadingProgress.textures:0)/a:1},m.prototype.getLoadingProgressAnimations=function(){var a=this.getDataSizeAnimationInMemory();return a?(this.loadingProgress.animations?this.loadingProgress.animations:0)/a:1},m.prototype.updateGeometryLoadingProgress=function(){var b=0,c=this.entityModel.get("dependencies");a.each(c.geometries,function(a,c){var d=this.getAssetById(a.sourceAssetId);if(d){var e=d.getObjectById(c);e&&e.loadingProgress.geometry&&(b+=e.loadingProgress.geometry)}},this),this.loadingProgress.geometry=b},m.prototype.updateTextureLoadingProgress=function(){var b=0,c=this.entityModel.get("dependencies");a.each(c.textures,function(a,c){var d=this.getAssetById(c);d&&d.loadingProgress.textures&&(b+=d.loadingProgress.textures)},this),this.loadingProgress.textures=b},m.prototype.updateAnimationLoadingProgress=function(){var b=0,c=this.entityModel.get("dependencies");a.each(c.animations,function(a,c){var d=this.getAssetById(c);d&&d.loadingProgress.animations&&(b+=d.loadingProgress.animations)},this),this.loadingProgress.animations=b},m.prototype.registerDependency=function(a){var b=this.veroldEngine.getEntityById(a);if(b)switch(b.type){case"texture2D":case"renderTexture2D":case"textureCube":case"renderTextureCube":this.registerTexture(a);break;case"material":this.registerMaterial(a);break;case"geometry":this.registerGeometry(a);break;case"animation":this.registerAnimation(a)}},m.prototype.registerGeometry=function(a){if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()){var b=this.veroldEngine.assetRegistry.getAssetById(a),c=a,d=a;if(b)b.on("load_progress",this.onGeometryLoadProgress,this);else{var e=this.getObjectById(a);if(!e)return void console.warn(this.veroldEngine.engineName+" - VeroldAsset: Failed to register geometry.",a);var f=e.getSourceObject();f?(c=f.id,d=e.getSourceAsset().id):(c=e.id,d=this.id)}var g=this.entityModel.get("dependencies").geometries;g[c]?g[c].count++:g[c]={count:1,sourceAssetId:d}}},m.prototype.unregisterGeometry=function(a){if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()){var b=this.veroldEngine.assetRegistry.getAssetById(a),c=a,d=a;if(!b){var e=this.getObjectById(a);if(!e)return void console.warn(this.veroldEngine.engineName+" - VeroldAsset: Failed to register geometry.",a);var f=e.getSourceObject();f?(c=f.id,d=e.getSourceAsset().id):(c=e.id,d=this.id)}var g=this.entityModel.get("dependencies").geometries;g[c]&&(g[c].count--,0===g[c].count&&delete g[c])}},m.prototype.registerMaterial=function(b){if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()&&b){var c=this.veroldEngine.assetRegistry.getAssetById(b);if(!c)return;var d=this.entityModel.get("dependencies").materials,e=this;d[b]?d[b].count++:(d[b]={count:1},d[b].onTextureChange=function(a,c){for(var f=0;f<d[b].count;f++)a&&e.registerTexture(a),c&&e.unregisterTexture(c)},c.on("textureChange",d[b].onTextureChange,this)),a.each(c.entityModel.get("dependencies").textures,function(a,b){for(var c=0;c<a.count;c++)this.registerTexture(b)},this)}},m.prototype.unregisterMaterial=function(b){if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()){var c=this.entityModel.get("dependencies").materials;if(c[b]){c[b].count--;var d=this.veroldEngine.assetRegistry.getAssetById(b);if(!d)return;0===c[b].count&&(d.off("textureChange",c[b].onTextureChange,this),delete c[b]),a.each(d.entityModel.get("dependencies").textures,function(a,b){for(var c=0;c<a.count;c++)this.unregisterTexture(b)},this)}}},m.prototype.registerTexture=function(a){var b=this.getAssetById(a);if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()&&a&&"null"!==a){var c=this.entityModel.get("dependencies").textures;c[a]?c[a].count++:c[a]={count:1},b&&b.on("load_progress",this.onTextureLoadProgress,this),this.trigger("textureChange",a,null)}},m.prototype.unregisterTexture=function(a){if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()){var b=this.entityModel.get("dependencies").textures;b[a]&&(b[a].count--,0===b[a].count&&delete b[a],this.trigger("textureChange",null,a))}},m.prototype.registerAnimation=function(a){var b=this.getAssetById(a);if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()&&a&&"null"!==a){var c=this.entityModel.get("dependencies").animations;c[a]?c[a].count++:c[a]={count:1},b&&b.on("load_progress",this.onAnimationLoadProgress,this)}},m.prototype.unregisterAnimation=function(a){if(this.veroldEngine&&this.veroldEngine.isPrimaryEngine()){var b=this.entityModel.get("dependencies").textures;b[a]&&(b[a].count--,0===b[a].count&&delete b[a])}},m.prototype.whenObjectRegistered=function(a,b){var c=this.getObjectById(a);c&&b?b.call(this,c):b&&(this.waitingForEntities[a]||(this.waitingForEntities[a]=[]),this.waitingForEntities[a].push(b))},m.prototype.onEntityLoadObjects=function(a){for(var b=0;b<a.models.length;b++)this._registerEntityAsObject(a.models[b])},m.prototype.onEntityAddObject=function(a){a.set({parentAssetId:this.id},{silent:!0}),this._registerEntityAsObject(a);var b=this.getObjectById(a.get("id"));if(b){b.initializeComponents();var c=this.waitingForEntities[b.id];if(c)for(var d=0;d<c.length;d++)c[d].call(this,b)}else console.error("Failed to register object, "+a.id+": ",a);this.trigger("objectCreated",b)},m.prototype.onEntityRemoveObject=function(a){this._unregisterEntityAsObject(a),this.trigger("objectDeleted",a)},m.prototype._registerEntityAsObject=function(a){if(!a)return void console.error(this.veroldEngine.engineName+" - VeroldAsset: Trying to create an object with no backbone model.");var b,c=a.get("type");if("camera"===c)b=new h;else if("light"===c)b=new i;else if("mesh"===c)b=new k;else if("skinned_mesh"===c)b=new j;else if("prefab"===c)console.error("Trying to add a prefab as an object!!"),a.set({type:"model"}),b=new g;else if("model"===c)b=new l;else{if("node"!==c)return void console.warn("TODO: support for object type, "+c+", under asset type, "+this.type);b=new g}var d=b.initialize({entityModel:a,veroldEngine:this.veroldEngine,type:c});return d===!1?(console.error("Failed to initialize "+c+" object, "+a.id+", under "+this.entityModel.get("type")+" asset, "+this.id),void b.uninitialize()):(this.objects[b.id]=b,void(this.veroldEngine.entities[b.id]=b))},m.prototype._unregisterEntityAsObject=function(a){a||console.error(this.veroldEngine.engineName+" - VeroldAsset: unregistering an object with no backbone model."),this.objects[a.id]&&(this.objects[a.id].unload({nonRecursive:!0}),delete this.objects[a.id])},m.prototype.createObject=function(a,b){function d(a){!a.entityModel.isPersistent||b&&(b.remote||b.undo)||e.veroldEngine.globalEvents.trigger("entityAddedChange",a.entityModel),b.success&&b.success(a)}var e=this;if(b||(b={}),!a.id&&!b.persistent)return void console.error(this.veroldEngine.engineName+" - VeroldEntity.createObject : You must specify a unique id for non-persistent objects.");if(this.objects[a.id]&&b.persistent)return void console.error(this.veroldEngine.engineName+" - VeroldEntity.createObject : Trying to create object with id, "+a.id+", that already exists.");a.payload||(a.payload={}),a.components||(a.components={}),a.name||(a.name=""),a.id=this.generateUniqueObjectID(a.id),a.parentAssetId=this.id,a.type||console.error(this.veroldEngine.engineName+" - VeroldEntity.createObject : Can't create a new VeroldEntity without specifying a type!");var f=new c(a);f.veroldEngine=this.veroldEngine,f.isPersistent=b.persistent||b.alreadyInDatabase?!0:!1,b.alreadyInDatabase||!f.isPersistent?this._addEntityObject(f,{success:d,failure:b.failure}):this._addNewEntityObject(f,{success:d,failure:b.failure})},m.prototype.destroy=function(a){this.flaggedForDelete=!0,this.registry.destroyAsset(this.id,a)},m.prototype.destroyObject=function(b,c){function e(){if(g.isPersistent&&c.save){var a={};a.connectionId=window.socket?window.socket.io.engine.id:null,a.syncObjects={stream1:"sceneUpdates"},a.parentAssetId=j.id,c.nonRecursive&&(a.beforeSend=function(a){a.setRequestHeader("X-Verold-Recursive","false")}),a.success=function(){c.success&&c.success()},g.veroldEngine=void 0,g.destroy(a)}else j.entityModel.subEntities.remove(g),c.success&&c.success()}var f=this.objects[b];if(!f)return console.warn(this.veroldEngine.engineName+" - VeroldAsset.destroyObject : You must specify a valid object ID to destroy."),void(c&&c.failure&&c.failure());!f.entityModel.isPersistent||c&&(c.remote||c.undo)||this.veroldEngine.globalEvents.trigger("entityRemovedChange",f.entityModel),c||(c={}),f.flaggedForDelete=!0;var g=f.entityModel,h=g.get("children"),i=f.getParentObject(),j=this;if(g.isPersistent&&c.save)e();else if(c.nonRecursive)i&&!i.flaggedForDelete&&i.getChildren()[f.id]?i.removeChild(f,{save:c.save,success:function(){e()}}):e();else{var k=a.keys(h);d.forEach(k,function(a,b){h[a]?j.destroyObject(a,{success:b,failure:b,save:!1}):b()},function(){i&&!i.flaggedForDelete&&i.getChildren()[f.id]?i.removeChild(f,{save:c.save,success:function(){e()}}):e()})}},m.prototype.clone=function(a){if(a||(a={}),a.persistent){var b=this,c={};c.connectionId=window.socket?window.socket.io.engine.id:null,this.entityModel.getClone(c,function(c){b.veroldEngine.assetRegistry.whenAssetRegistered(c.id,function(c){var d={name:""};d.name=b.veroldEngine.assetRegistry.generateUniqueAssetName(void 0!==a.name?a.name:c.entityModel.get("name")),d.name!==c.entityModel.get("name")&&c.set(d,{save:a.persistent}),a.success&&a.success(c)})})}else console.error("TODO: need to implement cloning of non-persistent assets.")},m.prototype._addNewEntityObject=function(a,b){var c=this,d=a.toJSON();delete d.id,a.unset("id",{silent:!0}),delete a.id,a.set({projectId:this.veroldEngine.assetRegistry.entityCollection.project.id},{silent:!0}),window.socket&&window.socket.socket&&(d.connectionId=window.socket.io.engine.id,d.parentAssetId=this.id),d.payload||(d.payload={}),a.save(d,{wait:!0,success:function(a){console.log(c.veroldEngine.engineName+" - New object saved: ",d),c.whenObjectRegistered(a.id,b.success)},error:function(a,c){b&&b.failure&&b.failure(a,c)}})},m.prototype._addEntityObject=function(a,b){this.entityModel.subEntities.add(a),b.success&&b.success(this.getObjectById(a.id))},m.prototype.onEntityNameChanged=function(a,b){var c=a.changed;c.name&&(this.name=this.veroldEngine.assetRegistry.generateUniqueAssetName(b,this),this.threeData&&void 0!==this.threeData.name&&(this.threeData.name=b),this.name!==this.entityModel.get("name")&&this.set({name:this.name},{silent:!0}))},m.prototype.generateUniqueObjectID=function(a){var b;return b=this.objects[a]?e():a},m.prototype.generateUniqueObjectName=function(a){var b=a,c=1,d=!1;do{d&&(b=a+"_"+c++),d=!1;for(var e in this.objects){var f=this.objects[e].entityModel.get("name");if(f===b){d=!0;break}}}while(d);return b},window.VAPI=window.VAPI||{},window.VAPI.VeroldAsset=m,m}),define("VeroldEngine/Loaders/GenericLoader",["underscore"],function(a){var b=function(a){this.veroldEngine=a};return b.prototype.constructor=b,b.prototype.loadFile=function(b,c,d,e){function f(){l.abort(),this.veroldEngine.off("shutdown",f,k),clearTimeout(j),a.isFunction(d)&&d(new Error("Download aborted"))}function g(){var a,b=l.getResponseHeader("x-goog-meta-uncompressed-size"),d=l.getResponseHeader("Content-Length");return a=parseInt(b,10),a||(a=parseInt(d,10),"arraybuffer"!==c&&(a*=2.17),a=Math.round(a)),a}function h(){a.isFunction(e)&&m.total>0&&e(m),j=setTimeout(h,400)}function i(a){m.total=g(),m.loaded=a.loaded}var j,k=this,l=new XMLHttpRequest,m={total:0,loaded:0};l.onreadystatechange=function(){if(4===l.readyState)if(k.veroldEngine.off("shutdown",f,k),l.removeEventListener("progress",i),clearTimeout(j),a.isFunction(e)&&(m.total=m.loaded=g(),e(m)),0===l.status||200<=l.status&&l.status<300){var b=l.response;"json"===c&&(b=JSON.parse(l.response)),d(null,b)}else a.isFunction(d)&&d(new Error("Failed to download file"))},l.onerror=function(b){a.isFunction(d)&&d(b),k.veroldEngine.off("shutdown",f,k),l.removeEventListener("progress",i),clearTimeout(j)},l.open("GET",b,!0),l.addEventListener("progress",i,!1),k.veroldEngine.on("shutdown",f,this),"json"!==c&&(l.responseType=c),l.send(null),h()},b}),define("VeroldEngine/AssetRegistry/ApplicationAsset",["underscore","three","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Loaders/GenericLoader"],function(a,b,c){var d=function(){c.call(this)};return d.prototype=new c,a.extend(d.prototype,{initialize:function(a){this.loadComponents=!0,c.prototype.initialize.call(this,a);var b=this.getProperty("loadStartupScene");void 0===b&&this.setProperty("loadStartupScene",null);var d=this.getProperty("useVeroldLoader");void 0===d&&this.setProperty("useVeroldLoader",!0);var e=this.getProperty("engineName");void 0===e&&this.setProperty("engineName","Default");var f=this.getProperty("container");void 0===f&&this.setProperty("container","#verold3d"),this.trigger("load_base_and_hierarchy",this),this.trigger("load_base_and_dependencies",this),this.trigger("load_dependencies",this),this.trigger("load_hierarchy",this),this.trigger("load_hierarchy_dependencies",this)},_loadThreeData:function(){this.veroldEngine.setCurrentApp(this.id);var a=this.veroldEngine.assetRegistry.getAssetById(this.getProperty("loadStartupScene"));a&&a.load(),this.trigger("load_base",this)}}),window.VAPI=window.VAPI||{},window.VAPI.ApplicationAsset=d,d}),define("VeroldEngine/AssetRegistry/ApplicationRegistry",["underscore","three","VeroldEngine/AssetRegistry/ApplicationAsset"],function(a,b,c){var d=function(){this.assets=void 0};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.veroldEngine=a.veroldEngine},uninitialize:function(){for(var a in this.assets)this.assets[a].uninitialize(),delete this.assets[a];this.assets=void 0,this.veroldEngine=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a]},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("VeroldEngine/AssetRegistry/SceneAsset",["underscore","three","async","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Materials/EngineMaterials"],function(a,b,c,d){var e=function(){d.call(this)};return e.prototype=new d,e.prototype.initialize=function(a){this.loadComponents=!0,d.prototype.initialize.call(this,a),this.veroldEngine.on("materialUnloaded",this.onMaterialUnloaded,this),this.veroldEngine.on("prefabDeleted",this.onPrefabDeleted,this),this.veroldEngine.on("update",this.onUpdate,this),this.on("load",this._sceneLoaded,this)},e.prototype.uninitialize=function(a){this.veroldEngine.off("materialUnloaded",this.onMaterialUnloaded,this),this.veroldEngine.off("prefabDeleted",this.onPrefabDeleted,this),this.veroldEngine.off("update",this.onUpdate,this),this.off("load",this._sceneLoaded,this),d.prototype.uninitialize.call(this,a)},e.prototype._sceneLoaded=function(){this.veroldEngine.needsRender=!0},e.prototype._initDependenciesList=function(){if(this.veroldEngine.isPrimaryEngine()&&!this.dependenciesListInit){d.prototype._initDependenciesList.call(this);var a=this.entityModel.get("payload"),b=void 0!==a.environment?a.environment:{};this.registerMaterial(b.groundPlaneMaterial?b.groundPlaneMaterial:"missingMaterial"),a.fog=void 0!==a.fog?a.fog:{type:"FogExp2"}}},e.prototype.createInstanceById=function(a,b){var c=this.getAssetById(a);c&&this.createInstance(c,b)},e.prototype.createInstance=function(b,d){var e={},f=b;if(!f)return void console.error(this.veroldEngine.engineName+" - Please specify a prefab to create an instance of.");if(f.entityModel.isAsset()&&"prefab"!==f.type&&"model"!==f.type)return void console.error(this.veroldEngine.engineName+" - You can only create an instance of a prefab asset.");if(d||(d={}),this===f)return void console.error(this.veroldEngine.engineName+" - Can't create an instance of an object inside itself.",f);var g=this;if(d.persistent&&f.entityModel.isPersistent)e.connectionId=window.socket?window.socket.io.engine.id:null,e.parentAssetId=this.getParentAsset().id,f.entityModel.getInstance(e,function(a){g.whenObjectRegistered(a.id,d.success)});else{d||(d={});var h=f.getParentAsset(),i=d.id?d.id:f.entityModel.get("id")+"_instance";i=g.generateUniqueObjectID(i);var j=void 0!==d.name?d.name:f.entityModel.get("name"),k=a.extend({},f.entityModel.get("payload"),d.payload),l=a.extend({},f.entityModel.get("components"),d.components),m=f.entityModel.get("type");("prefab"===m||"model"===m)&&(m=f.entityModel.get("originalType")?f.entityModel.get("originalType"):"model"),e={id:i,name:j,parentAssetId:this.id,prefabObjectId:f.id,prefabAssetId:h.id,sourceObjectId:f.entityModel.get("sourceObjectId")?f.entityModel.get("sourceObjectId"):f.id,sourceAssetId:f.entityModel.get("sourceAssetId")?f.entityModel.get("sourceAssetId"):h.id,type:m,payload:k,components:l},d.prefabInstanceId||(d.prefabInstanceId=e.id),e.prefabInstanceId=d.prefabInstanceId,this.createObject(e,{persistent:d.persistent,success:function(b){var e=f.entityModel.get("children"),i={};for(var j in e)e[j]&&(i[j]=!0);if(a.isEmpty(e))d.success&&d.success(b);else{var k=a.keys(e);c.forEach(k,function(a,c){if(e[a]){var f=h.getObjectById(a);g.createInstance(f,{persistent:d.persistent,prefabInstanceId:d.prefabInstanceId,success:function(a){b.addChild(a,{save:d.persistent,keepPrefabLinks:!0}),c()}})}},function(){d.success&&d.success(b)})}}})}},e.prototype.onUpdate=function(){this.loadingProgress.geometriesNeedUpdate&&(this.updateGeometryLoadingProgress(),this.loadingProgress.geometriesNeedUpdate=!1,this.trigger("load_progress",this)),this.loadingProgress.texturesNeedUpdate&&(this.updateTextureLoadingProgress(),this.loadingProgress.texturesNeedUpdate=!1,this.trigger("load_progress",this)),this.loadingProgress.animationsNeedUpdate&&(this.updateAnimationLoadingProgress(),this.loadingProgress.animationsNeedUpdate=!1,this.trigger("load_progress",this))},e.prototype.getDataSizeGeometryDownload=function(){var a=0;return a=d.prototype.getDataSizeGeometryDownload.call(this)},e.prototype.getDataSizeGeometryInMemory=function(){var a=0;return a=d.prototype.getDataSizeGeometryInMemory.call(this)},e.prototype._loadThreeData=function(a){this.threeData=new b.Scene,this.threeData.childIDs={},this.threeData.veroldEntityId=this.id,this.threeData.name=this.entityModel.get("name");var c=this.entityModel.get("payload");c.environment||(c.environment={},a.payload.environment={}),c.fog||(c.fog={type:"FogExp2"},a.payload.fog={});var d=c.environment;for(var e in this.registry.defaultEnvironment)void 0===d[e]&&(a.payload.environment[e]=!0,d[e]=this.registry.defaultEnvironment[e]);this.applyPayloadSettings_loaded(a.payload),this.trigger("load_base",this);var f=new b.RenderPass;f.clear=!1,this.veroldEngine.getBaseRenderer().addRenderPass&&this.veroldEngine.getBaseRenderer().addRenderPass(f)},e.prototype.applyPayloadSettings_loaded=function(a){a.fog&&this.applyFogSettings(a.fog),a.environment&&(this.applyEnvironmentSettings(a.environment),this.trigger("updated",this))},e.prototype.applyEnvironmentSettings=function(a){if(this.threeData){var c=this.entityModel.get("payload").environment;if(this.threeData.ground)this.threeData.ground&&this.applyGroundSettings(a);else{this.threeData.ground&&(this.threeData.remove(this.threeData.ground),this.threeData.ground.dispose()),c.groundPlaneMaterialScale=void 0!==c.groundPlaneMaterialScale?c.groundPlaneMaterialScale:40;var d=new b.PlaneBufferGeometry(1,1,40,40,c.groundPlaneMaterialScale,-.5);d.applyMatrix((new b.Matrix4).makeRotationX(-Math.PI/2)),d.computeTangents(),d.dynamic=!1,this.threeData.ground=new b.Mesh(d),this.threeData.ground.frustumCulled=!1,this.threeData.ground.material=null,this.threeData.ground.castShadow=!1,this.threeData.ground.receiveShadow=!0,this.threeData.ground.name="Ground",this.threeData.add(this.threeData.ground),this.applyGroundSettings(a)}}},e.prototype.applyFogSettings=function(a){if(this.threeData){var c=this.entityModel.get("payload").fog;(!this.threeData.fog||a.type)&&("FogExp2"===c.type?this.threeData.fog=new b.FogExp2(this.registry.defaultFog.color,this.registry.defaultFog.density):console.log(this.veroldEngine.engineName+" - SceneAsset.applyFogSettings: Invalid fog type, "+c.type+", in scene!")),void 0!==a.color&&this.threeData.fog.color.setHex(c.color),void 0!==a.density&&(this.threeData.fog.density=c.density)}},e.prototype.applyGroundSettings=function(a){if(this.threeData.ground&&a){var b=this,c=this.entityModel.get("payload").environment;if(void 0!==a.groundPlaneOn&&(this.threeData.ground.visible=c.groundPlaneOn),void 0!==a.groundPlaneScale&&this.threeData.ground.scale.set(c.groundPlaneScale,1,c.groundPlaneScale),void 0!==a.groundPlaneMaterial){var d=b.threeData.ground.visible;b.threeData.ground.visible=!1;var e=this.veroldEngine.assetRegistry.Materials.getAssetById(c.groundPlaneMaterial);e||(e=b.veroldEngine.assetRegistry.Materials.getMissingMaterial());var f=this.entityModel.previous("payload");this.registerMaterial(e.id),f&&f.environment&&this.unregisterMaterial(f.environment.groundPlaneMaterial),e.listenToOnce(e,"load_base",function(a){b.threeData.ground.material=a.threeData.static,b.threeData.ground.visible=d}),e.load()}}else console.error("Can't set ground properties when no ground exists.")},e.prototype.unload=function(a){this.threeData&&(console.log(this.veroldEngine.engineName+" - Unloading scene, "+this.entityModel.get("name")),this.threeData&&this.threeData.ground&&(this.threeData.remove(this.threeData.ground),this.threeData.ground.geometry.dispose(),this.threeData.ground.geometry=null,this.threeData.ground=null),d.prototype.unload.call(this,a))},e.prototype.onMaterialUnloaded=function(a){if(this.threeData&&this.threeData.ground&&this.threeData.ground.material.veroldEntityId===a){var b=this;if(console.log("Material that is in-use by ground plane has been deleted"),"uninitializing"!==this.veroldEngine.state){var c=this.veroldEngine.assetRegistry.Materials.getMissingMaterial();c.load({load_base:function(){b.threeData.ground.material=c.threeData["static"]}})}}},e.prototype.onPrefabDeleted=function(b){if(this.threeData){var c=!1,d={};a.each(this.objects,function(a,e){if(a){var f=a.entityModel.get("sourceObjectId"),g=a.entityModel.get("prefabObjectId");(f===b||g===b)&&(d[e]=!0,c=!0)}},this),c&&(a.each(d,function(a,b){var c=this.getObjectById(b);c&&c.getParentObject()&&c.getParentObject().removeChildById(b,{save:!1})},this),a.each(d,function(a,b){this.destroyObject(b,{save:!0})},this),this.save())}},window.VAPI=window.VAPI||{},window.VAPI.SceneAsset=e,e}),define("VeroldEngine/AssetRegistry/SceneRegistry",["underscore","three","VeroldEngine/AssetRegistry/SceneAsset"],function(a,b,c){var d=function(){this.assets=void 0,this.defaultEnvironment={groundPlaneOn:!0,groundPlaneTesselation:120,groundPlaneMaterial:null,groundPlaneScale:250},this.defaultFog={type:"FogExp2",color:12303291,density:8e-4}};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.veroldEngine=a.veroldEngine},uninitialize:function(){for(var a in this.assets)this.assets[a].uninitialize(),delete this.assets[a];this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},initSystemAssets:function(){},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a]},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("VeroldEngine/AssetRegistry/PrefabAsset",["underscore","async","three","VeroldEngine/AssetRegistry/VeroldAsset"],function(a,b,c,d){var e=function(){d.call(this)};return e.prototype=new d,e.prototype.initialize=function(a){d.prototype.initialize.call(this,a);var b=this.entityModel.toJSON(),c={};b.payload||(b.payload={}),b.payload.orientation||(c.orientation=this.registry.defaultPrefab.orientation),b.payload.position||(c.position=this.registry.defaultPrefab.position),b.payload.scale||(c.scale=this.registry.defaultPrefab.scale),c.castShadow=void 0!==b.payload.castShadow?b.payload.castShadow:!1,c.receiveShadow=void 0!==b.payload.receiveShadow?b.payload.receiveShadow:!1,c.opacity=void 0!==b.payload.opacity?b.payload.opacity:1,c.selectable=void 0!==b.payload.selectable?b.payload.selectable:!0,this.set({payload:c},{save:!1}),this.veroldEngine.on("prefabDeleted",this.onPrefabDeleted,this),this.veroldEngine.on("update",this.onUpdate,this)},e.prototype.uninitialize=function(){this.veroldEngine.off("prefabDeleted",this.onPrefabDeleted,this),this.veroldEngine.off("update",this.onUpdate,this),d.prototype.uninitialize.call(this)
},e.prototype.onUpdate=function(){this.loadingProgress.geometriesNeedUpdate&&(this.updateGeometryLoadingProgress(),this.loadingProgress.geometriesNeedUpdate=!1,this.trigger("load_progress",this)),this.loadingProgress.texturesNeedUpdate&&(this.updateTextureLoadingProgress(),this.loadingProgress.texturesNeedUpdate=!1,this.trigger("load_progress",this)),this.loadingProgress.animationsNeedUpdate&&(this.updateAnimationLoadingProgress(),this.loadingProgress.animationsNeedUpdate=!1,this.trigger("load_progress",this))},e.prototype.onPrefabDeleted=function(b){if(b&&b!==this.id&&this.threeData){var c=!1,d={};a.each(this.objects,function(a,e){if(a){var f=a.entityModel.get("sourceObjectId"),g=a.entityModel.get("prefabObjectId");(f===b||g===b)&&(d[e]=!0,c=!0)}},this),c&&(a.each(d,function(a,b){var c=this.getObjectById(b);c&&c.getParentObject()&&c.getParentObject().removeChildById(b,{save:!1})},this),a.each(d,function(a,b){this.destroyObject(b,{save:!0})},this),this.save())}},e.prototype.applyPayloadSettings_loaded=function(a,b){b||(b={}),this.trigger("updated",this)},e.prototype.linkupPrefab=function(c,d,e){var f=this;if(c&&d){var g={prefabObjectId:d.id,prefabAssetId:this.id};c.entityModel.get("sourceObjectId")||(g.sourceObjectId=d.id,g.sourceAssetId=this.id),e.prefabInstanceId&&(g.prefabInstanceId=e.prefabInstanceId),c._uninitPrefabBindings(),c.set(g,{silent:!0,save:!1}),c._initPrefabBindings(),c.revertToPrefab({save:e.save,nonRecursive:!0,success:function(){var g=d.entityModel.get("children"),h=c.entityModel.get("children"),i=a.keys(g),j=a.keys(h),k=0;b.forEach(i,function(a,b){if(g[a]){var h=c.getParentAsset().getObjectById(j[k]),i=d.getParentAsset().getObjectById(a);k++,f.linkupPrefab(h,i,{save:e.save,success:function(){b()},prefabInstanceId:e.prefabInstanceId})}else b()},function(){e&&e.success&&e.success()})}})}},window.VAPI=window.VAPI||{},window.VAPI.PrefabAsset=e,e}),define("VeroldEngine/AssetRegistry/ModelAsset",["underscore","three","VeroldEngine/AssetRegistry/PrefabAsset"],function(a,b,c){var d=function(){c.call(this)};return d.prototype=new c,a.extend(d.prototype,{applyPayloadSettings_loaded:function(a,b){b||(b={}),this.trigger("updated",this)},update:function(){}}),window.VAPI=window.VAPI||{},window.VAPI.ModelAsset=d,d}),define("VeroldEngine/AssetRegistry/PrefabRegistry",["underscore","three","VeroldEngine/AssetRegistry/PrefabAsset","VeroldEngine/AssetRegistry/ModelAsset"],function(a,b,c,d){var e=function(){this.assets=void 0,this.defaultPrefab={name:"Prefab_With_No_Name",position:{x:0,y:0,z:0},orientation:{x:0,y:0,z:0,w:1},scale:{x:1,y:1,z:1},castShadow:!1,receiveShadow:!1,opacity:1,visible:!0,selectable:!0},this.builtInPrefabs={ReflectionCapturePlane:{id:"reflection_capture_plane_prefab",type:"prefab",name:"reflection_capture_plane_prefab",components:{reflection_capture:{scriptId:"reflection_capture_planar",componentData:{},enabled:!0}}},CubeMapCapture:{id:"cubemap_capture_prefab",type:"prefab",name:"cubemap_capture_prefab",components:{cubemap_capture:{scriptId:"cubemap_capture",componentData:{},enabled:!0}}},SphereMapCapture:{id:"spheremap_capture_prefab",type:"prefab",name:"spheremap_capture_prefab",components:{spheremap_capture:{scriptId:"spheremap_capture",componentData:{},enabled:!0}}},Curve:{id:"curve_prefab",type:"prefab",name:"curve_prefab",components:{curve:{scriptId:"curve_component",componentData:{},enabled:!0}}},Annotation:{id:"annotation_prefab",type:"prefab",name:"annotation_prefab",components:{annotation:{scriptId:"annotation_component",componentData:{Title:"Annotation Title",Description:"A description for your annotation"},enabled:!0}}}},this.meshRegistry={}};return e.prototype={constructor:e,initialize:function(a){this.assets={},this.veroldEngine=a.veroldEngine},uninitialize:function(){for(var a in this.assets)this.assets[a].uninitialize(),delete this.assets[a];this.assets=void 0,this.veroldEngine=void 0},initSystemAssets:function(){this.veroldEngine.isPrimaryEngine()&&a.each(this.builtInPrefabs,function(a){this.createAsset(a,{success:function(){}})},this)},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b;"prefab"===a.get("type")?b=new c:"model"===a.get("type")&&(b=new d),b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.trigger("prefabDeleted",a),this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a]},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)},requestNewRegNumber:function(){return this.meshRegNum?this.meshRegNum++:this.meshRegNum=1,this.meshRegNum},createPrefab:function(b,c){c||(c={});var d=c&&c.save?!0:!1;this.veroldEngine.assetRegistry.createAsset({type:"prefab",name:"New Prefab",id:c.id?c.id:"new_prefab",parentFolderId:c.parentFolderId?c.parentFolderId:void 0,originalType:b.type},{persistent:void 0!==c.persistent?c.persistent:!1,success:function(e){b.copyTo(e.id,{persistent:void 0!==c.persistent?c.persistent:!1,success:function(f){e.set({name:f.entityModel.get("name"),payload:f.entityModel.get("payload"),components:f.entityModel.get("components"),children:f.entityModel.get("children"),sourceObjectId:f.entityModel.get("sourceObjectId"),sourceAssetId:f.entityModel.get("sourceAssetId"),parentId:null},{save:d,success:function(){e.traverse(function(a){a.set({prefabObjectId:void 0,prefabAssetId:void 0},{save:d})});var g={children:f.entityModel.get("children")};a.each(g.children,function(a,b){g.children[b]=!1}),f.set(g,{silent:!0,save:d,success:function(){f.destroy({save:d}),e.linkupPrefab(b,e,{save:d,prefabInstanceId:b.id}),c&&c.success&&c.success(e)}})}})}})}})}},e}),define("VeroldEngine/AssetRegistry/GeometryAsset",["underscore","three","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Loaders/GenericLoader","VeroldEngine/Util/BufferGeometryUtilities"],function(a,b,c,d,e){var f=function(){c.call(this),this.threeData=void 0,this.buffer=void 0};return f.prototype=new c,a.extend(f.prototype,{initialize:function(a){c.prototype.initialize.call(this,a),this.state_dependencies="loaded",this.trigger("load_hierarchy",this),this.trigger("load_hierarchy_dependencies",this),this.trigger("load_components",this)},_loadThreeData:function(b,c){var e=this,f=0,g=function(a){f=a.total,e.loadingProgress.geometry=a.loaded,e.trigger("load_progress",e)},h=function(a){e.loadingProgress.geometry=f,e.loadingProgress.geometry+=a.loaded,e.trigger("load_progress",e)},i=new d(this.veroldEngine),j=this.entityModel.getResourcePath(0);j||(j=this.entityModel.getPath()),i.loadFile(j,"json",function(d,f){if(d)return console.warn("Failed to load geometry descriptor",j,d);if(a.isObject(f)&&(e.threeData=f,a.isString(f.bufferPath))){var g=j.replace(/\\/g,"/").replace(/[^\/]*$/,"")+f.bufferPath;i.loadFile(g,"arraybuffer",function(a,d){return a?console.warn("Failed to load geometry buffer",g,a):(e.buffer=d,e.applyPayloadSettings_loaded(b,c),void e.trigger("load_base",e))},h)}},g)},_addMissingAttributes:function(a){var c=a.attributes,d=new e(a);void 0===c.position&&a.addAttribute("position",new b.BufferAttribute(new Float32Array(0),3)),void 0===c.normal&&a.computeVertexNormals(),void 0===c.uv&&d.computeUVs(),void 0!==c.tangent?a.hasTangents=!0:d.computeTangents()},_createAttributes:function(c,d,e){function f(a,b,c){b&&i.push({attribute:a,offset:b.fileOffset,length:b.count*b.value_size,type:c,itemSize:b.value_size})}function g(a,b,c,d,e,f){var g,h,i,j,k=Math.min(e,f),l=d/e;if(e===f)return new a(b,c,d);for(g=new a(b,c,d),j=new a(d/e*f),h=0;l>h;++h){for(i=0;k>i;++i)j[h*f+i]=g[h*e+i];for(;f>i;++i)j[h*f+i]=0}return j}var h=d.vertex_attributes,i=[],j=this;a.isObject(d.indices)&&f("index",d.indices,Uint16Array),f("position",h.positions,Float32Array),f("normal",h.normals,Float32Array),f("tangent",h.tangents,Float32Array),f("color",h.colors,Float32Array),f("uv",h.uvs1,Float32Array),f("uv2",h.uvs2,Float32Array),f("skinIndex",h.skin_indices,Float32Array),f("skinWeight",h.skin_weights,Float32Array),a.each(i,function(a){var d,f=e[a.attribute]||a.itemSize;d=g(a.type,j.buffer,a.offset,a.length,a.itemSize,f),c.addAttribute(a.attribute,new b.BufferAttribute(d,f))})},createBufferGeometry:function(a){if(!this.threeData||!this.buffer)return console.warn("Geometry not loaded"),null;if(!this.threeData[a])return console.warn("No geometry with specified ID",a),null;{var c=this.threeData[a],d=new b.BufferGeometry;new e(d)}return d.drawcalls=c.offsets,d.offsets=c.offsets,d.bones=c.bones,d.bindPose=c.bind_pose,this._createAttributes(d,c,{position:3,normal:3,tangent:4,color:4,uv:2,uv2:2,skinIndex:4,skinWeight:4}),this._addMissingAttributes(d),d},getDataSizeGeometryDownload:function(){var b=this.entityModel.getResources(),c=0;return b.length?(a.each(b,function(a){c+=a.contentLength}),c):this.getProperty("size")},getDataSizeGeometryDownloadUncompressed:function(){var b=this.entityModel.getResources(),c=0;return b.length?(a.each(b,function(a){var b=a.contentLengthIdentity;void 0===b&&(b=a.contentLength),c+=b}),c):this.getProperty("size_uncompressed")},getDataSizeGeometryInMemory:function(a){return this.getDataSizeGeometryDownloadUncompressed(a)}}),window.VAPI=window.VAPI||{},window.VAPI.GeometryAsset=f,f}),define("VeroldEngine/AssetRegistry/GeometryRegistry",["underscore","VeroldEngine/AssetRegistry/GeometryAsset"],function(a,b){var c=function(){this.assets=void 0};return c.prototype={constructor:c,initialize:function(a){this.assets={},this.projectId=a.projectId,this.veroldEngine=a.veroldEngine},uninitialize:function(){a.each(this.assets,function(a,b){a.uninitialize(),delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var c=new b;c.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[c.id]=c,this.veroldEngine.entities[c.id]=c,this.assets[c.id]=c},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a]},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},c}),define("VeroldEngine/AssetRegistry/MaterialAsset",["underscore","three","VeroldEngine/AssetRegistry/VeroldAsset"],function(a,b,c){var d=function(){c.call(this),this.currentFeatures={}};return d.prototype=new c,d.prototype.events={setColor:{scope:"local",action:!0,category:"Materials",params:[{name:"parameter",type:"dd",description:"The colour parameter to modify.","default":"diffuseColor",options:{Diffuse:"diffuseColor","Rim Color":"rimColor",Specular:"specularColor",Emissive:"emissiveColor"}},{name:"value",type:"c",description:"The colour to set.","default":16711680},{name:"animationTime",type:"f",description:"The length of time that the change will take. i.e. this lets you animate the change.","default":0,min:0}]},setNumber:{scope:"local",action:!0,category:"Materials",params:[{name:"parameter",type:"dd",description:"The number parameter to modify.","default":"colorOpacity",options:{Opacity:"colorOpacity","Rimlight Falloff":"rimPower","Specular Intensity":"specularIntensity",Glossiness:"gloss","Transmission Scale":"scatterScale","Scattering Amount":"scatterLocalScale","Normal Map Scale":"normalScale","Parallax Scale":"parallaxScale",Reflectivity:"reflectionBias"}},{name:"value",type:"f",description:"The value to set.","default":1},{name:"animationTime",type:"f",description:"The length of time that the change will take. i.e. this lets you animate the change.","default":0,min:0}]},setVector2:{scope:"local",action:!0,category:"Materials",params:[{name:"parameter",type:"dd",description:"The vector parameter to modify.","default":"diffuseTextureOffset",options:{"Diffuse Texture Offset":"diffuseTextureOffset","Diffuse Texture Scale":"diffuseTextureScale","Diffuse Texture Pan":"diffuseTexturePan","AO Texture Offset":"aoTextureOffset","AO Texture Scale":"aoTextureScale","AO Texture Pan":"aoTexturePan","Specular Texture Offset":"specularTextureOffset","Specular Texture Scale":"specularTextureScale","Specular Texture Pan":"specularTexturePan","Normal Map Offset":"normalTextureOffset","Normal Map Scale":"normalTextureScale","Normal Map Pan":"normalTexturePan","SSS Texture Offset":"sssTextureOffset","SSS Texture Scale":"sssTextureScale","SSS Texture Pan":"sssTexturePan","Displacement Map Offset":"displacementTextureOffset","Displacement Map Scale":"displacementTextureScale","Displacement Map Pan":"displacementTexturePan","Emissive Texture Offset":"emissiveTextureOffset","Emissive Texture Scale":"emissiveTextureScale","Emissive Texture Pan":"emissiveTexturePan"}},{name:"value",type:"v2",description:"The colour to set.","default":{x:1,y:1}},{name:"animationTime",type:"f",description:"The length of time that the change will take. i.e. this lets you animate the change.","default":0,min:0}]}},d.prototype.initialize=function(a){c.prototype.initialize.call(this,a);var b=this.entityModel.get("payload");b&&b.materialType||this.entityModel.set({"payload.materialType":"Standard"},{silent:!0}),this.trigger("load_hierarchy",this),this.trigger("load_hierarchy_dependencies",this),this.trigger("load_components",this),this.on("setColor",this.setColor,this),this.on("setNumber",this.setNumber,this),this.on("setVector2",this.setVector2,this)},d.prototype.uninitialize=function(){c.prototype.uninitialize.call(this),this.off("setColor",this.setColor,this),this.off("setNumber",this.setNumber,this),this.off("setVector2",this.setVector2,this)},d.prototype._initDependenciesList=function(){if(this.veroldEngine.isPrimaryEngine()&&!this.dependenciesListInit){var b=this.entityModel.get("payload"),c=this.registry.getMaterialDefinition(b.materialType);a.each(c.Parameters,function(a,c){this.isParameterUsed(c)&&"t"===a.type&&this.registerTexture(b[c]?b[c]:a.default)},this),a.each(c.uniforms,function(a){"t"===a.type&&this.registerTexture(a.default)},this),this.dependenciesListInit=!0}},d.prototype.getListOfReferencedTextures=function(){var b={},c=this.entityModel.get("payload"),d=this.registry.getMaterialDefinition(c.materialType);return a.each(d.Parameters,function(a,d){"t"===a.type&&(c[d]&&"null"!==c[d]?b[c[d]]=this.getAssetById(c[d]):a.default&&(b[a.default]=this.getAssetById(a.default)))},this),a.each(d.uniforms,function(a){"t"===a.type&&a.default&&(b[a.default]=this.getAssetById(a.default))},this),b},d.prototype._loadThreeData=function(b,c){var d=this.entityModel.toJSON(),e=this._createThreeJSMaterialArray(d);e&&(a.each(e,function(a){a.veroldEntityId=this.id},this),this.threeData=e,this.materialType=d.payload.materialType,this._createFeatureStructure(),b.payload.Features=!0,b.payload.materialType=!1,this.applyPayloadSettings_loaded(b.payload,c),this.trigger("load_base",this))},d.prototype._createFeatureStructure=function(){var b=this.entityModel.get("payload").Features;this.set({"payload.Features":{}},{silent:!0});var c=this.registry.getMaterialDefinition(this.entityModel.get("payload").materialType),d=c.Features,e={};a.each(d,function(b,c){e[c]={enabled:!0},void 0!==b.enabled&&(e[c].enabled=b.enabled),b.SubFeatures&&(e[c].SubFeatures={},a.each(b.SubFeatures,function(a,b){e[c].SubFeatures[b]={enabled:!0},void 0!==a.enabled&&(e[c].SubFeatures[b].enabled=a.enabled)},this))},this),this.set({"payload.Features":e},{silent:!0}),b&&this._applyFeatureStructure(b)},d.prototype._applyFeatureStructure=function(a){var b=this.entityModel.get("payload").Features;for(var c in a)if(b[c]){var d="payload.Features."+c+".enabled",e={};if(e[d]=a[c].enabled,this.set(e,{silent:!0}),void 0!==a[c].SubFeatures&&void 0!==b[c].SubFeatures)for(var f in a[c].SubFeatures)if(b[c].SubFeatures[f]){var g={};d="payload.Features."+c+".SubFeatures."+f+".enabled",g[d]=a[c].SubFeatures[f].enabled,this.set(g,{silent:!0})}}},d.prototype._createThreeJSMaterialArray=function(c){c.payload||console.error("Trying to create a Verold material with no material type specified.");var d=c.payload.materialType,e=this.registry.getMaterialDefinition(d),f=(c.payload,b.UniformsUtils.clone(e.uniforms));this.initSharedUniforms(f),this.initUniformTextures(f,c.payload.materialType);var g={},h={};for(var i in this.registry.materialObjectTypes){h[i]={fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:{}},a.each(f,function(a,b){h[i].uniforms[b]=a},this),h[i].defines={};for(var j in this.registry.materialObjectTypes[i])if("defines"===j)for(var k in this.registry.materialObjectTypes[i][j])h[i][j][k]=this.registry.materialObjectTypes[i][j][k];else if("uniforms"===j){var l=b.UniformsUtils.clone(this.registry.materialObjectTypes[i][j]);a.each(l,function(a,b){h[i][j][b]=a},this)}else h[i][j]=this.registry.materialObjectTypes[i][j];g[i]=new b.ShaderMaterial(h[i]),g[i].name=c.name,a.each(e.Parameters,function(a,b){a.isRenderParam&&(g[i][b]=a.value)},this)}return g},d.prototype.initSharedUniforms=function(a){a.time=this.registry.getSharedUniform("time"),a.screenDimensions=this.registry.getSharedUniform("screenDimensions")},d.prototype.initUniformTextures=function(a,b){var c=this.registry.getMaterialDefinition(b),d=c.Parameters;for(var e in a)"t"===a[e].type&&!d[e]&&a[e].default?this.setDefaultTexture(a[e],a[e].default,e):"t"===a[e].type&&d[e]&&d[e].default&&this.setDefaultTexture(a[e],d[e].default,e)},d.prototype.setDefaultTexture=function(a,b){var c=this.veroldEngine.assetRegistry.getAssetById(b);c.load({load_base:function(b){a.value||(a.value=b.threeData)},load_base_failure:function(){console.warn("Couldn't get default texture.")}})},d.prototype.applyPayloadSettings_loaded=function(a){var c=this.entityModel.get("payload"),d=this.registry.getMaterialDefinition(c.materialType);if(a.materialType){var e=this.entityModel.get("payload").Features,f={};for(var g in e)if(f[g]={enabled:e[g].enabled},e[g].SubFeatures){f[g].SubFeatures={};for(var h in e[g].SubFeatures)f[g].SubFeatures[h]={enabled:e[g].SubFeatures[h].enabled}}this._createFeatureStructure(),this._applyFeatureStructure(e),a.Features=!0;var i=this.threeData.static.uniforms;for(var j in this.registry.materialObjectTypes){this.threeData[j].fragmentShader=d.fragmentShader,this.threeData[j].vertexShader=d.vertexShader,this.threeData[j].uniforms=b.UniformsUtils.clone(d.uniforms),this.initSharedUniforms(this.threeData[j].uniforms),this.initUniformTextures(this.threeData[j].uniforms,c.materialType);for(var k in this.threeData[j].uniforms){var l=this.threeData[j].uniforms[k];d.Parameters[k]&&d.Parameters[k].defines&&(a[k]=!0),i[k]&&l.type===i[k].type?l.value=i[k].value:"t"===l.type&&(a[k]=!0)}this.updateFeatures(),this.threeData[j].needsUpdate=!0}this.materialType=c.materialType}var m=!1,n=!1;for(var k in a)if(d.Parameters[k]){if(d.Parameters[k].defines&&(n=!0),d.Parameters[k].feature&&(!d.Features||!d.Features[d.Parameters[k].feature]))continue;this.updateParameter(k),d.Parameters[k].transparency&&(m=!0)}else"Features"===k&&(n=!0,m=!0);n&&(this.updateFeatures(),m=!0),m&&this.updateTransparency()},d.prototype.applyPayloadSettings_unloaded=function(b){if(b){var c=this.entityModel.get("payload"),d=this.registry.getMaterialDefinition(c.materialType);a.each(b,function(a,b){if(d.Parameters[b]&&"t"===d.Parameters[b].type&&this.isParameterUsed(b)){var e=this.entityModel.previous("payload");e[b]!==c[b]&&(this.registerTexture(c[b]),this.unregisterTexture(e[b])),this.trigger("sizeNeedsUpdate",this)}},this)}},d.prototype.updateTransparency=function(){var a=this.entityModel.get("payload"),b=this.registry.getMaterialDefinition(a.materialType),c=!1,d=a.Features;for(var e in b.Parameters)if(void 0!==a[e]&&!b.Parameters[e].deprecated){var f=b.Parameters[e],g=!0;if(f.group&&d[f.group]&&(d[f.group].enabled?f.subgroup&&d[f.group].SubFeatures[f.subgroup]&&!d[f.group].SubFeatures[f.subgroup].enabled&&(g=!1):g=!1),g)if("LessThanOne"===f.transparency){if(a[e]<1){c=!0;break}}else if("GreaterThanOne"===f.transparency&&a[e]>1){c=!0;break}}for(var h in this.registry.materialObjectTypes)this.threeData[h].transparent=c},d.prototype.isParameterUsed=function(a){var b=this.registry.getMaterialDefinition(this.materialType),c=b.Parameters[a],d=this.entityModel.get("payload").Features;if(c){if(c.group){var e=b.Features[c.group];if(d&&d[c.group]){if(d[c.group].enabled){var f=d[c.group].SubFeatures;if(c.subgroup){var g=e.SubFeatures[c.subgroup];return f?f[c.subgroup]&&f[c.subgroup].enabled?!0:!1:g&&g.enabled!==!1?!0:!1}return!0}return!1}return e&&e.enabled!==!1?!0:!1}return!0}return!1},d.prototype.updateParameter=function(c){var d,e=this.registry.getMaterialDefinition(this.materialType),f=this.entityModel.get("payload")[c];if(e.Parameters[c]){if(e.Parameters[c].deprecated){if(e.Parameters[c].deprecated.newParam){var g=e.Parameters[c].deprecated.newParam,h=this.entityModel.get("payload")[g];if(void 0===h){var i="payload."+g,j={};j[i]=f*e.Parameters[c].deprecated.convertFactor,this.set(j,{silent:!0});for(d in this.registry.materialObjectTypes)this.threeData[d].uniforms[g]={type:e.Parameters[g].type,value:j[i]}}}return}if(e.Parameters[c].isRenderParam){a.isString(f)&&(f=parseInt(f));for(d in this.registry.materialObjectTypes)this.threeData[d][c]=f,this.threeData[d].needsUpdate=!0}else{var k,l,m=!1,n=this.entityModel.get("payload").Features;if(e.Parameters[c].group&&(k=n[e.Parameters[c].group],k&&k.enabled&&(e.Parameters[c].subgroup?(l=k.SubFeatures[e.Parameters[c].subgroup],l&&l.enabled&&(m=!0)):m=!0)),m){if(e.Parameters[c].defines){var o=l?l:k;if(o){o.defines||(o.defines={});for(var p in e.Parameters[c].defines)if("t"===e.Parameters[c].type){if(f){var q=this.veroldEngine.assetRegistry.Textures.getAssetById(f);if(q)if("HDR_INPUT"===p.slice(-9).toUpperCase())switch(q.getPixelFormat()){case"rgbm":o.defines[p]=b.HDRRGBM;break;case"rgbd":o.defines[p]=b.HDRRGBD;break;case"rgbe":o.defines[p]=b.HDRRGBE;break;default:o.defines[p]=0}else"NUM_MIPS"===p.slice(-8).toUpperCase()?o.defines[p]=q.getNumMips():"RGBA"===p.slice(-4).toUpperCase()&&(o.defines[p]=4===q.getNumChannels()?1:0)}}else o.defines[p]=f}}if(e.Parameters[c].animation&&f&&(f.x||f.y)&&this.threeData&&(this.registry.timeValueInUse=!0),"t"===e.Parameters[c].type){var q,r=this;f&&"null"!==f?(q=this.veroldEngine.assetRegistry.Textures.getAssetById(f),q&&q.load({load_base:function(a){r.setUniform(c,a.threeData)},load_base_failure:function(){console.warn(r.veroldEngine.engineName+" - MaterialAsset.updateParameter: Unable to load texture, ",f," to ",c)}})):(q=this.veroldEngine.assetRegistry.Textures.getAssetById(e.Parameters[c].default),q.load({load_base:function(a){r.setUniform(c,a.threeData)}}))}else if("c"===e.Parameters[c].type){a.isString(f)&&("0x"!==f.slice(0,2)&&(f=parseInt(f,10),f="0x"+f.toString(16)),f=parseInt(f,16));var s=new b.Color(f);this.veroldEngine.getThreeRenderer().gammaInput&&s.copyGammaToLinear(s),this.setUniform(c,s)}else"b"===e.Parameters[c].type?this.setUniform(c,f?1:0):this.setUniform(c,f)}}}},d.prototype.setUniform=function(b,c){this.threeData&&a.each(this.registry.materialObjectTypes,function(a,d){(!a.uniforms||a.uniforms&&void 0===a.uniforms[b])&&(this.threeData[d].uniforms[b].value=c)},this)},d.prototype.updateFeatures=function(){function b(b,c,e){a.each(d.registry.materialObjectTypes,function(d,f){d.defines&&a.each(d.defines,function(a,b){this.threeData[f].defines[b]=a},this);var g=VAPI.isMobile()&&c.DefinesSimple?c.DefinesSimple:c.Defines;a.each(g,function(a,c){e?(this.threeData[f].defines[c]=a,b.defines&&void 0!==b.defines[c]&&(this.threeData[f].defines[c]=b.defines[c])):delete this.threeData[f].defines[c]},this)},d)}for(var c in this.registry.materialObjectTypes)this.threeData[c].defines={},this.threeData[c].needsUpdate=!0;var d=this,e=this.entityModel.get("payload").Features,f=this.entityModel.get("payload").materialType,g=this.registry.getMaterialDefinition(f).Features,h=this.getEnabledFeatures();a.each(e,function(c,d){h[d]&&c.enabled?(b(c,g[d],!0),c.SubFeatures&&a.each(c.SubFeatures,function(a,c){h[c]&&a.enabled?b(a,g[d].SubFeatures[c],!0):b(a,g[d].SubFeatures[c],!1)},this)):b(c,g[d],!1)},this)},d.prototype.getEnabledFeatures=function(){function b(b,c){var d={};return a.each(b,function(a,b){void 0===c[b]&&(c[b]=0),d[b]=c[b]+a},this),a.each(c,function(a,c){void 0===b[c]&&(d[c]=a)},this),d}function c(e,f){a.each(e,function(d,e){if(f[e]&&f[e].enabled){var g=b(d.Requires,i),h=!0;a.each(g,function(a,b){this.veroldEngine.getGPUCapability(b)<a&&(console.warn(e+" is not supported on the current device because "+b+" is "+this.veroldEngine.getGPUCapability(b)+" and we require at least "+g[b]),h=!1)},this),this.currentFeatures[e]=h,h&&(i=g)}else this.currentFeatures[e]=!1;d.SubFeatures&&f[e].SubFeatures&&c(d.SubFeatures,f[e].SubFeatures)},d)}var d=this,e=this.getProperty("materialType"),f=this.getProperty("Features");this.registry.materialTypeLibrary.Library[e]||(e="Standard");var g=this.registry.materialTypeLibrary.Library[e].Features,h=this.registry.getMinShaderRequirements(),i={};return i=b(h,i),c(g,f),this.currentFeatures},d.prototype.getAvailableFeatures=function(){var b=this.getProperty("materialType"),c=this.registry.materialTypeLibrary.Library[b].Features,d={};return a.each(c,function(b,c){d[c]={},void 0!==b.SubFeatures&&a.each(b.SubFeatures,function(a,b){d[c][b]={}},this)},this),d},d.prototype.enableFeature=function(a,b,c,d){if(c=!!c,a&&b&&this.currentFeatures[b]!==c&&void 0!==this.currentFeatures[b]&&void 0!==this.currentFeatures[a]){var e="payload.Features."+a+".enabled",f="payload.Features."+a+".SubFeatures."+b+".enabled",g={};g[e]=c,this.set(g);var h=this.getProperty("materialType"),i=this.registry.materialTypeLibrary.Library[h].Features;void 0!==i[a][b]&&(g[f]=c),delete g[e],this.set(g,d)}else if(a&&this.currentFeatures[a]!==c&&void 0!==this.currentFeatures[a]){var e="payload.Features."+a+".enabled",g={};g[e]=c,this.set(g,d)}},d.prototype.unload=function(){if(this.threeData){this.veroldEngine.trigger("materialUnloaded",this.id),console.log(this.veroldEngine.engineName+" - Unloading material, "+this.entityModel.get("name"));for(var a in this.threeData)this.threeData[a].dispose(),delete this.threeData[a];this.threeData=null,c.prototype.unload.call(this)}},d.prototype.setColor=function(a,b,c){function d(k){if(m+=k,m>c)l.veroldEngine.off("update",d,this),l.setProperty(a,b);else{var n=Math.min(m/c,1),o=(1-n)*h+n*e,p=(1-n)*i+n*f,q=(1-n)*j+n*g,r=l.threeData.static.uniforms[a].value;r.setRGB(o,p,q),l.veroldEngine.getThreeRenderer().gammaInput&&r.copyGammaToLinear(r)}}var e,f,g,h,i,j,k,l=this,m=0;c?(k=l.getProperty(a),h=(k>>16&255)/255,i=(k>>8&255)/255,j=(255&k)/255,e=(b>>16&255)/255,f=(b>>8&255)/255,g=(255&b)/255,this.veroldEngine.on("update",d,this)):this.setProperty(a,b)},d.prototype.setNumber=function(a,b,c){function d(h){if(g+=h,g>c)f.veroldEngine.off("update",d,this),f.setProperty(a,b);else{var i=Math.min(g/c,1),j=(1-i)*e+i*b;f.setUniform(a,j);var k=f.entityModel.get("payload"),l=f.registry.getMaterialDefinition(k.materialType),m=!1,n=k.Features;if(void 0!==k[a]&&!l.Parameters[a].deprecated){var o=l.Parameters[a],p=!0;o.group&&n[o.group]&&(n[o.group].enabled?o.subgroup&&n[o.group].SubFeatures[o.subgroup]&&!n[o.group].SubFeatures[o.subgroup].enabled&&(p=!1):p=!1),p&&("LessThanOne"===o.transparency?1>j&&(m=!0):"GreaterThanOne"===o.transparency&&j>1&&(m=!0))}for(var q in f.registry.materialObjectTypes)f.threeData[q].transparent=m}}var e,f=this,g=0;c?(e=f.getProperty(a),this.veroldEngine.on("update",d,this)):this.setProperty(a,b)},d.prototype.setVector2=function(a,b,c){function d(i){if(k+=i,k>c)j.veroldEngine.off("update",d,this),j.setProperty(a,b);else{var l=Math.min(k/c,1),m=(1-l)*g+l*e,n=(1-l)*h+l*f;j.threeData.static.uniforms[a].value.x=m,j.threeData.static.uniforms[a].value.y=n}}var e,f,g,h,i,j=this,k=0;c?(i=j.getProperty(a),g=i.x,h=i.y,e=b.x,f=b.y,this.veroldEngine.on("update",d,this)):this.setProperty(a,b)},window.VAPI=window.VAPI||{},window.VAPI.MaterialAsset=d,d}),define("text",["module"],function(a){var b,c,d,e,f,g=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],h=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,i=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,j="undefined"!=typeof location&&location.href,k=j&&location.protocol&&location.protocol.replace(/\:/,""),l=j&&location.hostname,m=j&&(location.port||void 0),n={},o=a.config&&a.config()||{};return b={version:"2.0.10",strip:function(a){if(a){a=a.replace(h,"");var b=a.match(i);b&&(a=b[1])}else a="";return a},jsEscape:function(a){return a.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:o.createXhr||function(){var a,b,c;if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;if("undefined"!=typeof ActiveXObject)for(b=0;3>b;b+=1){c=g[b];try{a=new ActiveXObject(c)}catch(d){}if(a){g=[c];break}}return a},parseName:function(a){var b,c,d,e=!1,f=a.indexOf("."),g=0===a.indexOf("./")||0===a.indexOf("../");return-1!==f&&(!g||f>1)?(b=a.substring(0,f),c=a.substring(f+1,a.length)):b=a,d=c||b,f=d.indexOf("!"),-1!==f&&(e="strip"===d.substring(f+1),d=d.substring(0,f),c?c=d:b=d),{moduleName:b,ext:c,strip:e}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(a,c,d,e){var f,g,h,i=b.xdRegExp.exec(a);return i?(f=i[2],g=i[3],g=g.split(":"),h=g[1],g=g[0],!(f&&f!==c||g&&g.toLowerCase()!==d.toLowerCase()||(h||g)&&h!==e)):!0},finishLoad:function(a,c,d,e){d=c?b.strip(d):d,o.isBuild&&(n[a]=d),e(d)},load:function(a,c,d,e){if(e.isBuild&&!e.inlineText)return void d();o.isBuild=e.isBuild;var f=b.parseName(a),g=f.moduleName+(f.ext?"."+f.ext:""),h=c.toUrl(g),i=o.useXhr||b.useXhr;return 0===h.indexOf("empty:")?void d():void(!j||i(h,k,l,m)?b.get(h,function(c){b.finishLoad(a,f.strip,c,d)},function(a){d.error&&d.error(a)}):c([g],function(a){b.finishLoad(f.moduleName+"."+f.ext,f.strip,a,d)}))},write:function(a,c,d){if(n.hasOwnProperty(c)){var e=b.jsEscape(n[c]);d.asModule(a+"!"+c,"define(function () { return '"+e+"';});\n")}},writeFile:function(a,c,d,e,f){var g=b.parseName(c),h=g.ext?"."+g.ext:"",i=g.moduleName+h,j=d.toUrl(g.moduleName+h)+".js";b.load(i,d,function(){var c=function(a){return e(j,a)};c.asModule=function(a,b){return e.asModule(a,j,b)},b.write(a,i,c,f)},f)}},"node"===o.env||!o.env&&"undefined"!=typeof process&&process.versions&&process.versions.node&&!process.versions["node-webkit"]?(c=require.nodeRequire("fs"),b.get=function(a,b,d){try{var e=c.readFileSync(a,"utf8");0===e.indexOf("\ufeff")&&(e=e.substring(1)),b(e)}catch(f){d(f)}}):"xhr"===o.env||!o.env&&b.createXhr()?b.get=function(a,c,d,e){var f,g=b.createXhr();if(g.open("GET",a,!0),e)for(f in e)e.hasOwnProperty(f)&&g.setRequestHeader(f.toLowerCase(),e[f]);o.onXhr&&o.onXhr(g,a),g.onreadystatechange=function(){var b,e;
4===g.readyState&&(b=g.status,b>399&&600>b?(e=new Error(a+" HTTP status: "+b),e.xhr=g,d(e)):c(g.responseText),o.onXhrComplete&&o.onXhrComplete(g,a))},g.send(null)}:"rhino"===o.env||!o.env&&"undefined"!=typeof Packages&&"undefined"!=typeof java?b.get=function(a,b){var c,d,e="utf-8",f=new java.io.File(a),g=java.lang.System.getProperty("line.separator"),h=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(f),e)),i="";try{for(c=new java.lang.StringBuffer,d=h.readLine(),d&&d.length()&&65279===d.charAt(0)&&(d=d.substring(1)),null!==d&&c.append(d);null!==(d=h.readLine());)c.append(g),c.append(d);i=String(c.toString())}finally{h.close()}b(i)}:("xpconnect"===o.env||!o.env&&"undefined"!=typeof Components&&Components.classes&&Components.interfaces)&&(d=Components.classes,e=Components.interfaces,Components.utils["import"]("resource://gre/modules/FileUtils.jsm"),f="@mozilla.org/windows-registry-key;1"in d,b.get=function(a,b){var c,g,h,i={};f&&(a=a.replace(/\//g,"\\")),h=new FileUtils.File(a);try{c=d["@mozilla.org/network/file-input-stream;1"].createInstance(e.nsIFileInputStream),c.init(h,1,0,!1),g=d["@mozilla.org/intl/converter-input-stream;1"].createInstance(e.nsIConverterInputStream),g.init(c,"utf-8",c.available(),e.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),g.readString(c.available(),i),g.close(),c.close(),b(i.value)}catch(j){throw new Error((h&&h.path||"")+": "+j)}}),b}),define("text!VeroldEngine/Materials/Uber.frag",[],function(){return'/**\r\n * Uber Shader\r\n * Shader used as a Verold material type\r\n * \r\n * Written by Mike Bond\r\n * March 2012\r\n */\r\nuniform float time;\r\nuniform int renderModeNormals;\r\nuniform float opacity;\r\n\r\n// Inverse logLuvMatrix matrix, for decoding\r\nconst mat3 InverseLogLuvMatrix = mat3(\r\n  6.0014, -2.7008, -1.7996,\r\n-1.3320,  3.1029, -5.7721,\r\n0.3008, -1.0882,  5.6268);\r\n\r\nvec3 HDRDecodeLOGLUV(in vec4 vLogLuv)\r\n{\r\n  // Based on http://www.xnainfo.com/content.php?content=28\r\n  float Le = vLogLuv.z * 255.0 + vLogLuv.w;\r\n  vec3 Xp_Y_XYZp;\r\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\r\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / vLogLuv.y;\r\n  Xp_Y_XYZp.x = vLogLuv.x * Xp_Y_XYZp.z;\r\n  vec3 vRGB = InverseLogLuvMatrix * Xp_Y_XYZp;\r\n  return vRGB;\r\n}\r\n\r\nvec3 HDRDecodeRGBM( vec4 rgbm ) {\r\n  //Based on http://vemberaudio.se/graphics/RGBdiv8.pdf\r\n  return 9.0 * rgbm.rgb * rgbm.a;\r\n}\r\n\r\nvec3 HDRDecodeRGBD( vec4 rgbd ) {\r\n  //Based on http://vemberaudio.se/graphics/RGBdiv8.pdf\r\n  return rgbd.rgb / max(rgbd.a, 0.003);\r\n}\r\n\r\nvec3 HDRDecodeRGBE( vec4 rgbe ) {\r\n  //Based on http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c\r\n  float f = exp2( rgbe.w * 255.0 - (128.0 + 0.0) );\r\n  return rgbe.rgb * f;\r\n}\r\n\r\n#ifdef USE_LOGDEPTHBUF\r\n	uniform float logDepthBufFC;\r\n	#ifdef USE_LOGDEPTHBUF_EXT\r\n		#extension GL_EXT_frag_depth : enable\r\n		varying float vFragDepth;\r\n	#endif\r\n#endif\r\n\r\n#ifdef DIFFUSE_COLOR\r\nuniform vec3 diffuseColor;\r\nuniform float colorOpacity;\r\n	#if defined( DIFFUSE_COLOR ) && defined( DIFFUSE_TEXTURE )\r\n	uniform int alphaBlendMode;\r\n	uniform int colorBlend;\r\n	uniform int diffuseTextureChannel;\r\n	uniform sampler2D diffuseTexture;\r\n	uniform int diffuseUVChannel;\r\n	uniform vec2 diffuseTextureOffset;\r\n	uniform vec2 diffuseTextureScale;\r\n	uniform vec2 diffuseTexturePan;\r\n	#endif\r\n	#if !defined( DEPTH_PASS )\r\n		#ifdef AO_TEXTURE\r\n		uniform sampler2D aoTexture;\r\n		uniform int aoUVChannel;\r\n		uniform vec2 aoTextureOffset;\r\n		uniform vec2 aoTextureScale;\r\n		uniform vec2 aoTexturePan;\r\n		#endif\r\n		\r\n	#endif\r\n#else\r\nconst vec3 diffuseColor = vec3(0.0);\r\nconst float colorOpacity = 1.0;\r\n#endif\r\n\r\n#if !defined( DEPTH_PASS )\r\n\r\n	uniform vec4 screenDimensions;\r\n	#ifdef RIM_LIGHTING\r\n		uniform vec3 rimColor;\r\n		uniform float rimPower;\r\n	#endif\r\n	#ifdef SPECULAR_COLOR\r\n	uniform vec3 specularColor;\r\n	// uniform float gloss;\r\n		#ifdef SPECULAR_TEXTURE\r\n		uniform sampler2D specularTexture;\r\n		uniform int specularUVChannel;\r\n		uniform vec2 specularTextureOffset;\r\n		uniform vec2 specularTextureScale;\r\n		uniform vec2 specularTexturePan;\r\n		#endif\r\n\r\n		#if defined(PHONG_SPECULAR)\r\n		uniform float specularIntensity;\r\n		uniform float gloss;\r\n		#endif\r\n	#endif\r\n	#ifdef REFLECTIONS\r\n		uniform float reflectionFresnel;\r\n		uniform float reflectionBias;\r\n		float reflectionFactor = reflectionBias * reflectionBias;\r\n		#if ( REFLECTIONS == 0 )\r\n		uniform samplerCube environmentTexture;\r\n		#else\r\n		uniform sampler2D environmentTexture2D;\r\n		#endif\r\n\r\n	#endif\r\n\r\n	#if defined( USE_COLOR ) && defined( DIFFUSE_COLOR )\r\n		varying vec3 vColor;\r\n	#endif\r\n\r\n	#ifdef NORMAL_TEXTURE\r\n	uniform float normalScale;\r\n	uniform sampler2D normalTexture;\r\n	uniform int normalUVChannel;\r\n	uniform vec2 normalTextureOffset;\r\n	uniform vec2 normalTextureScale;\r\n	uniform vec2 normalTexturePan;\r\n	uniform bool normalTextureFlipY;\r\n	uniform bool normalTextureFlipX;\r\n	#ifdef PARALLAX_MAPPING\r\n		uniform float parallaxScale;\r\n	#endif\r\n	#endif\r\n\r\n	#ifdef EMISSIVE_COLOR\r\n	uniform vec3 emissiveColor;\r\n	uniform float emissiveIntensity;\r\n		#ifdef EMISSIVE_TEXTURE\r\n		uniform sampler2D emissiveTexture;\r\n		uniform int emissiveUVChannel;\r\n		uniform vec2 emissiveTextureOffset;\r\n		uniform vec2 emissiveTextureScale;\r\n		uniform vec2 emissiveTexturePan;\r\n		#endif\r\n	#endif\r\n\r\n	#ifdef SCATTERING\r\n		#ifdef TRANSLUCENT_SCATTERING\r\n		uniform vec3 scatterColor;\r\n		uniform float scatterScale;\r\n		#elif defined( LOCAL_SCATTERING )\r\n		uniform vec3 scatterColor;\r\n		uniform float scatterLocalScale;\r\n		#endif\r\n\r\n		#ifdef SSS_TEXTURE\r\n		uniform sampler2D sssTexture;\r\n		uniform int sssUVChannel;\r\n		uniform vec2 sssTextureOffset;\r\n		uniform vec2 sssTextureScale;\r\n		uniform vec2 sssTexturePan;\r\n		#endif\r\n	#endif\r\n\r\n	#ifdef IRIDESCENT_LAYER\r\n	uniform vec3 diffuseColor2;\r\n	uniform float twoToneExponent;\r\n	uniform float metallicExponent;\r\n	uniform float metallicMultiplier;\r\n		#ifdef IRIDESCENT_TEXTURE\r\n		uniform sampler2D iridescentTexture;\r\n		#endif\r\n	#endif\r\n#endif\r\n\r\nvarying vec4 vUv;\r\n// varying vec4 vPosition_WS;\r\nvarying vec4 vPosition_WS;\r\n\r\n#if !defined( DEPTH_PASS )\r\n	#if defined( NORMAL_TEXTURE ) && defined( USE_LIGHTING )\r\n		#if ( LIGHTING_MODEL == 1 )\r\n		varying vec4 vTangent_WS;\r\n		varying vec4 vBinormal_WS;\r\n		#endif\r\n	#endif\r\n\r\n	varying vec4 vNormal_WS;\r\n	//varying vec4 vPosition_SS;\r\n\r\n	uniform vec3 ambientLightColor;\r\n\r\n	#ifdef USE_LIGHTING\r\n		uniform int doubleSidedLighting;\r\n		#if ( LIGHTING_MODEL == 1 )\r\n			#if MAX_DIR_LIGHTS > 0\r\n				uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\r\n				uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\r\n			#endif\r\n\r\n			#if MAX_POINT_LIGHTS > 0\r\n				uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\r\n				uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\r\n				uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\r\n			#endif\r\n\r\n		#endif\r\n		\r\n		#ifdef USE_SHADOWMAP\r\n			#if MAX_SHADOWS > 0\r\n				uniform sampler2D shadowMap[ MAX_SHADOWS ];\r\n				uniform vec2 shadowMapSize[ MAX_SHADOWS ];\r\n				uniform float shadowBias[ MAX_SHADOWS ];\r\n				varying vec4 vShadowCoord[ MAX_SHADOWS ];\r\n			#endif\r\n\r\n			float unpackDepth( const in vec4 rgba_depth ) {\r\n				const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\r\n				float depth = dot( rgba_depth, bit_shift );\r\n				return depth;\r\n			}\r\n			\r\n		#endif\r\n	#endif\r\n\r\n	#ifdef USE_FOG\r\n		uniform vec3 fogColor;\r\n		uniform float fogDensity;\r\n	#endif\r\n\r\n	#ifdef SPECULAR_COLOR\r\n		#ifdef PHONG_SPECULAR\r\n		\r\n		//http://www.altdevblogaday.com/2011/08/23/shader-code-for-physically-based-lighting/\r\n		// vec3 calculateBlinnPhong( in float NdotH, in float NdotL_sat, in float HdotL, in float NdotV, in float glossValue, in vec3 specularColorValue ) {\r\n		// 	//BlinnPhong - Normal Distribution Function\r\n		// 	float normalisation_term = glossValue * 0.125 + 0.25;\r\n		// 	float specPower = pow( 8192.0, glossValue );\r\n		// 	float specular_term = pow( clamp( NdotH, 0.0, 1.0), specPower ) * normalisation_term;\r\n			\r\n		// 	//Schlick-Fresnel - Reflectance Function\r\n		// 	float base = clamp( 1.0 - HdotL, 0.0, 1.0);\r\n		// 	float exponential = pow( base, 5.0 );\r\n		// 	// vec3 fresnel_term = ( vec3(1.0) - specularColorValue ) * exponential + specularColorValue;\r\n		// 	vec3 fresnel_term = specularColorValue * exponential + specularColorValue;\r\n\r\n		// 	// //Schlick-Smith - Visibility Function\r\n		// 	float k = 2.0 * inversesqrt( 3.14159 * (gloss + 2.0) );\r\n		// 	float oneMinusK = 1.0 - k;\r\n		// 	float visibility = 1.0 / ( (NdotL_sat * oneMinusK + k) * (NdotV * oneMinusK + k));\r\n		// 	return fresnel_term * (specular_term * NdotL_sat) * (visibility * specularIntensity);\r\n		// }\r\n\r\n		// From http://www.filmicworlds.com/2014/04/21/optimizing-ggx-shaders-with-dotlh/\r\n		vec2 LightingFuncGGX_FV(float dotLH, float roughness)\r\n		{\r\n			float alpha = roughness*roughness;\r\n\r\n			// F\r\n			float F_a, F_b;\r\n			float dotLH5 = pow(1.0-dotLH,5.0);\r\n			F_a = 1.0;\r\n			F_b = dotLH5;\r\n\r\n			// V\r\n			float vis;\r\n			float k = alpha/2.0;\r\n			float k2 = k*k;\r\n			float invK2 = 1.0-k2;\r\n			vis = 1.0 / (dotLH*dotLH*invK2 + k2);\r\n\r\n			return vec2(F_a*vis,F_b*vis);\r\n		}\r\n\r\n		float LightingFuncGGX_D(float dotNH, float roughness)\r\n		{\r\n			float alpha = roughness*roughness;\r\n			float alphaSqr = alpha*alpha;\r\n			float pi = 3.14159;\r\n			float denom = dotNH * dotNH *(alphaSqr-1.0) + 1.0;\r\n\r\n			float D = alphaSqr/(pi * denom * denom);\r\n			return D;\r\n		}\r\n\r\n		// #ifdef REFLECTIONS\r\n		// float SpecularFuncGGX( in float roughness, in float dotNH, in float dotLH, in float dotNL, in float dotVN, inout float reflFactor)\r\n		// #else\r\n		float SpecularFuncGGX( in float roughness, in float dotNH, in float dotLH, in float dotNL )\r\n		// #endif\r\n		{\r\n			dotNH = clamp( dotNH, 0.0, 1.0 );\r\n		  dotLH = clamp( dotLH, 0.0, 1.0 );\r\n		  dotNL = clamp( dotNL, 0.0, 1.0 );\r\n\r\n			float D = LightingFuncGGX_D(dotNH,roughness);\r\n			vec2 FV_helper = LightingFuncGGX_FV(dotLH,roughness);\r\n			#ifdef REFLECTIONS\r\n				float FV = reflectionFactor*FV_helper.x + (1.0-reflectionFactor)*FV_helper.y;\r\n			// 	vec2 ref_helper = LightingFuncGGX_FV(dotVN,roughness);\r\n			// 	float FV = reflectionBias*FV_helper.x + (1.0-reflectionBias)*FV_helper.y;\r\n			// 	float ref = reflectionBias*ref_helper.x + (1.0-reflectionBias)*ref_helper.y;\r\n			// 	reflFactor = clamp( dotVN * D * ref + reflectionBias, 0.0, 1.0);\r\n			#else\r\n				float FV = FV_helper.x;\r\n			#endif\r\n			float specular = dotNL * D * FV;\r\n			\r\n			return specular;\r\n		}\r\n\r\n		#endif\r\n	#endif\r\n\r\n	#ifdef LOCAL_SCATTERING\r\n		void calculateLocalScattering( 	in vec3 lightDirection, in float NdotL,	out float diffuseWeight, in vec3 normal_Scatter, out float scatterWeight ) {\r\n\r\n			float NdotL_Scatter = dot( normal_Scatter, lightDirection );\r\n			float diffuseWeightHalf = clamp( 0.5 * NdotL_Scatter + 0.5, 0.0, 1.0 );\r\n\r\n			scatterWeight = diffuseWeightHalf;\r\n			\r\n			diffuseWeight = clamp( mix( NdotL_Scatter, NdotL, 0.15 ), 0.0, 1.0 );\r\n		}\r\n	#endif\r\n#endif\r\n\r\n#ifdef DEPTH_PASS\r\n	vec4 pack_depth( const in float depth ) {\r\n\r\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\r\n	const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\r\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\r\n	res = res.xxyz * -bit_mask + res;\r\n	return res;\r\n\r\n}\r\n#endif\r\n\r\nvoid main() {\r\n\r\n	#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\r\n		gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\r\n	#endif\r\n	vec2 uvOffset = vec2(0.0, 0.0);\r\n	vec3 eyeVector_WS = normalize( cameraPosition - vPosition_WS.xyz );\r\n\r\n	#if !defined( DEPTH_PASS ) && defined( USE_LIGHTING )\r\n		\r\n		#ifdef NORMAL_TEXTURE\r\n			vec2 vNormalUv = mix( vUv.xy, vUv.zw, float(normalUVChannel));\r\n			vNormalUv = vNormalUv * normalTextureScale + normalTextureOffset + normalTexturePan * time;\r\n			\r\n			#if defined( DISPLACEMENT_WITH_NORMAL ) && defined( NORMAL_TEXTURE )\r\n				vec3 q0 = dFdx( eyeVector_WS.xyz );\r\n				vec3 q1 = dFdy( eyeVector_WS.xyz );\r\n				vec2 st0 = dFdx( vUv.st );\r\n				vec2 st1 = dFdy( vUv.st );\r\n				vec3 S = normalize( q0 * st1.t - q1 * st0.t );\r\n				vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\r\n				vec3 N = normalize( vNormal_WS.xyz );\r\n			#endif\r\n\r\n			#ifdef PARALLAX_MAPPING\r\n				\r\n				const float n = 6.0;\r\n				vec3 eyeVector_TS = normalize(vec3( vTangent_WS.w, vBinormal_WS.w, vNormal_WS.w ));\r\n				float step = 1.0 / n;\r\n				vec2 dt = vec2(-1.0, 1.0) * eyeVector_TS.xy * parallaxScale / (n * eyeVector_TS.z);\r\n				float height = 1.0;\r\n				vec2 t = vec2(0.0, 0.0);\r\n				float parallaxDepth = texture2D( normalTexture, vNormalUv ).a;\r\n				float fragColorMult = 1.0;\r\n				float darkeningAmount = parallaxScale * 35.0;\r\n				bool isSet = false;\r\n				for ( float i = 0.0; i < n; i++ ) {\r\n					if ( parallaxDepth > height && !isSet ) {\r\n						isSet = true;\r\n						uvOffset = t;\r\n						fragColorMult -= darkeningAmount * 0.2 * i;\r\n					}\r\n					height -= step;\r\n					t += dt; \r\n				 	parallaxDepth = texture2D( normalTexture, vNormalUv + t ).a;\r\n				}\r\n			\r\n			#endif\r\n		  vec3 normalTex = texture2D( normalTexture, vNormalUv + uvOffset ).xyz;\r\n		#endif\r\n	#endif\r\n	#if defined( DIFFUSE_COLOR ) && defined( DIFFUSE_TEXTURE )\r\n		vec2 vDiffuseUv = mix( vUv.xy, vUv.zw, float(diffuseUVChannel));\r\n		vDiffuseUv = vDiffuseUv * diffuseTextureScale + diffuseTextureOffset + uvOffset + diffuseTexturePan * time;\r\n		vec4 diffuseTex = texture2D( diffuseTexture, vDiffuseUv );\r\n		#ifdef GAMMA_INPUT\r\n		  diffuseTex.xyz *= diffuseTex.xyz;\r\n		#endif\r\n	#endif\r\n	#if !defined( DEPTH_PASS )\r\n	\r\n		#if defined( SPECULAR_COLOR ) && defined( SPECULAR_TEXTURE )\r\n		  vec2 vSpecularUv = mix( vUv.xy, vUv.zw, float(specularUVChannel) );\r\n			vSpecularUv = vSpecularUv * specularTextureScale + specularTextureOffset + uvOffset + specularTexturePan * time;\r\n			vec4 specularTex = texture2D( specularTexture, vSpecularUv );\r\n			#ifdef GAMMA_INPUT\r\n			  specularTex *= specularTex;\r\n			#endif\r\n		#endif\r\n		#if defined( EMISSIVE_COLOR ) && defined( EMISSIVE_TEXTURE )\r\n			vec2 vEmissiveUv = mix( vUv.xy, vUv.zw, float(emissiveUVChannel) );\r\n			vEmissiveUv = vEmissiveUv * emissiveTextureScale + emissiveTextureOffset + uvOffset + emissiveTexturePan * time;\r\n			vec3 emissiveTex = texture2D( emissiveTexture, vEmissiveUv ).xyz;\r\n			#ifdef GAMMA_INPUT\r\n			  emissiveTex *= emissiveTex;\r\n			#endif\r\n		#endif\r\n		#if defined( DIFFUSE_COLOR ) && defined( AO_TEXTURE )\r\n			vec2 vAOUv = mix( vUv.xy, vUv.zw, float(aoUVChannel) );\r\n			vAOUv = vAOUv * aoTextureScale + aoTextureOffset + uvOffset + aoTexturePan * time;\r\n			vec3 aoTex = texture2D( aoTexture, vAOUv).xyz;\r\n		#endif\r\n		#if defined( SCATTERING ) && defined( SSS_TEXTURE )\r\n			vec2 vSSSUv = mix( vUv.xy, vUv.zw, float(sssUVChannel) );\r\n			vSSSUv = vSSSUv * sssTextureScale + sssTextureOffset + uvOffset + sssTexturePan * time;\r\n			vec3 sssTex = texture2D( sssTexture, vSSSUv).xyz;\r\n			#ifdef GAMMA_INPUT\r\n			  sssTex *= sssTex;\r\n			#endif\r\n		#endif\r\n		\r\n		#if defined( NORMAL_TEXTURE ) && defined( USE_LIGHTING )\r\n			#if ( LIGHTING_MODEL == 1 )\r\n				normalTex.xy = normalTex.xy * 2.0 - 1.0;\r\n		\r\n				if ( normalTextureFlipY ) {\r\n			  	normalTex *= vec3( 1.0, -1.0, 1.0 );\r\n			  }\r\n			  if ( normalTextureFlipX ) {\r\n			  	normalTex *= vec3( -1.0, 1.0, 1.0 );\r\n			  }\r\n				\r\n				normalTex.xy *= normalScale;\r\n				//normalTex = normalize( normalTex );\r\n				\r\n				//Transform the normal to view space so that we can do lighting calculations, sample the environment map, etc.\r\n				#if defined( DISPLACEMENT_WITH_NORMAL )\r\n					mat3 T2V_Transform = mat3( S, T, N );\r\n				#else\r\n					mat3 T2W_Transform = mat3( vTangent_WS.xyz, vBinormal_WS.xyz, vNormal_WS.xyz );\r\n				#endif\r\n				vec3 normal_WS = T2W_Transform * normalTex;\r\n				normal_WS = normalize( normal_WS );\r\n				\r\n				#ifdef LOCAL_SCATTERING\r\n					// vec3 normal_Scatter = mix( normal_WS, normalize(vNormal_WS.xyz), clamp( scatterLocalScale, 0.0, 1.0 ) );\r\n					vec3 normal_Scatter = normal_WS;\r\n				#endif\r\n			\r\n			#endif\r\n		#else\r\n			vec3 normal_WS = normalize( vNormal_WS.xyz );\r\n\r\n			#ifdef LOCAL_SCATTERING\r\n				vec3 normal_Scatter = normal_WS;\r\n			#endif\r\n\r\n		#endif\r\n\r\n		#if defined( USE_LIGHTING )\r\n			// if ( renderModeNormals != 1 && doubleSidedLighting > 0 && dot(vNormal_WS.xyz, eyeVector_WS ) > 0.0 ) {\r\n			// 	normal_WS *= vec3( -1.0 );\r\n			// }\r\n		#endif\r\n\r\n		#ifdef DOUBLE_SIDED\r\n			normal_WS = normal_WS * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\r\n		#endif\r\n		float NdotV = dot( eyeVector_WS, normal_WS );\r\n\r\n		#ifdef SPECULAR_COLOR\r\n			float glossValue;\r\n			#ifdef SPECULAR_TEXTURE\r\n				#ifdef PHONG_SPECULAR\r\n					glossValue = gloss * specularTex.a;\r\n				#endif\r\n\r\n			#elif defined(PHONG_SPECULAR)\r\n				glossValue = gloss;\r\n			#endif\r\n		#endif\r\n\r\n		#ifdef REFLECTIONS\r\n			float mipBias = 0.0;\r\n			#ifdef SPECULAR_COLOR\r\n				float numMips = float(ENVMAP_NUM_MIPS);\r\n				// mipBias = pow((-numMips * glossValue + numMips) / numMips, 2.0) * numMips;\r\n				mipBias = (-numMips * glossValue + numMips) * 0.7;\r\n			#endif\r\n			vec3 cameraToVertex = normalize( vPosition_WS.xyz - cameraPosition );\r\n			vec3 vReflectWorldSpace = reflect( cameraToVertex, normal_WS );\r\n			//Cube map reflection\r\n			#if ( REFLECTIONS == 0 )\r\n				vec4 reflectedColor = textureCube( environmentTexture, vec3( vReflectWorldSpace.x, vReflectWorldSpace.yz), mipBias );\r\n			//Sphere map reflection\r\n			#elif ( REFLECTIONS == 1 )\r\n				vec4 reflectedColor = texture2D( environmentTexture2D, vReflectWorldSpace.xy * vec2( 0.5, -0.5 ) + 0.5, mipBias );\r\n			//Planar reflection\r\n			#elif ( REFLECTIONS == 2 )\r\n\r\n				vec2 distort = (viewMatrix * vec4( normal_WS - vNormal_WS.xyz, 0.0 )).xy * -0.01;\r\n				vec4 reflectedColor = texture2D( environmentTexture2D, vec2(-1.0, 1.0) * (gl_FragCoord.xy - screenDimensions.xy) / screenDimensions.zw + distort, mipBias );\r\n			//Equirectangular reflection\r\n			#elif ( REFLECTIONS == 3 )\r\n				vec2 sampleUV;\r\n        sampleUV.y = clamp( vReflectWorldSpace.y * -0.5 + 0.5, 0.0, 1.0);\r\n        \r\n      	sampleUV.x = atan( vReflectWorldSpace.z, vReflectWorldSpace.x ) * 0.15915494309189533576888376337251 + 0.5; // reciprocal( 2 PI ) + 0.5\r\n        	\r\n        vec4 reflectedColor = texture2D( environmentTexture2D, sampleUV, mipBias );	\r\n        \r\n			#endif\r\n\r\n			#if defined( ENVMAP_HDR_INPUT )\r\n				#if ( ENVMAP_HDR_INPUT == HDR_TYPE_RGBM )\r\n					reflectedColor.xyz = HDRDecodeRGBM( reflectedColor );\r\n				#elif ( ENVMAP_HDR_INPUT == HDR_TYPE_RGBD )\r\n					reflectedColor.xyz = HDRDecodeRGBD( reflectedColor );\r\n				#elif ( ENVMAP_HDR_INPUT == HDR_TYPE_RGBE )\r\n					reflectedColor.xyz = HDRDecodeRGBE( reflectedColor );\r\n				#elif ( ENVMAP_HDR_INPUT == HDR_TYPE_LOGLUV )\r\n					reflectedColor.xyz = HDRDecodeLOGLUV( reflectedColor );\r\n				#else\r\n					//TODO - gamma should be an option per texture. Currently, though, if the texture is HDR, it\'s assumed to be in linear space\r\n					// #ifdef GAMMA_INPUT\r\n						// reflectedColor.xyz *= reflectedColor.xyz;\r\n					// #endif\r\n				#endif\r\n			#elif\r\n				#ifdef GAMMA_INPUT\r\n					reflectedColor.xyz *= reflectedColor.xyz;\r\n				#endif\r\n			#endif\r\n			\r\n\r\n		#elif defined( IRIDESCENT_LAYER ) && defined( IRIDESCENT_TEXTURE )\r\n			vec3 cameraToVertex = normalize( vPosition_WS.xyz - cameraPosition );\r\n			vec3 vReflectWorldSpace = reflect( cameraToVertex, normal_WS );\r\n		#endif\r\n\r\n		//After using glossValue in reflection calculation, nudge it down a bit to avoid infinitely small point-highlights when gloss == 1.0\r\n		#ifdef SPECULAR_COLOR\r\n			glossValue -= 0.05;\r\n		#endif\r\n\r\n		#ifdef REFLECTIONS\r\n			// float reflectionFactor = reflectionBias * reflectionBias;\r\n			// reflectionFactor *= (1.0 - abs( reflectionBias ));\r\n			// reflectionFactor = reflectionFactor + clamp( reflectionBias, 0.0, 1.0);\r\n			// reflectionFactor = reflectionBias;\r\n			// #if defined(SPECULAR_COLOR) && defined( SPECULAR_TEXTURE )\r\n			// 	reflectionFactor *= sqrt( specularTex.a );\r\n			// #endif\r\n		#endif\r\n\r\n		#ifdef IRIDESCENT_LAYER\r\n			float twoToneFactor = pow( abs(NdotV), twoToneExponent );\r\n			#ifdef IRIDESCENT_TEXTURE\r\n				vec3 iridescentTex = texture2D( iridescentTexture, vec2(twoToneFactor, vReflectWorldSpace.y * 0.5 + 0.5)).xyz;\r\n				#ifdef GAMMA_INPUT\r\n					iridescentTex *= iridescentTex;\r\n				#endif\r\n				vec3 baseColor = mix( diffuseColor, diffuseColor2, twoToneFactor ) * iridescentTex;\r\n			#else\r\n				vec3 baseColor = mix( diffuseColor, diffuseColor2, twoToneFactor );\r\n			#endif\r\n		#else\r\n			vec3 baseColor = diffuseColor;\r\n		#endif\r\n\r\n		#if defined( USE_COLOR ) && defined( DIFFUSE_COLOR )\r\n			//baseColor *= vec3( vPosition_WS.w, vPosition_SS.zw );\r\n			baseColor *= vColor;\r\n		#endif\r\n\r\n\r\n		#if defined( DIFFUSE_COLOR ) && defined( DIFFUSE_TEXTURE )\r\n			vec3 diffuseColorValue = diffuseTex.xyz;\r\n			#ifdef ALPHA_BLENDMODE\r\n				#if ( ALPHA_BLENDMODE == 1 )\r\n					if ( colorBlend != 0 ) {\r\n						diffuseColorValue = diffuseTex.xyz * baseColor;\r\n					}\r\n					else {\r\n						diffuseColorValue = mix( baseColor, diffuseTex.xyz, diffuseTex.a);\r\n					}\r\n				#else\r\n					diffuseColorValue = diffuseTex.xyz * baseColor;\r\n				#endif\r\n					\r\n				#if defined( ALPHATEST )\r\n					#if ( ALPHA_BLENDMODE == 2 )\r\n						if ( diffuseTex.a < float(ALPHATEST) ) discard;\r\n					#endif\r\n				#endif\r\n			#endif\r\n			float textureOpacity = clamp( float( alphaBlendMode ) + diffuseTex.a, 0.0, 1.0);\r\n			float colorOpacityValue = colorOpacity * textureOpacity;\r\n		#elif defined( DIFFUSE_COLOR )\r\n			vec3 diffuseColorValue = baseColor;\r\n			float colorOpacityValue = colorOpacity;\r\n		#endif\r\n	#endif //(#if !defined( DEPTH_PASS ))\r\n	#if defined( DEPTH_PASS )\r\n		#if defined( DIFFUSE_TEXTURE ) && defined( ALPHATEST )\r\n			#if ( ALPHA_BLENDMODE == 2 )\r\n				if ( diffuseTex.a < float(ALPHATEST) ) {\r\n					discard;\r\n				}\r\n				else {\r\n					gl_FragColor = pack_depth( gl_FragCoord.z );\r\n				}\r\n			#endif\r\n		#else\r\n			gl_FragColor = pack_depth( gl_FragCoord.z );\r\n		#endif\r\n		\r\n	#else\r\n		\r\n		#if defined( SPECULAR_COLOR ) && defined( SPECULAR_TEXTURE )\r\n			vec3 specularColorValue = specularTex.xyz * specularColor;\r\n		#elif defined( SPECULAR_COLOR )\r\n			vec3 specularColorValue = specularColor;\r\n		#endif\r\n\r\n		float totalOpacityValue = opacity;\r\n\r\n		#ifdef SCATTERING\r\n			#ifdef SSS_TEXTURE\r\n				vec3 scatterColorValue = scatterColor * sssTex;\r\n			#else\r\n				vec3 scatterColorValue = scatterColor;\r\n			#endif\r\n			#ifdef LOCAL_SCATTERING\r\n				scatterColorValue *= scatterLocalScale * 0.5;\r\n			#endif\r\n		#endif\r\n\r\n		\r\n		vec3 totalDiffuse = vec3( 0.0, 0.0, 0.0 );\r\n		vec3 totalSpecular = vec3( 0.0 );\r\n		vec3 totalScatter = vec3( 0.0 );\r\n\r\n		#ifdef USE_LIGHTING\r\n\r\n			#ifdef USE_SHADOWMAP\r\n				#if MAX_SHADOWS > 0 && ( defined( DIFFUSE_COLOR ) || defined( SPECULAR_COLOR ) )\r\n					float shadowValues[ MAX_DIR_LIGHTS ];\r\n					#ifdef TRANSLUCENT_SCATTERING\r\n						float shadowValuesScatter[ MAX_DIR_LIGHTS ];\r\n					#endif\r\n					#ifdef SHADOWMAP_DEBUG\r\n						vec3 shadowColour = vec3(1.0);\r\n					#endif\r\n					\r\n					for( int s = 0; s < MAX_DIR_LIGHTS; s ++ ) {\r\n						shadowValues[ s ] = 1.0;\r\n						#ifdef TRANSLUCENT_SCATTERING\r\n							shadowValuesScatter[ s ] = 1.0;\r\n						#endif\r\n					} \r\n					\r\n					#ifdef SHADOWMAP_DEBUG\r\n\r\n						vec3 frustumColors[3];\r\n						frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\r\n						frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\r\n						frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\r\n\r\n					#endif\r\n\r\n					#ifdef SHADOWMAP_CASCADE\r\n\r\n						int inFrustumCount = 0;\r\n\r\n					#endif\r\n				\r\n					float fDepth;\r\n					//int lightIndex = 0;\r\n					int frustumIndex = 0;\r\n\r\n					for( int s = 0; s < MAX_SHADOWS; s ++ ) {\r\n\r\n						vec3 shadowCoord = vShadowCoord[ s ].xyz / vShadowCoord[ s ].w;\r\n						// "if ( something && something )" 		 breaks ATI OpenGL shader compiler\r\n						// "if ( all( something, something ) )"  using this instead\r\n\r\n						bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\r\n						bool inFrustum = all( inFrustumVec );\r\n\r\n						// don\'t shadow pixels outside of light frustum\r\n						// use just first frustum (for cascades)\r\n						// don\'t shadow pixels behind far plane of light frustum\r\n\r\n						#ifdef SHADOWMAP_CASCADE\r\n\r\n							inFrustumCount += int( inFrustum );\r\n							bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\r\n\r\n						#else\r\n\r\n							bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\r\n\r\n						#endif\r\n\r\n						bool frustumTest = all( frustumTestVec );\r\n\r\n						if ( frustumTest ) {\r\n\r\n							shadowCoord.z += shadowBias[ s ];\r\n\r\n							#ifdef SHADOWMAP_TYPE_PCF_SOFT\r\n\r\n								// Percentage-close filtering\r\n								// (9 pixel kernel)\r\n								// http://fabiensanglard.net/shadowmappingPCF/\r\n\r\n								float shadow = 0.0;\r\n\r\n\r\n								//const float shadowDelta = 1.0 / 9.0;\r\n								//const float kernelCornerWeight = 1.0 / 16.0;\r\n								//const float kernelEdgeWeight = 1.0 / 8.0;\r\n\r\n								float xPixelOffset = 1.0 / shadowMapSize[ s ].x;\r\n								float yPixelOffset = 1.0 / shadowMapSize[ s ].y;\r\n\r\n								float dx0 = -1.0 * xPixelOffset;\r\n								float dy0 = -1.0 * yPixelOffset;\r\n								float dx1 = 1.0 * xPixelOffset;\r\n								float dy1 = 1.0 * yPixelOffset;\r\n\r\n								mat3 shadowKernel;\r\n								mat3 depthKernel;\r\n\r\n								depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\r\n								depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\r\n								depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\r\n								depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\r\n								depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy ) );\r\n								depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\r\n								depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\r\n								depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\r\n								depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\r\n\r\n								// depthKernel[0][0] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx0, dy0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[0][1] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx0, 0.0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[0][2] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx0, dy1 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[1][0] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( 0.0, dy0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[1][1] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy, 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[1][2] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( 0.0, dy1 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[2][0] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx1, dy0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[2][1] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx1, 0.0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// depthKernel[2][2] = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx1, dy1 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n\r\n								vec3 shadowZ = vec3( shadowCoord.z );\r\n								shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\r\n								shadowKernel[0] *= vec3(0.25);\r\n															\r\n								shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\r\n								shadowKernel[1] *= vec3(0.25);\r\n\r\n								shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\r\n								shadowKernel[2] *= vec3(0.25);\r\n\r\n								vec2 fractionalCoord = 1.0 - fract(shadowCoord.xy * shadowMapSize[s].xy );\r\n\r\n								\r\n								shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\r\n								shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\r\n\r\n								vec4 shadowValueVector;\r\n								shadowValueVector.x = mix(shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\r\n								shadowValueVector.y = mix(shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\r\n								shadowValueVector.z = mix(shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\r\n								shadowValueVector.w = mix(shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\r\n\r\n								shadow = dot(shadowValueVector, vec4(1.0));\r\n\r\n								#ifdef SHADOWMAP_CASCADE\r\n									shadowValues[ 0 ] *= (1.0 - shadow);\r\n								#else\r\n									shadowValues[ s ] = (1.0 - shadow);\r\n								#endif\r\n\r\n								#ifdef TRANSLUCENT_SCATTERING\r\n									depthKernel[0] = mix( depthKernel[1], depthKernel[0], fractionalCoord.x );\r\n									depthKernel[1] = mix( depthKernel[2], depthKernel[1], fractionalCoord.x );\r\n\r\n									vec4 depthValues;\r\n									depthValues.x = mix(depthKernel[0][1], depthKernel[0][0], fractionalCoord.y );\r\n									depthValues.y = mix(depthKernel[0][2], depthKernel[0][1], fractionalCoord.y );\r\n									depthValues.z = mix(depthKernel[1][1], depthKernel[1][0], fractionalCoord.y );\r\n									depthValues.w = mix(depthKernel[1][2], depthKernel[1][1], fractionalCoord.y );\r\n									float totalDepth = dot(depthValues, vec4(1.0));// + dot(depthKernel[1], vec3(1.0)) + dot(depthKernel[2], vec3(1.0));\r\n									float depthAvg = totalDepth / 4.0;\r\n									float exponent = (shadowCoord.z - depthAvg ) * shadow;\r\n									// exponent = clamp(exponent, 0.0, 100.0);\r\n									// exponent = -pow(exponent * (1.0 - scatterScale) * 1000.0, 2.0);\r\n									// shadowValuesScatter[ s ] = exp2( exponent );\r\n									exponent = clamp(exponent, 0.0, 1000.0) * 1000.0;\r\n									shadowValuesScatter[ s ] = exp( (scatterScale - 1.0) * exponent );\r\n								#endif\r\n								\r\n							#elif defined( SHADOWMAP_TYPE_PCF )\r\n\r\n								float shadow = 0.0;\r\n								const float shadowDelta = 1.0 / 9.0;\r\n\r\n								float xPixelOffset = 1.0 / shadowMapSize[ s ].x;\r\n								float yPixelOffset = 1.0 / shadowMapSize[ s ].y;\r\n\r\n								float dx0 = -1.25 * xPixelOffset;\r\n								float dy0 = -1.25 * yPixelOffset;\r\n								float dx1 = 1.25 * xPixelOffset;\r\n								float dy1 = 1.25 * yPixelOffset;\r\n\r\n								float totalDepth = 0.0;\r\n								\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx0, dy0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( 0.0, dy0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx1, dy0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx0, 0.0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy, 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx1, 0.0 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx0, dy1 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( 0.0, dy1 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								fDepth = unpackDepth( texture2DProj( shadowMap[ s ], vec4( shadowCoord.xy + vShadowCoord[ s ].w * vec2( dx1, dy1 ), 0.05, vShadowCoord[ s ].w ) ) );\r\n								// fDepth = unpackDepth( texture2D( shadowMap[ s ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\r\n								if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\r\n								totalDepth += fDepth;\r\n\r\n								#ifdef SHADOWMAP_CASCADE\r\n									shadowValues[ 0 ] *= (1.0 - shadow);\r\n								#else\r\n									shadowValues[ s ] = (1.0 - shadow);\r\n								#endif\r\n\r\n								#ifdef TRANSLUCENT_SCATTERING\r\n									\r\n									float depthAvg = totalDepth / 9.0;\r\n									float exponent = (shadowCoord.z - depthAvg ) * shadow;\r\n									// exponent = clamp(exponent, 0.0, 10000.0);\r\n									// exponent = -pow(exponent * (1.0 - scatterScale) * 100.0, 2.0);\r\n									// shadowValuesScatter[ s ] = exp2( exponent );\r\n									exponent = clamp(exponent, 0.0, 1000.0) * 1000.0;\r\n									shadowValuesScatter[ s ] = exp( (scatterScale - 1.0) * exponent );\r\n									\r\n								#endif\r\n							#else\r\n\r\n								vec4 rgbaDepth = texture2DProj( shadowMap[ s ], vec4( vShadowCoord[ s ].w * ( shadowCoord.xy ), 0.05, vShadowCoord[ s ].w ) );\r\n								// vec4 rgbaDepth = texture2D( shadowMap[ s ], shadowCoord.xy );\r\n								float fDepth = unpackDepth( rgbaDepth );\r\n\r\n								if ( fDepth < shadowCoord.z ) {\r\n\r\n									#ifdef SHADOWMAP_CASCADE\r\n										shadowValues[ 0 ] *= 0.0;\r\n									#else\r\n										shadowValues[ s ] = 0.0;\r\n									#endif\r\n								}\r\n								else {\r\n									shadowValues[ s ] = 1.0;\r\n								}\r\n								#ifdef TRANSLUCENT_SCATTERING\r\n									\r\n									float exponent = (shadowCoord.z - fDepth );\r\n									exponent = clamp(exponent, 0.0, 1000.0) * 1000.0;\r\n									shadowValuesScatter[ s ] = exp( (scatterScale - 1.0) * exponent );\r\n									\r\n								#endif\r\n\r\n							#endif\r\n						}\r\n						else {\r\n							shadowValues[ s ] = 1.0;\r\n							#ifdef TRANSLUCENT_SCATTERING\r\n								shadowValuesScatter[ s ] = 1.0;\r\n							#endif\r\n						}\r\n\r\n						#ifdef SHADOWMAP_DEBUG\r\n\r\n							#ifdef SHADOWMAP_CASCADE\r\n\r\n								if ( inFrustum && inFrustumCount == 1 ) shadowColour = frustumColors[ s ];\r\n\r\n							#else\r\n\r\n								if ( inFrustum ) shadowColour = frustumColors[ s ];\r\n\r\n							#endif\r\n\r\n						#endif\r\n						//frustumIndex ++;\r\n\r\n					}\r\n\r\n				#endif\r\n			#endif\r\n			#if ( LIGHTING_MODEL == 1 )\r\n				// point lights\r\n\r\n				#if MAX_POINT_LIGHTS > 0\r\n\r\n					vec3 pointDiffuse;\r\n					\r\n					for ( int p = 0; p < MAX_POINT_LIGHTS; p ++ ) {\r\n\r\n						//Do distance calculation in world space because pointLightDistance[] is in world space\r\n						vec3 pointVector_WS = pointLightPosition[ p ] - vPosition_WS.xyz;\r\n						float pointVecLength = length( pointVector_WS );\r\n						float pointDistance = 1.0 - clamp( ( pointVecLength / pointLightDistance[ p ] ), 0.0, 1.0 );\r\n						// float pointDistance = 1.0 / dot( pointVector_WS, pointVector_WS );\r\n						pointVector_WS /= pointVecLength;\r\n						// vec3 pointVector_WS = normalize((viewMatrix * vec4( pointVector_WS, 0.0 )).xyz);\r\n\r\n						pointDiffuse = vec3( 0.0 );\r\n						float diffuseWeight;\r\n						\r\n						float NdotL = dot( normal_WS, pointVector_WS );\r\n						float NdotL_sat = clamp( NdotL, 0.0, 1.0);\r\n						//CALC DIFFUSE\r\n						#ifdef LOCAL_SCATTERING\r\n							float scatterWeight;\r\n							calculateLocalScattering( pointVector_WS, NdotL, diffuseWeight, normal_Scatter, scatterWeight );\r\n						#elif defined( TRANSLUCENT_SCATTERING )\r\n							float scatterWeight = 1.0;//scatterScale;\r\n							diffuseWeight = clamp( NdotL, 0.0, 1.0 );\r\n						#else\r\n							diffuseWeight = clamp( NdotL, 0.0, 1.0 );\r\n						#endif\r\n\r\n				    #if defined( PHONG_SPECULAR ) || defined( IRIDESCENT_LAYER )\r\n				   		vec3 h = pointVector_WS + eyeVector_WS;\r\n							vec3 H = normalize( h );\r\n							float NdotH = dot( normal_WS, H );\r\n						#endif\r\n\r\n						#ifdef DIFFUSE_COLOR\r\n			    		pointDiffuse = vec3(diffuseWeight);\r\n			    	#endif\r\n\r\n						#ifdef IRIDESCENT_LAYER\r\n							float pointMetallicWeight = pow( clamp( NdotH, 0.0, 1.0), metallicExponent ) * NdotL_sat;\r\n							pointDiffuse += pointMetallicWeight * metallicMultiplier;\r\n						#endif\r\n\r\n						#ifdef DIFFUSE_COLOR\r\n			    		pointDiffuse *= diffuseColorValue;\r\n			    	#endif\r\n\r\n						#if defined( SCATTERING )\r\n							// pointDiffuse = scatterWeight * scatterColorValue + pointDiffuse;\r\n							totalScatter += scatterWeight * scatterColorValue + pointDiffuse;\r\n						#endif\r\n\r\n						#ifdef SPECULAR_COLOR\r\n							\r\n							// #if defined( PHONG_SPECULAR_SIMPLE )\r\n							// 	float normalisation_term = glossValue * 0.125 + 0.25;\r\n							// 	float specPower = pow( 8192.0, glossValue );\r\n							// 	float specWeight = pow( clamp( NdotH, 0.0, 1.0), specPower ) * normalisation_term;\r\n							// 	totalSpecular = (specularColorValue * pointLightColor[ p ]) * specWeight + totalSpecular;\r\n\r\n							// #elif defined( PHONG_SPECULAR )\r\n							// 	float HdotL = dot( H, pointVector_WS );\r\n							// 	vec3 specWeight = calculateBlinnPhong( NdotH, NdotL_sat, HdotL, NdotV, glossValue, specularColorValue );\r\n							// 	totalSpecular = ( pointLightColor[ p ] * (specWeight * pointDistance) ) + totalSpecular;\r\n							// #endif\r\n\r\n							#if defined( PHONG_SPECULAR_SIMPLE )\r\n								float specPower = pow( 8192.0, glossValue );\r\n								vec3 specWeight = specularColorValue * 20.0 * max( pow( NdotH, specPower ), 0.0 ) * NdotL_sat * glossValue;\r\n\r\n							#elif defined( PHONG_SPECULAR )\r\n								float HdotL = dot( H, pointVector_WS );\r\n								// #ifdef REFLECTIONS\r\n								// 	vec3 specWeight = specularColorValue * SpecularFuncGGX( 1.01 - glossValue, NdotH, HdotL, NdotL );\r\n								// #else\r\n									vec3 specWeight = specularColorValue * SpecularFuncGGX( 1.01 - glossValue, NdotH, HdotL, NdotL );\r\n								// #endif\r\n\r\n							#endif\r\n							totalSpecular = pointLightColor[ p ] * specWeight * pointDistance + totalSpecular;\r\n							\r\n						#endif\r\n\r\n						#ifdef RIM_LIGHTING\r\n		    		\r\n			    		float rimPow = clamp( 1.0 - abs( NdotV ), 0.0, 1.0 );\r\n			    		float VdotL = dot( -eyeVector_WS, pointVector_WS );\r\n			    		rimPow *= clamp( VdotL, 0.0, 1.0 );\r\n			    		rimPow = pow( rimPow, rimPower );\r\n\r\n			    		pointDiffuse = rimPow * rimColor + pointDiffuse;\r\n\r\n			    	#endif\r\n\r\n\r\n			    	pointDiffuse *= pointDistance * pointLightColor[ p ];\r\n\r\n			    	totalDiffuse += pointDiffuse;\r\n						\r\n					}\r\n\r\n				#endif\r\n\r\n				\r\n				// directional lights\r\n\r\n				#if MAX_DIR_LIGHTS > 0\r\n\r\n			    for ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\r\n						\r\n						vec3 lightDirection_WS = directionalLightDirection[ i ].xyz;\r\n						float shadowValue = 1.0;\r\n						float shadowValueScatter = 1.0;\r\n						// vec3 dirDiffuse = vec3(0.0);\r\n						\r\n						#if defined( USE_SHADOWMAP ) && (MAX_SHADOWS > 0) && ( defined( DIFFUSE_COLOR ) || defined( SPECULAR_COLOR ) )\r\n\r\n							shadowValue = shadowValues[ i ];\r\n						#endif\r\n						#if defined( USE_SHADOWMAP ) && (MAX_SHADOWS > 0)\r\n							#ifdef TRANSLUCENT_SCATTERING \r\n								shadowValueScatter = shadowValuesScatter[ i ];\r\n							#endif\r\n							\r\n						#endif\r\n\r\n						float diffuseWeight;\r\n\r\n						float NdotL = dot( normal_WS, lightDirection_WS );\r\n						float NdotL_sat = clamp( NdotL, 0.0, 1.0);\r\n						\r\n						//CALC DIFFUSE\r\n						#ifdef LOCAL_SCATTERING\r\n							float scatterWeight;\r\n							calculateLocalScattering( lightDirection_WS, NdotL, diffuseWeight, normal_Scatter, scatterWeight );\r\n\r\n						#else\r\n							diffuseWeight = NdotL_sat;\r\n						#endif\r\n\r\n						\r\n\r\n						#ifdef TRANSLUCENT_SCATTERING \r\n							// totalDiffuse += shadowValueScatter * scatterColorValue * directionalLightColor[ i ];\r\n							totalScatter += shadowValueScatter * scatterColorValue * directionalLightColor[ i ];\r\n						#endif\r\n						#if defined( LOCAL_SCATTERING )\r\n							// totalDiffuse += scatterWeight * scatterColorValue * directionalLightColor[ i ];\r\n							totalScatter += scatterWeight * scatterColorValue * directionalLightColor[ i ];\r\n						#endif\r\n\r\n						#if defined( PHONG_SPECULAR ) || defined( IRIDESCENT_LAYER )\r\n				   		vec3 h = lightDirection_WS + eyeVector_WS;\r\n							vec3 H = normalize( h );\r\n							float NdotH = dot( normal_WS, H );\r\n						#endif\r\n\r\n						#ifdef SPECULAR_COLOR\r\n						\r\n							#if defined( PHONG_SPECULAR_SIMPLE )\r\n								float specPower = pow( 8192.0, glossValue );\r\n								vec3 specWeight = specularColorValue * 20.0 * max( pow( NdotH, specPower ), 0.0 ) * NdotL_sat * glossValue;\r\n\r\n							#elif defined( PHONG_SPECULAR )\r\n								float HdotL = dot( H, lightDirection_WS );\r\n								// #ifdef REFLECTIONS\r\n								// 	vec3 specWeight = specularColorValue * SpecularFuncGGX( 1.01 - glossValue, NdotH, HdotL, NdotL, NdotV, reflectionFactor );\r\n								// #else\r\n									vec3 specWeight = specularColorValue * SpecularFuncGGX( 1.01 - glossValue, NdotH, HdotL, NdotL );\r\n								// #endif\r\n\r\n							#endif\r\n							totalSpecular = (directionalLightColor[ i ]) * (specWeight * shadowValue * specularIntensity) + totalSpecular;\r\n							\r\n						#endif\r\n				   	\r\n						#ifdef DIFFUSE_COLOR\r\n							vec3 diffuse = vec3(diffuseWeight);\r\n							#ifdef IRIDESCENT_LAYER\r\n								float dirMetallicWeight = pow( clamp( NdotH, 0.0, 1.0), metallicExponent ) * NdotL_sat;\r\n								diffuse += dirMetallicWeight * metallicMultiplier;\r\n							#endif\r\n							diffuse *= diffuseColorValue * directionalLightColor[ i ] * shadowValue;\r\n\r\n							totalDiffuse += diffuse;\r\n						#endif\r\n\r\n						#ifdef RIM_LIGHTING\r\n		    		\r\n			    		float rimPow = clamp( 1.0 - abs( NdotV ), 0.0, 1.0 );\r\n\r\n			    		//float diffuseWeightHalf = max( 0.5 * NdotL + 0.5, 0.0 );\r\n			    		//float rimPow = mix( diffuseWeight, diffuseWeightHalf, rimPower );\r\n			    		float VdotL = dot( -eyeVector_WS, lightDirection_WS );\r\n			    		rimPow *= clamp( VdotL, 0.0, 1.0 );\r\n			    		rimPow = pow( rimPow, rimPower );\r\n\r\n			    		#ifdef DIFFUSE_COLOR\r\n			    			totalDiffuse += rimPow * rimColor * diffuseColorValue * directionalLightColor[ i ];\r\n			    		#else\r\n								totalDiffuse += rimPow * rimColor * directionalLightColor[ i ];\r\n							#endif\r\n			    	#endif\r\n						\r\n						#if defined( USE_SHADOWMAP ) && defined( SHADOWMAP_DEBUG )\r\n							#ifdef DIFFUSE_COLOR\r\n								totalDiffuse *= shadowColour;\r\n							#endif\r\n							#ifdef SPECULAR_COLOR\r\n								totalSpecular *= shadowColour;\r\n							#endif\r\n						#endif\r\n			\r\n			    	}\r\n\r\n				#endif\r\n\r\n			#endif\r\n\r\n		#endif//USE_LIGHTING\r\n	\r\n		#if defined( REFLECTIONS ) && defined( SPECULAR_COLOR )\r\n			//Multiply reflected colour by specular colour\r\n			reflectedColor *= vec4( specularColorValue, 1.0 );\r\n			// reflectedColor *= gloss;\r\n		#endif\r\n\r\n		#ifdef DIFFUSE_COLOR\r\n			#ifdef USE_LIGHTING\r\n				totalDiffuse += ambientLightColor * diffuseColorValue;\r\n			#else\r\n				totalDiffuse += diffuseColorValue;\r\n			#endif\r\n			#ifdef AO_TEXTURE\r\n				totalDiffuse *= aoTex;\r\n			#endif\r\n		#else\r\n		 	float colorOpacityValue = 1.0;\r\n		#endif\r\n\r\n		float finalAlpha = colorOpacityValue;\r\n		#ifdef REFLECTIONS\r\n			//Schlick-Fresnel - Reflectance Function\r\n			float fresnel = clamp( (pow( 1.0 - NdotV, 5.0 )) * reflectionFresnel + reflectionFactor, 0.0, 1.0 );\r\n			vec3 reflectance_term = reflectedColor.xyz * fresnel;\r\n			finalAlpha += clamp( fresnel, 0.0, 1.0);\r\n		#endif\r\n		#if defined( SPECULAR_COLOR )\r\n			finalAlpha += clamp( dot( totalSpecular, vec3(0.3333)), 0.0, 1.0);\r\n		#endif\r\n		finalAlpha *= totalOpacityValue;\r\n		\r\n\r\n		if ( renderModeNormals == 1 ) {\r\n			normal_WS.xyz =  0.5 * (viewMatrix * vec4( normal_WS.xyz, 0.0 )).xyz + 0.5;\r\n			gl_FragColor = vec4( normal_WS.xyz, 1.0  );\r\n		}\r\n		else {\r\n			vec3 finalColor = totalDiffuse;\r\n			#if defined( REFLECTIONS )\r\n				finalColor += reflectance_term;\r\n				// finalColor = mix( finalColor, reflectedColor.xyz, exponential );\r\n			#endif\r\n			#if defined( SPECULAR_COLOR )\r\n				finalColor += totalSpecular;\r\n			#endif\r\n\r\n			#if defined( TRANSLUCENT_SCATTERING ) || defined( LOCAL_SCATTERING )\r\n				finalColor += totalScatter;\r\n			#endif\r\n\r\n			// #ifdef PARALLAX_MAPPING\r\n			// 	finalColor *= fragColorMult;\r\n			// #endif\r\n\r\n			#ifdef EMISSIVE_COLOR\r\n				#ifdef EMISSIVE_TEXTURE\r\n				 	finalColor = emissiveIntensity * emissiveTex.xyz * emissiveColor + finalColor;\r\n				#else\r\n				 	finalColor = emissiveIntensity * emissiveColor + finalColor;\r\n				#endif\r\n			#endif\r\n			#ifdef GAMMA_OUTPUT\r\n				//Gamma 2.0\r\n				// finalColor = sqrt( finalColor );\r\n				// #ifdef USE_LIGHTING\r\n					//Filmic Tone-mapping with gamma 2.2 baked in and default values\r\n					// finalColor = clamp( finalColor - vec3(0.0004), 0.0, 100.0 );\r\n					// finalColor = (finalColor*(6.2*finalColor + 0.5)) / (finalColor*(6.2*finalColor + 1.7) + 0.06 );\r\n					// // vec3 fcSqr62 = finalColor * finalColor * 6.2;\r\n					// // finalColor = (finalColor * vec3(0.5) + fcSqr62) / ( finalColor * vec3(1.7) + fcSqr62 + 0.06 );\r\n\r\n	    		//Filmic Tone-mapping general - from Uncharted 2 talk - http://www.slideshare.net/ozlael/hable-john-uncharted2-hdr-lighting\r\n	    		// A = Shoulder Strength = 0.22\r\n			    // B = Linear Strength = 0.30\r\n			    // C = Linear Angle = 0.10\r\n			    // D = Toe Strength = 0.20\r\n			    // E = Toe Numerator = 0.01\r\n			    // F = Toe Denominator = 0.30\r\n			    // E/F = Toe Angle\r\n			    // LinearWhite = Linear White Point Value = 11.2\r\n			    // F(x) = ((x*(A*x+C*B) + D*E) / (x*(A*x+B) + D*F)) - E/F;\r\n			    // FinalColor = F(LinearColour)/F(LinearWhite);\r\n			   // #else\r\n			   	finalColor = sqrt( finalColor );\r\n			   // #endif\r\n			#endif\r\n			gl_FragColor = vec4( finalColor, finalAlpha );\r\n			\r\n			#if defined( USE_FOG )\r\n				#ifdef USE_LOGDEPTHBUF_EXT\r\n					float depth = gl_FragDepthEXT / gl_FragCoord.w;\r\n				#else\r\n					float depth = gl_FragCoord.z / gl_FragCoord.w;\r\n				#endif\r\n				#ifdef FOG_EXP2\r\n					const float LOG2 = 1.442695;\r\n					float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\r\n					// float fogFactor = exp2( - depth * LOG2 );\r\n					fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\r\n				#else\r\n					float fogFactor = smoothstep( fogNear, fogFar, depth );\r\n				#endif\r\n				gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\r\n			#endif\r\n\r\n\r\n			#ifdef LOG_LUV\r\n			gl_FragColor = LogLuvEncode( gl_FragColor.xyz );\r\n			#endif\r\n		}\r\n	#endif //#if !defined( DEPTH_PASS )\r\n}'
}),define("text!VeroldEngine/Materials/Uber.vert",[],function(){return"\r\n/**\r\n * Shader used as a Verold material type\r\n * \r\n * Written by Mike Bond\r\n */\r\n\r\nattribute vec4 tangent;\r\n\r\nuniform float time;\r\n\r\n#ifdef USE_LOGDEPTHBUF\r\n	#ifdef USE_LOGDEPTHBUF_EXT\r\n		varying float vFragDepth;\r\n	#endif\r\n	uniform float logDepthBufFC;\r\n#endif\r\n\r\n#ifdef DISPLACEMENT\r\nuniform float displacementBaseMag;\r\nuniform float displacementBaseBias;\r\n	#ifdef DISPLACEMENT_TEXTURE_RGBA\r\n	uniform float displacementMag;\r\n	uniform float displacementBias;\r\n	uniform sampler2D displacementTexture;\r\n	uniform int displacementUVChannel;\r\n	uniform vec2 displacementTextureOffset;\r\n	uniform vec2 displacementTextureScale;\r\n	uniform vec2 displacementTexturePan;\r\n	#endif\r\n#endif\r\n\r\nvarying vec4 vNormal_WS;\r\n\r\n#ifdef USE_LIGHTING\r\n	\r\n	#if ( defined( NORMAL_TEXTURE ) || defined( DISPLACEMENT_TEXTURE_RGBA ) ) && !defined( DEPTH_PASS )\r\n	varying vec4 vTangent_WS;\r\n	varying vec4 vBinormal_WS;\r\n	#endif\r\n	\r\n#endif\r\n\r\nvarying vec4 vUv;\r\n// varying vec4 vPosition_VS;\r\nvarying vec4 vPosition_WS;\r\n\r\n#if !defined( DEPTH_PASS )\r\n	\r\n	#if defined( USE_COLOR ) && defined( DIFFUSE_COLOR )\r\n		varying vec3 vColor;\r\n	#endif\r\n	\r\n	#if defined( USE_SHADOWMAP ) && defined( USE_LIGHTING )\r\n		#if MAX_SHADOWS > 0\r\n			varying vec4 vShadowCoord[ MAX_SHADOWS ];\r\n			uniform mat4 shadowMatrix[ MAX_SHADOWS ];\r\n		#endif\r\n	#endif\r\n#endif\r\n\r\n#ifdef USE_SKINNING\r\n\r\n	uniform mat4 bindMatrix;\r\n	uniform mat4 bindMatrixInverse;\r\n\r\n	#ifdef BONE_TEXTURE\r\n\r\n		uniform sampler2D boneTexture;\r\n		uniform int boneTextureWidth;\r\n		uniform int boneTextureHeight;\r\n\r\n		mat4 getBoneMatrix( const in float i ) {\r\n\r\n			float j = i * 4.0;\r\n			float x = mod( j, float( boneTextureWidth ) );\r\n			float y = floor( j / float( boneTextureHeight ) );\r\n\r\n			float dx = 1.0 / float( boneTextureWidth );\r\n			float dy = 1.0 / float( boneTextureHeight );\r\n\r\n			y = dy * ( y + 0.5 );\r\n\r\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\r\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\r\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\r\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\r\n\r\n			mat4 bone = mat4( v1, v2, v3, v4 );\r\n\r\n			return bone;\r\n		}\r\n	#else\r\n\r\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\r\n		mat4 getBoneMatrix( const in float i ) {\r\n\r\n			mat4 bone = boneGlobalMatrices[ int(i) ];\r\n			return bone;\r\n		}\r\n\r\n	#endif\r\n#endif\r\n\r\n//Only for m * v (not v * m!)\r\nvec3 mulVectorByMatrix4x4( in vec3 v, in mat4 m ) {\r\n	return (v.x * m[0] + ( v.y * m[1] + ( v.z * m[2] ) )).xyz;\r\n}\r\n\r\n//Only for m * p (not p * m!)\r\nvec4 mulPointByMatrix4x4( in vec3 v, in mat4 m ) {\r\n	return v.x * m[0] + ( v.y * m[1] + ( v.z * m[2] + m[3] ) );\r\n}\r\n\r\n\r\n\r\nvoid main() {\r\n\r\n#if defined( DISPLACEMENT_TEXTURE_RGBA ) || defined( DIFFUSE_TEXTURE ) ||	defined( SPECULAR_TEXTURE ) ||	defined( NORMAL_TEXTURE ) ||	defined( EMISSIVE_TEXTURE ) ||	defined( AO_TEXTURE ) ||	defined( SSS_TEXTURE )\r\n	vUv.xy = uv;\r\n	vUv.y = 1.0 - vUv.y;\r\n	vUv.zw = uv2;\r\n	vUv.w = 1.0 - vUv.w;\r\n#endif\r\n\r\n#ifdef DISPLACEMENT\r\n	float texDisplacement = 0.0;\r\n	#if defined( DISPLACEMENT_TEXTURE_RGBA )\r\n		#if ( DISPLACEMENT_TEXTURE_RGBA == 0 )\r\n		\r\n			vec2 displacementUV = vUv.xy * displacementTextureScale + displacementTextureOffset + displacementTexturePan * time;\r\n\r\n			vec4 displacementMap = texture2D( displacementTexture, displacementUV );\r\n			texDisplacement = displacementMag * displacementMap.x + displacementMag * (displacementBias * 0.5 - 0.5);\r\n\r\n		#elif ( DISPLACEMENT_TEXTURE_RGBA == 1 )\r\n			#define DISPLACEMENT_WITH_NORMAL\r\n			vec2 displacementUV = vUv.xy * displacementTextureScale + displacementTextureOffset + displacementTexturePan * time;\r\n			vec4 displacementMap = texture2D( displacementTexture, displacementUV );\r\n			\r\n			texDisplacement = displacementMag * displacementMap.a + displacementMag * (displacementBias * 0.5 - 0.5);\r\n		#endif\r\n	#endif\r\n\r\n	float displacementAmount = displacementBaseMag * displacementBaseBias + texDisplacement;\r\n	vec4 displacedPosition = vec4( (normal * displacementAmount ) + position.xyz, 1.0 );\r\n	\r\n#else\r\n	vec4 displacedPosition = vec4( position, 1.0 );\r\n	\r\n#endif\r\n\r\nvec3 vNormal = normal;\r\nvec3 vTangent = tangent.xyz;\r\n\r\n#ifdef USE_SKINNING\r\n\r\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\r\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\r\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\r\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\r\n\r\n	mat4 skinMatrix = mat4( 0.0 );\r\n        skinMatrix += skinWeight.x * boneMatX;\r\n	skinMatrix += skinWeight.y * boneMatY;\r\n	skinMatrix += skinWeight.z * boneMatZ;\r\n	skinMatrix += skinWeight.w * boneMatW;\r\n        skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\r\n\r\n	vNormal = (skinMatrix * vec4( vNormal, 0.0 )).xyz;\r\n	vTangent = (skinMatrix * vec4( vTangent, 0.0 )).xyz;\r\n\r\n	vec4 skinVertex    = bindMatrix * displacedPosition;\r\n	displacedPosition  = boneMatX * skinVertex * skinWeight.x;\r\n	displacedPosition += boneMatY * skinVertex * skinWeight.y;\r\n	displacedPosition += boneMatZ * skinVertex * skinWeight.z;\r\n	displacedPosition += boneMatW * skinVertex * skinWeight.w;\r\n	displacedPosition  = bindMatrixInverse * displacedPosition;\r\n#endif\r\n\r\n// vPosition_VS = modelViewMatrix * displacedPosition;\r\nvPosition_WS = modelMatrix * displacedPosition;\r\n\r\n#ifdef USE_BILLBOARDING\r\n	gl_Position = projectionMatrix * (viewMatrix * vec4(0.0, 0.0, 0.0, 1.0) + modelViewMatrix * displacedPosition );\r\n#else\r\n	gl_Position = projectionMatrix * modelViewMatrix * displacedPosition;\r\n#endif\r\n\r\n// vPosition_VS = -vPosition_VS;\r\n\r\n// #ifdef USE_FISHEYE\r\n	// vec4 tempPoint = modelViewMatrix * displacedPosition;\r\n	// gl_Position.xy = vPosition_VS.xy / length( vPosition_VS.xyz );\r\n// #endif\r\n\r\n#if defined( USE_LOGDEPTHBUF ) && !defined(DEPTH_PASS)\r\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\r\n	#ifdef USE_LOGDEPTHBUF_EXT\r\n		vFragDepth = 1.0 + gl_Position.w;\r\n	#else\r\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\r\n	#endif\r\n#endif\r\n\r\n\r\n#if !defined( DEPTH_PASS )\r\n\r\n	#if defined( USE_COLOR )\r\n		#if defined( DIFFUSE_COLOR )\r\n			#ifdef GAMMA_INPUT\r\n				vColor = color * color;\r\n			#else\r\n				vColor = color;\r\n			#endif\r\n		#else\r\n			//Trying to make sure compiler includes color attribute for consistency, even if it's not used.\r\n			vPosition_WS.w += color.x;\r\n			vPosition_WS.w -= color.x;\r\n		#endif\r\n	#endif\r\n\r\n	// normal, tangent and binormal vectors\r\n	#if defined( DISPLACEMENT_WITH_NORMAL )\r\n		//TODO - this calculation assumes that the material is being applied to the ground plane. i.e. it assumes\r\n		//that tangent space equals object space.\r\n		//What needs to be done is to compose the tangent basis (as we usually do) and to use it to transform the normal\r\n		//in the displacement map to view space?\r\n		displacementMap.xy = displacementMap.xy * 2.0 - 1.0;\r\n		displacementMap.xyz = displacementMap.xzy;\r\n		vNormal_WS.xyz = normalize((vec4( normalMatrix * displacementMap.xyz, 0) * viewMatrix ).xyz);\r\n	#else\r\n		vNormal_WS.xyz = normalize((vec4( normalMatrix * vNormal, 0) * viewMatrix ).xyz);\r\n	#endif\r\n\r\n	#ifdef FLIP_SIDED\r\n		vNormal_WS = -vNormal_WS;\r\n	#endif\r\n\r\n	#ifdef USE_LIGHTING\r\n\r\n		\r\n		#if defined( NORMAL_TEXTURE ) \r\n			\r\n			vTangent_WS.xyz = normalize((vec4( normalMatrix * vTangent.xyz, 0) * viewMatrix ).xyz);\r\n			vBinormal_WS.xyz = cross( vNormal_WS.xyz, vTangent_WS.xyz ) * tangent.w / clamp(abs(tangent.w), 0.0, 1.0);\r\n\r\n			#if defined( DISPLACEMENT_WITH_NORMAL )\r\n				vTangent_WS.xyz = cross( vNormal_WS.xyz, vBinormal_WS.xyz );\r\n			#endif\r\n		\r\n			#if defined( PARALLAX_MAPPING )\r\n				//TODO: fix this calculation after vNormal_WS etc. was changed to vNormal_WS etc. Also, vPosition_WS was changed to vPosition_VS\r\n				mat3 mTangentToWorld = mat3( vTangent_WS.xyz, vBinormal_WS.xyz, vNormal_WS.xyz );\r\n				vec3 eyeVector_WS = vPosition_WS.xyz - cameraPosition;\r\n				vec3 eyeVector_TS = eyeVector_WS * mTangentToWorld;\r\n				\r\n				//Pack tangent-space eye vector into existing varyings\r\n				vTangent_WS.w = eyeVector_TS.x;\r\n				vBinormal_WS.w = eyeVector_TS.y;\r\n				vNormal_WS.w = eyeVector_TS.z;\r\n			#endif\r\n\r\n			\r\n		#endif\r\n\r\n		#ifdef USE_SHADOWMAP\r\n		 	#if MAX_SHADOWS > 0\r\n\r\n				for( int i = 0; i < MAX_SHADOWS; i ++ ) {\r\n\r\n					#ifdef USE_MORPHTARGETS\r\n\r\n						vShadowCoord[ i ] = shadowMatrix[ i ] * modelMatrix * vec4( morphed, 1.0 );\r\n\r\n					#else\r\n\r\n						vShadowCoord[ i ] = shadowMatrix[ i ] * modelMatrix * displacedPosition;\r\n						\r\n						// vShadowCoord[ i ].z = log2(max(1e-6, 1.0 + vShadowCoord[ i ].w)) * logDepthBufFC - 1.0;\r\n						// vShadowCoord[ i ].z *= vShadowCoord[ i ].w;\r\n\r\n					#endif\r\n\r\n				}\r\n			#endif\r\n		#endif\r\n\r\n	#endif\r\n#endif\r\n}"}),define("VeroldEngine/Materials/VeroldMaterialTypeLibrary",["three","text!VeroldEngine/Materials/Uber.frag","text!VeroldEngine/Materials/Uber.vert","VeroldEngine/VAPI"],function(a,b,c){function d(d){var e={Lighting:{enabled:!0,Requires:{},Defines:{USE_LIGHTING:"",LIGHTING_MODEL:1}},"Diffuse Color":{Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:2,MAX_VARYING_VECTORS:1},Defines:{DIFFUSE_COLOR:""},SubFeatures:{"Diffuse Texture":{Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{DIFFUSE_TEXTURE:"",ALPHA_BLENDMODE:1}},"AO Texture":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{AO_TEXTURE:""}}}},"Rim Lighting":{enabled:!1,Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:2},Defines:{RIM_LIGHTING:""}},"Normal Map":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{NORMAL_TEXTURE:""},SubFeatures:{Parallax:{enabled:!1,Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:1},Defines:{PARALLAX_MAPPING:""}}}},Displacement:{enabled:!1,Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:2},Defines:{DISPLACEMENT:""},SubFeatures:{"Displacement Texture":{Requires:{MAX_VERTEX_TEXTURE_IMAGE_UNITS:1,MAX_VERTEX_UNIFORM_VECTORS:6},Defines:{DISPLACEMENT_TEXTURE_RGBA:1}}}},Specular:{Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:3},Defines:{SPECULAR_COLOR:"",PHONG_SPECULAR:""},DefinesSimple:{SPECULAR_COLOR:"",PHONG_SPECULAR:"",PHONG_SPECULAR_SIMPLE:""},SubFeatures:{"Specular Texture":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{SPECULAR_TEXTURE:""}}}},Reflections:{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:3},Defines:{REFLECTIONS:"0",ENVMAP_HDR_INPUT:"0",ENVMAP_NUM_MIPS:"12"}},"Local Scattering":{Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:2},Defines:{SCATTERING:"",LOCAL_SCATTERING:""},SubFeatures:{"Sub-surface Texture":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{SSS_TEXTURE:""}}}},"Translucent Scattering":{Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:2},Defines:{SCATTERING:"",TRANSLUCENT_SCATTERING:""},SubFeatures:{"Sub-surface Texture":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{SSS_TEXTURE:""}}}},Emissive:{enabled:!1,Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:1},Defines:{EMISSIVE_COLOR:""},SubFeatures:{"Emissive Texture":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{EMISSIVE_TEXTURE:""}}}}},f={diffuseColor:{name:"Base Color",description:"A color to tint the material with.",type:"c",value:new a.Color(16777215),group:"Diffuse Color"},rimColor:{name:"Rim Color",description:"The material color for light that is scattered around outside of material (e.g. tiny hairs on skin, etc.).",type:"c",value:new a.Color(16777215),group:"Rim Lighting"},rimPower:{name:"Rimlight Falloff",description:"This controls the falloff for the scattered light around a material. A lower value leads to more light 'leaking' around the edge of the model.",type:"f",value:2,min:.5,max:8,stepSize:.05,group:"Rim Lighting"},colorOpacity:{name:"Opacity",description:"This controls the transparency of the material without affecting the reflectiveness. This is ideal for glass materials.",type:"f",value:1,min:.001,max:1,stepSize:.05,transparency:"LessThanOne",group:"Diffuse Color"},scatterColor:{name:"Scattering Color",description:"The most prominant color inside the object. As light passes through the object, it will pickup this color.",type:"c",value:new a.Color(0),group:"Scattering"},scatterScale:{name:"Transmission Scale",description:"A value to adjust how much the sub-surface color shines through to the surface.",type:"f",value:0,min:0,max:1,stepSize:.001,group:"Scattering"},scatterLocalScale:{name:"Scattering Amount",description:"A value to adjust how much sub-surface-scattering occurs for the skin.",type:"f",value:0,min:0,max:5,stepSize:.01,group:"Scattering"},sssTexture:{name:"Sub-surface Texture",description:"This texture represents the most prominant colors inside the object and is multiplied by the Transmissive Color.",type:"t",value:null,"default":"white",group:"Scattering",subgroup:"Sub-surface Texture"},sssUVChannel:{name:"UV Channel",description:"Which UV channel to use with the sub-surface map.",type:"dd",options:{"UV 0":0,"UV 1":1},value:0,group:"Scattering",subgroup:"Sub-surface Texture",betaFlag:!1},sssTextureOffset:{parent:"sssTexture",name:"Offset",description:"Shift the texture mapping by the specified amount.",type:"v2",value:new a.Vector2(0,0),min:-1,max:1,stepSize:.001,group:"Scattering",subgroup:"Sub-surface Texture"},sssTextureScale:{parent:"sssTexture",name:"Tiling",description:"Scale the texture mapping. A higher number results in the texture displaying smaller on the models.",type:"v2",value:new a.Vector2(1,1),min:1e-5,max:200,stepSize:.001,group:"Scattering",subgroup:"Sub-surface Texture"},sssTexturePan:{parent:"sssTexture",name:"Panning",description:"The panning rate of the emissive texture. Higher is faster.",type:"v2",value:new a.Vector2(0,0),min:-16,max:16,stepSize:.001,group:"Scattering",subgroup:"Sub-surface Texture",animation:!0},diffuseTexture:{name:"Texture",description:"A texture that modifies the diffuse color of the material.",type:"t",value:null,"default":"white",group:"Diffuse Color",subgroup:"Diffuse Texture"},diffuseUVChannel:{name:"UV Channel",description:"Which UV channel to use with the diffuse map.",type:"dd",options:{"UV 0":0,"UV 1":1},value:0,group:"Diffuse Color",subgroup:"Diffuse Texture",betaFlag:!1},diffuseTextureOffset:{parent:"diffuseTexture",name:"Offset",description:"Shift the texture mapping by the specified amount.",type:"v2",value:new a.Vector2(0,0),min:-1,max:1,stepSize:.001,group:"Diffuse Color",subgroup:"Diffuse Texture"},diffuseTextureScale:{parent:"diffuseTexture",name:"Tiling",description:"Scale the texture mapping. A higher number results in the texture displaying smaller on the models.",type:"v2",value:new a.Vector2(1,1),min:1e-5,max:200,stepSize:.001,group:"Diffuse Color",subgroup:"Diffuse Texture"},diffuseTexturePan:{parent:"diffuseTexture",name:"Panning",description:"The panning rate of the color texture. Higher is faster.",type:"v2",value:new a.Vector2(0,0),min:-16,max:16,stepSize:.001,group:"Diffuse Color",subgroup:"Diffuse Texture",animation:!0},alphaBlendMode:{name:"Alpha Mode",description:"This option controls whether the alpha channel of the color texture is used for transparency or just to blend with the Base Color (default).",type:"dd",options:{"Alpha Transparency":0,"Masked Transparency":2,"Color Blend":1},defines:{ALPHA_BLENDMODE:""},value:1,transparency:"LessThanOne",group:"Diffuse Color",subgroup:"Diffuse Texture"},colorBlend:{name:"Color Blend",description:"This option controls whether the Base Color parameter modifies the color texture or not.",type:"b",value:!0,group:"Diffuse Color",subgroup:"Diffuse Texture"},aoTexture:{name:"Texture",description:"A greyscale texture that contains ambient occlusion information. That is, it is multiplied by the light, producing local shadowing.",type:"t",value:null,"default":"white",group:"Diffuse Color",subgroup:"AO Texture"},aoUVChannel:{name:"UV Channel",description:"Which UV channel to use with the AO map.",type:"dd",options:{"UV 0":0,"UV 1":1},value:0,group:"Diffuse Color",subgroup:"AO Texture",betaFlag:!1},aoTextureOffset:{parent:"aoTexture",name:"Offset",description:"Shift the texture mapping by the specified amount.",type:"v2",value:new a.Vector2(0,0),min:-1,max:1,stepSize:.001,group:"Diffuse Color",subgroup:"AO Texture"},aoTextureScale:{parent:"aoTexture",name:"Tiling",description:"Scale the texture mapping. A higher number results in the texture displaying smaller on the models.",type:"v2",value:new a.Vector2(1,1),min:1e-5,max:200,stepSize:.001,group:"Diffuse Color",subgroup:"AO Texture"},aoTexturePan:{parent:"aoTexture",name:"Panning",description:"The panning rate of the color texture. Higher is faster.",type:"v2",value:new a.Vector2(0,0),min:-16,max:16,stepSize:.001,group:"Diffuse Color",subgroup:"AO Texture",animation:!0},normalTexture:{name:"Texture",description:'The "normal" texture describes the detailed shape of a surface. For more information, see http://wiki.polycount.com/NormalMap',type:"t",value:null,"default":"normalMap",group:"Normal Map"},normalUVChannel:{name:"UV Channel",description:"Which UV channel to use with the normal map.",type:"dd",options:{"UV 0":0,"UV 1":1},value:0,group:"Normal Map",betaFlag:!1},normalScale:{name:"Scale",description:"A value to adjust the depth (or intensity) of the normal map.",type:"f",value:1,min:0,max:3,stepSize:.01,group:"Normal Map"},normalTextureFlipY:{parent:"normalTexture",name:"Flip Y Value",description:"Flip the green channel of the texture so that the y-value of the normal is reversed.",type:"b",value:!1,group:"Normal Map"},normalTextureFlipX:{parent:"normalTexture",name:"Flip X Value",description:"Flip the red channel of the texture so that the x-value of the normal is reversed.",type:"b",value:!1,group:"Normal Map"},normalTextureOffset:{parent:"normalTexture",name:"Offset",description:"Shift the texture mapping by the specified amount.",type:"v2",value:new a.Vector2(0,0),min:-1,max:1,stepSize:.001,group:"Normal Map"},normalTextureScale:{parent:"normalTexture",name:"Tiling",description:"Scale the texture mapping. A higher number results in the texture displaying smaller on the models.",type:"v2",value:new a.Vector2(1,1),min:1e-5,max:200,stepSize:.001,group:"Normal Map"},normalTexturePan:{parent:"normalTexture",name:"Panning",description:"The panning rate of the normal texture. Higher is faster.",type:"v2",value:new a.Vector2(0,0),min:-16,max:16,stepSize:.001,group:"Normal Map",animation:!0},parallaxScale:{name:"Parallax Scale",description:"The amount of parallax effect. This requires height data in the alpha channel of the normal map texture.",type:"f",value:.01,min:.001,max:.02,stepSize:.001,group:"Normal Map",subgroup:"Parallax"},displacementBaseMag:{name:"Magnitude",description:"A uniform displacement amount for the vertices.",type:"f",value:0,min:-1e3,max:1e3,hasSlider:!1,stepSize:.001,group:"Displacement"},displacementBaseBias:{name:"Bias",description:"This value lets you shift the displacement in a negative or positive direction.",type:"f",value:0,min:-1,max:1,stepSize:.001,group:"Displacement"},displacementTexture:{name:"Texture",description:"This texture contains normal and height information to deform a mesh's vertices. The height is expected in the alpha channel.",type:"t",value:null,"default":"normalMap",group:"Displacement",defines:{DISPLACEMENT_TEXTURE_RGBA:0},subgroup:"Displacement Texture"},displacementUVChannel:{name:"UV Channel",description:"Which UV channel to use with the displacement map.",type:"dd",options:{"UV 0":0,"UV 1":1},value:0,group:"Displacement",subgroup:"Displacement Texture",betaFlag:!1},displacementMag:{name:"Magnitude",description:"This value controls how much the displacement texture affects the vertices.",type:"f",value:0,min:-1e3,max:1e3,hasSlider:!1,stepSize:.001,group:"Displacement",subgroup:"Displacement Texture"},displacementBias:{name:"Bias",description:"This value lets you shift the displacement from the texture in a negative or positive direction.",type:"f",value:0,min:-1,max:1,stepSize:.001,group:"Displacement",subgroup:"Displacement Texture"},displacementTextureOffset:{parent:"displacementTexture",name:"Offset",description:"Shift the texture mapping by the specified amount.",type:"v2",value:new a.Vector2(0,0),min:-1,max:1,stepSize:.001,group:"Displacement",subgroup:"Displacement Texture"},displacementTextureScale:{parent:"displacementTexture",name:"Tiling",description:"Scale the texture mapping. A higher number results in the texture displaying smaller on the models.",type:"v2",value:new a.Vector2(1,1),min:1e-5,max:200,stepSize:.001,group:"Displacement",subgroup:"Displacement Texture"},displacementTexturePan:{parent:"displacementTexture",name:"Panning",description:"The panning rate of the displacement texture. Higher is faster.",type:"v2",value:new a.Vector2(0,0),min:-16,max:16,stepSize:.001,group:"Displacement",subgroup:"Displacement Texture",animation:!0},specularColor:{name:"Specular Color",description:"The specular color modifies the color of light reflected in a specular highlight. A darker color will result in a less reflective surface.",type:"c",value:new a.Color(16777215),group:"Specular"},gloss:{name:"Glossiness",description:".",type:"f",value:1,min:0,max:1,stepSize:.001,group:"Specular"},specularIntensity:{name:"Specular Intensity",description:"This controls the brightness of specular lighting. You can use this as an easy way to adjust specularity without reinporting your specular texture.",type:"f",value:1,min:0,max:10,stepSize:.001,group:"Specular"},specularTexture:{name:"Texture",description:'The specular texture modifies the color of light reflected in a specular highlight. This can be grayscale or full-color. If you have a "gloss" map, you can put it in the alpha channel of this texture to affect the specular power on a per-pixel basis.',type:"t",value:null,"default":"white",group:"Specular",subgroup:"Specular Texture"},specularUVChannel:{name:"UV Channel",description:"Which UV channel to use with the specular map.",type:"dd",options:{"UV 0":0,"UV 1":1},value:0,group:"Specular",subgroup:"Specular Texture",betaFlag:!1},specularTextureOffset:{parent:"specularTexture",name:"Offset",description:"Shift the texture mapping by the specified amount.",type:"v2",value:new a.Vector2(0,0),min:-1,max:1,stepSize:.001,group:"Specular",subgroup:"Specular Texture"},specularTextureScale:{parent:"specularTexture",name:"Tiling",description:"Scale the texture mapping. A higher number results in the texture displaying smaller on the models.",type:"v2",value:new a.Vector2(1,1),min:1e-5,max:200,stepSize:.001,group:"Specular",subgroup:"Specular Texture"},specularTexturePan:{parent:"specularTexture",name:"Panning",description:"The panning rate of the specular texture. Higher is faster.",type:"v2",value:new a.Vector2(0,0),min:-16,max:16,stepSize:.001,group:"Specular",subgroup:"Specular Texture",animation:!0},emissiveColor:{name:"Glow Color",description:"The glow color will be added to the surface and won't be affected by external lights.",type:"c",value:new a.Color(16777215),group:"Emissive"},emissiveIntensity:{name:"Emissive Intensity",description:"This controls the brightness of emissive color.",type:"f",value:1,min:0,max:50,stepSize:.001,group:"Emissive"},emissiveTexture:{name:"Texture",description:"The glow texture describes any surface that emits light and isn't affected by external lights.",type:"t",value:null,"default":"white",group:"Emissive",subgroup:"Emissive Texture"},emissiveUVChannel:{name:"UV Channel",description:"Which UV channel to use with the emissive map.",type:"dd",options:{"UV 0":0,"UV 1":1},value:0,group:"Emissive",subgroup:"Emissive Texture",betaFlag:!1},emissiveTextureOffset:{parent:"emissiveTexture",name:"Offset",description:"Shift the texture mapping by the specified amount.",type:"v2",value:new a.Vector2(0,0),min:-1,max:1,stepSize:.001,group:"Emissive",subgroup:"Emissive Texture"},emissiveTextureScale:{parent:"emissiveTexture",name:"Tiling",description:"Scale the texture mapping. A higher number results in the texture displaying smaller on the models.",type:"v2",value:new a.Vector2(1,1),min:1e-5,max:200,stepSize:.001,group:"Emissive",subgroup:"Emissive Texture"},emissiveTexturePan:{parent:"emissiveTexture",name:"Panning",description:"The panning rate of the emissive texture. Higher is faster.",type:"v2",value:new a.Vector2(0,0),min:-16,max:16,stepSize:.001,group:"Emissive",subgroup:"Emissive Texture",animation:!0},environmentMappingType:{name:"Reflection Type",description:"This controls how the reflection texture will map to the surface. 'Panorama' is also known as an 'equirectangular' map.",type:"dd",value:3,options:{"Cube Map":0,"Sphere Map":1,Planar:2,Panorama:3},defines:{REFLECTIONS:""},group:"Reflections",betaFlag:!1},environmentTexture:{name:"Env CubeMap",description:"A cube-map that represents the surrounding environment. Used for reflections.",type:"t",textureType:"Cube",value:null,"default":"white_cube",group:"Reflections",defines:{ENVMAP_HDR_INPUT:0,ENVMAP_NUM_MIPS:12},conditions:{environmentMappingType:{condition:"equal",value:0}},betaFlag:!1},environmentTexture2D:{name:"Env 2D Map",description:"A cube-map that represents the surrounding environment. Used for reflections.",type:"t",value:null,"default":"white",group:"Reflections",defines:{ENVMAP_HDR_INPUT:0,ENVMAP_NUM_MIPS:12},conditions:{environmentMappingType:{condition:"notEqual",value:0}},betaFlag:!1},reflectionFresnel:{name:"Reflection Fresnel",description:"This controls the the angle that the environment reflection is visible at. A higher value will push reflections to edges only. Hint: A value of zero can be used for chrome-like surfaces.",type:"f",value:1,min:0,max:1,stepSize:.01,group:"Reflections"},reflectionBias:{name:"Reflectivity",description:"This value lets you tweak the amount of reflection visible.",type:"f",value:.5,min:0,max:1,stepSize:.01,group:"Reflections"},fog:{name:"Enable Fog",description:"This controls whether this material is affected by fog or not.",isRenderParam:!0,type:"b",value:!0,group:"Render Settings"},depthWrite:{name:"Enable Depth Write",description:"This controls whether the depth values of a mesh rendered with this material are recorded.",isRenderParam:!0,type:"b",value:!0,group:"Render Settings"},depthTest:{name:"Enable Depth Test",description:"This controls whether a depth check is done before this material is rendered so that it can be occluded.",isRenderParam:!0,type:"b",value:!0,group:"Render Settings"},blending:{name:"Blending Mode",description:"This controls how the material will be blended with the color behind it.",isRenderParam:!0,type:"dd",options:{None:a.NoBlending,Normal:a.NormalBlending,Additive:a.AdditiveBlending,Subtractive:a.SubtractiveBlending,Multiplicative:a.MultiplyBlending},value:a.NormalBlending,transparency:"GreaterThanOne",group:"Render Settings"},side:{name:"Culling Mode",description:"This controls which side of the geometry will be visible.",isRenderParam:!0,type:"dd",options:{"Front Only":a.FrontSide,"Back Only":a.BackSide,"Double-Sided":a.DoubleSide},value:a.FrontSide,group:"Render Settings"},polygonOffset:{name:"Polygon Offset",description:"Turns on rendering with polygon offsets. This can be used to work around z-fighting.",isRenderParam:!0,type:"b",value:!1,group:"Render Settings"},polygonOffsetFactor:{name:"Polygon Offset Factor",description:"Scales the maximum Z slope, with respect to X or Y of the polygon.",isRenderParam:!0,hasSlider:!1,type:"f",value:1,group:"Render Settings"},polygonOffsetUnits:{name:"Polygon Offset Units",description:"Scales the minimum resolvable depth buffer value.",isRenderParam:!0,hasSlider:!1,type:"f",value:1,group:"Render Settings"},alphaTest:{name:"Alpha Test",description:"Pixels with an alpha value below the given value will not be rendered.",isRenderParam:!0,type:"f",value:.2,min:0,max:1,step:.001,group:"Render Settings"}},g={DefaultTextures:{white:{name:"White Texture",id:"white",type:"texture2D",payload:{isLocal:!0},resources:[{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_White.png",contentType:"image/png",contentEncoding:"identity",contentLength:300,contentLengthIdentity:0,properties:{width:64,height:64,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_White.dds",contentType:"image/x-dds",contentEncoding:"identity",contentLength:2176,contentLengthIdentity:4304,properties:{width:64,height:64,compression:"dxt",pixelFormat:"rgb"}}]},black:{name:"Black Texture",id:"black",type:"texture2D",payload:{isLocal:!0},resources:[{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_Black.png",contentType:"image/png",contentEncoding:"identity",contentLength:209,contentLengthIdentity:0,properties:{width:64,height:64,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_Black.dds",contentType:"image/x-dds",contentEncoding:"identity",contentLength:2176,contentLengthIdentity:2872,properties:{width:64,height:64,compression:"dxt",pixelFormat:"rgb"}}]},normalMap:{name:"Default Normal Map",id:"normalMap",type:"texture2D",payload:{isLocal:!0},resources:[{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_NormalMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:282,contentLengthIdentity:0,properties:{width:64,height:64,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_NormalMap.dds",contentType:"image/x-dds",contentEncoding:"identity",contentLength:2872,contentLengthIdentity:2872,properties:{width:64,height:64,compression:"dxt",pixelFormat:"rgb"}}]},white_cube:{name:"White Cubemap",id:"white_cube",type:"textureCube",payload:{isLocal:!0},resources:[{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.dds",contentType:"image/x-dds",contentEncoding:"identity",contentLength:3200,contentLengthIdentity:3200,properties:{width:32,height:32,compression:"dxt",pixelFormat:"rgb"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:0,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:1,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:2,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:3,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:4,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:5,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.dds",contentType:"image/x-dds",contentEncoding:"identity",contentLength:3200,contentLengthIdentity:0,properties:{width:32,height:32,compression:"dxt",pixelFormat:"rgb"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:0,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:1,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:2,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:3,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:4,width:32,height:32,compression:"none",pixelFormat:"rgba"}},{path:d.paths.glAssetsBaseUrl+"/textures/Materials/Default_EnvMap.png",contentType:"image/png",contentEncoding:"identity",contentLength:176,contentLengthIdentity:0,properties:{cubeFace:5,width:32,height:32,compression:"none",pixelFormat:"rgba"}}]}},Library:{Simple:{Category:"Simple",Description:["Use this shader for basic materials that have no textures.","It supports diffuse, specular and emissive colors as well as reflections and transparency."].join(" "),Features:{Lighting:e.Lighting,"Diffuse Color":{Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:2},Defines:{DIFFUSE_COLOR:""}},"Rim Lighting":e["Rim Lighting"],Specular:{Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:3},Defines:{SPECULAR_COLOR:"",PHONG_SPECULAR:""}},Reflections:e.Reflections,Emissive:{enabled:!1,Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:1},Defines:{EMISSIVE_COLOR:""}}},Parameters:{diffuseColor:f.diffuseColor,colorOpacity:f.colorOpacity,rimColor:f.rimColor,rimPower:f.rimPower,specularColor:f.specularColor,specularIntensity:f.specularIntensity,gloss:f.gloss,emissiveColor:f.emissiveColor,emissiveIntensity:f.emissiveIntensity,environmentMappingType:f.environmentMappingType,environmentTexture:f.environmentTexture,environmentTexture2D:f.environmentTexture2D,reflectionFresnel:f.reflectionFresnel,reflectionBias:f.reflectionBias,fog:f.fog,depthWrite:f.depthWrite,depthTest:f.depthTest,alphaTest:f.alphaTest,blending:f.blending,side:f.side,polygonOffset:f.polygonOffset,polygonOffsetFactor:f.polygonOffsetFactor,polygonOffsetUnits:f.polygonOffsetUnits},uniforms:a.UniformsUtils.merge([a.UniformsLib.fog,a.UniformsLib.lights,a.UniformsLib.shadowmap,{opacity:{type:"f",value:1},renderModeNormals:{type:"i",value:0}}]),vertexShader:c,fragmentShader:b},Standard:{Category:"Standard",Description:["Use this shader for basic materials that have textures.","It supports normal-mapping, specular maps, and color maps as well as basic texture scaling."].join(" "),Features:{Lighting:e.Lighting,"Diffuse Color":e["Diffuse Color"],Specular:e.Specular,"Rim Lighting":e["Rim Lighting"],"Normal Map":e["Normal Map"],Displacement:e.Displacement,Reflections:e.Reflections,Emissive:e.Emissive},Parameters:{diffuseColor:f.diffuseColor,colorOpacity:f.colorOpacity,rimColor:f.rimColor,rimPower:f.rimPower,diffuseTexture:f.diffuseTexture,diffuseUVChannel:f.diffuseUVChannel,diffuseTextureOffset:f.diffuseTextureOffset,diffuseTextureScale:f.diffuseTextureScale,diffuseTexturePan:f.diffuseTexturePan,alphaBlendMode:f.alphaBlendMode,colorBlend:f.colorBlend,aoTexture:f.aoTexture,aoUVChannel:f.aoUVChannel,aoTextureOffset:f.aoTextureOffset,aoTextureScale:f.aoTextureScale,aoTexturePan:f.aoTexturePan,normalTexture:f.normalTexture,normalUVChannel:f.normalUVChannel,normalScale:f.normalScale,normalTextureFlipY:f.normalTextureFlipY,normalTextureFlipX:f.normalTextureFlipX,normalTextureOffset:f.normalTextureOffset,normalTextureScale:f.normalTextureScale,normalTexturePan:f.normalTexturePan,parallaxScale:f.parallaxScale,displacementBaseMag:f.displacementBaseMag,displacementBaseBias:f.displacementBaseBias,displacementTexture:f.displacementTexture,displacementUVChannel:f.displacementUVChannel,displacementMag:f.displacementMag,displacementBias:f.displacementBias,displacementTextureOffset:f.displacementTextureOffset,displacementTextureScale:f.displacementTextureScale,displacementTexturePan:f.displacementTexturePan,specularColor:f.specularColor,specularIntensity:f.specularIntensity,gloss:f.gloss,specularTexture:f.specularTexture,specularUVChannel:f.specularUVChannel,specularTextureOffset:f.specularTextureOffset,specularTextureScale:f.specularTextureScale,specularTexturePan:f.specularTexturePan,emissiveColor:f.emissiveColor,emissiveIntensity:f.emissiveIntensity,emissiveTexture:f.emissiveTexture,emissiveUVChannel:f.emissiveUVChannel,emissiveTextureOffset:f.emissiveTextureOffset,emissiveTextureScale:f.emissiveTextureScale,emissiveTexturePan:f.emissiveTexturePan,environmentMappingType:f.environmentMappingType,environmentTexture:f.environmentTexture,environmentTexture2D:f.environmentTexture2D,reflectionFresnel:f.reflectionFresnel,reflectionBias:f.reflectionBias,fog:f.fog,depthWrite:f.depthWrite,depthTest:f.depthTest,alphaTest:f.alphaTest,blending:f.blending,side:f.side,polygonOffset:f.polygonOffset,polygonOffsetFactor:f.polygonOffsetFactor,polygonOffsetUnits:f.polygonOffsetUnits},uniforms:a.UniformsUtils.merge([a.UniformsLib.fog,a.UniformsLib.lights,a.UniformsLib.shadowmap,{opacity:{type:"f",value:1},time:{type:"f",value:1},renderModeNormals:{type:"i",value:0}}]),vertexShader:c,fragmentShader:b},Iridescent:{Category:"Advanced",Description:["This material has a metallic sheen with a glossy topcoat. It's ideal for glossy vehicle paint.","It supports normal-mapping, emissive mapping, and reflections."].join(" "),Features:{Lighting:e.Lighting,"Diffuse Color":{Requires:{MAX_FRAGMENT_UNIFORM_VECTORS:2},Defines:{DIFFUSE_COLOR:"",IRIDESCENT_LAYER:""},SubFeatures:{"Diffuse Texture":{Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:5},Defines:{DIFFUSE_TEXTURE:"",ALPHA_BLENDMODE:1}},"Iridescent Texture":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:1},Defines:{IRIDESCENT_TEXTURE:""}},"AO Texture":{enabled:!1,Requires:{MAX_TEXTURE_IMAGE_UNITS:1,MAX_FRAGMENT_UNIFORM_VECTORS:4},Defines:{AO_TEXTURE:""}}}},"Rim Lighting":e["Rim Lighting"],"Normal Map":e["Normal Map"],Displacement:e.Displacement,Specular:e.Specular,Reflections:e.Reflections,Emissive:e.Emissive},Parameters:{diffuseColor:{name:"Base Color 1",description:"The first color for a two-tone blend. This will be modified by the Iridescent Texture.",type:"c",value:new a.Color(5242903),group:"Diffuse Color"},diffuseColor2:{name:"Base Color 2",description:"The second color for the two-tone blend. This will be modified by the Iridescent Texture.",type:"c",value:new a.Color(9537158),group:"Diffuse Color"},twoToneExponent:{name:"Iridescent Bias",description:"This value controls how the colors blend together across the surface. Higher values will push Base Color 1 and the left of the Iridescent Texture toward edges that are tilted away from the viewer.",type:"f",value:2,min:0,max:12,stepSize:.01,group:"Diffuse Color"},metallicMultiplier:{name:"Metallicity",description:"This value allows you to add a metallic look to the material. A higher value will make the metallic highlight brighter.",type:"f",value:1,min:0,max:12,stepSize:.01,group:"Diffuse Color"},metallicExponent:{name:"Metallic Sheen",description:"This value controls how tight the metallic highlight is.",type:"f",value:8,min:1,max:16,stepSize:.1,group:"Diffuse Color"},colorOpacity:f.colorOpacity,iridescentTexture:{name:"Iridescent Texture",description:"A texture that contains colors which will be blended across the surface based on the view angle.",type:"t",value:null,"default":"white",group:"Diffuse Color",subgroup:"Iridescent Texture"},rimColor:f.rimColor,rimPower:f.rimPower,diffuseTexture:f.diffuseTexture,diffuseUVChannel:f.diffuseUVChannel,diffuseTextureOffset:f.diffuseTextureOffset,diffuseTextureScale:f.diffuseTextureScale,diffuseTexturePan:f.diffuseTexturePan,alphaBlendMode:f.alphaBlendMode,colorBlend:f.colorBlend,aoTexture:f.aoTexture,aoUVChannel:f.aoUVChannel,aoTextureOffset:f.aoTextureOffset,aoTextureScale:f.aoTextureScale,aoTexturePan:f.aoTexturePan,normalTexture:f.normalTexture,normalUVChannel:f.normalUVChannel,normalScale:f.normalScale,normalTextureFlipY:f.normalTextureFlipY,normalTextureFlipX:f.normalTextureFlipX,normalTextureOffset:f.normalTextureOffset,normalTextureScale:f.normalTextureScale,normalTexturePan:f.normalTexturePan,displacementBaseMag:f.displacementBaseMag,displacementBaseBias:f.displacementBaseBias,displacementTexture:f.displacementTexture,displacementUVChannel:f.displacementUVChannel,displacementMag:f.displacementMag,displacementBias:f.displacementBias,displacementTextureOffset:f.displacementTextureOffset,displacementTextureScale:f.displacementTextureScale,displacementTexturePan:f.displacementTexturePan,specularColor:f.specularColor,specularIntensity:f.specularIntensity,gloss:f.gloss,specularTexture:f.specularTexture,specularUVChannel:f.specularUVChannel,specularTextureOffset:f.specularTextureOffset,specularTextureScale:f.specularTextureScale,specularTexturePan:f.specularTexturePan,emissiveColor:f.emissiveColor,emissiveIntensity:f.emissiveIntensity,emissiveTexture:f.emissiveTexture,emissiveUVChannel:f.emissiveUVChannel,emissiveTextureOffset:f.emissiveTextureOffset,emissiveTextureScale:f.emissiveTextureScale,emissiveTexturePan:f.emissiveTexturePan,environmentMappingType:f.environmentMappingType,environmentTexture:f.environmentTexture,environmentTexture2D:f.environmentTexture2D,reflectionFresnel:f.reflectionFresnel,reflectionBias:f.reflectionBias,fog:f.fog,depthWrite:f.depthWrite,depthTest:f.depthTest,alphaTest:f.alphaTest,blending:f.blending,side:f.side,polygonOffset:f.polygonOffset,polygonOffsetFactor:f.polygonOffsetFactor,polygonOffsetUnits:f.polygonOffsetUnits},uniforms:a.UniformsUtils.merge([a.UniformsLib.fog,a.UniformsLib.lights,a.UniformsLib.shadowmap,{opacity:{type:"f",value:1},time:{type:"f",value:1},renderModeNormals:{type:"i",value:0}}]),vertexShader:c,fragmentShader:b},Transmissive:{Category:"Advanced",Description:["This material has a metallic sheen with a glossy topcoat. It's ideal for glossy vehicle paint.","It supports normal-mapping, emissive mapping, and reflections."].join(" "),Features:{Lighting:e.Lighting,"Diffuse Color":e["Diffuse Color"],Scattering:e["Translucent Scattering"],"Rim Lighting":e["Rim Lighting"],"Normal Map":e["Normal Map"],Displacement:e.Displacement,Specular:e.Specular,Reflections:e.Reflections,Emissive:e.Emissive},Parameters:{diffuseColor:f.diffuseColor,colorOpacity:f.colorOpacity,scatterColor:f.scatterColor,scatterScale:f.scatterScale,rimColor:f.rimColor,rimPower:f.rimPower,diffuseTexture:f.diffuseTexture,diffuseUVChannel:f.diffuseUVChannel,diffuseTextureOffset:f.diffuseTextureOffset,diffuseTextureScale:f.diffuseTextureScale,diffuseTexturePan:f.diffuseTexturePan,alphaBlendMode:f.alphaBlendMode,colorBlend:f.colorBlend,sssTexture:f.sssTexture,sssUVChannel:f.sssUVChannel,sssTextureOffset:f.sssTextureOffset,sssTextureScale:f.sssTextureScale,sssTexturePan:f.sssTexturePan,aoTexture:f.aoTexture,aoUVChannel:f.aoUVChannel,aoTextureOffset:f.aoTextureOffset,aoTextureScale:f.aoTextureScale,aoTexturePan:f.aoTexturePan,normalTexture:f.normalTexture,normalUVChannel:f.normalUVChannel,normalScale:f.normalScale,normalTextureFlipY:f.normalTextureFlipY,normalTextureFlipX:f.normalTextureFlipX,normalTextureOffset:f.normalTextureOffset,normalTextureScale:f.normalTextureScale,normalTexturePan:f.normalTexturePan,displacementBaseMag:f.displacementBaseMag,displacementBaseBias:f.displacementBaseBias,displacementTexture:f.displacementTexture,displacementUVChannel:f.displacementUVChannel,displacementMag:f.displacementMag,displacementBias:f.displacementBias,displacementTextureOffset:f.displacementTextureOffset,displacementTextureScale:f.displacementTextureScale,displacementTexturePan:f.displacementTexturePan,specularColor:f.specularColor,specularIntensity:f.specularIntensity,gloss:f.gloss,specularTexture:f.specularTexture,specularUVChannel:f.specularUVChannel,specularTextureOffset:f.specularTextureOffset,specularTextureScale:f.specularTextureScale,specularTexturePan:f.specularTexturePan,emissiveColor:f.emissiveColor,emissiveIntensity:f.emissiveIntensity,emissiveTexture:f.emissiveTexture,emissiveUVChannel:f.emissiveUVChannel,emissiveTextureOffset:f.emissiveTextureOffset,emissiveTextureScale:f.emissiveTextureScale,emissiveTexturePan:f.emissiveTexturePan,environmentMappingType:f.environmentMappingType,environmentTexture:f.environmentTexture,environmentTexture2D:f.environmentTexture2D,reflectionFresnel:f.reflectionFresnel,reflectionBias:f.reflectionBias,fog:f.fog,depthWrite:f.depthWrite,depthTest:f.depthTest,alphaTest:f.alphaTest,blending:f.blending,side:f.side,polygonOffset:f.polygonOffset,polygonOffsetFactor:f.polygonOffsetFactor,polygonOffsetUnits:f.polygonOffsetUnits},uniforms:a.UniformsUtils.merge([a.UniformsLib.fog,a.UniformsLib.lights,a.UniformsLib.shadowmap,{opacity:{type:"f",value:1},time:{type:"f",value:1},renderModeNormals:{type:"i",value:0}}]),vertexShader:c,fragmentShader:b},Skin:{Category:"Advanced",Description:["This material has a metallic sheen with a glossy topcoat. It's ideal for glossy vehicle paint.","It supports normal-mapping, emissive mapping, and reflections."].join(" "),Features:{Lighting:e.Lighting,"Diffuse Color":e["Diffuse Color"],Scattering:e["Local Scattering"],"Rim Lighting":e["Rim Lighting"],"Normal Map":e["Normal Map"],Displacement:e.Displacement,Specular:e.Specular,Reflections:e.Reflections,Emissive:e.Emissive},Parameters:{diffuseColor:f.diffuseColor,colorOpacity:f.colorOpacity,scatterColor:f.scatterColor,scatterLocalScale:f.scatterLocalScale,rimColor:f.rimColor,rimPower:f.rimPower,diffuseTexture:f.diffuseTexture,diffuseUVChannel:f.diffuseUVChannel,diffuseTextureOffset:f.diffuseTextureOffset,diffuseTextureScale:f.diffuseTextureScale,diffuseTexturePan:f.diffuseTexturePan,alphaBlendMode:f.alphaBlendMode,colorBlend:f.colorBlend,sssTexture:f.sssTexture,sssUVChannel:f.sssUVChannel,sssTextureOffset:f.sssTextureOffset,sssTextureScale:f.sssTextureScale,sssTexturePan:f.sssTexturePan,aoTexture:f.aoTexture,aoUVChannel:f.aoUVChannel,aoTextureOffset:f.aoTextureOffset,aoTextureScale:f.aoTextureScale,aoTexturePan:f.aoTexturePan,normalTexture:f.normalTexture,normalUVChannel:f.normalUVChannel,normalScale:f.normalScale,normalTextureFlipY:f.normalTextureFlipY,normalTextureFlipX:f.normalTextureFlipX,normalTextureOffset:f.normalTextureOffset,normalTextureScale:f.normalTextureScale,normalTexturePan:f.normalTexturePan,displacementBaseMag:f.displacementBaseMag,displacementBaseBias:f.displacementBaseBias,displacementTexture:f.displacementTexture,displacementUVChannel:f.displacementUVChannel,displacementMag:f.displacementMag,displacementBias:f.displacementBias,displacementTextureOffset:f.displacementTextureOffset,displacementTextureScale:f.displacementTextureScale,displacementTexturePan:f.displacementTexturePan,specularColor:f.specularColor,specularIntensity:f.specularIntensity,gloss:f.gloss,specularTexture:f.specularTexture,specularUVChannel:f.specularUVChannel,specularTextureOffset:f.specularTextureOffset,specularTextureScale:f.specularTextureScale,specularTexturePan:f.specularTexturePan,emissiveColor:f.emissiveColor,emissiveIntensity:f.emissiveIntensity,emissiveTexture:f.emissiveTexture,emissiveUVChannel:f.emissiveUVChannel,emissiveTextureOffset:f.emissiveTextureOffset,emissiveTextureScale:f.emissiveTextureScale,emissiveTexturePan:f.emissiveTexturePan,environmentMappingType:f.environmentMappingType,environmentTexture:f.environmentTexture,environmentTexture2D:f.environmentTexture2D,reflectionFresnel:f.reflectionFresnel,reflectionBias:f.reflectionBias,fog:f.fog,depthWrite:f.depthWrite,depthTest:f.depthTest,alphaTest:f.alphaTest,blending:f.blending,side:f.side,polygonOffset:f.polygonOffset,polygonOffsetFactor:f.polygonOffsetFactor,polygonOffsetUnits:f.polygonOffsetUnits},uniforms:a.UniformsUtils.merge([a.UniformsLib.fog,a.UniformsLib.lights,a.UniformsLib.shadowmap,{opacity:{type:"f",value:1},time:{type:"f",value:1},renderModeNormals:{type:"i",value:0},colorOpacity:{type:"f",value:1},alphaBlendMode:{type:"i",value:1}}]),vertexShader:c,fragmentShader:b}}};
return g.BaseMaterialRequirements={MAX_VARYING_VECTORS:5,MAX_FRAGMENT_UNIFORM_VECTORS:5,MAX_VERTEX_UNIFORM_VECTORS:6},g.BaseRequirements_DirectionalLight={MAX_FRAGMENT_UNIFORM_VECTORS:2,MAX_VERTEX_UNIFORM_VECTORS:2},g.BaseRequirements_PointLight={MAX_FRAGMENT_UNIFORM_VECTORS:2,MAX_VERTEX_UNIFORM_VECTORS:2},g.BaseRequirements_Shadow={MAX_VARYING_VECTORS:1,MAX_VERTEX_UNIFORM_VECTORS:4,MAX_FRAGMENT_UNIFORM_VECTORS:2},g}return d}),define("VeroldEngine/AssetRegistry/MaterialRegistry",["underscore","three","VeroldEngine/AssetRegistry/MaterialAsset","VeroldEngine/Materials/VeroldMaterialTypeLibrary"],function(a,b,c,d){var e=function(a){this.materialTypeLibrary=d(a),this.assets=void 0,this.materialObjectTypes={"static":{lights:!0,fog:!0,vertexColors:b.VertexColors,skinning:!1},skinned:{lights:!0,fog:!0,vertexColors:b.VertexColors,skinning:!0},depth_static:{lights:!1,fog:!1,vertexColors:b.NoColors,skinning:!1,defines:{DEPTH_PASS:!0}},depth_skinned:{lights:!1,fog:!1,vertexColors:b.NoColors,skinning:!0,defines:{DEPTH_PASS:!0}}},this.sharedUniforms={time:{type:"f",value:0},screenDimensions:{type:"v4",value:new b.Vector4}},this.timeValueInUse=!1};return e.prototype={constructor:e,initialize:function(a){this.assets={},this.veroldEngine=a.veroldEngine,this.initUniformLists(),this.sharedUniforms.screenDimensions.value=new b.Vector4(0,0,this.veroldEngine.getBaseRenderer().getCanvasWidth(),this.veroldEngine.getBaseRenderer().getCanvasHeight()),this.veroldEngine.on("rebuildMaterials",this.rebuildAll,this),this.veroldEngine.on("textureUnloaded",this.onTextureUnloaded,this),this.veroldEngine.on("textureChanged",this.onTextureChanged,this),this.veroldEngine.on("resize",this.onResize,this)},uninitialize:function(){for(var a in this.assets)this.assets[a].uninitialize(),delete this.assets[a];this.assets=void 0,this.veroldEngine.off("rebuildMaterials",this.rebuildAll,this),this.veroldEngine.off("resize",this.onResize,this),this.veroldEngine.off("textureUnloaded",this.onTextureUnloaded,this),this.veroldEngine.off("textureChanged",this.onTextureChanged,this),this.veroldEngine=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},initSystemAssets:function(){for(var a in this.materialTypeLibrary.DefaultTextures)if(this.veroldEngine.isPrimaryEngine()){this.veroldEngine.assetRegistry.Textures.createAsset(this.materialTypeLibrary.DefaultTextures[a]);var b=this.veroldEngine.assetRegistry.Textures.getAssetById(a);b.load()}},initUniformLists:function(){for(var a in this.materialTypeLibrary.Library){var c=this.materialTypeLibrary.Library[a],d=c.Parameters;for(var e in d)if(!d[e].isRenderParam&&!d[e].deprecated){if(d[e].feature&&(!c.Features||!c.Features[d[e].feature])){if(!d[e].subFeature)continue;var f=c.Features[d[e].feature];if(!f.SubFeatures||!f.SubFeatures[d[e].subFeature])continue}var g=c.uniforms;if(g[e])continue;g[e]={},"dd"===d[e].type?(g[e].type="i",g[e].value=d[e].value):"b"===d[e].type?(g[e].type="i",g[e].value=d[e].value?1:0):"c"===d[e].type?(g[e].type=d[e].type,g[e].value=new b.Color,g[e].value.copy(d[e].value),g[e].value.copyGammaToLinear(g[e].value)):(g[e].type=d[e].type,g[e].value=d[e].value)}}},getMinShaderRequirements:function(){function b(b,c){a.each(b,function(a,b){void 0===c[b]&&(c[b]=0),void 0!==c[b]&&(c[b]+=a)},this)}var c={},d=this.veroldEngine.getBaseRenderer().threeRenderer,e=d.maxDirLights,f=d.maxPointLights,g=d.maxShadows;b(this.materialTypeLibrary.BaseMaterialRequirements,c);for(var h=0;e>h;h++)b(this.materialTypeLibrary.BaseRequirements_DirectionalLight,c);for(h=0;f>h;h++)b(this.materialTypeLibrary.BaseRequirements_PointLight,c);for(h=0;g>h;h++)b(this.materialTypeLibrary.BaseRequirements_Shadow,c);return c},getMissingMaterial:function(a){return this.assets.missingMaterial?this.getAssetById("missingMaterial").load():(console.log("Creating missing material."),this.createAsset({name:"Missing Material",id:"missingMaterial",type:"material",payload:{materialType:"Simple",diffuseColor:9671571,reflectionBias:-1,reflectionPower:6,specularIntensity:.5,specularColor:9671571,gloss:.35}},{success:function(b){b.load(a)}}),this.getAssetById("missingMaterial").load(a),this.getAssetById("missingMaterial").enableFeature("Specular",void 0,!0)),this.getAssetById("missingMaterial")},getSharedUniform:function(a){return this.sharedUniforms[a]},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a]},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)},update:function(){this.timeValueInUse&&(this.veroldEngine.needsRender=!0),this.sharedUniforms.time.value=Date.now()%6e4/1e3},onResize:function(){var a=this.veroldEngine.getBaseRenderer();this.sharedUniforms.screenDimensions.value.x=0,this.sharedUniforms.screenDimensions.value.y=0,this.sharedUniforms.screenDimensions.value.z=a.getCanvasWidth(),this.sharedUniforms.screenDimensions.value.w=a.getCanvasHeight()},onTextureUnloaded:function(b){a.each(this.assets,function(a){var c=!1,d=a.entityModel.get("payload"),e={};for(var f in d)d[f]===b&&(c=!0,e["payload."+f]=null);c&&a.set(e)},this)},onTextureChanged:function(b,c){a.each(this.assets,function(a){var d=!1,e=a.entityModel.get("payload"),f={};for(var g in e)e[g]===b&&void 0!==c.packing&&(d=!0,f["payload."+g]=null);if(d){a.set(f);for(var h in f)f[h]=b;a.set(f)}},this)},rebuildAll:function(){a.each(this.assets,function(a){if(a.threeData)for(var b in a.threeData)a.threeData[b].needsUpdate=!0},this)},getMaterialLibrary:function(){return this.materialTypeLibrary.Library},getMaterialDefinition:function(a){return a&&this.materialTypeLibrary.Library[a]||(a="Advanced"===a?"Standard":"Non-Textured"===a?"Simple":"Standard"),this.materialTypeLibrary.Library[a]}},e}),define("VeroldEngine/AssetRegistry/BaseTextureAsset",["underscore","three","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Loaders/GenericLoader"],function(a,b,c,d){var e=function(){c.call(this)};return e.prototype=new c,a.extend(e.prototype,c.prototype,{initialize:function(b){c.prototype.initialize.call(this,b);var d=this.entityModel.toJSON(),e=this.entityModel.get("type"),f=this.registry.defaultTextureSettings[e];a.each(f,function(a,b){var c={};void 0===d.payload[b]&&(c["payload."+b]=a,this.set(c,{silent:!0}))},this),this.entityModel.get("payload.mipmaps")||this.set({"payload.mipmaps":[]},{silent:!0}),this.loadComponents=!0,this.trigger("load_hierarchy",this),this.trigger("load_hierarchy_dependencies",this)},unload:function(){this.threeData&&(this.veroldEngine.trigger("textureUnloaded",this.id),console.log(this.veroldEngine.engineName+" - Unloading texture, "+this.entityModel.get("name")),this.threeData.dispose())},applyPayloadSettings_loaded:function(a,c){var d;if(this.threeData){if(a){if(d=this.entityModel.get("payload"),this.threeData.wrapS=void 0!==a.uMapping?this.registry.textureUVMappingsMap[d.uMapping]:this.threeData.wrapS,this.threeData.wrapT=void 0!==a.vMapping?this.registry.textureUVMappingsMap[d.vMapping]:this.threeData.wrapT,this.threeData.anisotropy=void 0!==a.anisotropy?d.anisotropy:this.threeData.anisotropy,this.threeData.premultiplyAlpha=void 0!==a.premultiplyAlpha?d.premultiplyAlpha:this.threeData.premultiplyAlpha,this.threeData.flipY=!1,this.threeData.generateMipmaps=void 0===a.generateMipmaps||this.isCompressed?this.threeData.generateMipmaps:d.generateMipmaps,void 0!==a.packingOverride)switch(a.packingOverride){case"rgbm":this.threeData.hdrPacking=b.HDRRGBM;break;case"rgbd":this.threeData.hdrPacking=b.HDRRGBD;break;case"rgbe":this.threeData.hdrPacking=b.HDRRGBE;break;case"logluv":this.threeData.hdrPacking=b.HDRLOGLUV}else void 0!==a.isHDR&&(this.threeData.hdrPacking=a.isHDR?b.HDRRGBM:void 0);if(void 0!==a.filtering){var e;e=this.registry.textureFiltersMap[d.packingOverride]?this.registry.textureFiltersMap[d.packingOverride]:this.registry.textureFiltersMap.Default,e[d.filtering]?(this.threeData.minFilter=e[d.filtering].minFilter,this.threeData.magFilter=e[d.filtering].magFilter):(console.warn("Unknown filter type, "+d.filtering),this.threeData.minFilter=e.Linear.minFilter,this.threeData.magFilter=e.Linear.magFilter)}this.threeData.needsUpdate=!0}c&&c.success&&c.success()}this.trigger("updated",this)},applyPayloadSettings_unloaded:function(a){void 0!==a.preferCompression&&(this.defaultResource=void 0,this.defaultResources=void 0),this.veroldEngine.trigger("textureChanged",this.id,a)},generateManualMipmaps:function(){if(!this.downSampleMaterial,this.threeData){that.threeData.mipmaps.push(texture.image);for(var a=this.getNumMips(),b=this.veroldEngine.getThreeRenderer(),c=0;a>c;c++)this.downSampleMaterial.uniforms.resolution.value.x=Math.pow(2,a-c),this.downSampleMaterial.uniforms.resolution.value.y=Math.pow(2,a-c),b.render(this.downSampleScene,this.downSampleCamera,this.currentLuminanceRTDownSampled[c],!0),this.materialDownSample.uniforms.tDiffuse.value=this.currentLuminanceRTDownSampled[c]}},_clampToSize:function(a,b){if(!this.isCompressed){if(a.width<=b&&a.height<=b)return a;var c,d=Math.max(a.width,a.height),e=Math.floor(a.width*b/d),f=Math.floor(a.height*b/d),g=document.createElement("canvas");return g.width=e,g.height=f,c=g.getContext("2d"),c.drawImage(a,0,0,a.width,a.height,0,0,e,f),g}return null},_loadCompressedTexture:function(a,c,e){var f=this,g=new d(this.veroldEngine);g.loadFile(a,"arraybuffer",function(a,d){if(a)return console.warn("Error loading texture",a);var g,h,i,j=new b.CompressedTexture,k=f._parseDDS(d,!0);if(void 0!==c&&(j.mapping=c),j.format=k.format,j.generateMipmaps=!1,j.needsUpdate=!0,k.isCubemap)for(j.flipY=!1,j.image=[],i=k.mipmaps.length/k.mipmapCount,g=0;i>g;g+=1)for(j.image[g]={mipmaps:[]},h=0;h<k.mipmapCount;h+=1)j.image[g].mipmaps.push(k.mipmaps[g*k.mipmapCount+h]),j.image[g].format=k.format,j.image[g].width=k.width,j.image[g].height=k.height;else j.mipmaps=k.mipmaps,j.image.width=k.width,j.image.height=k.height;e&&e(j)},function(a){f.loadingProgress.textures=a.loaded,f.trigger("load_progress",f)})},_parseDDS:function(a,c){function d(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}function e(a){return String.fromCharCode(255&a,a>>8&255,a>>16&255,a>>24&255)}function f(a,b,c,d){var e,f,g,h,i,j,k=c*d*4,l=new Uint8Array(a,b,k),m=new Uint8Array(k),n=0,o=0;for(f=0;d>f;f+=1)for(e=0;c>e;e+=1)i=l[o],h=l[o+1],g=l[o+2],j=l[o+3],m[n]=g,m[n+1]=h,m[n+2]=i,m[n+3]=j,o+=4,n+=4;return m}var g,h,i,j,k,l,m,n,o,p,q,r,s=542327876,t=131072,u=512,v=4,w=d("DXT1"),x=d("DXT3"),y=d("DXT5"),z=31,A=0,B=1,C=2,D=3,E=4,F=7,G=20,H=21,I=22,J=23,K=24,L=25,M=26,N=28,O={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};if(g=new Int32Array(a,0,z),g[A]!==s)return console.error("THREE.DDSLoader.parse: Invalid magic number in DDS header."),O;if(!g[G]&v)return console.error("THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code."),O;switch(i=g[H],j=!1,i){case w:h=8,O.format=b.RGB_S3TC_DXT1_Format;break;case x:h=16,O.format=b.RGBA_S3TC_DXT3_Format;break;case y:h=16,O.format=b.RGBA_S3TC_DXT5_Format;break;default:if(!(32===g[I]&&16711680&g[J]&&65280&g[K]&&255&g[L]&&4278190080&g[M]))return console.error("THREE.DDSLoader.parse: Unsupported FourCC code ",e(i)),O;j=!0,h=64,O.format=b.RGBAFormat}for(O.mipmapCount=1,g[C]&t&&c!==!1&&(O.mipmapCount=Math.max(1,g[F])),O.isCubemap=g[N]&u?!0:!1,O.width=g[E],O.height=g[D],k=g[B]+4,l=O.width,m=O.height,o=O.isCubemap?6:1,n=0;o>n;n+=1){for(p=0;p<O.mipmapCount;p+=1)j?(q=f(a,k,l,m),r=q.length):(r=Math.max(4,l)/4*Math.max(4,m)/4*h,q=new Uint8Array(a,k,r)),O.mipmaps.push({data:q,width:l,height:m}),k+=r,l=Math.max(.5*l,1),m=Math.max(.5*m,1);l=O.width,m=O.height}return O},getDataSizeTextureDownload:function(){return 0},getDataSizeTextureDownload_Uncompressed:function(){return 0},getDataSizeTextureInMemory:function(){return 0},getMaxTextureSize:function(){return VAPI.isMobile()?1024:this.veroldEngine.getGPUCapability("MAX_TEXTURE_SIZE")},getPixelFormat:function(){console.error("Texture type needs to implement getPixelFormat()")},getNumMips:function(){var a=this.getWidth(),b=this.getHeight(),c=Math.max(a,b);return c=Math.max(c,1),Math.floor(Math.log2(c))},getPreferredCompression:function(){var a="none";return this.getProperty("preferCompression")?(this.veroldEngine.supportsCompressedTextureS3TC()?a="dxt":this.veroldEngine.supportsCompressedTexturePVRTC()?a="pvrtc":this.veroldEngine.supportsCompressedTextureATC()&&(a="atc"),a):a},getResource:function(a){a||(a={}),a.bestMatch!==!1&&(a.bestMatch=!0);var b=this.getResources(a);return b[0]},getResources:function(b){var c=this.entityModel.getResources();if(b=b||{},void 0!==b.compression&&(c=a.filter(c,function(a){return a.properties.compression===b.compression})),void 0!==b.maxSize&&(c=a.filter(c,function(a){return a.properties.width<=b.maxSize&&a.properties.height<=b.maxSize})),void 0!==b.pixelFormat&&(c=a.filter(c,function(a){return a.properties.pixelFormat===b.pixelFormat})),b.bestMatch){var d;c.length>1&&(a.each(c,function(a){(!d||a.properties.width>d.properties.width)&&(d=a)},this),c=[d])}return c},getWidth:function(){console.error("Texture type needs to implement getWidth()")},getHeight:function(){console.error("Texture type needs to implement getHeight()")}}),window.VAPI=window.VAPI||{},window.VAPI.BaseTextureAsset=e,e}),define("VeroldEngine/AssetRegistry/Texture2DAsset",["underscore","async","three","VeroldEngine/AssetRegistry/BaseTextureAsset"],function(a,b,c,d){var e=function(){d.call(this)};return e.prototype=new d,a.extend(e.prototype,{initialize:function(a){d.prototype.initialize.call(this,a)},_loadThreeData:function(a){function b(b){var c=g.getMaxTextureSize();if(g.veroldEngine){if(b.image.width>c||b.image.height>c){if(g.isCompressed)return void console.warn("Trying to load a compressed texture that is larger than what is supported by the hardware.");console.warn("Trying to load a texture that is larger than what is supported by the hardware. Attempting to rescale."),b.image=g._clampToSize(b.image,c)}g.threeData=b,g.threeData.name=d.name,g.threeData.veroldEntityId=g.id,a.payload.packingOverride=f.properties.pixelFormat,g.loadingProgress.textures=g.getDataSizeTextureDownload_Uncompressed(),g.applyPayloadSettings_loaded(a.payload,{success:function(){g.trigger("load_progress",g),g.trigger("load_base",g)}})}}var d,e,f,g=this;d=this.entityModel.toJSON(),a.payload.uMapping=!0,a.payload.vMapping=!0,a.payload.filtering=!0,a.payload.anisotropy=!0,a.payload.flipY=!1,void 0===d.payload.preferCompression&&d.payload.tex&&d.payload.tex.width>=2048&&this.set({"payload.preferCompression":!0},{silent:!0}),f=this._getDefaultResource(),f?(e=this.entityModel.getResourcePathPrefix()+f.path,"dxt"===f.properties.compression?(this.isCompressed=!0,this._loadCompressedTexture(e,null,b)):c.ImageUtils.loadTexture(e,null,b)):console.warn("Failed to find appropriate default texture.")},applyPayloadSettings_loaded:function(b,c){var e=this;d.prototype.applyPayloadSettings_loaded.call(this,b,{success:function(){var b=e.getProperty("generateMipmaps"),d=e.getProperty("mipmaps");b=void 0!==b?b:e.registry.defaultTextureSettings.texture2D.generateMipmaps,e.isCompressed||b||!d||a.isEmpty(d)?c&&c.success&&c.success():e.loadMips(function(){setTimeout(function(){e.loadMips()},0),e.trigger("load_progress",e),e.trigger("load_base",e),c&&c.success&&c.success()})}})},_getDefaultResource:function(){var a,b;return void 0===this.defaultResource&&(a=this.getProperty("pixelFormat"),b=this.getResources({compression:this.getPreferredCompression(),maxSize:this.getMaxTextureSize(),pixelFormat:a,bestMatch:!0}),b.length||(b=this.getResources({maxSize:this.getMaxTextureSize(),pixelFormat:a,bestMatch:!0})),this.defaultResource=b[0]),this.defaultResource},getDataSizeTextureDownload:function(a){var b=a?this.getResource(a):this._getDefaultResource();return b?b.contentLength:0},getDataSizeTextureDownload_Uncompressed:function(a){var b=a?this.getResource(a):this._getDefaultResource();return b?b.contentLengthIdentity||b.contentLength:0},getDataSizeTextureInMemory:function(a){var b,c=a?this.getResource(a):this._getDefaultResource();return"none"!==c.properties.compression?c.contentLengthIdentity||c.contentLength:(b="rgb"===c.properties.pixelFormat?3:4,c.properties.width*c.properties.height*b)},getPixelFormat:function(a){var b=a?this.getResource(a):this._getDefaultResource();return b?b.properties.pixelFormat:null},getNumChannels:function(){var a="rgb"===this._getDefaultResource().properties.pixelFormat?3:4;return a},getWidth:function(a){var b=a?this.getResource(a):this._getDefaultResource();return b?b.properties.width:0},getHeight:function(a){var b=a?this.getResource(a):this._getDefaultResource();return b?b.properties.height:0},loadMips:function(a){var d=this,e=!1,f=this.getProperty("mipmaps");this.threeData.mipmaps=[this.threeData.image],b.each(f,function(a,b){var f,g,h=d.registry.getAssetById(a);return h&&(g=h._getDefaultResource())?(f=h.entityModel.getResourcePathPrefix()+g.path,void c.ImageUtils.loadTexture(f,null,function(a){a.image&&d.threeData.mipmaps.push(a.image),b()})):(e=!0,void b())},function(){e?(d.threeData.mipmaps=[],d.threeData.generateMipmaps=!0):(d.trigger("load_base"),d.threeData.needsUpdate=!0,d.threeData.generateMipmaps=!1),a&&a()})}}),window.VAPI=window.VAPI||{},window.VAPI.Texture2DAsset=e,e}),define("VeroldEngine/AssetRegistry/TextureCubeAsset",["underscore","three","VeroldEngine/AssetRegistry/BaseTextureAsset"],function(a,b,c){var d=function(){c.call(this)};return d.prototype=new c,a.extend(d.prototype,{_loadThreeData:function(c,d){function e(b){var e=i.getMaxTextureSize();if(i.veroldEngine)if(b.image[0]){if(b.image[0].width>e||b.image[0].height>e){if(i.isCompressed){if(console.warn("Trying to load a compressed cubemap texture that is larger than what is supported by the hardware."),i.state_base="error",d.failure)return d.failure(i.id);return}console.warn("Trying to load a cubemap texture that is larger than what is supported by the hardware. Attempting to rescale."),a.each(a.keys(b.image),function(a){b.image[a]=i._clampToSize(b.image[a],e)})}i.threeData=b,i.threeData.name=h.name,i.threeData.veroldEntityId=i.id,i.applyPayloadSettings_loaded(c.payload,d),i.trigger("load_base",i)}else if(console.warn("There was an issue loading the cubemap texture, "+i.getName()),i.state_base="error",d.failure)return d.failure(i.id)}var f,g,h=this.entityModel.toJSON(),i=this;c.payload.uMapping=!0,c.payload.vMapping=!0,c.payload.filtering=!0,c.payload.anisotropy=!0,c.payload.flipY=!1,d=d||{},g=this._getDefaultResources(),f=a.map(g,function(a){return i.entityModel.getResourcePathPrefix()+a.path}),6===g.length?(this.isCompressed=!1,b.ImageUtils.loadTextureCube(f,b.CubeReflectionMapping,e)):g.length>0?(this.isCompressed=!0,this._loadCompressedTexture(f[0],b.CubeReflectionMapping,e)):console.warn("Failed to find appropriate default texture.")},_getDefaultResources:function(){var a,b;return void 0===this.defaultResources&&(a=this.getPreferredCompression(),b=this.getProperty("pixelFormat"),this.defaultResources=this.getResources({compression:a,maxSize:this.getMaxTextureSize(),pixelFormat:b,bestMatch:!0}),0===this.defaultResources.length&&(a="none",this.defaultResources=this.getResources({maxSize:this.getMaxTextureSize(),pixelFormat:b,bestMatch:!0}))),this.defaultResources},getDataSizeTextureDownload:function(b){var c=b?this.getResources(b):this._getDefaultResources(),d=0;return a.each(c,function(a){d+=a.contentLength},this),d},getDataSizeTextureDownload_Uncompressed:function(b){var c=b?this.getResources(b):this._getDefaultResources(),d=0;return a.each(c,function(a){d+=a.contentLengthIdentity||a.contentLength},this),d},getDataSizeTextureInMemory:function(b){var c=b?this.getResources(b):this._getDefaultResources(),d=0;return a.each(c,function(a){var b;"none"===a.properties.compression?(b="rgb"===a.properties.pixelFormat?3:4,d+=a.properties.width*a.properties.height*b):d+=a.contentLengthIdentity||a.contentLength},this),d},getMaxTextureSize:function(){return VAPI.isMobile()?512:this.veroldEngine.getGPUCapability("MAX_CUBE_MAP_TEXTURE_SIZE")},getPixelFormat:function(a){var b=a?this.getResources(a):this._getDefaultResources();return b.length>0?b[0].properties.pixelFormat:null},getResources:function(b){b=b||{};var d=b.bestMatch;b.bestMatch=!1;var e=c.prototype.getResources.call(this,b);if(b.bestMatch=d,void 0!==b.cubeFace&&(e=a.filter(e,function(a){return a.properties.cubeFace===b.cubeFace})),b.bestMatch&&e.length>1)if("none"===b.compression){var f=new Array(6);a.each(e,function(a){var b=f[a.properties.cubeFace];(!b||b.properties.width<a.properties.width)&&(f[a.properties.cubeFace]=a)},this),e=f}else{for(var g=e[0],h=1;h<e.length;h++)e[h].properties.width>g.properties.width&&(g=e[h]);e=[g]}return e},getWidth:function(a){var b=a?this.getResources(a):this._getDefaultResources();return b.length>0?b[0].properties.width:0},getHeight:function(a){var b=a?this.getResources(a):this._getDefaultResources();return b.length>0?b[0].properties.height:0}}),window.VAPI=window.VAPI||{},window.VAPI.TextureCubeAsset=d,d}),define("VeroldEngine/Loaders/MediaLoader",["underscore"],function(a){var b=function(){this.crossOrigin="anonymous"};return b.prototype={constructor:b,loadAudio:function(a,b,c,d){this._loadMedia("audio",a,b,c,d)},loadVideo:function(a,b,c,d){this._loadMedia("video",a,b,c,d)},_loadMedia:function(b,c,d,e,f){var g=document.createElement(b),h=function(){console.log("Media load start"),g.removeEventListener("loadstart",h)};g.addEventListener("loadstart",h,!1);var i=function(){console.log("Media loaded metadata"),g.removeEventListener("loadedmetadata",i)};g.addEventListener("loadedmetadata",i,!1);var j=function(){console.log("Media loaded data"),g.removeEventListener("loadeddata",j)};if(g.addEventListener("loadeddata",j,!1),d){var k=function(){console.log("Media can play"),g.removeEventListener("canplay",k),d(g)};g.addEventListener("canplay",k,!1)}e&&g.addEventListener("progress",function(a){e(a)},!1),f&&g.addEventListener("error",function(a){console.log("Error loading media: "+JSON.stringify(a.target.error)),f(a)},!1),void 0!==this.crossOrigin&&g.setAttribute("crossorigin",this.crossOrigin),g.setAttribute("preload","auto"),a.isArray(c)||(c=[c]);for(var l in c){var m=b+"/"+c[l].split(".").pop();if(void 0===g.canPlayType||g.canPlayType(m).replace(/no/,"")){var n=document.createElement("source");n.src=c[l],n.type=m,g.appendChild(n)}}return g.load(),g}},window.VAPI=window.VAPI||{},window.VAPI.MediaLoader=b,b}),define("VeroldEngine/AssetRegistry/TextureVideoAsset",["underscore","three","VeroldEngine/AssetRegistry/BaseTextureAsset","VeroldEngine/Loaders/MediaLoader"],function(a,b,c,d){var e=function(){c.call(this)};return e.prototype=new c,e.prototype.events={pause:{params:[],action:!0,category:""},play:{params:[{name:"seek",type:"b",description:"","default":!1},{name:"seekTime",type:"f",description:"","default":0}],action:!0,category:""},stop:{params:[],action:!0,category:""},toggle:{params:[],action:!0,category:""}},a.extend(e.prototype,{initialize:function(a){c.prototype.initialize.call(this,a),this.veroldEngine.on("update",this.onUpdate,this),this.on("pause",this.pause,this),this.on("play",this.play,this),this.on("stop",this.stop,this),this.on("toggle",this.toggle,this)},uninitialize:function(){this.veroldEngine.off("update",this.onUpdate,this),this.off("pause",this.pause,this),this.off("play",this.play,this),this.off("stop",this.stop,this),this.off("toggle",this.toggle,this),this.threeData&&this.threeData.image&&this.threeData.image.pause(),c.prototype.uninitialize.call(this)},_loadThreeData:function(a,c){function e(d){console.log("Video ready to play: "+i),g.threeData=new b.Texture,g.threeData.name=i,g.threeData.veroldEntityId=g.id,g.threeData.image=d,g.threeData.needsUpdate=!0,a.payload.uMapping=!0,a.payload.vMapping=!0,a.payload.filtering=!0,a.payload.anisotropy=!0,a.payload.flipY=!1,a.payload.generateMipmaps=!0,a.payload.loop=!0,a.payload.state=!0,c=c||{},g.applyPayloadSettings_loaded(a.payload,c),j.autoPlay&&g.play(),g.loadingProgress.textures=g.getDataSizeTextureDownload(),g.trigger("load_progress",g),g.trigger("load_base",g)}var f,g=this,h=new d,i=this.getName(),j=this.entityModel.get("payload");f=this.getResourcePaths({quality:"medium"}),h.loadVideo(f,e),console.log("Loading video: "+i)},applyPayloadSettings_loaded:function(a,b){if(this.threeData&&a){var d=this.entityModel.get("payload");a.loop&&this.threeData.image&&(this.threeData.image.loop=d.loop)}c.prototype.applyPayloadSettings_loaded.call(this,a,b)},getResources:function(b){var c=this.entityModel.getResources();return b=b||{},void 0!==b.quality&&(c=a.filter(c,function(a){return a.properties.quality===b.quality})),c},onUpdate:function(){if(this.threeData){var a=this.threeData.image;a&&a.readyState===a.HAVE_ENOUGH_DATA&&(this.threeData.needsUpdate=!0)}},pause:function(){this.threeData&&this.threeData.image.pause()},play:function(a,b){this.threeData&&(a&&(this.threeData.image.currentTime=b),this.threeData.image.play())},stop:function(){this.threeData&&(this.threeData.image.pause(),this.threeData.image.currentTime=0)},toggle:function(){this.threeData&&(this.threeData.image.paused?this.play():this.pause())}}),window.VAPI=window.VAPI||{},window.VAPI.TextureVideoAsset=e,e}),define("VeroldEngine/AssetRegistry/RenderTexture2DAsset",["underscore","three","VeroldEngine/AssetRegistry/BaseTextureAsset"],function(a,b,c){var d=function(){c.call(this)};return d.prototype=new c,a.extend(d.prototype,{initialize:function(a){this.loadComponents=!0,c.prototype.initialize.call(this,a)},_createRTTexture:function(){var a=this.entityModel.get("payload"),c=this.getWidth(),d=this.getHeight();this.threeData=new b.WebGLRenderTarget(c,d,{wrapS:this.registry.textureUVMappingsMap[a.uMapping],wrapT:this.registry.textureUVMappingsMap[a.vMapping],minFilter:b.LinearFilter,magFilter:b.LinearFilter,format:a.format,type:a.type,stencilBuffer:a.stencilBuffer}),this.threeData.name=this.entityModel.get("name"),this.threeData.flipY=!1,this.threeData.veroldEntityId=this.id},_loadThreeData:function(a,b){this._createRTTexture(),a.payload.uMapping=!0,a.payload.vMapping=!0,a.payload.filtering=!0,a.payload.anisotropy=!0,a.payload.flipY=!1,this.applyPayloadSettings_loaded(a.payload,b),this.trigger("load_progress",this),this.trigger("load_base",this),this.trigger("load",this)},applyPayloadSettings_loaded:function(a){c.prototype.applyPayloadSettings_loaded.call(this,a);var b=this.entityModel.get("payload");(a.format||a.type||a.width||a.height)&&(this.threeData.__webglFramebuffer&&(this.threeData.dispose(),delete this.threeData.__webglFramebuffer),this.threeData.format=b.format,this.threeData.type=b.type,this.threeData.height=this.getHeight(),this.threeData.width=this.getWidth()),a.filtering&&(this.threeData.generateMipmaps="Trilinear"===b.filtering?!0:!1),this.threeData.needsUpdate=!1},getDataSizeTextureInMemory:function(){var a=this.getProperty("width"),c=this.getProperty("height"),d=parseInt(this.getProperty("type"),10),e=parseInt(this.getProperty("format"),10),f=1,g=1;switch(d){case b.FloatType:case b.UnsignedIntType:case b.IntType:g=4;break;case b.ShortType:case b.UnsignedShortType:g=2;break;case b.UnsignedByteType:case b.ByteType:g=1;break;case b.UnsignedShort4444Type:case b.UnsignedShort5551Type:case b.UnsignedShort565Type:return a*c*2}switch(e){case b.RGBFormat:f=3;break;case b.RGBAFormat:f=4;break;case b.LuminanceAlphaFormat:f=2;break;case b.LuminanceFormat:case b.AlphaFormat:f=1}return a*c*f*g},getPixelFormat:function(){var a=this.getProperty("packingOverride");if(a)return a;var c=parseInt(this.getProperty("format"),10);switch(c){case b.RGBFormat:return"rgb";case b.RGBAFormat:return"rgba";case b.LuminanceAlphaFormat:return"ya";case b.LuminanceFormat:return"y";case b.AlphaFormat:return"a"}return null},getNumChannels:function(){switch(this.getPixelFormat()){case"rgb":return 3;case"rgba":return 4;case"ya":return 2;case"y":return 1;case"a":return 1;default:return 3}},getWidth:function(){var a=this.veroldEngine.getGPUCapability("MAX_TEXTURE_SIZE"),b=this.getProperty("width");return b>a&&(b=a),b},getHeight:function(){var a=this.veroldEngine.getGPUCapability("MAX_TEXTURE_SIZE"),b=this.getProperty("height");return b>a&&(b=a),b},setUserData:function(a,b,c){var d,e=a*b,f=new Uint8Array(3*e),g=Math.floor(255*c.r),h=Math.floor(255*c.g),i=Math.floor(255*c.b);for(d=0;e>d;d+=1)f[3*d]=g,f[3*d+1]=h,f[3*d+2]=i;this.threeData&&(this.threeData.image={data:f,width:a,height:b},this.threeData.needsUpdate=!0)}}),window.VAPI=window.VAPI||{},window.VAPI.RenderTexture2DAsset=d,d}),define("VeroldEngine/AssetRegistry/RenderTextureCubeAsset",["underscore","three","VeroldEngine/AssetRegistry/BaseTextureAsset"],function(a,b,c){var d=function(){c.call(this)};return d.prototype=new c,a.extend(d.prototype,{initialize:function(a){this.loadComponents=!0,c.prototype.initialize.call(this,a)},_createRTTexture:function(){var a=this.entityModel.get("payload"),c=this.getWidth(),d=this.getHeight();this.threeData=new b.WebGLRenderTargetCube(c,d,{wrapS:this.registry.textureUVMappingsMap[a.uMapping],wrapT:this.registry.textureUVMappingsMap[a.vMapping],minFilter:b.LinearFilter,magFilter:b.LinearFilter,format:a.format,type:a.type,stencilBuffer:a.stencilBuffer}),this.threeData.name=this.entityModel.get("name"),this.threeData.flipY=!1,this.threeData.veroldEntityId=this.id},_loadThreeData:function(a,b){this._createRTTexture(),a.payload.uMapping=!0,a.payload.vMapping=!0,a.payload.filtering=!0,a.payload.anisotropy=!0,a.payload.flipY=!1,this.applyPayloadSettings_loaded(a.payload,b),this.trigger("load_progress",this),this.trigger("load_base",this),this.trigger("load",this)},applyPayloadSettings_loaded:function(a){c.prototype.applyPayloadSettings_loaded.call(this,a);var b=this.entityModel.get("payload");(a.format||a.type||a.width||a.height)&&(this.threeData.__webglFramebuffer&&(this.threeData.dispose(),delete this.threeData.__webglFramebuffer),this.threeData.format=b.format,this.threeData.type=b.type,this.threeData.width=this.getWidth(),this.threeData.height=this.threeData.width),a.filtering&&(this.threeData.generateMipmaps="Trilinear"===b.filtering?!0:!1),this.threeData.needsUpdate=!1},getDataSizeTextureInMemory:function(){var a=this.getProperty("width"),c=this.getProperty("height"),d=parseInt(this.getProperty("type"),10),e=parseInt(this.getProperty("format"),10),f=1,g=1;switch(d){case b.FloatType:case b.UnsignedIntType:case b.IntType:g=4;break;case b.ShortType:case b.UnsignedShortType:g=2;break;case b.UnsignedByteType:case b.ByteType:g=1;break;case b.UnsignedShort4444Type:case b.UnsignedShort5551Type:case b.UnsignedShort565Type:return a*c*2}switch(e){case b.RGBFormat:f=3;break;case b.RGBAFormat:f=4;break;case b.LuminanceAlphaFormat:f=2;break;case b.LuminanceFormat:case b.AlphaFormat:f=1}return a*c*f*g*6},getPixelFormat:function(){var a=this.getProperty("packingOverride");if(a)return a;var c=parseInt(this.getProperty("format"),10);switch(c){case b.RGBFormat:return"rgb";case b.RGBAFormat:return"rgba";case b.LuminanceAlphaFormat:return"ya";case b.LuminanceFormat:return"y";case b.AlphaFormat:return"a"}return null},getWidth:function(){var a=this.veroldEngine.getGPUCapability("MAX_CUBE_MAP_TEXTURE_SIZE"),b=this.getProperty("width");return b>a&&(b=a),b
},getHeight:function(){var a=this.veroldEngine.getGPUCapability("MAX_CUBE_MAP_TEXTURE_SIZE"),b=this.getProperty("height");return b>a&&(b=a),b},setUserData:function(a,b,c){var d,e=a*b,f=new Uint8Array(3*e),g=Math.floor(255*c.r),h=Math.floor(255*c.g),i=Math.floor(255*c.b);for(d=0;e>d;d+=1)f[3*d]=g,f[3*d+1]=h,f[3*d+2]=i;this.threeData&&(this.threeData.image={data:f,width:a,height:b},this.threeData.needsUpdate=!0)}}),window.VAPI=window.VAPI||{},window.VAPI.RenderTextureCubeAsset=d,d}),define("VeroldEngine/AssetRegistry/TextureRegistry",["underscore","three","VeroldEngine/AssetRegistry/Texture2DAsset","VeroldEngine/AssetRegistry/TextureCubeAsset","VeroldEngine/AssetRegistry/TextureVideoAsset","VeroldEngine/AssetRegistry/RenderTexture2DAsset","VeroldEngine/AssetRegistry/RenderTextureCubeAsset"],function(a,b,c,d,e,f,g){var h=function(){this.assets=void 0,this.textureFilters=["Nearest","Linear","Trilinear"],this.textureUVMappings=["Wrap","Clamp","Mirror"],this.textureUVMappingsMap={Wrap:b.RepeatWrapping,Clamp:b.ClampToEdgeWrapping,Mirror:b.MirroredRepeatWrapping},this.textureFiltersMap={Default:{Nearest:{minFilter:b.NearestFilter,magFilter:b.NearestFilter},Linear:{minFilter:b.LinearFilter,magFilter:b.LinearFilter},Trilinear:{minFilter:b.LinearMipMapLinearFilter,magFilter:b.LinearFilter}},rgbe:{Nearest:{minFilter:b.NearestFilter,magFilter:b.NearestFilter},Linear:{minFilter:b.LinearFilter,magFilter:b.LinearFilter},Trilinear:{minFilter:b.LinearMipMapLinearFilter,magFilter:b.LinearFilter}}},this.defaultTextureSettings={texture2D:{uMapping:"Wrap",vMapping:"Wrap",filtering:"Trilinear",anisotropy:1,flipY:!0,preferCompression:!0,isNormalMap:!1,generateMipmaps:!0},renderTexture2D:{format:b.RGBAFormat,type:b.UnsignedByteType,width:256,height:256,uMapping:"Wrap",vMapping:"Wrap",filtering:"Linear",anisotropy:1,flipY:!0,preferCompression:!1,isNormalMap:!1,stencilBuffer:!1,depthBuffer:!1,generateMipmaps:!1},textureCube:{uMapping:"Wrap",vMapping:"Wrap",filtering:"Trilinear",anisotropy:1,flipY:!0,preferCompression:!1,isNormalMap:!1,generateMipmaps:!0},renderTextureCube:{format:b.RGBAFormat,type:b.UnsignedByteType,width:256,height:256,uMapping:"Wrap",vMapping:"Wrap",filtering:"Linear",anisotropy:1,flipY:!0,preferCompression:!1,isNormalMap:!1,stencilBuffer:!1,depthBuffer:!1,generateMipmaps:!1},textureVideo:{uMapping:"Clamp",vMapping:"Clamp",filtering:"Linear",anisotropy:1,flipY:!0,preferCompression:!1,isNormalMap:!1,packing:b.HDRFull,generateMipmaps:!1,autoPlay:!1,state:"pause",loop:!1}}};return h.prototype={constructor:h,initialize:function(a){b.ImageUtils.crossOrigin="anonymous",this.assets={},this.veroldEngine=a.veroldEngine},uninitialize:function(){for(var a in this.assets)this.assets[a].uninitialize(),delete this.assets[a];this.assets=void 0,this.veroldEngine=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b,h=a.get("type");switch(h){case"texture2D":b=new c;break;case"textureCube":b=new d;break;case"textureVideo":b=new e;break;case"renderTexture2D":b=new f;break;case"renderTextureCube":b=new g}b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a]},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},h}),define("VeroldEngine/AssetRegistry/AnimationAsset",["underscore","three","VeroldEngine/VeroldEntity","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Loaders/GenericLoader"],function(a,b,c,d,e){var f=function(){d.call(this)};return f.prototype=new d,a.extend(f.prototype,{initialize:function(a){d.prototype.initialize.call(this,a),this.state_dependencies="loaded",this.trigger("load_hierarchy",this),this.trigger("load_hierarchy_dependencies",this),this.trigger("load_components",this)},getDataSizeAnimationDownload:function(){var a=this.getResource();return a?a.contentLength:void 0},getDataSizeAnimationInMemory:function(){var a=this.getResource();return a?a.contentLengthIdentity:void 0},_getCurvesForObjectsInLayer:function(a,b,c){for(var d={},e=0;e<a.length;++e){var f=a[e].name;d[f]=[]}for(var g=0;g<b.curves.length;++g){var h=b.curves[g];if(c.hasOwnProperty(h)){var i=c[h],f=i.object;d.hasOwnProperty(f)&&d[f].push(i)}}return d},_getKeyframes:function(a,b,c,d){var e={},f={};f.position="pos",f.rotation="rot",f.scale="scl";for(var g=0;g<a.length;++g){for(var h,i=a[g],j=b[i.name],k=[],l=0;l<j.length;++l){var m=j[l],n=m.keys,o=m.channels+1;for(var p in f){var q=f[p];if(m.property===p){for(var r=0;r*o<n.length&&n[r*o]<c;)r++;if(r*o<n.length){var s=n[r*o];if(s>c){var t={time:0};if(r>0){var u=n.slice((r-1)*o,r*o),v=n.slice(r*o,(r+1)*o);t[q]=this._interpolateKeys(u,v,c)}else t[q]=n.slice(1,o);k.push(t)}}else if(n.length>0){var t={time:0};t[q]=n.slice(-o+1),k.push(t)}for(;r*o<n.length&&n[r*o]<=d;){var t={time:n[r*o]-c};t[q]=n.slice(r*o+1,(r+1)*o),k.push(t),r++}if(r*o<n.length){var s=n[r*o];if(s>d){var t={time:d-c};if(r>0){var u=n.slice((r-1)*o,r*o),v=n.slice(r*o,(r+1)*o);t[q]=this._interpolateKeys(u,v,d)}else t[q]=n.slice(1,o);k.push(t)}}else if(n.length>0){var t={time:d-c};t[q]=n.slice(n.length-o+1,n.length),k.push(t)}}}}if(0!==k.length){k.sort(function(a,b){return a.time-b.time}),h=[k[0]];for(var w=1;w<k.length;++w){var t=k[w],x=h[h.length-1];if(t.time===x.time)for(var p in f){var q=f[p];t.hasOwnProperty(q)&&(x[q]=t[q])}else h.push(t)}e[i.name]=h}}return e},_interpolateKeys:function(a,b,c){var d,e=a[0],f=b[0],g=[];d=f-e===0?.5:(c-e)/(f-e);for(var h=1;h<a.length;++h)g.push(a[h]+(b[h]-a[h])*d);return g},_loadThreeData:function(a,b){var c=this,d=function(d,e){return d?console.warn("Error loading animation",d):(c.threeData=e,c.applyPayloadSettings_loaded(a,b),void c.trigger("load_base",c))},f=function(a){c.loadingProgress.animations=a.loaded,c.trigger("load_progress",c)},g=this.entityModel.getResourcePath(0),h=new e(this.veroldEngine);h.loadFile(g,"json",d,f)},addTake:function(b){var c=a.clone(this.entityModel.get("payload.takes")),d={};return-1!==this.getTakeNames().indexOf(b.name)?(console.warn("Failed to add new take because its name is not unique."),!1):(c.push(b),d["payload.takes"]=c,this.set(d,{save:!0}),!0)},createAnimation:function(a,c){if(!a||!a.threeData||!c)return null;var d=this.getTake(c);if(!d||!this.threeData)return console.warn("Failed to create animation because take does not exist: "+c),null;var e,f,g=this.threeData.layers,h=this.threeData.curves,i=c+a.id+this.id,j=b.AnimationHandler.parse(a.threeData),k={},l=[];if(!d.layers||d.layers.length<=0)return null;d.layers.length>1&&console.warn("Take contains multiple layers, but we only support a single layer."),e=g[d.layers[0]],h=this._getCurvesForObjectsInLayer(j,e,h),f=this._getKeyframes(j,h,d.start,d.stop);for(var m=0;m<j.length;++m){var n=j[m],o=f[n.name];l.push({keys:o?o:[]})}return k.name=i,k.length=d.stop-d.start,k.fps=25,k.hierarchy=l,new b.Animation(a.threeData,k)},getTake:function(a){var b=this.entityModel.get("payload");for(var c in b.takes){var d=b.takes[c];if(d.name===a)return d}return null},getTakeNames:function(){var a=this.entityModel.get("payload"),b=[];for(var c in a.takes)b.push(a.takes[c].name);return b},getTakes:function(){var a=this.entityModel.get("payload");return a.takes},removeTake:function(b){var c=a.clone(this.entityModel.get("payload.takes")),d={};c.splice(b,1),d["payload.takes"]=c,this.set(d,{save:!0})},setTakeName:function(a,b){var c=this.getTakeNames().indexOf(b);if(-1!==c&&c!==a)return console.warn("Failed to set take name because it is not unique."),!1;var d={};return d["payload.takes."+a+".name"]=b,this.set(d,{save:!0}),!0},setTakeStart:function(a,b){var c={};c["payload.takes."+a+".start"]=Number(b),this.set(c,{save:!0})},setTakeStop:function(a,b){var c={};c["payload.takes."+a+".stop"]=Number(b),this.set(c,{save:!0})},unload:function(){d.prototype.unload.call(this),this.veroldEngine.trigger("animationUnloaded",this.id)}}),window.VAPI=window.VAPI||{},window.VAPI.AnimationAsset=f,f}),define("VeroldEngine/AssetRegistry/AnimationRegistry",["underscore","three","VeroldEngine/AssetRegistry/AnimationAsset"],function(a,b,c){var d=function(){this.assets=void 0};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.veroldEngine=a.veroldEngine},uninitialize:function(){for(var a in this.assets)this.assets[a].uninitialize(),delete this.assets[a];this.assets=void 0,this.veroldEngine=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a]},update:function(a){this.veroldEngine.isPrimaryEngine()&&b.AnimationHandler.animations.length&&(b.AnimationHandler.update(a),this.veroldEngine.needsRender=!0)},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("VeroldEngine/AssetRegistry/PoseAsset",["underscore","three","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Loaders/GenericLoader"],function(a,b,c,d){var e=function(){c.call(this)};return e.prototype=new c,a.extend(e.prototype,{initialize:function(a){c.prototype.initialize.call(this,a),this.trigger("load_dependencies",this),this.trigger("load_hierarchy",this),this.trigger("load_hierarchy_dependencies",this),this.trigger("load_components",this)},_loadThreeData:function(a,b){var c=this,e=function(d,e){return d?console.warn("Error loading pose",d):(c.threeData=e,c.applyPayloadSettings_loaded(a,b),void c.trigger("load_base",c))},f=function(){c.trigger("load_progress",c)},g=this.entityModel.getPath(),h=new d(this.veroldEngine);h.loadFile(g,"json",e,f)},applyPayloadSettings_loaded:function(){this.trigger("updated",this)},unload:function(){this.threeData&&console.warn("TODO: Need to unload three.js animation data here")}}),window.VAPI=window.VAPI||{},window.VAPI.PoseAsset=e,e}),define("VeroldEngine/AssetRegistry/PoseRegistry",["underscore","three","VeroldEngine/AssetRegistry/PoseAsset"],function(a,b,c){var d=function(){this.assets=void 0};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.veroldEngine=a.veroldEngine},uninitialize:function(){for(var a in this.assets)this.assets[a].uninitialize(),delete this.assets[a];this.assets=void 0,this.veroldEngine=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a],this.veroldEngine.trigger("poseDeleted",a)},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("json5",[],function(){var a="object"==typeof exports?exports:{};return a.parse=function(){var a,b,c,d,e={"'":"'",'"':'"',"\\":"\\","/":"/","\n":"",b:"\b",f:"\f",n:"\n",r:"\r",t:"	"},f=[" ","	","\r","\n","","\f","\xa0","\ufeff"],g=function(b){var d=new SyntaxError;throw d.message=b,d.at=a,d.text=c,d},h=function(d){return d&&d!==b&&g("Expected '"+d+"' instead of '"+b+"'"),b=c.charAt(a),a+=1,b},i=function(){return c.charAt(a)},j=function(){var a=b;for("_"!==b&&"$"!==b&&("a">b||b>"z")&&("A">b||b>"Z")&&g("Bad identifier");h()&&("_"===b||"$"===b||b>="a"&&"z">=b||b>="A"&&"Z">=b||b>="0"&&"9">=b);)a+=b;return a},k=function(){var a,c="",d="",e=10;if(("-"===b||"+"===b)&&(c=b,h(b)),"I"===b)return a=q(),("number"!=typeof a||isNaN(a))&&g("Unexpected word for number"),"-"===c?-a:a;if("N"===b)return a=q(),isNaN(a)||g("expected word to be NaN"),a;switch("0"===b&&(d+=b,h(),"x"===b||"X"===b?(d+=b,h(),e=16):b>="0"&&"9">=b&&g("Octal literal")),e){case 10:for(;b>="0"&&"9">=b;)d+=b,h();if("."===b)for(d+=".";h()&&b>="0"&&"9">=b;)d+=b;if("e"===b||"E"===b)for(d+=b,h(),("-"===b||"+"===b)&&(d+=b,h());b>="0"&&"9">=b;)d+=b,h();break;case 16:for(;b>="0"&&"9">=b||b>="A"&&"F">=b||b>="a"&&"f">=b;)d+=b,h()}return a="-"===c?-d:+d,isFinite(a)?a:void g("Bad number")},l=function(){var a,c,d,f,j="";if('"'===b||"'"===b)for(d=b;h();){if(b===d)return h(),j;if("\\"===b)if(h(),"u"===b){for(f=0,c=0;4>c&&(a=parseInt(h(),16),isFinite(a));c+=1)f=16*f+a;j+=String.fromCharCode(f)}else if("\r"===b)"\n"===i()&&h();else{if("string"!=typeof e[b])break;j+=e[b]}else{if("\n"===b)break;j+=b}}g("Bad string")},m=function(){"/"!==b&&g("Not an inline comment");do if(h(),"\n"===b||"\r"===b)return void h();while(b)},n=function(){"*"!==b&&g("Not a block comment");do for(h();"*"===b;)if(h("*"),"/"===b)return void h("/");while(b);g("Unterminated block comment")},o=function(){"/"!==b&&g("Not a comment"),h("/"),"/"===b?m():"*"===b?n():g("Unrecognized comment")},p=function(){for(;b;)if("/"===b)o();else{if(!(f.indexOf(b)>=0))return;h()}},q=function(){switch(b){case"t":return h("t"),h("r"),h("u"),h("e"),!0;case"f":return h("f"),h("a"),h("l"),h("s"),h("e"),!1;case"n":return h("n"),h("u"),h("l"),h("l"),null;case"I":return h("I"),h("n"),h("f"),h("i"),h("n"),h("i"),h("t"),h("y"),1/0;case"N":return h("N"),h("a"),h("N"),0/0}g("Unexpected '"+b+"'")},r=function(){var a=[];if("["===b)for(h("["),p();b;){if("]"===b)return h("]"),a;if(","===b?g("Missing array element"):a.push(d()),p(),","!==b)return h("]"),a;h(","),p()}g("Bad array")},s=function(){var a,c={};if("{"===b)for(h("{"),p();b;){if("}"===b)return h("}"),c;if(a='"'===b||"'"===b?l():j(),p(),h(":"),c[a]=d(),p(),","!==b)return h("}"),c;h(","),p()}g("Bad object")};return d=function(){switch(p(),b){case"{":return s();case"[":return r();case'"':case"'":return l();case"-":case"+":case".":return k();default:return b>="0"&&"9">=b?k():q()}},function(e,f){var h;return c=String(e),a=0,b=" ",h=d(),p(),b&&g("Syntax error"),"function"==typeof f?function i(a,b){var c,d,e=a[b];if(e&&"object"==typeof e)for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=i(e,c),void 0!==d?e[c]=d:delete e[c]);return f.call(a,b,e)}({"":h},""):h}}(),a.stringify=function(b,c,d){function e(a){return a>="a"&&"z">=a||a>="A"&&"Z">=a||a>="0"&&"9">=a||"_"===a||"$"===a}function f(a){return a>="a"&&"z">=a||a>="A"&&"Z">=a||"_"===a||"$"===a}function g(a){if("string"!=typeof a)return!1;if(!f(a[0]))return!1;for(var b=1,c=a.length;c>b;){if(!e(a[b]))return!1;b++}return!0}function h(a){return Array.isArray?Array.isArray(a):"[object Array]"===Object.prototype.toString.call(a)}function i(a){return"[object Date]"===Object.prototype.toString.call(a)}function j(a){for(var b=0;b<p.length;b++)if(p[b]===a)throw new TypeError("Converting circular structure to JSON")}function k(a,b,c){if(!a)return"";a.length>10&&(a=a.substring(0,10));for(var d=c?"":"\n",e=0;b>e;e++)d+=a;return d}function l(a){return q.lastIndex=0,q.test(a)?'"'+a.replace(q,function(a){var b=r[a];return"string"==typeof b?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function m(a,b,c){var d,e,f=n(a,b,c);switch(f&&!i(f)&&(f=f.valueOf()),typeof f){case"boolean":return f.toString();case"number":return isNaN(f)||!isFinite(f)?"null":f.toString();case"string":return l(f.toString());case"object":if(null===f)return"null";if(h(f)){j(f),d="[",p.push(f);for(var q=0;q<f.length;q++)e=m(f,q,!1),d+=k(o,p.length),d+=null===e||"undefined"==typeof e?"null":e,q<f.length-1?d+=",":o&&(d+="\n");p.pop(),d+=k(o,p.length,!0)+"]"}else{j(f),d="{";var r=!1;p.push(f);for(var s in f)if(f.hasOwnProperty(s)){var t=m(f,s,!1);if(c=!1,"undefined"!=typeof t&&null!==t){d+=k(o,p.length),r=!0;var b=g(s)?s:l(s);d+=b+":"+(o?" ":"")+t+","}}p.pop(),d=r?d.substring(0,d.length-1)+k(o,p.length)+"}":"{}"}return d;default:return void 0}}if(c&&"function"!=typeof c&&!h(c))throw new Error("Replacer must be a function or an array");var n=function(a,b,d){var e=a[b];return e&&e.toJSON&&"function"==typeof e.toJSON&&(e=e.toJSON()),"function"==typeof c?c.call(a,b,e):c?d||h(a)||c.indexOf(b)>=0?e:void 0:e};a.isWord=g,isNaN=isNaN||function(a){return"number"==typeof a&&a!==a};var o,p=[];d&&("string"==typeof d?o=d:"number"==typeof d&&d>=0&&(o=k(" ",d,!0)));var q=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,r={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},s={"":b};return void 0===b?n(s,"",!0):m(s,"",!0)},a}),function(a,b){"function"==typeof define&&define.amd?define("VeroldEngine/libs/esprima/esprima",["exports"],b):b("undefined"!=typeof exports?exports:a.esprima={})}(this,function(a){function b(a,b){if(!a)throw new Error("ASSERT: "+b)}function c(a){return a>=48&&57>=a}function d(a){return"0123456789abcdefABCDEF".indexOf(a)>=0}function e(a){return"01234567".indexOf(a)>=0}function f(a){return 32===a||9===a||11===a||12===a||160===a||a>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(a)>=0}function g(a){return 10===a||13===a||8232===a||8233===a}function h(a){return 36===a||95===a||a>=65&&90>=a||a>=97&&122>=a||92===a||a>=128&&pc.NonAsciiIdentifierStart.test(String.fromCharCode(a))}function i(a){return 36===a||95===a||a>=65&&90>=a||a>=97&&122>=a||a>=48&&57>=a||92===a||a>=128&&pc.NonAsciiIdentifierPart.test(String.fromCharCode(a))}function j(a){switch(a){case"class":case"enum":case"export":case"extends":case"import":case"super":return!0;default:return!1}}function k(a){switch(a){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function l(a){return"eval"===a||"arguments"===a}function m(a){if(rc&&k(a))return!0;switch(a.length){case 2:return"if"===a||"in"===a||"do"===a;case 3:return"var"===a||"for"===a||"new"===a||"try"===a||"let"===a;case 4:return"this"===a||"else"===a||"case"===a||"void"===a||"with"===a||"enum"===a;case 5:return"while"===a||"break"===a||"catch"===a||"throw"===a||"const"===a||"yield"===a||"class"===a||"super"===a;case 6:return"return"===a||"typeof"===a||"delete"===a||"switch"===a||"export"===a||"import"===a;case 7:return"default"===a||"finally"===a||"extends"===a;case 8:return"function"===a||"continue"===a||"debugger"===a;case 10:return"instanceof"===a;default:return!1}}function n(a,c,d,e,f){var g;b("number"==typeof d,"Comment must have valid position"),xc.lastCommentStart>=d||(xc.lastCommentStart=d,g={type:a,value:c},yc.range&&(g.range=[d,e]),yc.loc&&(g.loc=f),yc.comments.push(g),yc.attachComment&&(yc.leadingComments.push(g),yc.trailingComments.push(g)))}function o(a){var b,c,d,e;for(b=sc-a,c={start:{line:tc,column:sc-uc-a}};vc>sc;)if(d=qc.charCodeAt(sc),++sc,g(d))return yc.comments&&(e=qc.slice(b+a,sc-1),c.end={line:tc,column:sc-uc-1},n("Line",e,b,sc-1,c)),13===d&&10===qc.charCodeAt(sc)&&++sc,++tc,void(uc=sc);yc.comments&&(e=qc.slice(b+a,sc),c.end={line:tc,column:sc-uc},n("Line",e,b,sc,c))}function p(){var a,b,c,d;for(yc.comments&&(a=sc-2,b={start:{line:tc,column:sc-uc-2}});vc>sc;)if(c=qc.charCodeAt(sc),g(c))13===c&&10===qc.charCodeAt(sc+1)&&++sc,++tc,++sc,uc=sc,sc>=vc&&S({},oc.UnexpectedToken,"ILLEGAL");else if(42===c){if(47===qc.charCodeAt(sc+1))return++sc,++sc,void(yc.comments&&(d=qc.slice(a+2,sc-2),b.end={line:tc,column:sc-uc},n("Block",d,a,sc,b)));++sc}else++sc;S({},oc.UnexpectedToken,"ILLEGAL")}function q(){var a,b;for(b=0===sc;vc>sc;)if(a=qc.charCodeAt(sc),f(a))++sc;else if(g(a))++sc,13===a&&10===qc.charCodeAt(sc)&&++sc,++tc,uc=sc,b=!0;else if(47===a)if(a=qc.charCodeAt(sc+1),47===a)++sc,++sc,o(2),b=!0;else{if(42!==a)break;++sc,++sc,p()}else if(b&&45===a){if(45!==qc.charCodeAt(sc+1)||62!==qc.charCodeAt(sc+2))break;sc+=3,o(3)}else{if(60!==a)break;if("!--"!==qc.slice(sc+1,sc+4))break;++sc,++sc,++sc,++sc,o(4)}}function r(a){var b,c,e,f=0;for(c="u"===a?4:2,b=0;c>b;++b){if(!(vc>sc&&d(qc[sc])))return"";e=qc[sc++],f=16*f+"0123456789abcdef".indexOf(e.toLowerCase())}return String.fromCharCode(f)}function s(){var a,b,c,e;for(a=qc[sc],b=0,"}"===a&&S({},oc.UnexpectedToken,"ILLEGAL");vc>sc&&(a=qc[sc++],d(a));)b=16*b+"0123456789abcdef".indexOf(a.toLowerCase());return(b>1114111||"}"!==a)&&S({},oc.UnexpectedToken,"ILLEGAL"),65535>=b?String.fromCharCode(b):(c=(b-65536>>10)+55296,e=(b-65536&1023)+56320,String.fromCharCode(c,e))}function t(){var a,b;for(a=qc.charCodeAt(sc++),b=String.fromCharCode(a),92===a&&(117!==qc.charCodeAt(sc)&&S({},oc.UnexpectedToken,"ILLEGAL"),++sc,a=r("u"),a&&"\\"!==a&&h(a.charCodeAt(0))||S({},oc.UnexpectedToken,"ILLEGAL"),b=a);vc>sc&&(a=qc.charCodeAt(sc),i(a));)++sc,b+=String.fromCharCode(a),92===a&&(b=b.substr(0,b.length-1),117!==qc.charCodeAt(sc)&&S({},oc.UnexpectedToken,"ILLEGAL"),++sc,a=r("u"),a&&"\\"!==a&&i(a.charCodeAt(0))||S({},oc.UnexpectedToken,"ILLEGAL"),b+=a);return b}function u(){var a,b;for(a=sc++;vc>sc;){if(b=qc.charCodeAt(sc),92===b)return sc=a,t();if(!i(b))break;++sc}return qc.slice(a,sc)}function v(){var a,b,c;return a=sc,b=92===qc.charCodeAt(sc)?t():u(),c=1===b.length?ic.Identifier:m(b)?ic.Keyword:"null"===b?ic.NullLiteral:"true"===b||"false"===b?ic.BooleanLiteral:ic.Identifier,{type:c,value:b,lineNumber:tc,lineStart:uc,start:a,end:sc}}function w(){var a,b,c,d,e=sc,f=qc.charCodeAt(sc),g=qc[sc];switch(f){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++sc,yc.tokenize&&(40===f?yc.openParenToken=yc.tokens.length:123===f&&(yc.openCurlyToken=yc.tokens.length)),{type:ic.Punctuator,value:String.fromCharCode(f),lineNumber:tc,lineStart:uc,start:e,end:sc};default:if(a=qc.charCodeAt(sc+1),61===a)switch(f){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return sc+=2,{type:ic.Punctuator,value:String.fromCharCode(f)+String.fromCharCode(a),lineNumber:tc,lineStart:uc,start:e,end:sc};case 33:case 61:return sc+=2,61===qc.charCodeAt(sc)&&++sc,{type:ic.Punctuator,value:qc.slice(e,sc),lineNumber:tc,lineStart:uc,start:e,end:sc}}}return d=qc.substr(sc,4),">>>="===d?(sc+=4,{type:ic.Punctuator,value:d,lineNumber:tc,lineStart:uc,start:e,end:sc}):(c=d.substr(0,3),">>>"===c||"<<="===c||">>="===c?(sc+=3,{type:ic.Punctuator,value:c,lineNumber:tc,lineStart:uc,start:e,end:sc}):(b=c.substr(0,2),g===b[1]&&"+-<>&|".indexOf(g)>=0||"=>"===b?(sc+=2,{type:ic.Punctuator,value:b,lineNumber:tc,lineStart:uc,start:e,end:sc}):"<>=!+-*%&|^/".indexOf(g)>=0?(++sc,{type:ic.Punctuator,value:g,lineNumber:tc,lineStart:uc,start:e,end:sc}):void S({},oc.UnexpectedToken,"ILLEGAL")))}function x(a){for(var b="";vc>sc&&d(qc[sc]);)b+=qc[sc++];return 0===b.length&&S({},oc.UnexpectedToken,"ILLEGAL"),h(qc.charCodeAt(sc))&&S({},oc.UnexpectedToken,"ILLEGAL"),{type:ic.NumericLiteral,value:parseInt("0x"+b,16),lineNumber:tc,lineStart:uc,start:a,end:sc}}function y(a){for(var b="0"+qc[sc++];vc>sc&&e(qc[sc]);)b+=qc[sc++];return(h(qc.charCodeAt(sc))||c(qc.charCodeAt(sc)))&&S({},oc.UnexpectedToken,"ILLEGAL"),{type:ic.NumericLiteral,value:parseInt(b,8),octal:!0,lineNumber:tc,lineStart:uc,start:a,end:sc}}function z(){var a,d,f;if(f=qc[sc],b(c(f.charCodeAt(0))||"."===f,"Numeric literal must start with a decimal digit or a decimal point"),d=sc,a="","."!==f){if(a=qc[sc++],f=qc[sc],"0"===a){if("x"===f||"X"===f)return++sc,x(d);if(e(f))return y(d);f&&c(f.charCodeAt(0))&&S({},oc.UnexpectedToken,"ILLEGAL")}for(;c(qc.charCodeAt(sc));)a+=qc[sc++];f=qc[sc]}if("."===f){for(a+=qc[sc++];c(qc.charCodeAt(sc));)a+=qc[sc++];f=qc[sc]}if("e"===f||"E"===f)if(a+=qc[sc++],f=qc[sc],("+"===f||"-"===f)&&(a+=qc[sc++]),c(qc.charCodeAt(sc)))for(;c(qc.charCodeAt(sc));)a+=qc[sc++];else S({},oc.UnexpectedToken,"ILLEGAL");return h(qc.charCodeAt(sc))&&S({},oc.UnexpectedToken,"ILLEGAL"),{type:ic.NumericLiteral,value:parseFloat(a),lineNumber:tc,lineStart:uc,start:d,end:sc}}function A(){var a,c,d,f,h,i,j,k,l="",m=!1;for(j=tc,k=uc,a=qc[sc],b("'"===a||'"'===a,"String literal must starts with a quote"),c=sc,++sc;vc>sc;){if(d=qc[sc++],d===a){a="";break}if("\\"===d)if(d=qc[sc++],d&&g(d.charCodeAt(0)))++tc,"\r"===d&&"\n"===qc[sc]&&++sc,uc=sc;else switch(d){case"u":case"x":"{"===qc[sc]?(++sc,l+=s()):(i=sc,h=r(d),h?l+=h:(sc=i,l+=d));break;case"n":l+="\n";break;case"r":l+="\r";break;case"t":l+="	";break;case"b":l+="\b";break;case"f":l+="\f";break;case"v":l+="";break;default:e(d)?(f="01234567".indexOf(d),0!==f&&(m=!0),vc>sc&&e(qc[sc])&&(m=!0,f=8*f+"01234567".indexOf(qc[sc++]),"0123".indexOf(d)>=0&&vc>sc&&e(qc[sc])&&(f=8*f+"01234567".indexOf(qc[sc++]))),l+=String.fromCharCode(f)):l+=d}else{if(g(d.charCodeAt(0)))break;l+=d}}return""!==a&&S({},oc.UnexpectedToken,"ILLEGAL"),{type:ic.StringLiteral,value:l,octal:m,startLineNumber:j,startLineStart:k,lineNumber:tc,lineStart:uc,start:c,end:sc}}function B(a,b){var c,d=a;b.indexOf("u")>=0&&(d=d.replace(/\\u\{([0-9a-fA-F]{5,6})\}/g,"x").replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"x"));try{c=new RegExp(d)}catch(e){S({},oc.InvalidRegExp)}try{return new RegExp(a,b)}catch(f){return null}}function C(){var a,c,d,e,f;for(a=qc[sc],b("/"===a,"Regular expression literal must start with a slash"),c=qc[sc++],d=!1,e=!1;vc>sc;)if(a=qc[sc++],c+=a,"\\"===a)a=qc[sc++],g(a.charCodeAt(0))&&S({},oc.UnterminatedRegExp),c+=a;else if(g(a.charCodeAt(0)))S({},oc.UnterminatedRegExp);else if(d)"]"===a&&(d=!1);else{if("/"===a){e=!0;break}"["===a&&(d=!0)}return e||S({},oc.UnterminatedRegExp),f=c.substr(1,c.length-2),{value:f,literal:c}}function D(){var a,b,c,d;for(b="",c="";vc>sc&&(a=qc[sc],i(a.charCodeAt(0)));)if(++sc,"\\"===a&&vc>sc)if(a=qc[sc],"u"===a){if(++sc,d=sc,a=r("u"))for(c+=a,b+="\\u";sc>d;++d)b+=qc[d];else sc=d,c+="u",b+="\\u";T({},oc.UnexpectedToken,"ILLEGAL")}else b+="\\",T({},oc.UnexpectedToken,"ILLEGAL");else c+=a,b+=a;return{value:c,literal:b}}function E(){var a,b,c,d;return wc=null,q(),a=sc,b=C(),c=D(),d=B(b.value,c.value),yc.tokenize?{type:ic.RegularExpression,value:d,regex:{pattern:b.value,flags:c.value},lineNumber:tc,lineStart:uc,start:a,end:sc}:{literal:b.literal+c.literal,value:d,regex:{pattern:b.value,flags:c.value},start:a,end:sc}}function F(){var a,b,c,d;return q(),a=sc,b={start:{line:tc,column:sc-uc}},c=E(),b.end={line:tc,column:sc-uc},yc.tokenize||(yc.tokens.length>0&&(d=yc.tokens[yc.tokens.length-1],d.range[0]===a&&"Punctuator"===d.type&&("/"===d.value||"/="===d.value)&&yc.tokens.pop()),yc.tokens.push({type:"RegularExpression",value:c.literal,regex:c.regex,range:[a,sc],loc:b})),c}function G(a){return a.type===ic.Identifier||a.type===ic.Keyword||a.type===ic.BooleanLiteral||a.type===ic.NullLiteral}function H(){var a,b;if(a=yc.tokens[yc.tokens.length-1],!a)return F();if("Punctuator"===a.type){if("]"===a.value)return w();if(")"===a.value)return b=yc.tokens[yc.openParenToken-1],!b||"Keyword"!==b.type||"if"!==b.value&&"while"!==b.value&&"for"!==b.value&&"with"!==b.value?w():F();if("}"===a.value){if(yc.tokens[yc.openCurlyToken-3]&&"Keyword"===yc.tokens[yc.openCurlyToken-3].type){if(b=yc.tokens[yc.openCurlyToken-4],!b)return w()}else{if(!yc.tokens[yc.openCurlyToken-4]||"Keyword"!==yc.tokens[yc.openCurlyToken-4].type)return w();if(b=yc.tokens[yc.openCurlyToken-5],!b)return F()}return kc.indexOf(b.value)>=0?w():F()}return F()}return"Keyword"===a.type?F():w()}function I(){var a;return q(),sc>=vc?{type:ic.EOF,lineNumber:tc,lineStart:uc,start:sc,end:sc}:(a=qc.charCodeAt(sc),h(a)?v():40===a||41===a||59===a?w():39===a||34===a?A():46===a?c(qc.charCodeAt(sc+1))?z():w():c(a)?z():yc.tokenize&&47===a?H():w())}function J(){var a,b,c,d;return q(),a={start:{line:tc,column:sc-uc}},b=I(),a.end={line:tc,column:sc-uc},b.type!==ic.EOF&&(c=qc.slice(b.start,b.end),d={type:jc[b.type],value:c,range:[b.start,b.end],loc:a},b.regex&&(d.regex={pattern:b.regex.pattern,flags:b.regex.flags}),yc.tokens.push(d)),b}function K(){var a;return a=wc,sc=a.end,tc=a.lineNumber,uc=a.lineStart,wc="undefined"!=typeof yc.tokens?J():I(),sc=a.end,tc=a.lineNumber,uc=a.lineStart,a}function L(){var a,b,c;a=sc,b=tc,c=uc,wc="undefined"!=typeof yc.tokens?J():I(),sc=a,tc=b,uc=c}function M(){this.line=tc,this.column=sc-uc}function N(){this.start=new M,this.end=null}function O(a){this.start=a.type===ic.StringLiteral?{line:a.startLineNumber,column:a.start-a.startLineStart}:{line:a.lineNumber,column:a.start-a.lineStart},this.end=null}function P(){sc=wc.start,wc.type===ic.StringLiteral?(tc=wc.startLineNumber,uc=wc.startLineStart):(tc=wc.lineNumber,uc=wc.lineStart),yc.range&&(this.range=[sc,0]),yc.loc&&(this.loc=new N)}function Q(a){yc.range&&(this.range=[a.start,0]),yc.loc&&(this.loc=new O(a))}function R(){var a,b,c,d;return a=sc,b=tc,c=uc,q(),d=tc!==b,sc=a,tc=b,uc=c,d}function S(a,c){var d,e=Array.prototype.slice.call(arguments,2),f=c.replace(/%(\d)/g,function(a,c){return b(c<e.length,"Message reference must be in range"),e[c]});throw"number"==typeof a.lineNumber?(d=new Error("Line "+a.lineNumber+": "+f),d.index=a.start,d.lineNumber=a.lineNumber,d.column=a.start-uc+1):(d=new Error("Line "+tc+": "+f),d.index=sc,d.lineNumber=tc,d.column=sc-uc+1),d.description=f,d}function T(){try{S.apply(null,arguments)}catch(a){if(!yc.errors)throw a;yc.errors.push(a)}}function U(a){if(a.type===ic.EOF&&S(a,oc.UnexpectedEOS),a.type===ic.NumericLiteral&&S(a,oc.UnexpectedNumber),a.type===ic.StringLiteral&&S(a,oc.UnexpectedString),a.type===ic.Identifier&&S(a,oc.UnexpectedIdentifier),a.type===ic.Keyword){if(j(a.value))S(a,oc.UnexpectedReserved);else if(rc&&k(a.value))return void T(a,oc.StrictReservedWord);S(a,oc.UnexpectedToken,a.value)}S(a,oc.UnexpectedToken,a.value)}function V(a){var b=K();(b.type!==ic.Punctuator||b.value!==a)&&U(b)}function W(a){if(yc.errors){var b=wc;b.type!==ic.Punctuator&&b.value!==a?T(b,oc.UnexpectedToken,b.value):K()}else V(a)}function X(a){var b=K();(b.type!==ic.Keyword||b.value!==a)&&U(b)}function Y(a){return wc.type===ic.Punctuator&&wc.value===a}function Z(a){return wc.type===ic.Keyword&&wc.value===a}function $(){var a;return wc.type!==ic.Punctuator?!1:(a=wc.value,"="===a||"*="===a||"/="===a||"%="===a||"+="===a||"-="===a||"<<="===a||">>="===a||">>>="===a||"&="===a||"^="===a||"|="===a)}function _(){var a;return 59===qc.charCodeAt(sc)||Y(";")?void K():(a=tc,q(),void(tc===a&&(wc.type===ic.EOF||Y("}")||U(wc))))}function ab(a){return a.type===lc.Identifier||a.type===lc.MemberExpression
}function bb(){var a=[],b=new P;for(V("[");!Y("]");)Y(",")?(K(),a.push(null)):(a.push(xb()),Y("]")||V(","));return K(),b.finishArrayExpression(a)}function cb(a,b){var c,d,e=new P;return c=rc,d=Yb(),b&&rc&&l(a[0].name)&&T(b,oc.StrictParamName),rc=c,e.finishFunctionExpression(null,a,[],d)}function db(){var a,b=new P;return a=K(),a.type===ic.StringLiteral||a.type===ic.NumericLiteral?(rc&&a.octal&&T(a,oc.StrictOctalLiteral),b.finishLiteral(a)):b.finishIdentifier(a.value)}function eb(){var a,b,c,d,e,f=new P;return a=wc,a.type===ic.Identifier?(c=db(),"get"!==a.value||Y(":")?"set"!==a.value||Y(":")?(V(":"),d=xb(),f.finishProperty("init",c,d)):(b=db(),V("("),a=wc,a.type!==ic.Identifier?(V(")"),T(a,oc.UnexpectedToken,a.value),d=cb([])):(e=[Bb()],V(")"),d=cb(e,a)),f.finishProperty("set",b,d)):(b=db(),V("("),V(")"),d=cb([]),f.finishProperty("get",b,d))):a.type!==ic.EOF&&a.type!==ic.Punctuator?(b=db(),V(":"),d=xb(),f.finishProperty("init",b,d)):void U(a)}function fb(){var a,b,c,d,e=[],f={},g=String,h=new P;for(V("{");!Y("}");)a=eb(),b=a.key.type===lc.Identifier?a.key.name:g(a.key.value),d="init"===a.kind?nc.Data:"get"===a.kind?nc.Get:nc.Set,c="$"+b,Object.prototype.hasOwnProperty.call(f,c)?(f[c]===nc.Data?rc&&d===nc.Data?T({},oc.StrictDuplicateProperty):d!==nc.Data&&T({},oc.AccessorDataProperty):d===nc.Data?T({},oc.AccessorDataProperty):f[c]&d&&T({},oc.AccessorGetSet),f[c]|=d):f[c]=d,e.push(a),Y("}")||W(",");return V("}"),h.finishObjectExpression(e)}function gb(){var a;return V("("),Y(")")?(K(),mc.ArrowParameterPlaceHolder):(++xc.parenthesisCount,a=yb(),V(")"),a)}function hb(){var a,b,c,d;if(Y("("))return gb();if(Y("["))return bb();if(Y("{"))return fb();if(a=wc.type,d=new P,a===ic.Identifier)c=d.finishIdentifier(K().value);else if(a===ic.StringLiteral||a===ic.NumericLiteral)rc&&wc.octal&&T(wc,oc.StrictOctalLiteral),c=d.finishLiteral(K());else if(a===ic.Keyword){if(Z("function"))return bc();Z("this")?(K(),c=d.finishThisExpression()):U(K())}else a===ic.BooleanLiteral?(b=K(),b.value="true"===b.value,c=d.finishLiteral(b)):a===ic.NullLiteral?(b=K(),b.value=null,c=d.finishLiteral(b)):Y("/")||Y("/=")?(c=d.finishLiteral("undefined"!=typeof yc.tokens?F():E()),L()):U(K());return c}function ib(){var a=[];if(V("("),!Y(")"))for(;vc>sc&&(a.push(xb()),!Y(")"));)W(",");return V(")"),a}function jb(){var a,b=new P;return a=K(),G(a)||U(a),b.finishIdentifier(a.value)}function kb(){return V("."),jb()}function lb(){var a;return V("["),a=yb(),V("]"),a}function mb(){var a,b,c=new P;return X("new"),a=ob(),b=Y("(")?ib():[],c.finishNewExpression(a,b)}function nb(){var a,b,c,d,e=xc.allowIn;for(d=wc,xc.allowIn=!0,a=Z("new")?mb():hb();;)if(Y("."))c=kb(),a=new Q(d).finishMemberExpression(".",a,c);else if(Y("("))b=ib(),a=new Q(d).finishCallExpression(a,b);else{if(!Y("["))break;c=lb(),a=new Q(d).finishMemberExpression("[",a,c)}return xc.allowIn=e,a}function ob(){var a,c,d;for(b(xc.allowIn,"callee of new expression always allow in keyword."),d=wc,a=Z("new")?mb():hb();;)if(Y("["))c=lb(),a=new Q(d).finishMemberExpression("[",a,c);else{if(!Y("."))break;c=kb(),a=new Q(d).finishMemberExpression(".",a,c)}return a}function pb(){var a,b,c=wc;return a=nb(),wc.type===ic.Punctuator&&(!Y("++")&&!Y("--")||R()||(rc&&a.type===lc.Identifier&&l(a.name)&&T({},oc.StrictLHSPostfix),ab(a)||T({},oc.InvalidLHSInAssignment),b=K(),a=new Q(c).finishPostfixExpression(b.value,a))),a}function qb(){var a,b,c;return wc.type!==ic.Punctuator&&wc.type!==ic.Keyword?b=pb():Y("++")||Y("--")?(c=wc,a=K(),b=qb(),rc&&b.type===lc.Identifier&&l(b.name)&&T({},oc.StrictLHSPrefix),ab(b)||T({},oc.InvalidLHSInAssignment),b=new Q(c).finishUnaryExpression(a.value,b)):Y("+")||Y("-")||Y("~")||Y("!")?(c=wc,a=K(),b=qb(),b=new Q(c).finishUnaryExpression(a.value,b)):Z("delete")||Z("void")||Z("typeof")?(c=wc,a=K(),b=qb(),b=new Q(c).finishUnaryExpression(a.value,b),rc&&"delete"===b.operator&&b.argument.type===lc.Identifier&&T({},oc.StrictDelete)):b=pb(),b}function rb(a,b){var c=0;if(a.type!==ic.Punctuator&&a.type!==ic.Keyword)return 0;switch(a.value){case"||":c=1;break;case"&&":c=2;break;case"|":c=3;break;case"^":c=4;break;case"&":c=5;break;case"==":case"!=":case"===":case"!==":c=6;break;case"<":case">":case"<=":case">=":case"instanceof":c=7;break;case"in":c=b?7:0;break;case"<<":case">>":case">>>":c=8;break;case"+":case"-":c=9;break;case"*":case"/":case"%":c=11}return c}function sb(){var a,b,c,d,e,f,g,h,i,j;if(a=wc,i=qb(),i===mc.ArrowParameterPlaceHolder)return i;if(d=wc,e=rb(d,xc.allowIn),0===e)return i;for(d.prec=e,K(),b=[a,wc],g=qb(),f=[i,d,g];(e=rb(wc,xc.allowIn))>0;){for(;f.length>2&&e<=f[f.length-2].prec;)g=f.pop(),h=f.pop().value,i=f.pop(),b.pop(),c=new Q(b[b.length-1]).finishBinaryExpression(h,i,g),f.push(c);d=K(),d.prec=e,f.push(d),b.push(wc),c=qb(),f.push(c)}for(j=f.length-1,c=f[j],b.pop();j>1;)c=new Q(b.pop()).finishBinaryExpression(f[j-1].value,f[j-2],c),j-=2;return c}function tb(){var a,b,c,d,e;return e=wc,a=sb(),a===mc.ArrowParameterPlaceHolder?a:(Y("?")&&(K(),b=xc.allowIn,xc.allowIn=!0,c=xb(),xc.allowIn=b,V(":"),d=xb(),a=new Q(e).finishConditionalExpression(a,c,d)),a)}function ub(){return Y("{")?Yb():xb()}function vb(a){var b,c,d,e,f,g,h,i;for(e=[],f=[],g=0,i=null,h={paramSet:{}},b=0,c=a.length;c>b;b+=1)if(d=a[b],d.type===lc.Identifier)e.push(d),f.push(null),Zb(h,d,d.name);else{if(d.type!==lc.AssignmentExpression)return null;e.push(d.left),f.push(d.right),++g,Zb(h,d.left,d.left.name)}return h.message===oc.StrictParamDupe&&S(rc?h.stricted:h.firstRestricted,h.message),0===g&&(f=[]),{params:e,defaults:f,rest:i,stricted:h.stricted,firstRestricted:h.firstRestricted,message:h.message}}function wb(a,b){var c,d;return V("=>"),c=rc,d=ub(),rc&&a.firstRestricted&&S(a.firstRestricted,a.message),rc&&a.stricted&&T(a.stricted,a.message),rc=c,b.finishArrowFunctionExpression(a.params,a.defaults,d,d.type!==lc.BlockStatement)}function xb(){var a,b,c,d,e,f;return a=xc.parenthesisCount,f=wc,b=wc,c=tb(),c!==mc.ArrowParameterPlaceHolder&&!Y("=>")||xc.parenthesisCount!==a&&xc.parenthesisCount!==a+1||(c.type===lc.Identifier?e=vb([c]):c.type===lc.AssignmentExpression?e=vb([c]):c.type===lc.SequenceExpression?e=vb(c.expressions):c===mc.ArrowParameterPlaceHolder&&(e=vb([])),!e)?($()&&(ab(c)||T({},oc.InvalidLHSInAssignment),rc&&c.type===lc.Identifier&&l(c.name)&&T(b,oc.StrictLHSAssignment),b=K(),d=xb(),c=new Q(f).finishAssignmentExpression(b.value,c,d)),c):wb(e,new Q(f))}function yb(){var a,b,c=wc;if(a=xb(),Y(",")){for(b=[a];vc>sc&&Y(",");)K(),b.push(xb());a=new Q(c).finishSequenceExpression(b)}return a}function zb(){for(var a,b=[];vc>sc&&!Y("}")&&(a=cc(),"undefined"!=typeof a);)b.push(a);return b}function Ab(){var a,b=new P;return V("{"),a=zb(),V("}"),b.finishBlockStatement(a)}function Bb(){var a,b=new P;return a=K(),a.type!==ic.Identifier&&U(a),b.finishIdentifier(a.value)}function Cb(a){var b,c=null,d=new P;return b=Bb(),rc&&l(b.name)&&T({},oc.StrictVarName),"const"===a?(V("="),c=xb()):Y("=")&&(K(),c=xb()),d.finishVariableDeclarator(b,c)}function Db(a){var b=[];do{if(b.push(Cb(a)),!Y(","))break;K()}while(vc>sc);return b}function Eb(a){var b;return X("var"),b=Db(),_(),a.finishVariableDeclaration(b,"var")}function Fb(a){var b,c=new P;return X(a),b=Db(a),_(),c.finishVariableDeclaration(b,a)}function Gb(){var a=new P;return V(";"),a.finishEmptyStatement()}function Hb(a){var b=yb();return _(),a.finishExpressionStatement(b)}function Ib(a){var b,c,d;return X("if"),V("("),b=yb(),V(")"),c=Xb(),Z("else")?(K(),d=Xb()):d=null,a.finishIfStatement(b,c,d)}function Jb(a){var b,c,d;return X("do"),d=xc.inIteration,xc.inIteration=!0,b=Xb(),xc.inIteration=d,X("while"),V("("),c=yb(),V(")"),Y(";")&&K(),a.finishDoWhileStatement(b,c)}function Kb(a){var b,c,d;return X("while"),V("("),b=yb(),V(")"),d=xc.inIteration,xc.inIteration=!0,c=Xb(),xc.inIteration=d,a.finishWhileStatement(b,c)}function Lb(){var a,b,c=new P;return a=K(),b=Db(),c.finishVariableDeclaration(b,a.value)}function Mb(a){var b,c,d,e,f,g,h,i=xc.allowIn;return b=c=d=null,X("for"),V("("),Y(";")?K():(Z("var")||Z("let")?(xc.allowIn=!1,b=Lb(),xc.allowIn=i,1===b.declarations.length&&Z("in")&&(K(),e=b,f=yb(),b=null)):(xc.allowIn=!1,b=yb(),xc.allowIn=i,Z("in")&&(ab(b)||T({},oc.InvalidLHSInForIn),K(),e=b,f=yb(),b=null)),"undefined"==typeof e&&V(";")),"undefined"==typeof e&&(Y(";")||(c=yb()),V(";"),Y(")")||(d=yb())),V(")"),h=xc.inIteration,xc.inIteration=!0,g=Xb(),xc.inIteration=h,"undefined"==typeof e?a.finishForStatement(b,c,d,g):a.finishForInStatement(e,f,g)}function Nb(a){var b,c=null;return X("continue"),59===qc.charCodeAt(sc)?(K(),xc.inIteration||S({},oc.IllegalContinue),a.finishContinueStatement(null)):R()?(xc.inIteration||S({},oc.IllegalContinue),a.finishContinueStatement(null)):(wc.type===ic.Identifier&&(c=Bb(),b="$"+c.name,Object.prototype.hasOwnProperty.call(xc.labelSet,b)||S({},oc.UnknownLabel,c.name)),_(),null!==c||xc.inIteration||S({},oc.IllegalContinue),a.finishContinueStatement(c))}function Ob(a){var b,c=null;return X("break"),59===qc.charCodeAt(sc)?(K(),xc.inIteration||xc.inSwitch||S({},oc.IllegalBreak),a.finishBreakStatement(null)):R()?(xc.inIteration||xc.inSwitch||S({},oc.IllegalBreak),a.finishBreakStatement(null)):(wc.type===ic.Identifier&&(c=Bb(),b="$"+c.name,Object.prototype.hasOwnProperty.call(xc.labelSet,b)||S({},oc.UnknownLabel,c.name)),_(),null!==c||xc.inIteration||xc.inSwitch||S({},oc.IllegalBreak),a.finishBreakStatement(c))}function Pb(a){var b=null;return X("return"),xc.inFunctionBody||T({},oc.IllegalReturn),32===qc.charCodeAt(sc)&&h(qc.charCodeAt(sc+1))?(b=yb(),_(),a.finishReturnStatement(b)):R()?a.finishReturnStatement(null):(Y(";")||Y("}")||wc.type===ic.EOF||(b=yb()),_(),a.finishReturnStatement(b))}function Qb(a){var b,c;return rc&&(q(),T({},oc.StrictModeWith)),X("with"),V("("),b=yb(),V(")"),c=Xb(),a.finishWithStatement(b,c)}function Rb(){var a,b,c=[],d=new P;for(Z("default")?(K(),a=null):(X("case"),a=yb()),V(":");vc>sc&&!(Y("}")||Z("default")||Z("case"));)b=Xb(),c.push(b);return d.finishSwitchCase(a,c)}function Sb(a){var b,c,d,e,f;if(X("switch"),V("("),b=yb(),V(")"),V("{"),c=[],Y("}"))return K(),a.finishSwitchStatement(b,c);for(e=xc.inSwitch,xc.inSwitch=!0,f=!1;vc>sc&&!Y("}");)d=Rb(),null===d.test&&(f&&S({},oc.MultipleDefaultsInSwitch),f=!0),c.push(d);return xc.inSwitch=e,V("}"),a.finishSwitchStatement(b,c)}function Tb(a){var b;return X("throw"),R()&&S({},oc.NewlineAfterThrow),b=yb(),_(),a.finishThrowStatement(b)}function Ub(){var a,b,c=new P;return X("catch"),V("("),Y(")")&&U(wc),a=Bb(),rc&&l(a.name)&&T({},oc.StrictCatchVariable),V(")"),b=Ab(),c.finishCatchClause(a,b)}function Vb(a){var b,c=[],d=null;return X("try"),b=Ab(),Z("catch")&&c.push(Ub()),Z("finally")&&(K(),d=Ab()),0!==c.length||d||S({},oc.NoCatchOrFinally),a.finishTryStatement(b,[],c,d)}function Wb(a){return X("debugger"),_(),a.finishDebuggerStatement()}function Xb(){var a,b,c,d,e=wc.type;if(e===ic.EOF&&U(wc),e===ic.Punctuator&&"{"===wc.value)return Ab();if(d=new P,e===ic.Punctuator)switch(wc.value){case";":return Gb(d);case"(":return Hb(d)}else if(e===ic.Keyword)switch(wc.value){case"break":return Ob(d);case"continue":return Nb(d);case"debugger":return Wb(d);case"do":return Jb(d);case"for":return Mb(d);case"function":return ac(d);case"if":return Ib(d);case"return":return Pb(d);case"switch":return Sb(d);case"throw":return Tb(d);case"try":return Vb(d);case"var":return Eb(d);case"while":return Kb(d);case"with":return Qb(d)}return a=yb(),a.type===lc.Identifier&&Y(":")?(K(),c="$"+a.name,Object.prototype.hasOwnProperty.call(xc.labelSet,c)&&S({},oc.Redeclaration,"Label",a.name),xc.labelSet[c]=!0,b=Xb(),delete xc.labelSet[c],d.finishLabeledStatement(a,b)):(_(),d.finishExpressionStatement(a))}function Yb(){var a,b,c,d,e,f,g,h,i,j=[],k=new P;for(V("{");vc>sc&&wc.type===ic.StringLiteral&&(b=wc,a=cc(),j.push(a),a.expression.type===lc.Literal);)c=qc.slice(b.start+1,b.end-1),"use strict"===c?(rc=!0,d&&T(d,oc.StrictOctalLiteral)):!d&&b.octal&&(d=b);for(e=xc.labelSet,f=xc.inIteration,g=xc.inSwitch,h=xc.inFunctionBody,i=xc.parenthesizedCount,xc.labelSet={},xc.inIteration=!1,xc.inSwitch=!1,xc.inFunctionBody=!0,xc.parenthesizedCount=0;vc>sc&&!Y("}")&&(a=cc(),"undefined"!=typeof a);)j.push(a);return V("}"),xc.labelSet=e,xc.inIteration=f,xc.inSwitch=g,xc.inFunctionBody=h,xc.parenthesizedCount=i,k.finishBlockStatement(j)}function Zb(a,b,c){var d="$"+c;rc?(l(c)&&(a.stricted=b,a.message=oc.StrictParamName),Object.prototype.hasOwnProperty.call(a.paramSet,d)&&(a.stricted=b,a.message=oc.StrictParamDupe)):a.firstRestricted||(l(c)?(a.firstRestricted=b,a.message=oc.StrictParamName):k(c)?(a.firstRestricted=b,a.message=oc.StrictReservedWord):Object.prototype.hasOwnProperty.call(a.paramSet,d)&&(a.firstRestricted=b,a.message=oc.StrictParamDupe)),a.paramSet[d]=!0}function $b(a){var b,c,d;return b=wc,c=Bb(),Zb(a,b,b.value),Y("=")&&(K(),d=xb(),++a.defaultCount),a.params.push(c),a.defaults.push(d),!Y(")")}function _b(a){var b;if(b={params:[],defaultCount:0,defaults:[],firstRestricted:a},V("("),!Y(")"))for(b.paramSet={};vc>sc&&$b(b);)V(",");return V(")"),0===b.defaultCount&&(b.defaults=[]),{params:b.params,defaults:b.defaults,stricted:b.stricted,firstRestricted:b.firstRestricted,message:b.message}}function ac(){var a,b,c,d,e,f,g,h,i=[],j=[],m=new P;return X("function"),c=wc,a=Bb(),rc?l(c.value)&&T(c,oc.StrictFunctionName):l(c.value)?(f=c,g=oc.StrictFunctionName):k(c.value)&&(f=c,g=oc.StrictReservedWord),e=_b(f),i=e.params,j=e.defaults,d=e.stricted,f=e.firstRestricted,e.message&&(g=e.message),h=rc,b=Yb(),rc&&f&&S(f,g),rc&&d&&T(d,g),rc=h,m.finishFunctionDeclaration(a,i,j,b)}function bc(){var a,b,c,d,e,f,g,h=null,i=[],j=[],m=new P;return X("function"),Y("(")||(a=wc,h=Bb(),rc?l(a.value)&&T(a,oc.StrictFunctionName):l(a.value)?(c=a,d=oc.StrictFunctionName):k(a.value)&&(c=a,d=oc.StrictReservedWord)),e=_b(c),i=e.params,j=e.defaults,b=e.stricted,c=e.firstRestricted,e.message&&(d=e.message),g=rc,f=Yb(),rc&&c&&S(c,d),rc&&b&&T(b,d),rc=g,m.finishFunctionExpression(h,i,j,f)}function cc(){if(wc.type===ic.Keyword)switch(wc.value){case"const":case"let":return Fb(wc.value);case"function":return ac();default:return Xb()}return wc.type!==ic.EOF?Xb():void 0}function dc(){for(var a,b,c,d,e=[];vc>sc&&(b=wc,b.type===ic.StringLiteral)&&(a=cc(),e.push(a),a.expression.type===lc.Literal);)c=qc.slice(b.start+1,b.end-1),"use strict"===c?(rc=!0,d&&T(d,oc.StrictOctalLiteral)):!d&&b.octal&&(d=b);for(;vc>sc&&(a=cc(),"undefined"!=typeof a);)e.push(a);return e}function ec(){var a,b;return q(),L(),b=new P,rc=!1,a=dc(),b.finishProgram(a)}function fc(){var a,b,c,d=[];for(a=0;a<yc.tokens.length;++a)b=yc.tokens[a],c={type:b.type,value:b.value},b.regex&&(c.regex={pattern:b.regex.pattern,flags:b.regex.flags}),yc.range&&(c.range=b.range),yc.loc&&(c.loc=b.loc),d.push(c);yc.tokens=d}function gc(a,b){var c,d;c=String,"string"==typeof a||a instanceof String||(a=c(a)),qc=a,sc=0,tc=qc.length>0?1:0,uc=0,vc=qc.length,wc=null,xc={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},yc={},b=b||{},b.tokens=!0,yc.tokens=[],yc.tokenize=!0,yc.openParenToken=-1,yc.openCurlyToken=-1,yc.range="boolean"==typeof b.range&&b.range,yc.loc="boolean"==typeof b.loc&&b.loc,"boolean"==typeof b.comment&&b.comment&&(yc.comments=[]),"boolean"==typeof b.tolerant&&b.tolerant&&(yc.errors=[]);try{if(L(),wc.type===ic.EOF)return yc.tokens;for(K();wc.type!==ic.EOF;)try{K()}catch(e){if(yc.errors){yc.errors.push(e);break}throw e}fc(),d=yc.tokens,"undefined"!=typeof yc.comments&&(d.comments=yc.comments),"undefined"!=typeof yc.errors&&(d.errors=yc.errors)}catch(f){throw f}finally{yc={}}return d}function hc(a,b){var c,d;d=String,"string"==typeof a||a instanceof String||(a=d(a)),qc=a,sc=0,tc=qc.length>0?1:0,uc=0,vc=qc.length,wc=null,xc={allowIn:!0,labelSet:{},parenthesisCount:0,inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},yc={},"undefined"!=typeof b&&(yc.range="boolean"==typeof b.range&&b.range,yc.loc="boolean"==typeof b.loc&&b.loc,yc.attachComment="boolean"==typeof b.attachComment&&b.attachComment,yc.loc&&null!==b.source&&void 0!==b.source&&(yc.source=d(b.source)),"boolean"==typeof b.tokens&&b.tokens&&(yc.tokens=[]),"boolean"==typeof b.comment&&b.comment&&(yc.comments=[]),"boolean"==typeof b.tolerant&&b.tolerant&&(yc.errors=[]),yc.attachComment&&(yc.range=!0,yc.comments=[],yc.bottomRightStack=[],yc.trailingComments=[],yc.leadingComments=[]));try{c=ec(),"undefined"!=typeof yc.comments&&(c.comments=yc.comments),"undefined"!=typeof yc.tokens&&(fc(),c.tokens=yc.tokens),"undefined"!=typeof yc.errors&&(c.errors=yc.errors)}catch(e){throw e}finally{yc={}}return c}var ic,jc,kc,lc,mc,nc,oc,pc,qc,rc,sc,tc,uc,vc,wc,xc,yc;ic={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9},jc={},jc[ic.BooleanLiteral]="Boolean",jc[ic.EOF]="<end>",jc[ic.Identifier]="Identifier",jc[ic.Keyword]="Keyword",jc[ic.NullLiteral]="Null",jc[ic.NumericLiteral]="Numeric",jc[ic.Punctuator]="Punctuator",jc[ic.StringLiteral]="String",jc[ic.RegularExpression]="RegularExpression",kc=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],lc={AssignmentExpression:"AssignmentExpression",ArrayExpression:"ArrayExpression",ArrowFunctionExpression:"ArrowFunctionExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",Program:"Program",Property:"Property",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},mc={ArrowParameterPlaceHolder:{type:"ArrowParameterPlaceHolder"}},nc={Data:1,Get:2,Set:4},oc={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictDuplicateProperty:"Duplicate data property in object literal not allowed in strict mode",AccessorDataProperty:"Object literal may not have data and accessor property with the same name",AccessorGetSet:"Object literal may not have multiple get/set accessors with the same name",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode"},pc={NonAsciiIdentifierStart:new RegExp("[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0-\u08b2\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua7ad\ua7b0\ua7b1\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab5f\uab64\uab65\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]"),NonAsciiIdentifierPart:new RegExp("[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0300-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u0483-\u0487\u048a-\u052f\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u05d0-\u05ea\u05f0-\u05f2\u0610-\u061a\u0620-\u0669\u066e-\u06d3\u06d5-\u06dc\u06df-\u06e8\u06ea-\u06fc\u06ff\u0710-\u074a\u074d-\u07b1\u07c0-\u07f5\u07fa\u0800-\u082d\u0840-\u085b\u08a0-\u08b2\u08e4-\u0963\u0966-\u096f\u0971-\u0983\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bc-\u09c4\u09c7\u09c8\u09cb-\u09ce\u09d7\u09dc\u09dd\u09df-\u09e3\u09e6-\u09f1\u0a01-\u0a03\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a59-\u0a5c\u0a5e\u0a66-\u0a75\u0a81-\u0a83\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abc-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ad0\u0ae0-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3c-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5c\u0b5d\u0b5f-\u0b63\u0b66-\u0b6f\u0b71\u0b82\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd0\u0bd7\u0be6-\u0bef\u0c00-\u0c03\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c58\u0c59\u0c60-\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbc-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0cde\u0ce0-\u0ce3\u0ce6-\u0cef\u0cf1\u0cf2\u0d01-\u0d03\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d-\u0d44\u0d46-\u0d48\u0d4a-\u0d4e\u0d57\u0d60-\u0d63\u0d66-\u0d6f\u0d7a-\u0d7f\u0d82\u0d83\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e01-\u0e3a\u0e40-\u0e4e\u0e50-\u0e59\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb9\u0ebb-\u0ebd\u0ec0-\u0ec4\u0ec6\u0ec8-\u0ecd\u0ed0-\u0ed9\u0edc-\u0edf\u0f00\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e-\u0f47\u0f49-\u0f6c\u0f71-\u0f84\u0f86-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1049\u1050-\u109d\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u135d-\u135f\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176c\u176e-\u1770\u1772\u1773\u1780-\u17d3\u17d7\u17dc\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1820-\u1877\u1880-\u18aa\u18b0-\u18f5\u1900-\u191e\u1920-\u192b\u1930-\u193b\u1946-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u19d0-\u19d9\u1a00-\u1a1b\u1a20-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1aa7\u1ab0-\u1abd\u1b00-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1bf3\u1c00-\u1c37\u1c40-\u1c49\u1c4d-\u1c7d\u1cd0-\u1cd2\u1cd4-\u1cf6\u1cf8\u1cf9\u1d00-\u1df5\u1dfc-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u200c\u200d\u203f\u2040\u2054\u2071\u207f\u2090-\u209c\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d7f-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2de0-\u2dff\u2e2f\u3005-\u3007\u3021-\u302f\u3031-\u3035\u3038-\u303c\u3041-\u3096\u3099\u309a\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua62b\ua640-\ua66f\ua674-\ua67d\ua67f-\ua69d\ua69f-\ua6f1\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua7ad\ua7b0\ua7b1\ua7f7-\ua827\ua840-\ua873\ua880-\ua8c4\ua8d0-\ua8d9\ua8e0-\ua8f7\ua8fb\ua900-\ua92d\ua930-\ua953\ua960-\ua97c\ua980-\ua9c0\ua9cf-\ua9d9\ua9e0-\ua9fe\uaa00-\uaa36\uaa40-\uaa4d\uaa50-\uaa59\uaa60-\uaa76\uaa7a-\uaac2\uaadb-\uaadd\uaae0-\uaaef\uaaf2-\uaaf6\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab5f\uab64\uab65\uabc0-\uabea\uabec\uabed\uabf0-\uabf9\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe00-\ufe0f\ufe20-\ufe2d\ufe33\ufe34\ufe4d-\ufe4f\ufe70-\ufe74\ufe76-\ufefc\uff10-\uff19\uff21-\uff3a\uff3f\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]")},Q.prototype=P.prototype={processComment:function(){var a,b,c=yc.bottomRightStack,d=c[c.length-1];if(!(this.type===lc.Program&&this.body.length>0)){if(yc.trailingComments.length>0?yc.trailingComments[0].range[0]>=this.range[1]?(b=yc.trailingComments,yc.trailingComments=[]):yc.trailingComments.length=0:d&&d.trailingComments&&d.trailingComments[0].range[0]>=this.range[1]&&(b=d.trailingComments,delete d.trailingComments),d)for(;d&&d.range[0]>=this.range[0];)a=d,d=c.pop();a?a.leadingComments&&a.leadingComments[a.leadingComments.length-1].range[1]<=this.range[0]&&(this.leadingComments=a.leadingComments,a.leadingComments=void 0):yc.leadingComments.length>0&&yc.leadingComments[yc.leadingComments.length-1].range[1]<=this.range[0]&&(this.leadingComments=yc.leadingComments,yc.leadingComments=[]),b&&(this.trailingComments=b),c.push(this)}},finish:function(){yc.range&&(this.range[1]=sc),yc.loc&&(this.loc.end=new M,yc.source&&(this.loc.source=yc.source)),yc.attachComment&&this.processComment()},finishArrayExpression:function(a){return this.type=lc.ArrayExpression,this.elements=a,this.finish(),this},finishArrowFunctionExpression:function(a,b,c,d){return this.type=lc.ArrowFunctionExpression,this.id=null,this.params=a,this.defaults=b,this.body=c,this.rest=null,this.generator=!1,this.expression=d,this.finish(),this},finishAssignmentExpression:function(a,b,c){return this.type=lc.AssignmentExpression,this.operator=a,this.left=b,this.right=c,this.finish(),this},finishBinaryExpression:function(a,b,c){return this.type="||"===a||"&&"===a?lc.LogicalExpression:lc.BinaryExpression,this.operator=a,this.left=b,this.right=c,this.finish(),this},finishBlockStatement:function(a){return this.type=lc.BlockStatement,this.body=a,this.finish(),this},finishBreakStatement:function(a){return this.type=lc.BreakStatement,this.label=a,this.finish(),this
},finishCallExpression:function(a,b){return this.type=lc.CallExpression,this.callee=a,this.arguments=b,this.finish(),this},finishCatchClause:function(a,b){return this.type=lc.CatchClause,this.param=a,this.body=b,this.finish(),this},finishConditionalExpression:function(a,b,c){return this.type=lc.ConditionalExpression,this.test=a,this.consequent=b,this.alternate=c,this.finish(),this},finishContinueStatement:function(a){return this.type=lc.ContinueStatement,this.label=a,this.finish(),this},finishDebuggerStatement:function(){return this.type=lc.DebuggerStatement,this.finish(),this},finishDoWhileStatement:function(a,b){return this.type=lc.DoWhileStatement,this.body=a,this.test=b,this.finish(),this},finishEmptyStatement:function(){return this.type=lc.EmptyStatement,this.finish(),this},finishExpressionStatement:function(a){return this.type=lc.ExpressionStatement,this.expression=a,this.finish(),this},finishForStatement:function(a,b,c,d){return this.type=lc.ForStatement,this.init=a,this.test=b,this.update=c,this.body=d,this.finish(),this},finishForInStatement:function(a,b,c){return this.type=lc.ForInStatement,this.left=a,this.right=b,this.body=c,this.each=!1,this.finish(),this},finishFunctionDeclaration:function(a,b,c,d){return this.type=lc.FunctionDeclaration,this.id=a,this.params=b,this.defaults=c,this.body=d,this.rest=null,this.generator=!1,this.expression=!1,this.finish(),this},finishFunctionExpression:function(a,b,c,d){return this.type=lc.FunctionExpression,this.id=a,this.params=b,this.defaults=c,this.body=d,this.rest=null,this.generator=!1,this.expression=!1,this.finish(),this},finishIdentifier:function(a){return this.type=lc.Identifier,this.name=a,this.finish(),this},finishIfStatement:function(a,b,c){return this.type=lc.IfStatement,this.test=a,this.consequent=b,this.alternate=c,this.finish(),this},finishLabeledStatement:function(a,b){return this.type=lc.LabeledStatement,this.label=a,this.body=b,this.finish(),this},finishLiteral:function(a){return this.type=lc.Literal,this.value=a.value,this.raw=qc.slice(a.start,a.end),a.regex&&(this.regex=a.regex),this.finish(),this},finishMemberExpression:function(a,b,c){return this.type=lc.MemberExpression,this.computed="["===a,this.object=b,this.property=c,this.finish(),this},finishNewExpression:function(a,b){return this.type=lc.NewExpression,this.callee=a,this.arguments=b,this.finish(),this},finishObjectExpression:function(a){return this.type=lc.ObjectExpression,this.properties=a,this.finish(),this},finishPostfixExpression:function(a,b){return this.type=lc.UpdateExpression,this.operator=a,this.argument=b,this.prefix=!1,this.finish(),this},finishProgram:function(a){return this.type=lc.Program,this.body=a,this.finish(),this},finishProperty:function(a,b,c){return this.type=lc.Property,this.key=b,this.value=c,this.kind=a,this.finish(),this},finishReturnStatement:function(a){return this.type=lc.ReturnStatement,this.argument=a,this.finish(),this},finishSequenceExpression:function(a){return this.type=lc.SequenceExpression,this.expressions=a,this.finish(),this},finishSwitchCase:function(a,b){return this.type=lc.SwitchCase,this.test=a,this.consequent=b,this.finish(),this},finishSwitchStatement:function(a,b){return this.type=lc.SwitchStatement,this.discriminant=a,this.cases=b,this.finish(),this},finishThisExpression:function(){return this.type=lc.ThisExpression,this.finish(),this},finishThrowStatement:function(a){return this.type=lc.ThrowStatement,this.argument=a,this.finish(),this},finishTryStatement:function(a,b,c,d){return this.type=lc.TryStatement,this.block=a,this.guardedHandlers=b,this.handlers=c,this.finalizer=d,this.finish(),this},finishUnaryExpression:function(a,b){return this.type="++"===a||"--"===a?lc.UpdateExpression:lc.UnaryExpression,this.operator=a,this.argument=b,this.prefix=!0,this.finish(),this},finishVariableDeclaration:function(a,b){return this.type=lc.VariableDeclaration,this.declarations=a,this.kind=b,this.finish(),this},finishVariableDeclarator:function(a,b){return this.type=lc.VariableDeclarator,this.id=a,this.init=b,this.finish(),this},finishWhileStatement:function(a,b){return this.type=lc.WhileStatement,this.test=a,this.body=b,this.finish(),this},finishWithStatement:function(a,b){return this.type=lc.WithStatement,this.object=a,this.body=b,this.finish(),this}},a.version="2.0.0-dev",a.tokenize=gc,a.parse=hc,a.Syntax=function(){var a,b={};"function"==typeof Object.create&&(b=Object.create(null));for(a in lc)lc.hasOwnProperty(a)&&(b[a]=lc[a]);return"function"==typeof Object.freeze&&Object.freeze(b),b}()}),define("VeroldEngine/libs/unwrap_comment",[],function(){function a(a){return 32===a||9===a||11===a||12===a||160===a||a>=5760&&e.indexOf(a)>=0}function b(a){return 10===a||13===a||8232===a||8233===a}function c(c){var d,e,f,g,h,i=0,j=1,k=2;for(c=c.replace(/^\/\*\*?/,"").replace(/\*\/$/,""),d=0,e=c.length,f=i,g="";e>d;){switch(h=c.charCodeAt(d),f){case i:b(h)?g+=String.fromCharCode(h):42===h?f=j:a(h)||(g+=String.fromCharCode(h),f=k);break;case j:a(h)||(g+=String.fromCharCode(h)),f=b(h)?i:k;break;case k:g+=String.fromCharCode(h),b(h)&&(f=i)}d+=1}return g}var d,e;return d={NonAsciiIdentifierStart:new RegExp("[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]"),NonAsciiIdentifierPart:new RegExp("[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0300-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u0483-\u0487\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u05d0-\u05ea\u05f0-\u05f2\u0610-\u061a\u0620-\u0669\u066e-\u06d3\u06d5-\u06dc\u06df-\u06e8\u06ea-\u06fc\u06ff\u0710-\u074a\u074d-\u07b1\u07c0-\u07f5\u07fa\u0800-\u082d\u0840-\u085b\u08a0\u08a2-\u08ac\u08e4-\u08fe\u0900-\u0963\u0966-\u096f\u0971-\u0977\u0979-\u097f\u0981-\u0983\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bc-\u09c4\u09c7\u09c8\u09cb-\u09ce\u09d7\u09dc\u09dd\u09df-\u09e3\u09e6-\u09f1\u0a01-\u0a03\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a59-\u0a5c\u0a5e\u0a66-\u0a75\u0a81-\u0a83\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abc-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ad0\u0ae0-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3c-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5c\u0b5d\u0b5f-\u0b63\u0b66-\u0b6f\u0b71\u0b82\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd0\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c58\u0c59\u0c60-\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbc-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0cde\u0ce0-\u0ce3\u0ce6-\u0cef\u0cf1\u0cf2\u0d02\u0d03\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d-\u0d44\u0d46-\u0d48\u0d4a-\u0d4e\u0d57\u0d60-\u0d63\u0d66-\u0d6f\u0d7a-\u0d7f\u0d82\u0d83\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e01-\u0e3a\u0e40-\u0e4e\u0e50-\u0e59\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb9\u0ebb-\u0ebd\u0ec0-\u0ec4\u0ec6\u0ec8-\u0ecd\u0ed0-\u0ed9\u0edc-\u0edf\u0f00\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e-\u0f47\u0f49-\u0f6c\u0f71-\u0f84\u0f86-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1049\u1050-\u109d\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u135d-\u135f\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176c\u176e-\u1770\u1772\u1773\u1780-\u17d3\u17d7\u17dc\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1820-\u1877\u1880-\u18aa\u18b0-\u18f5\u1900-\u191c\u1920-\u192b\u1930-\u193b\u1946-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u19d0-\u19d9\u1a00-\u1a1b\u1a20-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1aa7\u1b00-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1bf3\u1c00-\u1c37\u1c40-\u1c49\u1c4d-\u1c7d\u1cd0-\u1cd2\u1cd4-\u1cf6\u1d00-\u1de6\u1dfc-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u200c\u200d\u203f\u2040\u2054\u2071\u207f\u2090-\u209c\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d7f-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2de0-\u2dff\u2e2f\u3005-\u3007\u3021-\u302f\u3031-\u3035\u3038-\u303c\u3041-\u3096\u3099\u309a\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua62b\ua640-\ua66f\ua674-\ua67d\ua67f-\ua697\ua69f-\ua6f1\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua827\ua840-\ua873\ua880-\ua8c4\ua8d0-\ua8d9\ua8e0-\ua8f7\ua8fb\ua900-\ua92d\ua930-\ua953\ua960-\ua97c\ua980-\ua9c0\ua9cf-\ua9d9\uaa00-\uaa36\uaa40-\uaa4d\uaa50-\uaa59\uaa60-\uaa76\uaa7a\uaa7b\uaa80-\uaac2\uaadb-\uaadd\uaae0-\uaaef\uaaf2-\uaaf6\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabea\uabec\uabed\uabf0-\uabf9\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\ufe70-\ufe74\ufe76-\ufefc\uff10-\uff19\uff21-\uff3a\uff3f\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]")},e=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],c}),define("VeroldEngine/Util/APIUtilities",["underscore","async"],function(a,b){var c=window.VAPI=window.VAPI||{},d=window.define,e={},f=0;return c.loadExtensions=function(d,e){return a.isArray(d)&&a.size(d)?void b.forEach(d,c.loadExtension,e):e()},c.loadExtension=function(a,b){var c;if(e[a]&&"loaded"===e[a].state)return b();if(e[a]&&"loaded"!==e[a].state)c=e[a].script,"function"==typeof b&&c.addEventListener("load",function(){setTimeout(b,0)});else{window.define=void 0;var g=document.getElementsByTagName("body")[0];c=document.createElement("script"),c.type="text/javascript",c.src=a,c.async=!1,g.appendChild(c),e[a]={script:c,state:"loading"},f++,c.addEventListener("load",function(){e[a].state="loaded",f--,0===f&&(window.define=d),"function"==typeof b&&b()})}},c}),define("VeroldEngine/AssetRegistry/ScriptAsset",["backbone","underscore","three","json5","VeroldEngine/libs/esprima/esprima","VeroldEngine/libs/unwrap_comment","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Util/APIUtilities"],function(Backbone,_,THREE,JSON5,esprima,unwrapComment,VeroldAsset,VAPI){function getType(a){switch(a.toLowerCase()){case"v4":case"vector4":return"v4";case"v3":case"vector3":return"v3";case"v2":case"vector2":return"v2";case"f":case"float":return"f";case"i":case"int":case"integer":return"i";case"b":case"bool":case"boolean":return"b";case"s":case"string":return"s";case"dd":case"dropdown":return"dd";case"c":case"color":return"c";case"a":case"array":return"a";case"custom":return"custom";case"json":return"json";default:return a}}function grabToken(a){var b;if(a&&a.length)for(;a.length&&!(b=a.shift()););return b}function parseVName(a){var b,c=a.split(/[\n\s]/);return grabToken(c),b=c.join(" ").trim()}function parseVDescription(a){var b,c=a.split(/[\n\s]/);return grabToken(c),b=c.join(" ").trim()}function parseVInclude(a){var b,c=a.split(/[\n\s]/);return grabToken(c),b=c.join(" ").trim()}function recursiveBuildAttribute(a,b){var c=b[a.type];c?(a.attributes=_.extend({},b[a.type].attributes),a.type="custom"):a.type=getType(a.type),a.subType&&recursiveBuildAttribute(a.subType,b),a.attributes&&_.each(a.attributes,function(a){recursiveBuildAttribute(a,b)})}function parseVAttr(a,b){var c,d,e,f={},g=a.split(/[\n\s]/);return grabToken(g),d=grabToken(g),e=d.match(arrayRegex),f.name=grabToken(g),e?(d=d.substr(0,e.index).trim(),f.type="a",f.subType={type:getType(d)}):f.type=getType(d),c=g.join(" ").trim(),c.length&&(f=_.extend(f,JSON5.parse(c))),recursiveBuildAttribute(f,b),f}function parseVType(a){var b,c={},d=a.split(/[\n\s]/);return grabToken(d),c.name=grabToken(d),c.type="custom",b=d.join(" ").trim(),b.length&&(c=_.extend(c,JSON5.parse(b))),c}function parseVEvent(a){var b,c={},d=a.split(/[\n\s]/);return grabToken(d),c.scope=grabToken(d),c.name=grabToken(d),b=d.join(" ").trim(),b.length&&(c=_.extend(c,JSON5.parse(b))),c}function parseVFilter(a){var b=a.split(/[\n\s]/);return grabToken(b),grabToken(b).split("|")}function parseVCategory(a){var b=a.split(/[\n\s]/);return grabToken(b),grabToken(b).trim()}var arrayRegex=/\[\s*\]$/,ScriptAsset=function(){VeroldAsset.call(this),this.scriptData={description:null,klass:null}};return ScriptAsset.prototype=new VeroldAsset,ScriptAsset.prototype.initialize=function(a){VeroldAsset.prototype.initialize.call(this,a),this.processComments(this.getProperty("script")),this.entityModel.on("change:payload.script",this.scriptChanged,this),this.entityModel.on("change:payload.attributes",this.attributesChanged,this);var b=this.entityModel.get("payload");b.category||(b.category="User Defined")},ScriptAsset.prototype.uninitialize=function(){this.entityModel.off("change:payload.script",this.scriptChanged,this),VeroldAsset.prototype.uninitialize.apply(this,arguments)},ScriptAsset.prototype.initializeComponents=function(){},ScriptAsset.prototype.update=function(){},ScriptAsset.prototype.getDefaultComponentData=function(){return ScriptAsset.getDefaultComponentData(this.entityModel.get("payload.attributes"))},ScriptAsset.prototype.isRunnable=function(){return this.veroldEngine.componentSettings.enabled&&(this.entityModel.isPersistent&&this.veroldEngine.componentSettings.persistent||!this.entityModel.isPersistent&&this.veroldEngine.componentSettings.nonPersistent)?!0:!1},ScriptAsset.prototype.load_base=function(){if(this.isRunnable()&&"loaded"!==this.state_base){var a=[];_.each(this.entityModel.get("payload.externalDependencies"),function(b){a.push(b)},this),VAPI.loadExtensions(a,_.bind(function(){this.createScriptData(_.bind(function(){this.trigger("load_progress",this),this.trigger("load_base",this),this.trigger("load",this)},this))},this))}else"loaded"===this.state_base&&(this.trigger("load_progress",this),this.trigger("load_base",this),this.trigger("load",this))},ScriptAsset.prototype.createScriptData=function(a){this.entityModel.get("payload.scriptUrl")?this.createScriptFromUrl(a):this.entityModel.get("payload.script")?this.createScript(a):this.createScriptFromMinified(a)},ScriptAsset.prototype.processComments=function(a){try{var b,c,d,e=esprima.parse(a,{attachComment:!0,tolerant:!0}),f=0,g={},h=[],i=[],j={},k={},l=[],m=function(a){var e,m,n=unwrapComment(a.value).trim();e=n.split(/^\@v|\n\s*\@v/g),e.shift(),e.forEach(function(a){0===a.indexOf("name")?(m=parseVName(a))&&(b=m,f++):0===a.indexOf("description")?(m=parseVDescription(a))&&(c=m,f++):0===a.indexOf("include")?(m=parseVInclude(a))&&(i.push(m),f++):0===a.indexOf("type")?(m=parseVType(a,j))&&(j[m.name]=m,f++):0===a.indexOf("attr")||0===a.indexOf("attribute")?(m=parseVAttr(a,j))&&(g[m.name]=m,h.push(m.name),f++):0===a.indexOf("event")?(m=parseVEvent(a))&&(k[m.name]=m,f++):0===a.indexOf("filter")?(m=parseVFilter(a))&&(m.forEach(function(a){l.push(a.trim())}),f++):0===a.indexOf("category")&&(m=parseVCategory(a))&&(d=m,f++)})};e.comments.forEach(m),this.scriptData.invalid=!1;var n=function(a,b){_.each(a,function(c,d){b[d]?_.isObject(a[d])&&n(a[d],b[d]):a[d]=void 0})};if(f>0){var o=this.entityModel.get("payload.attributes"),p=this.entityModel.get("payload.events");n(o,g),n(p,k),this.entityModel.set({name:b||this.entityModel.get("name"),payload:{description:c||this.getProperty("description"),attributes:g,attributesOrder:h,events:k,externalDependencies:i,filter:l.length?_.uniq(l):void 0,category:d||"User Defined",parsedComments:!0}},{processComments:!0})}else this.entityModel.set({name:b||this.entityModel.get("name"),payload:{parsedComments:!1}},{processComments:!0})}catch(q){this.scriptData.invalid=!0,console.error("Failed to process comments for "+this.entityModel.get("name")+" with error: "+q)}},ScriptAsset.prototype.createScript=function(fn){var scriptName=encodeURIComponent(this.entityModel.get("name")),script=this.entityModel.get("payload.script");return scriptName.match(/\.js$/i)||(scriptName+=".js"),this.processComments(script),this.scriptData.invalid?console.error("Invalid script data, not executing!"):(this.scriptData.klass=eval("(function(require, _, VAPI, THREE, console, Math) {\n"+(script||"")+"});\n//# sourceURL="+this.veroldEngine.paths.apiBaseUrl+"/entities/"+this.id+"/script/"+scriptName+"\n")(require,_,window.VAPI,THREE,window.console,window.Math),void fn())},ScriptAsset.prototype.createScriptFromUrl=function(fn){var scriptUrl=this.entityModel.get("payload.scriptUrl");console.warn("createScriptFromUrl"),Backbone.$.ajax({url:scriptUrl,method:"POST",dataType:"html"}).done(_.bind(function(script){try{this.scriptData.klass=eval("(function(require, _, VAPI, THREE, console, Math) {\n"+(script||"")+"});\n//# sourceURL="+scriptUrl+"\n")(require,_,window.VAPI,THREE,window.console,window.Math),fn()}catch(e){console.error("Failed to create component class for "+this.entityModel.get("name")+" with error: "+e)}},this))},ScriptAsset.prototype.createScriptFromMinified=function(fn){var script=this.entityModel.get("payload.minified");if(console.warn("createScriptFromMinified"),!script)throw new Error("Failed to evaluate custom script!");try{this.scriptData.klass=eval(script)(require,_,window.VAPI,THREE,window.console,window.Math),fn()}catch(e){console.error("Failed to create component class for "+this.entityModel.get("name")+" with error: "+e)}},ScriptAsset.prototype._loadThreeData=function(){},ScriptAsset.prototype.applyPayloadSettings_loaded=function(){},ScriptAsset.prototype.scriptChanged=function(){this.trigger("script_changed"),this.processComments(this.getProperty("script"))},ScriptAsset.prototype.attributesChanged=function(a,b,c){c.processComments||this.processComments(this.getProperty("script"))},ScriptAsset.getDefaultComponentData=function(a){var b={};return a&&_.each(a,function(a,c){"undefined"!=typeof a.default?b[c]=a.default:"custom"===a.type?b[c]=ScriptAsset.getDefaultComponentData(a.attributes):"a"===a.type&&(b[c]=[])},this),_.deepClone(b)},window.VAPI=window.VAPI||{},window.VAPI.ScriptAsset=ScriptAsset,ScriptAsset}),define("text!VeroldEngine/Components/BuiltIn/Animation.js",[],function(){return"/**\r\n * A custom component class.\r\n *\r\n * @class Animation\r\n */\r\nfunction Animation() {\r\n  this.state = 'stopped';\r\n}\r\n\r\nAnimation.prototype = new VAPI.VeroldComponent();\r\n\r\nAnimation.prototype.attributesChanged = function(changes, previous) {\r\n  if (previous && previous.asset) {\r\n    this.getScene().unregisterAnimation(previous.asset);\r\n  }\r\n\r\n  if (this.asset) {\r\n    this.getScene().registerAnimation(this.asset.id);\r\n  }\r\n\r\n  // Reload the animation while resetting the play state and current time.\r\n  this.reload(true);\r\n};\r\n\r\nAnimation.prototype.editorInit = function() {\r\n  this.init();\r\n\r\n  if (this.getEntity().isHierarchyLoaded()) {\r\n    this.objectLoaded();\r\n  }\r\n  else {\r\n    this.getEntity().once(\"load_hierarchy\", this.objectLoaded, this);\r\n  }\r\n\r\n  this.getEngine().on(\"update\", this.update, this);\r\n};\r\n\r\nAnimation.prototype.editorShutdown = function() {\r\n  this.getEngine().off(\"update\", this.update, this);\r\n  this.shutdown();\r\n};\r\n\r\n/**\r\n * Returns the currently assigned animation asset.\r\n * @method getAsset\r\n * @return {Object} The currently assigned animation asset.\r\n */\r\nAnimation.prototype.getAsset = function() {\r\n  return this.asset;\r\n};\r\n\r\n/**\r\n * Returns the animation speed.\r\n * @method getSpeed\r\n * @return {Number} The animation speed.\r\n */\r\nAnimation.prototype.getSpeed = function() {\r\n  return this.speed;\r\n};\r\n\r\n/**\r\n * Returns the currently assigned animation take.\r\n * @method getTake\r\n * @return {String} The animation take.\r\n */\r\nAnimation.prototype.getTake = function() {\r\n  return this.take;\r\n};\r\n\r\n/**\r\n * Returns a dictionary of all take names.\r\n * @method getTakes\r\n * @return {Object} The take dictionary.\r\n */\r\nAnimation.prototype.getTakes = function() {\r\n  var takeDict = {};\r\n\r\n  if (this.asset) {\r\n    var takeNames = this.asset.getTakeNames();\r\n\r\n    for (var idx in takeNames) {\r\n      var takeName = takeNames[idx];\r\n      takeDict[takeName] = takeName;\r\n    }\r\n  }\r\n\r\n  return takeDict;\r\n};\r\n\r\n/**\r\n * Returns the animation time.\r\n * @method getTime\r\n * @return {Number} The animation time.\r\n */\r\nAnimation.prototype.getTime = function() {\r\n  if (this.animation) {\r\n    return this.animation.currentTime;\r\n  }\r\n\r\n  return 0.0;\r\n};\r\n\r\n/**\r\n * Returns the animation weight.\r\n * @method getWeight\r\n * @return {Number} The animation weight.\r\n */\r\nAnimation.prototype.getWeight = function() {\r\n  return this.weight;\r\n};\r\n\r\n/**\r\n * Called as soon as the VeroldEntity begins to load.\r\n */\r\nAnimation.prototype.init = function() {\r\n  // Listen to changes on the animation asset.\r\n  this.onAssetChanged = function() {\r\n    this.reload();\r\n  }.bind(this);\r\n\r\n  if (this.asset) {\r\n    this.asset.entityModel.on(\"change:payload.*\", this.onAssetChanged);\r\n    this.getScene().registerAnimation(this.asset.id);\r\n  }\r\n\r\n  // this.veroldEntity is available here but the Three.JS data isn't loaded yet\r\n  this.getEntity().on('playKeyframeAnimation', this.playKeyframeAnimation, this);\r\n  this.getEntity().on('pauseKeyframeAnimation', this.pause, this);\r\n  this.getEntity().on('stopKeyframeAnimation', this.stop, this);\r\n  this.getEntity().on('toggleKeyframeAnimation', this.toggle, this);\r\n};\r\n\r\n/**\r\n * Returns true if the animation is enabled; otherwise, returns false. When\r\n * disabled, an animation does not have any effect on the scene. In contrast, a\r\n * paused or stopped (but enabled) animation may still be blended with other\r\n * animations. Animations are initially disabled, until the first call to\r\n * `play`. Use `stop` to disable an animation. Disabling unneeded animations\r\n * may have performance benefits.\r\n * @method isEnabled\r\n * @return {Boolean} true if looping is enabled; otherwise, false.\r\n */\r\nAnimation.prototype.isEnabled = function() {\r\n  return this.animation && this.animation.isPlaying;\r\n};\r\n\r\n/**\r\n * Returns true if looping is enabled; otherwise, returns false.\r\n * @method isLoop\r\n * @return {Boolean} true if looping is enabled; otherwise, false.\r\n */\r\nAnimation.prototype.isLoop = function() {\r\n  return this.loop;\r\n};\r\n\r\n/**\r\n * Returns true if the animation is paused; otherwise, returns false.\r\n * @method isPaused\r\n * @return {Boolean} true if the animation is paused; otherwise, false.\r\n */\r\nAnimation.prototype.isPaused = function() {\r\n  return this.state === 'paused';\r\n};\r\n\r\n/**\r\n * Returns true if the animation is playing; otherwise, returns false.\r\n * @method isPlaying\r\n * @return {Boolean} true if the animation is playing; otherwise, false.\r\n */\r\nAnimation.prototype.isPlaying = function() {\r\n  return this.state === 'playing';\r\n};\r\n\r\n/**\r\n * Returns true if the animation is stopped; otherwise, returns false.\r\n * @method isStopped\r\n * @return {Boolean} true if the animation is stopped; otherwise, false.\r\n */\r\nAnimation.prototype.isStopped = function() {\r\n  return this.state === 'stopped';\r\n};\r\n\r\n/**\r\n * Called once the hierarchy is loaded.\r\n */\r\nAnimation.prototype.objectLoaded = function() {\r\n  this.reload(true);\r\n};\r\n\r\n/**\r\n * Play the currently assigned animation asset and take.\r\n * @method play\r\n * @param {Function} fn Callback function that is triggered when the take finishes playing\r\n */\r\nAnimation.prototype.play = function(fn) {\r\n  if (this.animation) {\r\n    if (this.state !== 'playing') {\r\n      this.animation.timeScale = this.speed;\r\n      this.animation.play(this.animation.currentTime, this.animation.weight);\r\n      this.state = 'playing';\r\n    }\r\n\r\n    this.onAnimationEnd = fn;\r\n  }\r\n};\r\n\r\n/**\r\n * Play the specified animation, with the given playback settings.\r\n * @method playKeyframeAnimation\r\n * @param {String} assetId The ID of the animation asset\r\n * @param {String} take The name of the take\r\n * @param {Boolean} loop Whether or not to loop the animation\r\n * @param {Number} speed The playback speed\r\n * @param {Number} startTime The time offset to start the animation at\r\n */\r\nAnimation.prototype.playKeyframeAnimation = function(assetId, take, loop, speed, startTime) {\r\n  var playAnimation = function(animation) {\r\n    if (animation) {\r\n      loop = loop !== undefined ? loop : this.isLoop();\r\n      speed = speed !== undefined ? speed : this.getSpeed();\r\n      startTime = startTime !== undefined ? startTime : this.getTime();\r\n\r\n      this.setLoop(loop);\r\n      this.setSpeed(speed);\r\n      this.setTime(startTime);\r\n\r\n      this.play();\r\n    }\r\n  }.bind(this);\r\n\r\n  if (assetId !== undefined || take !== undefined) {\r\n    var asset = assetId ? this.getEngine().getEntityById(assetId) : this.asset,\r\n        take = take ? take : this.take;\r\n\r\n    this.setAsset(asset, false);\r\n    this.setTake(take, false);\r\n\r\n    this.reload(false, function(err, animation) {\r\n      playAnimation(animation);\r\n    });\r\n  }\r\n  else {\r\n    playAnimation(this.animation);\r\n  }\r\n};\r\n\r\n/**\r\n * Pause the animation, without resetting the playhead.\r\n * @method pause\r\n */\r\nAnimation.prototype.pause = function() {\r\n  if (this.animation && this.state === 'playing') {\r\n    this.animation.timeScale = 0;\r\n    this.state = 'paused';\r\n  }\r\n};\r\n\r\n/**\r\n * Stop and release the current animation.\r\n * @method release\r\n */\r\nAnimation.prototype.release = function() {\r\n  this.stop();\r\n\r\n  if (this.animation) {\r\n    this.animation.stop();\r\n    this.animation = undefined;\r\n  }\r\n};\r\n\r\n/**\r\n * Reload the currently assigned animation asset and take. This should be called\r\n * when changes are made to the asset or take, for example.\r\n * @method reload\r\n * @param {Boolean} reset Reset the playhead and play state\r\n * @param {Function} fn Callback function when asset loading completes\r\n */\r\nAnimation.prototype.reload = function(reset, fn) {\r\n  var time = reset ? this.startTime : this.getTime(),\r\n      isPlaying = reset ? this.autoPlay : this.isPlaying();\r\n\r\n  // Release the current animation (if there is one).\r\n  this.release();\r\n\r\n  // Load and create a new animation.\r\n  if (this.asset && this.take) {\r\n    this.asset.load({\r\n      load: function() {\r\n        this.animation = this.asset.createAnimation(this.veroldEntity, this.take);\r\n\r\n        if (this.animation) {\r\n          this.animation.loop = this.loop;\r\n          this.animation.timeScale = this.speed;\r\n          this.animation.currentTime = time;\r\n          this.animation.weight = this.weight;\r\n\r\n          if (isPlaying) {\r\n            this.play();\r\n          }\r\n        }\r\n\r\n        if (fn) {\r\n          fn(null, this.animation);\r\n        }\r\n      }.bind(this)\r\n    });\r\n  }\r\n  else if (fn) {\r\n    fn(null, null);\r\n  }\r\n};\r\n\r\n/**\r\n * Set the current animation asset.\r\n * @method setAsset\r\n * @param {Object} asset The animation asset or null to unset the asset\r\n * @param {Boolean} reload Whether or not to reload the animation\r\n * @param {Function} fn Callback function when asset loading completes\r\n */\r\nAnimation.prototype.setAsset = function(asset, reload, fn) {\r\n  // Remove old change listener from the animation asset.\r\n  if (this.asset) {\r\n    this.asset.entityModel.off(\"change:payload.*\", this.onAssetChanged);\r\n  }\r\n\r\n  this.asset = asset;\r\n\r\n  // Add new change listener to the animation asset.\r\n  if (this.asset) {\r\n    this.asset.entityModel.on(\"change:payload.*\", this.onAssetChanged);\r\n  }\r\n\r\n  if (reload === undefined || reload) {\r\n    this.reload(false, fn);\r\n  }\r\n};\r\n\r\n/**\r\n * Enable or disable looping.\r\n * @method setLoop\r\n * @param {Boolean} loop The loop state\r\n */\r\nAnimation.prototype.setLoop = function(loop) {\r\n  this.loop = loop;\r\n\r\n  if (this.animation) {\r\n    this.animation.loop = this.loop;\r\n  }\r\n};\r\n\r\n/**\r\n * Set the animation speed.\r\n * @method setSpeed\r\n * @param {Number} speed The animation speed\r\n */\r\nAnimation.prototype.setSpeed = function(speed) {\r\n  this.speed = speed;\r\n\r\n  // Only update the animation's timeScale when the animation is playing since\r\n  // the timeScale is also used to pause and stop the animation. In those cases,\r\n  // the timeScale will be updated on the next call to `play`.\r\n  if (this.isPlaying()) {\r\n    this.animation.timeScale = this.speed;\r\n  }\r\n};\r\n\r\n/**\r\n * Set the current animation take.\r\n * @method setTake\r\n * @param {String} take The take name\r\n * @param {Boolean} reload Whether or not to reload the animation\r\n * @param {Function} fn Callback function when asset loading completes\r\n */\r\nAnimation.prototype.setTake = function(take, reload, fn) {\r\n  this.take = take;\r\n\r\n  if (reload === undefined || reload) {\r\n    this.reload(false, fn);\r\n  }\r\n};\r\n\r\n/**\r\n * Set the animation time.\r\n * @method setTime\r\n * @param {Number} time The animation time\r\n */\r\nAnimation.prototype.setTime = function(time) {\r\n  if (this.animation) {\r\n    this.animation.currentTime = time;\r\n    this.animation.reset();\r\n  }\r\n};\r\n\r\n/**\r\n * Set the animation weight.\r\n * @method setWeight\r\n * @param {Number} weight The animation weight\r\n */\r\nAnimation.prototype.setWeight = function(weight) {\r\n  this.weight = weight;\r\n\r\n  if (this.animation) {\r\n    this.animation.weight = this.weight;\r\n  }\r\n};\r\n\r\n/**\r\n * Called when the VeroldEntity is unloaded or this component is removed.\r\n * @method shutdown\r\n */\r\nAnimation.prototype.shutdown = function() {\r\n  // Remove the change listener from the animation asset.\r\n  if (this.asset) {\r\n    this.asset.entityModel.off(\"change:payload.*\", this.onAssetChanged);\r\n  }\r\n\r\n  // Release the animation.\r\n  this.release();\r\n\r\n  this.getEntity().off('playKeyframeAnimation', this.playKeyframeAnimation, this);\r\n  this.getEntity().off('pauseKeyframeAnimation', this.pause, this);\r\n  this.getEntity().off('stopKeyframeAnimation', this.stop, this);\r\n  this.getEntity().off('toggleKeyframeAnimation', this.toggle, this);\r\n};\r\n\r\n/**\r\n * Stop the animation, resetting the playhead to 0, and optionally disable it.\r\n * When disabled, an animation has no effect on the scene, whereas a stopped\r\n * (but enabled) animation could still be blended with another animation. Before\r\n * the first call to `play`, an animation is disabled. Once disabled, an\r\n * animation remains disabled until `play` is called again. Disabling unneeded\r\n * animations may have performance benefits.\r\n * @method stop\r\n * @param disable {Boolean} disable Cease updating the animation\r\n */\r\nAnimation.prototype.stop = function(disable) {\r\n  if (this.animation) {\r\n    if (this.state !== 'stopped') {\r\n      this.animation.timeScale = 0;\r\n      this.state = 'stopped';\r\n    }\r\n\r\n    this.setTime(0);\r\n\r\n    if (disable) {\r\n      this.animation.stop();\r\n    }\r\n  }\r\n};\r\n\r\nAnimation.prototype.toggle = function() {\r\n  if (this.animation) {\r\n    if (this.state === 'playing') { \r\n      this.pause();\r\n    } \r\n    else {\r\n      this.play();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Called per VeroldEngine update (once per frame).\r\n * @method update\r\n * @param {Number} delta The number of seconds since the last call to `update`\r\n */\r\nAnimation.prototype.update = function(delta) {\r\n  if (!this.loop &&\r\n      this.animation &&\r\n      this.animation.currentTime >= this.animation.data.length) {\r\n\r\n    this.stop(true);\r\n\r\n    if (this.onAnimationEnd) {\r\n      // Store the callback, then clear it so that it's not called twice.\r\n      var fn = this.onAnimationEnd;\r\n      this.onAnimationEnd = undefined;\r\n\r\n      // Invoke the callback.\r\n      fn(this);\r\n    }\r\n\r\n    this.getEntity().trigger('endKeyframeAnimation');\r\n  }\r\n};\r\n\r\nreturn Animation;\r\n\r\n"
}),define("text!VeroldEngine/Components/BuiltIn/AudioListener.js",[],function(){return'function AudioListener() {\n  this.context = null;\n}\n\nAudioListener.prototype = new VAPI.VeroldComponent();\n\nAudioListener.prototype.init = function() {\n  this.context = this.getEntity().veroldEngine.getAudioContext();\n\n  if (!this.context) {\n    console.warn("Failed to create Web Audio context.");\n    return;\n  }\n};\n\nAudioListener.prototype.update = function(delta) {\n  if (this.hasThreeData() && this.context) {\n    var xform = this.getThreeData().matrixWorld\n      , objPos = new THREE.Vector3(0, 0, 0).applyMatrix4(xform)\n      , objDir = new THREE.Vector3(0, 0,-1).applyMatrix4(xform).sub(objPos).normalize()\n      , objUp  = new THREE.Vector3(0, 1, 0).applyMatrix4(xform).sub(objPos).normalize();\n    \n    this.context.listener.setPosition(objPos.x, objPos.y, objPos.z);\n    this.context.listener.setOrientation(objDir.x, objDir.y, objDir.z, objUp.x, objUp.y, objUp.z);\n  }\n};\n\nreturn AudioListener;\n\n'}),define("text!VeroldEngine/Components/BuiltIn/AudioSource.js",[],function(){return'function AudioSource() {\n  this.gainNode = null;\n  this.sourceNode = null;\n  this.pannerNode = null;\n  this.context = null;\n  this.buffer = null;\n  this.startTime = 0;\n  this.playOffset = 0;\n  this.state = "stopped";\n  this.element = null;\n  this.isVideo = false;\n}\n\nAudioSource.prototype = new VAPI.VeroldComponent();\n\nAudioSource.prototype.freeAudioGraph = function() {\n  if (this.element) {\n    this.element.pause();\n    this.element.currentTime = 0;\n  }\n\n  if (this.sourceNode) {\n    // If sourceNode is an AudioBufferSourceNode, stop it first.\n    if (!this.stream) {\n      this.sourceNode.stop(0);\n    }\n\n    this.sourceNode.disconnect();\n    this.sourceNode = null;\n  }\n\n  if (this.gainNode) {\n    this.gainNode.disconnect();\n  }\n\n  if (this.pannerNode) {\n    this.pannerNode.disconnect();\n  }\n};\n\nAudioSource.prototype.getCurrentTime = function() {\n  if (this.state === "playing") {\n    if (this.element) {\n      return this.element.currentTime;\n    }\n    else if (this.context) {\n      return this.context.currentTime - this.startTime;\n    }\n  }\n\n  return this.playOffset;\n};\n\nAudioSource.prototype.getGain = function() {\n  return this.gain;\n};\n\nAudioSource.prototype.getState = function() {\n  return this.state;\n};\n\nAudioSource.prototype.init = function() {\n  this.context = this.getEntity().veroldEngine.getAudioContext();\n\n  if (this.context) {\n    this.gainNode = this.context.createGain();\n    this.pannerNode = this.context.createPanner();\n  }\n  else {\n    console.warn("No audio context, using fallback.");\n    this.stream = true; // Must stream via an audio element.\n    this.positional = false; // Positional audio not supported.\n  }\n\n  // Always stream video assets.\n  this.isVideo = this.asset instanceof VAPI.TextureVideoAsset;\n  if (this.isVideo) {\n    this.stream = true;\n  }\n\n  if (this.autoPlay) {\n    this.play();\n  }\n  else if (this.preload) {\n    this.load(function(err) {\n      if (err) {\n        console.warn(err);\n      }\n    });\n  }\n\n  this.listenTo(this.getEntity(), \'playAudio\', this.play);\n  this.listenTo(this.getEntity(), \'pauseAudio\', this.pause);\n  this.listenTo(this.getEntity(), \'stopAudio\', this.stop);\n  this.listenTo(this.getEntity(), \'toggleAudio\', this.toggle);\n};\n\nAudioSource.prototype.initAudioGraph = function(fn) {\n  var that = this;\n\n  this.load(function(err, source) {\n    if (err) {\n      return fn(err);\n    }\n    else if (!that.context) {\n      return fn(null, null);\n    }\n\n    var nodes = [];\n\n    if (that.stream) {\n      that.sourceNode = that.context.createMediaElementSource(source);\n    }\n    else {\n      that.sourceNode = that.context.createBufferSource();\n      that.sourceNode.buffer = source;\n    }\n\n    nodes.push(that.sourceNode);\n    nodes.push(that.gainNode);\n\n    if (that.positional) {\n      nodes.push(that.pannerNode);\n    }\n\n    nodes.push(that.context.destination);\n\n    for (var iNode = 1; iNode < nodes.length; ++iNode) {\n      nodes[iNode - 1].connect(nodes[iNode]);\n    }\n\n    fn(null, that.sourceNode);\n  });\n};\n\nAudioSource.prototype.isLoop = function() {\n  return this.loop;\n};\n\nAudioSource.prototype.isPaused = function() {\n  return this.state === "paused";\n};\n\nAudioSource.prototype.isPlaying = function() {\n  return this.state === "playing";\n};\n\nAudioSource.prototype.isStopped = function() {\n  return this.state === "stopped";\n};\n\nAudioSource.prototype.load = function(fn) {\n  var that = this;\n\n  // Return the element or buffer, if they have already been created.\n  if (this.stream && this.element) {\n    return fn(null, this.element);\n  }\n  else if (!this.stream && this.buffer) {\n    return fn(null, this.buffer);\n  }\n\n  if (!this.asset) {\n    return fn(new Error("No audio asset"));\n  }\n\n  // If we are streaming, load the audio asset and reference the audio or video\n  // element. If we aren\'t streaming, load the entire file into an audio buffer.\n  if (this.stream) {\n    this.asset.load({\n      load: function(asset) {\n        if (!asset) {\n          return fn(new Error("Error loading audio/video file"));\n        }\n\n        if (that.isVideo) {\n          that.element = asset.threeData.image;\n        }\n        else {\n          that.element = asset.threeData;\n        }\n\n        fn(null, that.element);\n    }});\n  }\n  else {\n    if (!this.context) {\n      return fn(new Error("No Web Audio context"));\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\'GET\', this.asset.getResourcePaths({ sampleRate: 44100 })[0]);\n    xhr.responseType = \'arraybuffer\';\n\n    xhr.onreadystatechange = function(evt) {\n      if (xhr.readyState === 4) {\n        if (that.buffer) {\n          return fn(null, that.buffer);\n        }\n\n        if (xhr.status === 200) {\n          that.context.decodeAudioData(this.response, function(buffer) {\n            that.buffer = buffer;\n            fn(null, that.buffer);\n          },\n          function(err) {\n            fn(err);\n          });\n        }\n        else {\n          fn(new Error("Error loading audio file"));\n        }\n      }\n    };\n\n    xhr.send();\n  }\n};\n\nAudioSource.prototype.pause = function() {\n  if (this.state === "playing") {\n    // The order of these function calls is important: getCurrentTime() must be\n    // called while state is "playing" and before freeAudioGraph().\n    this.playOffset = this.getCurrentTime();\n    this.state = "paused";\n    this.freeAudioGraph();\n  }\n};\n\nAudioSource.prototype.play = function(offset) {\n  if (this.state === "paused" || this.state === "stopped") {\n    var that = this;\n\n    // Add the specified offset to the current play offset.\n    offset = offset !== undefined ? offset : 0;\n    this.playOffset += offset;\n\n    this.initAudioGraph(function(err, sourceNode) {\n      if (err) {\n        console.warn("Error playing audio: " + err);\n        return;\n      }\n\n      // Update the gain and loop settings.\n      that.setGain(that.gain);\n      that.setLoop(that.loop);\n\n      // If we are streaming, play the audio/video element; otherwise, play the\n      // buffer source node.\n      if (that.stream) {\n        that.element.currentTime = that.playOffset;\n        that.element.play();\n      }\n      else if (that.context) {\n        that.startTime = that.context.currentTime;\n        that.sourceNode.start(0, that.playOffset);\n      }\n      else {\n        console.warn("No Web Audio context.");\n      }\n\n      that.state = "playing";\n    });\n  }\n};\n\nAudioSource.prototype.setGain = function(gain) {\n  this.gain = gain;\n\n  // If we have a gain node, set the gain on it; otherwise, set the gain on the\n  // audio/video element.\n  if (this.gainNode) {\n    this.gainNode.gain.value = this.gain;\n  }\n  else if (this.element) {\n    this.element.volume = this.gain;\n  }\n};\n\nAudioSource.prototype.setLoop = function(loop) {\n  this.loop = loop;\n\n  if (this.element) {\n    this.element.loop = this.loop;\n  }\n  else if (this.sourceNode) {\n    this.sourceNode.loop = this.loop;\n  }\n};\n\nAudioSource.prototype.stop = function() {\n  if (this.state === "playing" || this.state === "paused") {\n    this.playOffset = 0;\n    this.state = "stopped";\n    this.freeAudioGraph();\n  }\n};\n\nAudioSource.prototype.toggle = function() {\n  if (this.state === "playing") {\n    this.pause();\n  }\n  else {\n    this.play();\n  }\n};\n\nAudioSource.prototype.update = function(delta) {\n  if (this.hasThreeData() && this.positional) {\n    var xform = this.getThreeData().matrixWorld\n      , objPos = new THREE.Vector3(0, 0, 0).applyMatrix4(xform)\n      , objDir = new THREE.Vector3(0, 0, 1).applyMatrix4(xform).sub(objPos).normalize();\n\n    this.pannerNode.setPosition(objPos.x, objPos.y, objPos.z);\n    this.pannerNode.setOrientation(objDir.x, objDir.y, objDir.z);\n  }\n};\n\nreturn AudioSource;\n\n'}),define("text!VeroldEngine/Components/BuiltIn/FreeCameraController.js",[],function(){return"/**\n *\n * FreeCamera\n *\n * All scripts will have access to the following variables in their scope:\n *\n *   VAPI - the Verold API\n *   require - requirejs\n *   THREE - THREE.JS\n *\n * All objects will have the following properties assigned to them:\n *\n *   this.veroldEntity - the verold object which this component is attached to\n *   this.events - global event system\n *\n * All of your component attributes will automatically be bound to your object,\n * you can access them via this.[attribute name].\n *\n * If you wish to have access to common javascript libraries such as jQuery or\n * Underscore, you can use the ones we provide via:\n *\n * var _ = require('underscore');\n * var $ = require('jquery');\n *\n * Alternatively, you can load in your own versions of these dependencies by\n * adding them as external dependencies on your developers tab.\n *\n * Additional information regarding the Verold API can be found in our API docs:\n *\n *  http://dev.verold.com/doc/\n */\n\nvar _ = require('underscore');\n\n/* global VAPI */\n\n/**\n * A custom component class.\n *\n * @class FreeCamera\n */\nfunction FreeCamera() {\n  this._moveVector = new THREE.Vector3();\n  this._tempVector = new THREE.Vector3();\n  this._tempVector2 = new THREE.Vector3();\n  \n  this.tempCamera = new THREE.PerspectiveCamera();\n  this.tempEuler = new THREE.Euler();\n  this.tempQuaternion = new THREE.Quaternion();\n  \n  this._currentMoveSpeed = new THREE.Vector3();\n\n  this.ellapsedTimeSinceInput = 0;\n  this.enablePan = undefined;\n  this.enableZoom = undefined;\n\n  this.invertX = false;\n  this.invertY = false;\n  this.invertZoom = false;\n  this.touchState = \"none\";\n  this.touchLast = new THREE.Vector2();\n  this.touchLastPinchDist = 0.0;\n  this.touchYStart = 0.0;\n  this.lookDelta = new THREE.Vector2();\n  this.moveDelta = new THREE.Vector3();\n  this.zoomDelta = 0.0;\n  this.currentLookSpeed = new THREE.Vector2();\n  this.currentMoveSpeed = new THREE.Vector3();\n  this.currentZoomSpeed = 0.0;\n  this.lookDeltaLength = 0.0;\n  this.moveDeltaLength = 0.0;\n\n  this.pitchAngleBoundsRadians = { max: 0.0, min: 0.0 };\n\n  this.onMouseDown_PointerLock = this.onMouseDown_PointerLock.bind(this);\n  this.onMouseUp_PointerLock = this.onMouseUp_PointerLock.bind(this);\n}\n\nFreeCamera.prototype = new VAPI.VeroldComponent();\n\n/**\n * Called immediately after after component creation\n */\nFreeCamera.prototype.init = function() {\n  \n  if ( this.usePointerLock ) {\n    this.togglePointerLock( true );\n  }\n  var engine = this.getEngine();\n  \n  this.pitchAngleBoundsRadians.max = Math.PI * this.pitchAngleBounds.max / 180.0;\n  this.pitchAngleBoundsRadians.min = Math.PI * this.pitchAngleBounds.min / 180.0;\n\n  if ( window.VAPI.isMobile() ) {\n    engine.on( 'touchStart', this.onTouchStart, this );\n    engine.on( 'touchMove', this.onTouchMove, this );\n    engine.on( 'touchEnd', this.onTouchEnd, this );\n  }\n  else {\n    engine.on( 'mouseMove', this.onMouseMove, this );\n    engine.on( 'mouseScroll', this.onMouseScroll, this );\n  }\n\n  this.getEntity().on('enableFreeCameraController', this.freeCameraEnable, this);\n  this.getEntity().on('disableFreeCameraController', this.freeCameraDisable, this);\n  this.getEntity().on('toggleFreeCameraController', this.freeCameraToggle, this);\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nFreeCamera.prototype.shutdown = function() {\n  // make sure to clean up any events or other bindings that you have created\n  // to avoid memory leaks\n  var engine = this.getEngine();\n\n  if ( window.VAPI.isMobile() ) {\n    engine.off( 'touchStart', this.onTouchStart, this );\n    engine.off( 'touchMove', this.onTouchMove, this );\n    engine.off( 'touchEnd', this.onTouchEnd, this );\n  }\n  else {\n    engine.off( 'mouseMove', this.onMouseMove, this );\n    engine.off( 'mouseScroll', this.onMouseScroll, this );\n  }\n  this.getEntity().off('enableFreeCameraController', this.freeCameraEnable, this);\n  this.getEntity().off('disableFreeCameraController', this.freeCameraDisable, this);\n  this.getEntity().off('toggleFreeCameraController', this.freeCameraToggle, this);\n  \n  this.togglePointerLock( false );\n};\n\nFreeCamera.prototype.setTargetByID = function( targetID, interpTime ) {\n  var targetObj = this.getEntity().getParentAsset().getObjectById( targetID );\n  this.setTarget( targetObj, interpTime );\n};\n\nFreeCamera.prototype.setTarget = function( targetObj ) {\n  if ( targetObj ) {\n    var that = this;\n    var targetPos = new THREE.Vector3();\n    if ( targetObj.isVeroldEntity ) {\n      this.getScene().once('load_hierarchy', function() {\n        targetObj.getCenterInWorldSpace( targetPos );\n        var dist;\n        var bb = targetObj.getProperty(\"boundingbox\");\n        if ( bb ) {\n          dist = this.adjustDistanceForObject( targetObj );\n        }\n        else {\n          targetObj.traverse( function( obj ) {\n            bb = obj.getProperty(\"boundingbox\");\n            if ( bb ) {\n              dist = that.adjustDistanceForObject( obj );\n              return true;\n            }\n          });\n        }\n        var threeData = this.getThreeData();\n        threeData.lookAt( targetPos );\n        var distanceVector = new THREE.Vector3(0, 0, dist);\n        distanceVector.applyQuaternion( threeData.quaternion );\n        targetPos.add( distanceVector );\n        threeData.position.copy( targetPos );\n        \n      }, this );\n      this.getScene().load_hierarchy();\n    }\n  }\n};\n\nFreeCamera.prototype.adjustDistanceForObject = function( targetObj ) {\n  var bb = targetObj.getProperty(\"boundingbox\");\n  if ( bb ) {\n    var dist = new THREE.Vector3();\n    dist.set( bb.max.x - bb.min.x, bb.max.y - bb.min.y, bb.max.z - bb.min.z);\n    var scale = new THREE.Vector3();\n    scale.setFromMatrixScale( targetObj.threeData.matrixWorld );\n    dist.multiply( scale );\n    var size = dist.length();\n    var newDist = Math.abs( size / (2.0 * Math.tan( this.getThreeData().fov * Math.PI / 360.0 )) );\n    //newDist = Math.max( Math.min( newDist, this.orbitDistanceMax ), this.orbitDistanceMin );\n    return newDist;\n  }\n};\n\n/**\n * Called per VeroldEngine update (per frame)\n * @param  {float} delta The number of seconds since the last call to `update`\n */\nFreeCamera.prototype.preUpdate = function( delta ) {\n  \n  if (this.hasThreeData() && this.isEnabled() ) {\n    //Check WASD state and move camera appropriately\n    //Also check for modifier keys like ctrl and cmd. If these are pressed,\n    //don't move the camera.\n    var input = this.getInput();\n    var modKey = input.keyDown(\"ctrl\") || input.keyDown(\"cmd\");\n    var forwardKey = input.keyDown(\"upArrow\") || input.keyDown(\"W\");\n    var backwardKey = input.keyDown(\"downArrow\") || input.keyDown(\"S\");\n    var leftKey = input.keyDown(\"leftArrow\") || input.keyDown(\"A\");\n    var rightKey = input.keyDown(\"rightArrow\") || input.keyDown(\"D\");\n\n    if ( !modKey && ( forwardKey || backwardKey || leftKey || rightKey ) ) {\n      \n      if ( this.enableZoom ) {\n        if ( forwardKey ) {\n          this.moveDelta.z = -delta;\n        }\n        else if ( backwardKey ) {\n          this.moveDelta.z = delta;\n        }\n      }\n      if ( this.enablePan ) {\n        if ( rightKey ) {\n          this.moveDelta.x = -delta;\n        }\n        else if ( leftKey ) {\n          this.moveDelta.x = delta;\n        }\n      }\n    }\n    this.updateCamera( delta );\n\n  }\n};\n\nFreeCamera.prototype.postUpdate = function() {\n  this.hasChanged = false;\n};\n\nFreeCamera.prototype.updateCamera = function( delta ) {\n\n  //Handle inverting the controls\n  if ( this.invertX ) {\n    this.lookDelta.x *= -1.0;\n    this.moveDelta.x *= -1.0;\n  }\n  if ( this.invertY ) {\n    this.lookDelta.y *= -1.0;\n    this.moveDelta.y *= -1.0;\n  }\n  if ( this.invertZoom ) {\n    this.zoomDelta *= -1.0;\n  }\n\n  //Handle speed modifier keys\n  var speedMod = 1.0;\n  if ( this.getInput().keyDown( \"shift\" ) ) {\n    speedMod = 5.0;\n  }\n  // else if ( this.getInput().keyDown( \"ctrl\" ) ) {\n  //   speedMod = 0.25;\n  // }\n\n  var damping = Math.min((delta - 0.017) * 33.3 + this.inertialDamping, 1.0);\n  var oneMinusDamping = 1.0 - damping;\n\n  this.currentLookSpeed.x = oneMinusDamping * this.currentLookSpeed.x + damping * 6.0 * speedMod * this.lookSpeed * this.lookDelta.x;\n  this.currentLookSpeed.y = oneMinusDamping * this.currentLookSpeed.y + damping * 6.0 * speedMod * this.lookSpeed * this.lookDelta.y;\n  \n  //If the movement controls have been used, update the movement speed.\n  this.currentMoveSpeed.x = oneMinusDamping * this.currentMoveSpeed.x + damping * speedMod * this.movementSpeed * this.moveDelta.x;\n  this.currentMoveSpeed.y = oneMinusDamping * this.currentMoveSpeed.y + damping * speedMod * this.movementSpeed * this.moveDelta.y;\n  this.currentMoveSpeed.z = oneMinusDamping * this.currentMoveSpeed.z + damping * speedMod * this.movementSpeed * this.moveDelta.z;\n  \n  //Handle zoom\n  this.currentMoveSpeed.z += oneMinusDamping * this.currentZoomSpeed + damping * speedMod * this.movementSpeed * this.zoomDelta;\n  \n  //Update the three camera based on the current movement speed.\n  var threeData = this.getThreeData();\n\n  //Using current x,y rotation speed, determine the new quaternion for the camera\n  //New position is based on the distance and direction to target\n  \n  this.tempEuler.set( this.currentLookSpeed.y, this.currentLookSpeed.x, 0.0 );\n  this.tempQuaternion.setFromEuler( this.tempEuler );\n  threeData.quaternion.multiply( this.tempQuaternion );\n\n  //Set bounds on the pitch angle\n  this.tempEuler.setFromQuaternion( threeData.quaternion, 'YXZ' );\n  if ( -this.tempEuler.x > this.pitchAngleBoundsRadians.max ) {\n    this.tempEuler.x = -this.pitchAngleBoundsRadians.max;\n    threeData.quaternion.setFromEuler( this.tempEuler );\n    this.currentLookSpeed.y = 0.0;\n  }\n  else if ( -this.tempEuler.x < this.pitchAngleBoundsRadians.min ) {\n    this.tempEuler.x = -this.pitchAngleBoundsRadians.min;\n    threeData.quaternion.setFromEuler( this.tempEuler );\n    this.currentLookSpeed.y = 0.0;\n  }\n\n  //Handle linear movement of the camera\n  this._tempVector.copy( this.currentMoveSpeed );\n  this._tempVector.x *= -1.0;\n  this._tempVector.applyQuaternion( threeData.quaternion );\n  threeData.position.add( this._tempVector );\n  \n  //Set the camera's position using the orientation and \n  this._tempVector.set( 0.0, 0.0, -10.0 );\n  this._tempVector.applyQuaternion( threeData.quaternion );\n  this._tempVector.add( threeData.position );\n\n  threeData.lookAt( this._tempVector );\n\n  if ( this.currentZoomSpeed || this.currentLookSpeed.x || this.currentLookSpeed.y || this.currentMoveSpeed.x || this.currentMoveSpeed.y || this.currentMoveSpeed.z ) {\n    this.getEngine().needsRender = true;\n    this.hasChanged = true;\n  }\n\n  this.lookDelta.set( 0.0, 0.0 );\n  this.moveDelta.set( 0.0, 0.0, 0.0 );\n  this.zoomDelta = 0.0;\n};\n\n\nFreeCamera.prototype.freeCameraEnable = function( blendTime ) {\n  this.enable();\n};\n\nFreeCamera.prototype.freeCameraDisable = function( ) {\n  this.disable();\n};\n\nFreeCamera.prototype.freeCameraToggle = function( ) {\n  if ( this.isEnabled() ) {\n    this.disable();\n  }\n  else {\n    this.enable();\n  }\n  if ( this.usePointerLock && !this.isEnabled() ) {\n    document.exitPointerLock();\n  }\n};\n\nFreeCamera.prototype.getEulerAngles = function( outEuler ) {\n  var returnVector = outEuler;\n  if ( !outEuler ) {\n    returnVector = new THREE.Euler();\n  }\n  returnVector.setFromQuaternion( this.getThreeData().quaternion, 'YXZ' );\n  \n  return returnVector;\n};\n\nFreeCamera.prototype.setEulerAngles = function( euler ) {\n  this.getThreeData().quaternion.setFromEuler( euler );\n};\n\nFreeCamera.prototype.togglePointerLock = function( on ) {\n  this.usePointerLock = on;\n  \n  if ( this.usePointerLock ) {\n    this.getThreeRenderer().domElement.addEventListener( 'mousedown', this.onMouseDown_PointerLock);\n  }\n  else {\n    this.getThreeRenderer().domElement.removeEventListener( 'mousedown', this.onMouseDown_PointerLock);\n  }\n};\n\nFreeCamera.prototype.onMouseDown_PointerLock = function( event ) {\n  if ( this.isEnabled() && event.button === 0 || event.button === 2 ) {\n    this.getThreeRenderer().domElement.requestPointerLock();\n    \n    this.getThreeRenderer().domElement.addEventListener( 'mouseup', this.onMouseUp_PointerLock);\n  }\n};\n\nFreeCamera.prototype.onMouseUp_PointerLock = function( event ) {\n  if ( this.veroldEntity ) {\n    if ( event.button === 2 && this.getInput().mouseButtonUp( \"left\" ) || event.button === 0 && that.getInput().mouseButtonUp( \"right\" ) ) {\n      this.getThreeRenderer().domElement.removeEventListener( 'mouseup', this.onMouseUp_PointerLock );\n      document.exitPointerLock();\n    }\n  }\n};\n  \n\nFreeCamera.prototype.onMouseMove = function( event ) {\n  if ( this.isEnabled() ) {\n    var input = this.getInput();\n    var rightButton = input.mouseButtonDown(\"right\");\n    var leftButton = input.mouseButtonDown(\"left\");\n    // var middleButton = input.mouseButtonDown(\"middle\");\n\n  \n    if ( ( rightButton ) && this.enablePan ) {\n\n      this.moveDelta.x = event.scenePercentDeltaX;\n      this.moveDelta.y = event.scenePercentDeltaY;\n    }\n    else if ( leftButton ) {\n\n      this.lookDelta.x = -event.scenePercentDeltaX;\n      this.lookDelta.y = -event.scenePercentDeltaY;\n    }\n\n  }\n};\n      \nFreeCamera.prototype.onMouseScroll = function( delta ) {\n  if ( this.isEnabled() && _.isNumber( delta ) && this.enableZoom ) {\n    \n    this.zoomDelta = -delta * 0.1;\n  }\n};\n\nFreeCamera.prototype.onTouchStart = function( event ) {\n\n  if ( this.isEnabled() ) {\n    \n    var touches = event.touches;\n    if ( !touches ) return;\n\n    switch ( touches.length ) {\n\n    case 1: // one-fingered touch: rotate\n      this.touchState = \"rotate\";\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\n      \n      break;\n\n    case 2: // two-fingered touch: dolly\n      this.touchState = \"zoom\";\n\n      var dx = touches[ 0 ].scenePercentX - touches[ 1 ].scenePercentX;\n      var dy = touches[ 0 ].scenePercentY - touches[ 1 ].scenePercentY;\n      var distance = Math.sqrt( dx * dx + dy * dy );\n\n      this.touchLastPinchDist = distance;\n      this.touchYStart = touches[ 0 ].scenePercentY;\n      break;\n\n    case 3: // three-fingered touch: pan\n      this.touchState = \"pan\";\n\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\n      break;\n\n    default:\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\n      this.touchLastPinchDist = -1;\n    }\n\n  }\n};\n\nFreeCamera.prototype.onTouchMove = function( event ) {\n\n  var touches = event.touches;\n  if ( !touches ) return;\n  // var speedMod = 0.3;\n  var dx, dy;\n  switch ( touches.length ) {\n\n  case 1: // one-fingered touch: rotate\n    if ( this.touchLast.x >= 0 ) {\n      dx = -0.5 * ( this.touchLast.x - touches[ 0 ].scenePercentX );\n      dy = -0.5 * ( this.touchLast.y - touches[ 0 ].scenePercentY );\n    }\n    else {\n      dx = 0.0;\n      dy = 0.0;\n    }\n\n    this.touchLast.x = touches[ 0 ].scenePercentX;\n    this.touchLast.y = touches[ 0 ].scenePercentY;\n    \n    this.ellapsedTimeSinceInput = 0;\n    \n    this.lookDelta.set( dx, dy );\n\n    break;\n\n  case 2: // two-fingered touch: dolly\n    \n    dx = touches[ 0 ].scenePercentX - touches[ 1 ].scenePercentX;\n    dy = touches[ 0 ].scenePercentY - touches[ 1 ].scenePercentY;\n    var distance = Math.sqrt( dx * dx + dy * dy );\n\n    if ( this.touchLast.x >= 0.0 ) {\n      var pinchChange = this.touchLastPinchDist - distance;\n      var scrollChange = this.touchLast.y - touches[ 0 ].scenePercentY;\n      if ( Math.abs( pinchChange ) > Math.abs( scrollChange ) ) {\n        this.zoomDelta = 20.0 * pinchChange;\n      }\n      else {\n        this.zoomDelta = 20.0 * scrollChange;\n      }\n    }\n\n    this.touchLastPinchDist = distance;\n    this.touchLast.x = touches[ 0 ].scenePercentX;\n    this.touchLast.y = touches[ 0 ].scenePercentY;\n\n    break;\n\n  case 3: // three-fingered touch: pan\n    dx = touches[ 0 ].scenePercentX - this.touchLast.x;\n    dy = touches[ 0 ].scenePercentY - this.touchLast.y;\n\n    if ( this.touchLast.x >= 0.0 ) {\n      this.moveDelta.set( dx, dy, 0.0 );\n    }\n\n    this.touchLast.x = touches[ 0 ].scenePercentX;\n    this.touchLast.y = touches[ 0 ].scenePercentY;\n    break;\n  }\n  \n};\n\nFreeCamera.prototype.onTouchEnd = function( /* event */ ) {\n\n  this.touchLast.set( -1.0, -1.0 );\n  this.touchLastPinchDist = -1;\n  this.touchState = \"none\";\n};\n\n\nreturn FreeCamera;\n"}),define("text!VeroldEngine/Components/BuiltIn/OrbitCameraController.js",[],function(){return"/*\r\n@vname Orbit Camera Controller\r\n@vdescription A controller that allows a camera to easily orbit a target object.\r\n@vfilter camera\r\n@vcategory 'Camera Controllers'\r\n@vattr object targetObject { \r\n  default : null, \r\n  description : 'The object that the camera orbit point will be relative to.',\r\n}\r\n@vattr v3 targetOffset {\r\n  'default' : {\"x\": 0.0, \"y\": 0.0, 'z': 0.0 },\r\n  'description' : 'An offset relative to the target object. This will allow you to target a specific point on an object.',\r\n}\r\n@vattr float inertialDamping {\r\n  'default': 0.40,\r\n  'description': 'How quickly the camera stops moving when input stops.',\r\n  \"min\" : 0.0,\r\n  \"max\" : 1.0\r\n}\r\n@vattr bool invertX {\r\n  'default': false,\r\n  'description': 'Reverse the default direction that the camera moves horizontally.'\r\n}\r\n@vattr bool invertY {\r\n  'default': false,\r\n  'description': 'Reverse the default direction that the camera moves vertically.'\r\n}\r\n@vattr bool invertZoom {\r\n  'default': false,\r\n  'description': 'Reverse the default direction that the camera moves when zooming.'\r\n}\r\n@vattr float lookSpeed {\r\n  'description' : 'The speed that the camera orbits the target',\r\n  'default' : 1.0,\r\n  'max' : 1000,\r\n  'min' : 0.0001\r\n}\r\n@vattr float movementSpeed {\r\n  'description' : 'The speed that the camera moves when panning',\r\n  'default' : 8.0,\r\n  'max' : 2000,\r\n  'min' : 0.001\r\n}\r\n@vattr bool autoOrbit {\r\n  'default': false,\r\n  'description': 'Automatically orbit the camera when the user is not controlling it.'\r\n}\r\n@vattr float autoOrbitSpeed {\r\n  'description' : 'The speed of the automatic orbit.',\r\n  'default' : 1.0,\r\n  'max' : 1000,\r\n  'min' : -1000\r\n}\r\n@vattr float autoOrbitDelay {\r\n  'description' : 'The period of time with no mouse input before the auto-orbit starts (in seconds).',\r\n  'default' : 1.0,\r\n  'max' : 1000,\r\n  'min' : 0.0001\r\n}\r\n@vattr float orbitDistanceMin {\r\n  'description' : 'The closest that the camera is allowed to get to the target.',\r\n  'default' : 0.01,\r\n  'max' : 1000,\r\n  'min' : 0.001\r\n}\r\n@vattr float orbitDistanceMax {\r\n  'description' : 'The furthest that the camera is allowed to get from the target.',\r\n  'default' : 500.0,\r\n  'max' : 10000,\r\n  'min' : 1.0\r\n}\r\n@vattr Vector2 pitchAngleBounds {\r\n  'description' : 'Allows you to set how far the camera can pitch (tilt) from horizontal. Defined in degrees with horizontal being 0.',\r\n  'default': {\"max\": 75.0, \"min\": -75.0 },\r\n  \"max\": { \"max\": 90.0, \"min\": 90.0 },\r\n  \"min\": { \"max\": -90.0, \"min\": -90.001 } \r\n}\r\n@vattr bool enablePan {\r\n  'default': true,\r\n  'description': 'Allow the user to pan side-to-side and up and down with the camera.'\r\n}\r\n@vattr bool enableZoom {\r\n  'default': true,\r\n  'description': 'Allow the user to zoom in and out with the camera.'\r\n}\r\n@vattr bool interpolation {\r\n  'default': true,\r\n  'description': 'When enabled, the camera will smoothly interpolate toward its desired state. e.g. If something else moves the camera, interpolation will cause the camera to smoothly focus on the target again. Otherwise, it will snap back.'\r\n}\r\n@vattr float interpSpeed {\r\n  'description' : 'The speed at which the orbiting camera locks on to its target, if set to point away from it.',\r\n  'default' : 0.5,\r\n  'max' : 10.0,\r\n  'min' : 0.01\r\n}\r\n@vattr bool usePointerLock {\r\n  'default': false,\r\n  'description': 'The mouse cursor will be hidden during camera control and won\\'t move. Requires the user to accept pointer lock message in web browser.'\r\n}\r\n\r\n@vevent local enableOrbitCameraController {'scope' : 'local', 'action':true, 'category':'Orbit Camera', 'parameters' : []}\r\n@vevent local disableOrbitCameraController {'scope' : 'local', 'action':true, 'category':'Orbit Camera', 'parameters' : []}\r\n@vevent local toggleOrbitCameraController {'scope' : 'local', 'action':true, 'category':'Orbit Camera', 'parameters' : []}\r\n@vevent local setOrbitDistance {'scope' : 'local', 'action':true, 'category':'Orbit Camera', 'parameters' : [\r\n  {'name': 'newDistance', 'type': 'f', 'description': 'The new distance that the camera will orbit at.', 'default': 1.0},\r\n]}\r\n@vevent local setTarget {'scope' : 'local', 'description': 'Sets the camera to orbit the given object', 'action':true, 'category':'Orbit Camera', 'parameters' : [\r\n  {'name': 'newTarget', 'type': 'object', 'description': 'The new target that the camera will orbit.', 'default': null},\r\n  {'name': 'center', 'type': 'b', 'description': 'Whether or not to target the center of the object. If false, the camera will orbit the origin of the object.', 'default': true},\r\n]}\r\n@vevent local focusOnTarget {'scope' : 'local', 'description': 'Look at the center of the current target and zoom so that the object nicely fills the field of view.', 'action':true, 'category':'Orbit Camera', 'parameters' : []}\r\n\r\n*/\r\n\r\nvar _ = require('underscore');\r\n\r\n/* global VAPI */\r\n\r\n/**\r\n * A custom component class.\r\n *\r\n * @class OrbitCamera\r\n */\r\nfunction OrbitCamera() {\r\n  this.isEditor = false;\r\n  this._moveVector = new THREE.Vector3();\r\n  this._tempVector = new THREE.Vector3();\r\n  this._tempVector2 = new THREE.Vector3();\r\n  this._tempVector4 = new THREE.Vector4();\r\n  this._pivotWorldPos = new THREE.Vector3();\r\n  this._tempMatrix4 = new THREE.Matrix4();\r\n  //The point that the camera will orbit (using the targetObject and targetOffset)\r\n  this.pivotPoint = new THREE.Object3D();\r\n  this.targetObject = undefined;\r\n  this.targetOffset = new THREE.Vector3();\r\n  this.tempCamera = new THREE.PerspectiveCamera();\r\n  this.tempEuler = new THREE.Euler(0,0,0, 'YXZ');\r\n  this.tempQuaternion = new THREE.Quaternion();\r\n  this.tempQuaternion2 = new THREE.Quaternion();\r\n  this.currentOrbitDistance = 2.50;\r\n  this.newOrbitDistance = 0.0;\r\n  this.targetMoved = true;\r\n  \r\n  this.ellapsedTimeSinceInput = 0;\r\n  this.enablePan = undefined;\r\n  this.enableZoom = undefined;\r\n\r\n  this.invertX = false;\r\n  this.invertY = false;\r\n  this.invertZoom = false;\r\n  this.touchLast = new THREE.Vector2();\r\n  this.touchLastPinchDist = 0.0;\r\n  // this.touchYStart = 0.0;\r\n  this.orbitMovement = new THREE.Vector2();\r\n  this.linearMovementDelta = new THREE.Vector3();\r\n  this.zoomDelta = 0.0;\r\n  this.currentOrbitSpeed = new THREE.Vector2();\r\n  this.currentMoveSpeed = new THREE.Vector2();\r\n  this.currentZoomSpeed = 0.0;\r\n  this.orbitMovementLength = 0.0;\r\n  this.linearMovementDeltaLength = 0.0;\r\n\r\n  this.moveStart = new THREE.Vector2();\r\n  this.pan = false;\r\n  this.look = false;\r\n  this.zoom = false;\r\n  this.isMouseDragging = false;\r\n  this.isTouchDragging = false;\r\n  this.autoOrbitOn = false;\r\n    \r\n  // this.positionStart = new THREE.Vector3();\r\n  this.quaternionStart = new THREE.Quaternion();\r\n  this.eulerStart = new THREE.Euler(0,0,0, 'YXZ');\r\n  this.currentMousePosition = new THREE.Vector2();\r\n\r\n  this.pitchAngleBoundsRadians = { max: 0.0, min: 0.0 };\r\n  this.onMouseDown_PointerLock = this.onMouseDown_PointerLock.bind(this);\r\n  this.onMouseUp_PointerLock = this.onMouseUp_PointerLock.bind(this);\r\n}\r\n\r\nOrbitCamera.prototype = new VAPI.VeroldComponent();\r\n\r\nOrbitCamera.prototype.editorInit = function() {\r\n  // var that = this;\r\n  this.isEditor = true;\r\n  this.init();\r\n  this.pivotPoint.add( \r\n    new THREE.Mesh( \r\n      new THREE.SphereGeometry( 0.025, 12, 12 ), \r\n      new THREE.MeshBasicMaterial({wireframe: true})\r\n    ));\r\n  this.pivotPoint.visible = false;\r\n  this.getEngine().on( \"update\", this.editorUpdate, this );\r\n  this.getEntity().on( \"editorSelected\", this.onSelected, this );\r\n  this.getEntity().on( \"editorUnselected\", this.onUnselected, this );\r\n  var that = this;\r\n  VAPI.globalEvents.trigger('studioApp::isSelected', this.getEntity(), function( selected ) {\r\n    if ( selected ) {\r\n      that.onSelected();\r\n    }\r\n  });\r\n};\r\n\r\nOrbitCamera.prototype.editorShutdown = function() {\r\n  this.shutdown();\r\n  this.getEngine().off( \"update\", this.editorUpdate, this );\r\n  this.getEntity().off( \"editorSelected\", this.onSelected, this );\r\n  this.getEntity().off( \"editorUnselected\", this.onUnselected, this );\r\n  this.getEntity().reset();\r\n  if ( this.transformControls ) {\r\n    this.transformControls.detach( this.pivotPoint );\r\n    if ( this.transformControls.parent ) {\r\n      this.transformControls.parent.remove( this.transformControls );\r\n    }\r\n    this.transformControls.destroy();\r\n  }\r\n  this.pivotPoint.visible = false;\r\n};\r\n\r\nOrbitCamera.prototype.onSelected = function() {\r\n  var that = this;\r\n  if ( !this.transformControls ) {\r\n    var editorCamera;\r\n    VAPI.globalEvents.trigger('studioApp::getCurrentCamera', function( camera ) {\r\n      editorCamera = camera.threeData;\r\n    });\r\n    this.transformControls = new THREE.TransformControls( editorCamera, this.getEngine().canvas );\r\n    this.transformControls.size = 0.75;\r\n    // this.transformControls.addEventListener( 'change', function( gizmo ) {\r\n    // });\r\n    this.transformControls.addEventListener( 'change_final', function( gizmo ) {\r\n      that.setAttribute('targetOffset', that.pivotPoint.position, { save: true } );\r\n    });\r\n    this.initTarget();\r\n  }\r\n  if ( this.isEnabled() ) {\r\n    this.transformControls.attach( this.pivotPoint );\r\n    this.pivotPoint.visible = true;\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onUnselected = function() {\r\n  if ( this.isEnabled() ) {\r\n    this.pivotPoint.visible = false;\r\n    if ( this.transformControls ) {\r\n      this.transformControls.detach( this.pivotPoint );\r\n    }\r\n    this.getEntity().reset();\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.editorUpdate = function( delta ) {\r\n  if ( this.isEnabled() && this.transformControls && this.pivotPoint.visible ) {\r\n    this.transformControls.update();\r\n    this.updateCamera( delta );\r\n\r\n    var editorCamera;\r\n    VAPI.globalEvents.trigger('studioApp::getCurrentCamera', function( camera ) {\r\n      editorCamera = camera.threeData;\r\n    });\r\n    if ( this.pivotPoint.parent ) {\r\n      this._tempVector.subVectors( this.pivotPoint.getWorldPosition(), editorCamera.getWorldPosition() );\r\n      var distance = this._tempVector.length();\r\n      this.pivotPoint.scale.copy( this.pivotPoint.parent.getWorldScale() );\r\n      this.pivotPoint.scale.x = distance / this.pivotPoint.scale.x;\r\n      this.pivotPoint.scale.y = distance / this.pivotPoint.scale.y;\r\n      this.pivotPoint.scale.z = distance / this.pivotPoint.scale.z;\r\n      \r\n    }\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onEnable = function() {\r\n  if ( this.isEditor ) {\r\n    this.onSelected();\r\n  }\r\n  else {\r\n    this.getEntity().reset();\r\n    this.targetOffset = this.getAttribute( 'targetOffset' );\r\n    this.attributesChanged( { targetOffset: this.targetOffset });\r\n    this.currentMoveSpeed.set( 0, 0 );\r\n    this.moveStart.copy( this.currentMousePosition );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onDisable = function() {\r\n  if ( this.isEditor ) {\r\n    this.pivotPoint.visible = false;\r\n    this.transformControls.detach( this.pivotPoint );\r\n    this.getEntity().reset();\r\n  }\r\n  else {\r\n    this.getEntity().reset();\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.attributesChanged = function( changes ) {\r\n  if ( changes.targetObject !== undefined ) {\r\n    this.targetMoved = true;\r\n    // if ( !(changes.targetOffset && changes.targetOffset.x !== undefined) ) {\r\n    //   var that = this;\r\n    //   var offset = { x: 0, y: 0, z: 0};\r\n    //   that.setAttribute('targetOffset', offset, { save: true } );\r\n    // }\r\n    this.initTarget();\r\n    \r\n    if ( this.isEditor ) {\r\n      this.pivotPoint.scale.copy( this.pivotPoint.parent.getWorldScale() );\r\n      this.pivotPoint.scale.x = 1.0 / this.pivotPoint.scale.x;\r\n      this.pivotPoint.scale.y = 1.0 / this.pivotPoint.scale.y;\r\n      this.pivotPoint.scale.z = 1.0 / this.pivotPoint.scale.z;\r\n    }\r\n  }\r\n  else if ( changes.targetOffset && changes.targetOffset.x !== undefined ) {\r\n    this.setTargetOffset( changes.targetOffset );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.init = function() {\r\n  \r\n  var engine = this.getEngine();\r\n  \r\n  if ( this.usePointerLock ) {\r\n    this.togglePointerLock( true );\r\n  }\r\n  this.pitchAngleBoundsRadians.max = Math.PI * this.pitchAngleBounds.max / 180.0;\r\n  this.pitchAngleBoundsRadians.min = Math.PI * this.pitchAngleBounds.min / 180.0;\r\n\r\n  this.getEntity().when('load_base', this.initTarget, this );\r\n  this.on( 'enable', this.onEnable, this );\r\n  this.on( 'disable', this.onDisable, this );\r\n  \r\n  if ( !this.isEditor ) {\r\n    if ( window.VAPI.isMobile() ) {\r\n      engine.on( 'touchStart', this.onTouchStart, this );\r\n      engine.on( 'touchMove', this.onTouchMove, this );\r\n      engine.on( 'touchEnd', this.onTouchEnd, this );\r\n    }\r\n    else {\r\n      engine.on( 'mouseUp', this.onMouseUp, this );\r\n      engine.on( 'mouseDown', this.onMouseDown, this );\r\n      engine.on( 'mouseMove', this.onMouseMove, this );\r\n      engine.on( 'mouseScroll', this.onMouseScroll, this );\r\n    }\r\n  }\r\n\r\n  this.getEntity().on('enableOrbitCameraController', this.orbitCameraEnable, this);\r\n  this.getEntity().on('disableOrbitCameraController', this.orbitCameraDisable, this);\r\n  this.getEntity().on('toggleOrbitCameraController', this.orbitCameraToggle, this);\r\n  this.getEntity().on('setOrbitDistance', this.setOrbitDistance, this);\r\n  this.getEntity().on('setTarget', this.setTarget, this);\r\n  this.getEntity().on('focusOnTarget', this.focusOnTarget, this);\r\n};\r\n\r\nOrbitCamera.prototype.shutdown = function() {\r\n  // make sure to clean up any events or other bindings that you have created\r\n  // to avoid memory leaks\r\n  var engine = this.getEngine();\r\n  this.off( 'enable', this.onEnable, this );\r\n  this.off( 'disable', this.onDisable, this );\r\n\r\n  if ( window.VAPI.isMobile() ) {\r\n    engine.off( 'touchStart', this.onTouchStart, this );\r\n    engine.off( 'touchMove', this.onTouchMove, this );\r\n    engine.off( 'touchEnd', this.onTouchEnd, this );\r\n  }\r\n  else {\r\n    engine.off( 'mouseUp', this.onMouseUp, this );\r\n    engine.off( 'mouseDown', this.onMouseDown, this );\r\n    engine.off( 'mouseMove', this.onMouseMove, this );\r\n    engine.off( 'mouseScroll', this.onMouseScroll, this );\r\n  }\r\n  \r\n  this.togglePointerLock( false );\r\n\r\n  this.getEntity().off('enableOrbitCameraController', this.orbitCameraEnable, this);\r\n  this.getEntity().off('disableOrbitCameraController', this.orbitCameraDisable, this);\r\n  this.getEntity().off('toggleOrbitCameraController', this.orbitCameraToggle, this);\r\n  this.getEntity().off('setOrbitDistance', this.setOrbitDistance, this);\r\n  this.getEntity().off('setTarget', this.setTarget, this);\r\n  this.getEntity().off('focusOnTarget', this.focusOnTarget, this);\r\n};\r\n\r\nOrbitCamera.prototype.objectCreated = function() {\r\n  this.quaternionStart.copy( this.getThreeData().quaternion );\r\n  this.eulerStart.setFromQuaternion( this.quaternionStart, 'YXZ' );\r\n};\r\n\r\n//Sets the orbit point to that defined by targetObject and targetOffset.\r\nOrbitCamera.prototype.initTarget = function() {\r\n  var that = this;\r\n\r\n  // that._tempVector.set(0,0,0);\r\n    \r\n  this.getScene().when('load_hierarchy', function() {\r\n    if ( that.targetObject && that.targetObject !== that.getEntity() && that.targetObject.threeData ) {\r\n      that.targetObject.threeData.add( that.pivotPoint );\r\n      that.pivotPoint.position.copy( that.targetOffset );\r\n    }\r\n    else {\r\n      that.getThreeScene().add( that.pivotPoint );\r\n      that.pivotPoint.position.copy( that.targetOffset );\r\n    }\r\n    if ( that.isEditor && that.transformControls ) {\r\n      that.getThreeScene().add( that.transformControls );\r\n    }\r\n\r\n  }, this );\r\n\r\n};\r\n\r\nOrbitCamera.prototype.setTargetOffset = function( newOffset, options ) {\r\n  this.targetMoved = true;\r\n  this.pivotPoint.position.copy( newOffset );\r\n  var json = { x: newOffset.x, y: newOffset.y, z: newOffset.z };\r\n  this.setAttribute('targetOffset', json, options );\r\n};\r\n\r\nOrbitCamera.prototype.setOrbitDistance = function( newDistance ) {\r\n  this.newOrbitDistance = newDistance;\r\n};\r\n\r\nOrbitCamera.prototype.setTarget = function( newObjectId, center, options ) {\r\n  if ( _.isString( newObjectId ) || !newObjectId ) {\r\n    this.setAttribute('targetObject', newObjectId );\r\n  }\r\n  else if ( _.isObject( newObjectId ) && newObjectId.id ) {\r\n    this.setAttribute('targetObject', newObjectId.id );\r\n  }\r\n  if ( center ) {\r\n    this.lookAtCenter( options );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.lookAtCenter = function( options ) {\r\n  this.targetMoved = true;\r\n  var json = { x: 0, y: 0, z: 0 };\r\n  if ( this.targetObject ) {\r\n    var center = this.targetObject.getCenter();\r\n    this.pivotPoint.position.copy( center );\r\n    json = { x: center.x, y: center.y, z: center.z };\r\n  }\r\n  this.setAttribute('targetOffset', json, options );\r\n};\r\n\r\nOrbitCamera.prototype.focusOnTarget = function() {\r\n  //adjust target offset to point to centre of object\r\n  //call setOrbitDistance to cause the target to fill the field of view\r\n  if ( this.targetObject ) {\r\n    \r\n    this.lookAtCenter();\r\n    var newDistance;\r\n    var bb = this.targetObject.getProperty(\"boundingbox\");\r\n    if ( bb ) {\r\n      var dist = new THREE.Vector3();\r\n      dist.set( bb.max.x - bb.min.x, bb.max.y - bb.min.y, bb.max.z - bb.min.z);\r\n      var scale;\r\n      if ( this.targetObject.threeData ) {\r\n        this.targetObject.threeData.updateMatrixWorld();\r\n        scale = new THREE.Vector3();\r\n        scale.setFromMatrixScale( this.targetObject.threeData.matrixWorld );\r\n      }\r\n      else {\r\n        scale = this.targetObject.getScale();\r\n      }\r\n      dist.multiply( scale );\r\n      var size = dist.length();\r\n      if ( this.getEntity().getProperty(\"type\") === \"PerspectiveCamera\") {\r\n        newDistance = Math.abs( size / (2.0 * Math.tan( this.getEntity().getProperty(\"fov\") * Math.PI / 360.0 )) );\r\n      }\r\n      else {\r\n        newDistance = 0.5 * (this.getEntity().getProperty(\"near\") + this.getEntity().getProperty(\"far\"));\r\n      }\r\n      \r\n      newDistance = Math.max( Math.min( newDistance, this.orbitDistanceMax ), this.orbitDistanceMin );\r\n    }\r\n    else {\r\n      this._tempVector.subVectors( this.getEntity().getPosition(), this.targetObject.getProperty(\"position\") );\r\n      newDistance = Math.max( Math.min( this._tempVector.length(), this.orbitDistanceMax ), this.orbitDistanceMin );\r\n    }\r\n    this.setOrbitDistance( newDistance );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Called per VeroldEngine update (per frame)\r\n * @param  {float} delta The number of seconds since the last call to `update`\r\n */\r\nOrbitCamera.prototype.preUpdate = function( delta ) {\r\n\r\n  if (this.hasThreeData() && this.isEnabled() ) {\r\n\r\n    //Check WASD state and move camera appropriately\r\n    //Also check for modifier keys like ctrl and cmd. If these are pressed,\r\n    //don't move the camera.\r\n    var input = this.getInput();\r\n    var modKey = input.keyDown(\"ctrl\") || input.keyDown(\"cmd\");\r\n    var forwardKey = input.keyDown(\"upArrow\") || input.keyDown(\"W\");\r\n    var backwardKey = input.keyDown(\"downArrow\") || input.keyDown(\"S\");\r\n    var leftKey = input.keyDown(\"leftArrow\") || input.keyDown(\"A\");\r\n    var rightKey = input.keyDown(\"rightArrow\") || input.keyDown(\"D\");\r\n\r\n    if ( !modKey && ( forwardKey || backwardKey || leftKey || rightKey ) ) {\r\n\r\n      if ( this.enableZoom ) {\r\n        if ( forwardKey ) {\r\n          this.zoomDelta = -delta;\r\n        }\r\n        else if ( backwardKey ) {\r\n          this.zoomDelta = delta;\r\n        }\r\n        // this.linearMovementDeltaLength = this.linearMovementDelta.length();\r\n      }\r\n      if ( this.enablePan ) {\r\n        if ( rightKey ) {\r\n          this.linearMovementDelta.x = -delta;\r\n        }\r\n        else if ( leftKey ) {\r\n          this.linearMovementDelta.x = delta;\r\n        }\r\n        // this.linearMovementDeltaLength = this.linearMovementDelta.length();\r\n      }\r\n    }\r\n    this.updateCamera( delta );\r\n\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.postUpdate = function() {\r\n  this.hasChanged = false;\r\n};\r\n\r\nOrbitCamera.prototype.updateCamera = function( delta ) {\r\n\r\n  var input = this.getInput();\r\n  \r\n  //Handle speed modifier keys\r\n  var speedMod = 1.0;\r\n  if ( input.keyDown( \"shift\" ) ) {\r\n    speedMod = 5.0;\r\n  }\r\n  // else if ( this.getInput().keyDown( \"ctrl\" ) ) {\r\n  //   speedMod = 0.25;\r\n  // }\r\n\r\n  //If there is any user control, reset the ellapsed time.\r\n  if ( this.isMouseDragging || this.zoomDelta ) {\r\n    this.ellapsedTimeSinceInput = 0.0;\r\n  }\r\n  else {\r\n    this.ellapsedTimeSinceInput += delta;\r\n  }\r\n  \r\n  this.orbitMovement.copy( this.currentMousePosition );\r\n  this.orbitMovement.sub( this.moveStart );\r\n  this.orbitMovement.multiplyScalar( 6.0 * speedMod * this.lookSpeed );\r\n  \r\n  var threeData = this.getThreeData();\r\n  var damping = Math.max( 0.0, Math.min( delta * 33.3 * this.inertialDamping, 1.0) );\r\n  var oneMinusDamping = 1.0 - damping;\r\n  var interpDistance = 0.0;\r\n  \r\n  //Handle inverting the controls\r\n  if ( this.invertX ) {\r\n    this.orbitMovement.x *= -1.0;\r\n    this.linearMovementDelta.x *= -1.0;\r\n  }\r\n  if ( this.invertY ) {\r\n    this.orbitMovement.y *= -1.0;\r\n    this.linearMovementDelta.y *= -1.0;\r\n  }\r\n  if ( this.invertZoom ) {\r\n    this.zoomDelta *= -1.0;\r\n  }\r\n\r\n  //Look at current angular movement since the start of control and clamp the min/max pitch.\r\n  this.tempEuler.copy( this.eulerStart );\r\n  this.tempEuler.x -= this.orbitMovement.y;\r\n  this.tempEuler.y -= this.orbitMovement.x;\r\n  if ( this.tempEuler.x > this.pitchAngleBoundsRadians.max ) {\r\n    this.tempEuler.x = this.pitchAngleBoundsRadians.max;\r\n  }\r\n  else if ( this.tempEuler.x < this.pitchAngleBoundsRadians.min ) {\r\n    this.tempEuler.x = this.pitchAngleBoundsRadians.min;\r\n  }\r\n\r\n  //Handle automatic orbiting when there has been to user input for a given amount of time.\r\n  if ( this.autoOrbit && !this.isEditor && this.ellapsedTimeSinceInput > this.autoOrbitDelay ) {\r\n    //update cursor position so that when we zoom/move the camera, it won't attempt to force itself to where it began rotating from(the jitter)\r\n    this.currentMousePosition.x -= ((this.autoOrbitSpeed * 0.1 * Math.min(1.0, this.ellapsedTimeSinceInput - this.autoOrbitDelay)) % (2.0 * Math.PI)) * delta;\r\n    this.autoOrbitOn = true;\r\n  }\r\n  \r\n  // Handle panning of the camera\r\n  this.linearMovementDelta.multiplyScalar( speedMod * this.movementSpeed );\r\n  this.currentMoveSpeed.x = oneMinusDamping * this.currentMoveSpeed.x + damping * this.linearMovementDelta.x;\r\n  this.currentMoveSpeed.y = oneMinusDamping * this.currentMoveSpeed.y + damping * this.linearMovementDelta.y;\r\n  if ( Math.abs( this.currentMoveSpeed.y ) < 0.0001 && Math.abs( this.currentMoveSpeed.x ) < 0.0001 ) {\r\n    this.currentMoveSpeed.set( 0, 0 );\r\n  }\r\n  \r\n  if ( this.currentMoveSpeed.x || this.currentMoveSpeed.y ) {\r\n    //If there is panning movement, shift the location of the pivot point.\r\n    this._tempVector.set( -this.currentMoveSpeed.x, this.currentMoveSpeed.y, 0.0 );\r\n    // this._tempVector.x *= -1.0;\r\n    this._tempVector.applyQuaternion( threeData.quaternion );\r\n    this._tempMatrix4.getInverse( this.pivotPoint.matrixWorld );\r\n    this._tempVector4.set( this._tempVector.x, this._tempVector.y, this._tempVector.z, 0.0 );\r\n    this._tempVector4.applyMatrix4( this._tempMatrix4 );\r\n    \r\n    this._tempVector.set( this._tempVector4.x, this._tempVector4.y, this._tempVector4.z );\r\n    \r\n    this.pivotPoint.position.add( this._tempVector );\r\n    //Get the world-space position of the pivot point.\r\n    this.pivotPoint.getWorldPosition( this._pivotWorldPos );\r\n  }\r\n  else {\r\n    //Otherwise, just update the world-space position of the pivot point.\r\n    this._pivotWorldPos.setFromMatrixPosition( this.pivotPoint.matrixWorld );\r\n  }\r\n\r\n  //Handle zoom\r\n  //Calculate the distance to orbit at.\r\n  this._tempVector.subVectors( this._pivotWorldPos, threeData.position );\r\n  var currentDistance = this._tempVector.length();\r\n  var targetDistance;\r\n  //If the user is actively zooming or if no new target distance is set and the inertia of the camera is still moving it.\r\n  if ( this.zoomDelta || !this.newOrbitDistance ) {\r\n    this.newOrbitDistance = 0.0;\r\n    this.currentZoomSpeed = oneMinusDamping * this.currentZoomSpeed + damping * speedMod * 0.1 * this.movementSpeed * this.zoomDelta;\r\n    if ( Math.abs( this.currentZoomSpeed ) < 0.0001 ) {\r\n      this.currentZoomSpeed = 0.0;\r\n    }\r\n    var newDistance = currentDistance + this.currentZoomSpeed * this.currentOrbitDistance;\r\n    targetDistance = Math.min( this.orbitDistanceMax, Math.max( this.orbitDistanceMin, newDistance ));\r\n    interpDistance = (targetDistance - currentDistance);\r\n    this.currentOrbitDistance = targetDistance;\r\n  }\r\n  //If we still have a new orbit distance defined, we'll try to move to that.\r\n  else {\r\n    targetDistance = Math.min( this.orbitDistanceMax, Math.max( this.orbitDistanceMin, this.newOrbitDistance ));\r\n    if ( this.interpolation ) {\r\n      interpDistance = (targetDistance - currentDistance);\r\n      this.currentOrbitDistance = interpDistance * 10.0 * this.interpSpeed * delta + currentDistance;\r\n    }\r\n    else {\r\n      this.currentOrbitDistance = targetDistance;\r\n    }\r\n    if ( Math.abs( this.currentOrbitDistance - this.newOrbitDistance ) < 0.0001 ) {\r\n      this.newOrbitDistance = 0.0;\r\n    }\r\n  }\r\n  \r\n  //If the camera is being controlled, use the current x,y rotation speed\r\n  //to determine the new quaternion for the camera\r\n  if ( this.isMouseDragging || this.zoomDelta || !this.targetMoved || this.autoOrbitOn ) {\r\n    this.targetMoved = false;\r\n    this.tempQuaternion.setFromEuler( this.tempEuler );\r\n    threeData.quaternion.slerp( this.tempQuaternion, this.inertialDamping );\r\n    threeData.position.set( 0, 0, this.currentOrbitDistance );\r\n    threeData.position.applyQuaternion( threeData.quaternion );\r\n    threeData.position.add( this._pivotWorldPos );\r\n    threeData.lookAt( this._pivotWorldPos );\r\n  }\r\n  else {\r\n    \r\n    // //If the camera isn't being controlled by the user, continue interpolating to the desired position/orientation\r\n    if ( this.interpolation ) {\r\n      // lerp the current orientation towards the assigned pivot.\r\n      this.tempCamera.position.copy( threeData.position );\r\n      this.tempCamera.lookAt( this._pivotWorldPos );\r\n      \r\n      threeData.quaternion.slerp( this.tempCamera.quaternion, 0.1 * this.interpSpeed );\r\n\r\n      //Set the camera's position using the orientation and orbit distance\r\n      if ( interpDistance ) {\r\n        this._tempVector.set( 0, 0, 1 );\r\n        // this._tempVector.set( 0, 0, this.currentOrbitDistance );\r\n        this._tempVector.applyQuaternion( this.tempCamera.quaternion );\r\n        this._tempVector.multiplyScalar( interpDistance * 10.0 * this.interpSpeed * delta );\r\n\r\n        threeData.position.add( this._tempVector );\r\n      }\r\n    }\r\n    else {\r\n      threeData.lookAt( this._pivotWorldPos );\r\n      threeData.position.set( 0, 0, this.currentOrbitDistance );\r\n      threeData.position.applyQuaternion( threeData.quaternion );\r\n      threeData.position.add( this._pivotWorldPos );\r\n    }\r\n  }\r\n\r\n  this.getEngine().needsRender = true;\r\n  this.hasChanged = true;\r\n\r\n  this.orbitMovement.set( 0.0, 0.0 );\r\n  this.linearMovementDelta.set( 0.0, 0.0, 0.0 );\r\n  this.zoomDelta = 0.0;\r\n\r\n};\r\n\r\n\r\nOrbitCamera.prototype.orbitCameraEnable = function( blendTime ) {\r\n  this.enable();\r\n};\r\n\r\nOrbitCamera.prototype.orbitCameraDisable = function( ) {\r\n  this.disable();\r\n};\r\n\r\nOrbitCamera.prototype.orbitCameraToggle = function( ) {\r\n  if ( this.isEnabled() ) {\r\n    this.disable();\r\n  }\r\n  else {\r\n    this.enable();\r\n  }\r\n  if ( this.usePointerLock && !this.isEnabled() ) {\r\n    document.exitPointerLock();\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.getEulerAngles = function( outEuler ) {\r\n  var returnVector = outEuler;\r\n  if ( !outEuler ) {\r\n    returnVector = new THREE.Euler();\r\n  }\r\n  returnVector.setFromQuaternion( this.getThreeData().quaternion, 'YXZ' );\r\n\r\n  return returnVector;\r\n};\r\n\r\nOrbitCamera.prototype.setEulerAngles = function( euler ) {\r\n  this.getThreeData().quaternion.setFromEuler( euler );\r\n};\r\n\r\nOrbitCamera.prototype.togglePointerLock = function( on ) {\r\n  this.usePointerLock = on;\r\n\r\n  if ( this.usePointerLock ) {\r\n    this.getThreeRenderer().domElement.addEventListener( 'mousedown', this.onMouseDown_PointerLock );\r\n   }\r\n  else {\r\n    this.getThreeRenderer().domElement.removeEventListener( 'mousedown', this.onMouseDown_PointerLock );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onMouseDown = function( event ) {\r\n  if ( this.isEnabled() ) {\r\n    var input = this.getInput();\r\n    var rightButton = input.mouseButtonDown(\"right\");\r\n    var leftButton = input.mouseButtonDown(\"left\");\r\n    this.pan = false;\r\n    this.look = false;\r\n    if ( ( rightButton ) && this.enablePan ) {\r\n      this.pan = true;\r\n    }\r\n    else if ( leftButton ) {\r\n      this.look = true;\r\n    }\r\n\r\n    this.moveStart.x = event.scenePercentX;\r\n    this.moveStart.y = event.scenePercentY;\r\n    this.currentMousePosition.copy( this.moveStart );\r\n    // this.positionStart.copy( this.getThreeData().position );\r\n    this.quaternionStart.copy( this.getThreeData().quaternion );\r\n    this.eulerStart.setFromQuaternion( this.quaternionStart, 'YXZ' );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onMouseUp = function( event ) {\r\n  if ( this.isEnabled() ) {\r\n    var input = this.getInput();\r\n    var rightButton = input.mouseButtonDown(\"right\");\r\n    var leftButton = input.mouseButtonDown(\"left\");\r\n    this.pan = false;\r\n    this.look = false;\r\n    \r\n    if ( ( rightButton ) && this.enablePan ) {\r\n      this.pan = true;\r\n    }\r\n    else if ( leftButton ) {\r\n      this.look = true;\r\n    }\r\n    else {\r\n      this.isMouseDragging = false;\r\n    }\r\n    // this.moveStart.x = event.scenePercentX;\r\n    // this.moveStart.y = event.scenePercentY;\r\n    // this.positionStart.set( 0.0, 0.0, 0.0 );\r\n    // this.quaternionStart.set( 0.0, 0.0, 0.0, 1.0 );\r\n    // console.log(\"Mode is \" + this.mode );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onMouseDown_PointerLock = function( event ) {\r\n  if ( this.isEnabled() && event.button === 0 || event.button === 2 ) {\r\n    this.getThreeRenderer().domElement.requestPointerLock();\r\n\r\n    this.getThreeRenderer().domElement.addEventListener( 'mouseup', this.onMouseUp_PointerLock );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onMouseUp_PointerLock = function( event ) {\r\n  if ( this.veroldEntity ) {\r\n    if ( event.button === 2 && this.getInput().mouseButtonUp( \"left\" ) || event.button === 0 && this.getInput().mouseButtonUp( \"right\" ) ) {\r\n      this.getThreeRenderer().domElement.removeEventListener( 'mouseup', this.onMouseUp_PointerLock );\r\n      document.exitPointerLock();\r\n    }\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onMouseMove = function( event ) {\r\n  if ( this.isEnabled() ) {\r\n    var input = this.getInput();\r\n    var rightButton = input.mouseButtonDown(\"right\");\r\n    var leftButton = input.mouseButtonDown(\"left\");\r\n\r\n    if ( ( rightButton ) && this.enablePan ) {\r\n\r\n      this.isMouseDragging = true;\r\n      this.linearMovementDelta.x = event.scenePercentDeltaX;\r\n      this.linearMovementDelta.y = event.scenePercentDeltaY;\r\n    }\r\n    else if ( leftButton ) {\r\n      this.isMouseDragging = true;\r\n      this.currentMousePosition.x = event.scenePercentX;\r\n      this.currentMousePosition.y = event.scenePercentY;\r\n    }\r\n    // this.eulerEllapsed.add( event.scenePercentDeltaX, event.scenePercentDeltaY );\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onMouseScroll = function( delta ) {\r\n  if ( this.isEnabled() && _.isNumber( delta ) && this.enableZoom ) {\r\n    this.zoomDelta = -delta * 0.1;\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onTouchStart = function( event ) {\r\n\r\n  if ( this.isEnabled() ) {\r\n\r\n    var touches = event.touches;\r\n    if ( !touches ) {\r\n      return;\r\n    }\r\n\r\n    switch ( touches.length ) {\r\n\r\n    case 1: // one-fingered touch: rotate\r\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\r\n\r\n      this.look = true;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n      \r\n      break;\r\n\r\n    case 2: // two-fingered touch: dolly\r\n      \r\n      this.look = false;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n      if ( this.enableZoom ) {\r\n        this.zoom = true;\r\n        var dx = touches[ 0 ].scenePercentX - touches[ 1 ].scenePercentX;\r\n        var dy = touches[ 0 ].scenePercentY - touches[ 1 ].scenePercentY;\r\n        var distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n        this.touchLastPinchDist = distance;\r\n        // this.touchYStart = touches[ 0 ].scenePercentY;\r\n      }\r\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\r\n      break;\r\n\r\n    case 3: // three-fingered touch: pan\r\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\r\n      this.look = false;\r\n      this.pan = false;\r\n      if ( this.enablePan ) {\r\n        this.pan = true;\r\n      }\r\n      this.zoom = false;\r\n      break;\r\n\r\n    default:\r\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\r\n      this.touchLastPinchDist = -1;\r\n    }\r\n\r\n    this.moveStart.x = touches[ 0 ].scenePercentX;\r\n    this.moveStart.y = touches[ 0 ].scenePercentY;\r\n    this.currentMousePosition.copy( this.moveStart );\r\n    // this.positionStart.copy( this.getThreeData().position );\r\n    this.quaternionStart.copy( this.getThreeData().quaternion );\r\n    this.eulerStart.setFromQuaternion( this.quaternionStart, 'YXZ' );\r\n\r\n  }\r\n\r\n  this.isTouchDragging = false;\r\n};\r\n\r\nOrbitCamera.prototype.onTouchMove = function( event ) {\r\n\r\n  if ( this.isEnabled() ) {\r\n    // this.touchInProgress = true;\r\n    var touches = event.touches;\r\n    if ( !touches ) {\r\n      return;\r\n    }\r\n    // var speedMod = 0.3;\r\n    var dx, dy;\r\n    switch ( touches.length ) {\r\n\r\n    case 1: // one-fingered touch: rotate\r\n      this.look = true;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n\r\n      this.touchLast.x = touches[ 0 ].scenePercentX;\r\n      this.touchLast.y = touches[ 0 ].scenePercentY;\r\n      this.isMouseDragging = true;\r\n      // this.ellapsedTimeSinceInput = 0;\r\n\r\n      if(!this.isTouchDragging){\r\n        if(this.moveStart.distanceTo(this.touchLast) > 0.01){\r\n          this.isTouchDragging = true;\r\n        }\r\n      }\r\n      else {\r\n        this.currentMousePosition.x = touches[ 0 ].scenePercentX;\r\n        this.currentMousePosition.y = touches[ 0 ].scenePercentY;\r\n      }\r\n\r\n      break;\r\n\r\n    case 2: // two-fingered touch: dolly\r\n\r\n      this.look = false;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n      if ( this.enableZoom ) {\r\n        // this.isMouseDragging = true;\r\n        this.zoom = true;\r\n        dx = touches[ 0 ].scenePercentX - touches[ 1 ].scenePercentX;\r\n        dy = touches[ 0 ].scenePercentY - touches[ 1 ].scenePercentY;\r\n        var distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n        var pinchChange = this.touchLastPinchDist - distance;\r\n        var scrollChange = this.touchLast.y - touches[ 0 ].scenePercentY;\r\n        // var scrollChange = 0;\r\n        if ( Math.abs( pinchChange ) > Math.abs( scrollChange ) ) {\r\n          this.zoomDelta = 20.0 * pinchChange;\r\n        }\r\n        else {\r\n          this.zoomDelta = 20.0 * scrollChange;\r\n        }\r\n      \r\n        this.touchLastPinchDist = distance;\r\n      }\r\n      this.touchLast.x = touches[ 0 ].scenePercentX;\r\n      this.touchLast.y = touches[ 0 ].scenePercentY;\r\n\r\n      break;\r\n\r\n    case 3: // three-fingered touch: pan\r\n      this.look = false;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n      if ( this.enablePan ) {\r\n        this.isMouseDragging = true;\r\n        this.pan = true;\r\n        dx = touches[ 0 ].scenePercentX - this.touchLast.x;\r\n        dy = touches[ 0 ].scenePercentY - this.touchLast.y;\r\n\r\n        this.linearMovementDelta.x = dx;\r\n        this.linearMovementDelta.y = dy;\r\n      }\r\n\r\n      this.touchLast.x = touches[ 0 ].scenePercentX;\r\n      this.touchLast.y = touches[ 0 ].scenePercentY;\r\n\r\n      break;\r\n    }\r\n\r\n  }\r\n};\r\n\r\nOrbitCamera.prototype.onTouchEnd = function( event ) {\r\n\r\n  if ( this.isEnabled() ) {\r\n    this.touchLast.set( -1.0, -1.0 );\r\n    this.touchLastPinchDist = -1;\r\n    var touches = event.touches;\r\n    \r\n    switch ( touches.length ) {\r\n\r\n    case 0:\r\n      this.isMouseDragging = false;\r\n      this.look = false;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n      break;\r\n    case 1: // one-fingered touch: rotate\r\n      this.look = true;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n      \r\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\r\n      this.moveStart.x = touches[ 0 ].scenePercentX;\r\n      this.moveStart.y = touches[ 0 ].scenePercentY;\r\n      this.currentMousePosition.copy( this.moveStart );\r\n      // this.positionStart.copy( this.getThreeData().position );\r\n      this.quaternionStart.copy( this.getThreeData().quaternion );\r\n      this.eulerStart.setFromQuaternion( this.quaternionStart, 'YXZ' );\r\n      break;\r\n\r\n    case 2: // two-fingered touch: dolly\r\n\r\n      this.look = false;\r\n      this.pan = false;\r\n      this.zoom = false;\r\n      if ( this.enableZoom ) {\r\n        this.zoom = true;\r\n        var dx = touches[ 0 ].scenePercentX - touches[ 1 ].scenePercentX;\r\n        var dy = touches[ 0 ].scenePercentY - touches[ 1 ].scenePercentY;\r\n        var distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n        this.touchLastPinchDist = distance;\r\n      }\r\n      // this.touchYStart = touches[ 0 ].scenePercentY;\r\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\r\n      break;\r\n\r\n    case 3: // three-fingered touch: pan\r\n      this.look = false;\r\n      this.pan = false;\r\n      if ( this.enablePan ) {\r\n        this.pan = true;\r\n      }\r\n      this.zoom = false;\r\n\r\n      this.touchLast.set( touches[ 0 ].scenePercentX, touches[ 0 ].scenePercentY );\r\n      break;\r\n\r\n    default:\r\n\r\n    }\r\n\r\n    this.isTouchDragging = false;\r\n  }\r\n};\r\n\r\nreturn OrbitCamera;\r\n"
}),define("text!VeroldEngine/Components/BuiltIn/SkyboxRenderer.js",[],function(){return'/**\n * A skybox component class.\n *\n * @class Component\n */\nfunction SkyboxRenderer() {\n  this.skyboxScene = null;\n  this.skyboxMesh = null;\n  this.skyboxGeometry = null;\n  this.skyboxMaterialCube = null;\n  this.skyboxMaterial2D = null;\n  this.skyboxUniforms = null;\n  this.skyboxVShader = null;\n  this.skyboxPShader = null;\n  this.renderer = null;\n\n  this.skyboxTexture = null;\n  this.size = 10000.0;\n  this.isEditor = false;\n}\n\nSkyboxRenderer.prototype = new VAPI.VeroldComponent();\n\nSkyboxRenderer.prototype.editorInit = function() {\n  this.isEditor = true;\n  this.init();\n  this.getEntity().when(\'load\', this.objectLoaded, this );\n};\n\nSkyboxRenderer.prototype.init = function() {\n\n  this.renderer = this.getThreeRenderer();\n  \n  this.createGeometry();\n  this.createScene();\n\n  this.skyboxRenderPass = new THREE.RenderPass( this.skyboxScene );\n  this.skyboxRenderPass.clear = true;\n  this.skyboxRenderPass.enabled = false;\n\n  this.createMaterial();\n  this.initTexture();\n  this.createMesh();\n  \n  this.mainScene = this.getEntity().getParentAsset();\n  \n  this.on(\'enable\', this.enable, this );\n  this.on(\'disable\', this.disable, this );\n  this.getEntity().on(\'setSkyboxTexture\', this.setSkyboxTexture, this );\n  this.getEngine().on(\'rebuildMaterials\', this.rebuildMaterials, this );\n};\n\nSkyboxRenderer.prototype.editorShutdown = function() {\n\n  this.shutdown();\n};\n\nSkyboxRenderer.prototype.shutdown = function() {\n  this.off(\'enable\', this.enable, this );\n  this.off(\'disable\', this.disable, this );\n  this.getEngine().off(\'rebuildMaterials\', this.rebuildMaterials, this );\n  this.getEntity().off(\'setSkyboxTexture\', this.setSkyboxTexture, this );\n  if ( this.skyboxScene ) {\n    this.skyboxScene.remove( this.skyboxMesh );\n  }\n  this.skyboxGeometry.dispose();\n  this.skyboxMaterialCube.dispose();\n  this.skyboxMaterial2D.dispose();\n  this.skyboxScene = null;\n  this.skyboxMesh = null;\n  this.skyboxGeometry = null;\n  this.skyboxMaterialCube = null;\n  this.skyboxMaterial2D = null;\n  this.skyboxUniforms = null;\n  this.skyboxTexture = null;\n};\n\nSkyboxRenderer.prototype.createScene = function() {\n  this.skyboxScene = new THREE.Scene();\n};\n\nSkyboxRenderer.prototype.attributesChanged = function( changed ) {\n  if ( changed.skyboxTexture !== undefined ) {\n    this.initTexture();\n    this.skyboxMesh.material = this.currentMaterial;\n  }\n  if ( changed.color ) {\n    this.skyboxUniforms.color.value = this.color;\n  }\n  if ( changed.skyboxFogScale !== undefined ) {\n    this.skyboxMaterialCube.uniforms.skyboxFogScale.value = this.skyboxFogScale;\n    this.skyboxMaterial2D.uniforms.skyboxFogScale.value = this.skyboxFogScale;\n  }\n  if ( changed.skyboxFogPower !== undefined ) {\n    this.skyboxMaterialCube.uniforms.skyboxFogPower.value = this.skyboxFogPower;\n    this.skyboxMaterial2D.uniforms.skyboxFogPower.value = this.skyboxFogPower;\n  }\n  if ( this.skyboxScene && this.mainScene.threeData ) {\n    this.skyboxUniforms.fogColor.value = this.mainScene.threeData.fog.color;\n  }\n};\n\nSkyboxRenderer.prototype.enable = function() {\n  if ( this.skyboxScene ) {\n    this.skyboxScene.add( this.skyboxMesh );\n    if ( !this.skyboxTexture.isLoaded() ) {\n      this.skyboxTexture.load();\n    }\n  }\n};\n\nSkyboxRenderer.prototype.disable = function() {\n  if ( this.skyboxScene ) {\n    this.skyboxScene.remove( this.skyboxMesh );\n  }\n};\n\nSkyboxRenderer.prototype.objectLoaded = function() {\n  // if ( this.isEnabled() ) {\n    this.getRenderer().addRenderPass( this.skyboxRenderPass, -1 );\n    this.skyboxUniforms.fogColor.value = this.mainScene.threeData.fog.color;\n    this.rebuildMaterials();\n  // }\n};\n\nSkyboxRenderer.prototype.createGeometry = function() {\n  this.skyboxGeometry = new THREE.BoxGeometry( this.size, this.size, this.size, 1, 1, 1 );\n  //this.skyboxGeometry.computeTangents();\n  this.skyboxGeometry.dynamic = false;\n};\n\nSkyboxRenderer.prototype.createMesh = function() {\n  this.skyboxMesh = new THREE.Mesh( this.skyboxGeometry, this.currentMaterial );\n  this.skyboxMesh.frustumCulled = false;\n  this.skyboxMesh.castShadow = false;\n  this.skyboxMesh.receiveShadow = false;\n  this.skyboxMesh.name = "Skybox";\n  if ( this.isEnabled() ) {\n    this.skyboxScene.add( this.skyboxMesh );\n  }\n};\n\nSkyboxRenderer.prototype.initTexture = function() {\n  if ( !this.skyboxTexture ) {\n    this.skyboxTexture = this.getAssetRegistry().Textures.getAssetById(\'white_cube\');\n    this.currentMaterial = this.skyboxMaterialCube;\n  }\n  if ( this.skyboxTexture.type === "textureCube" || this.skyboxTexture.type === "renderTextureCube" ) {\n    this.currentMaterial = this.skyboxMaterialCube;\n  }\n  else {\n    this.currentMaterial = this.skyboxMaterial2D;\n  }\n  if ( this.skyboxTexture.getPixelFormat() === \'rgbm\' ) {\n    this.currentMaterial.defines[\'HDR_INPUT\'] = "";\n    this.currentMaterial.defines[\'ENVMAP_HDR_INPUT\'] = THREE.HDRRGBM;\n  }\n  else if ( this.skyboxTexture.getPixelFormat() === \'rgbd\' ) {\n    this.currentMaterial.defines[\'HDR_INPUT\'] = "";\n    this.currentMaterial.defines[\'ENVMAP_HDR_INPUT\'] = THREE.HDRRGBD;\n  }\n  else if ( this.skyboxTexture.getPixelFormat() === \'rgbe\' ) {\n    this.currentMaterial.defines[\'HDR_INPUT\'] = "";\n    this.currentMaterial.defines[\'ENVMAP_HDR_INPUT\'] = THREE.HDRRGBE;\n  }\n  else {\n    delete this.currentMaterial.defines[\'HDR_INPUT\'];\n    delete this.currentMaterial.defines[\'ENVMAP_HDR_INPUT\'];\n  }\n\n  this.skyboxTexture.when( "load", function() {\n    this.skyboxUniforms.environmentTexture.value = this.skyboxTexture.threeData;\n    this.currentMaterial.needsUpdate = true;\n    this.skyboxRenderPass.enabled = true;\n  }, this );\n  \n  if ( this.isEnabled() ) {\n    this.skyboxTexture.load();\n  }\n};\n\nSkyboxRenderer.prototype.setSkyboxTexture = function( textureId ) {\n  this.skyboxTexture = this.getAssetRegistry().Textures.getAssetById( textureId );\n  this.initTexture();\n};\n\nSkyboxRenderer.prototype.rebuildMaterials = function() {\n  if ( this.skyboxMaterialCube ) {\n    this.skyboxMaterialCube.needsUpdate = true;\n  }\n  if ( this.skyboxMaterial2D ) {\n    this.skyboxMaterial2D.needsUpdate = true;\n  }\n};\n\nSkyboxRenderer.prototype.createMaterial = function() {\n\n  this.skyboxUniforms = THREE.UniformsUtils.merge( [\n    { fogColor: { type: "c", value: new THREE.Color() } },\n    { skyboxFogPower: { type: "f", value: this.skyboxFogPower } },\n    { skyboxFogScale: { type: "f", value: this.skyboxFogScale } },\n    { environmentTexture: { type: "t", value: null } }\n  ]),\n\n  this.skyboxVShader = [\n\n   "varying vec3 vCameraVector;",\n   "void main() {",\n      "vec4 worldPosition = modelMatrix * vec4( position, 1.0 );",\n      "vCameraVector = worldPosition.xyz - cameraPosition;",\n      "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",\n    "}"\n\n  ].join("\\n");\n\n  this.skyboxPShader = [\n\n    //THREE.ShaderChunk["fog_pars_fragment"],\n\n    "uniform vec3 fogColor;",\n    "uniform float skyboxFogPower;",\n    "uniform float skyboxFogScale;",\n    "#ifdef USE_CUBEMAP",\n      "uniform samplerCube environmentTexture;",\n    "#else",\n      "uniform sampler2D environmentTexture;",\n    "#endif",\n\n    THREE.ShaderChunk[ \'hdr_decode_pars_fragment\'],\n\n    "varying vec3 vCameraVector;",\n\n    "void main() {",\n      //"float power = clamp( 0.1 + 0.9 * (1.0 - vNormal.z * vNormal.z ), 0.0, 1.0);",\n      "vec3 cameraVectorN = normalize( vCameraVector );",\n      "#ifdef USE_CUBEMAP",\n        "vec4 environmentColor = textureCube( environmentTexture, vec3( vCameraVector.x, vCameraVector.yz )  );",\n      "#else",\n        "vec2 sampleUV;",\n        "sampleUV.y = clamp( cameraVectorN.y * -0.5 + 0.5, 0.0, 1.0);",\n        "sampleUV.x = atan( cameraVectorN.z, cameraVectorN.x ) * 0.15915494309189533576888376337251 + 0.5;",\n        "vec4 environmentColor = texture2D( environmentTexture, sampleUV );",\n      "#endif",\n\n      "#if defined( HDR_INPUT ) && defined( ENVMAP_HDR_INPUT )",\n        "#if ENVMAP_HDR_INPUT == HDR_TYPE_RGBM",\n          "environmentColor.xyz = HDRDecodeRGBM( environmentColor );",\n        "#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBD",\n          "environmentColor.xyz = HDRDecodeRGBD( environmentColor );",\n        "#elif ENVMAP_HDR_INPUT == HDR_TYPE_RGBE",\n          "environmentColor.xyz = HDRDecodeRGBE( environmentColor );",\n        "#elif ENVMAP_HDR_INPUT == HDR_TYPE_LOGLUV",\n          "environmentColor.xyz = HDRDecodeLOGLUV( environmentColor );",\n        "#endif",\n        "#if defined( GAMMA_OUTPUT )",\n          "environmentColor.xyz = sqrt( environmentColor.xyz );",\n        "#endif",\n      "#else",\n        "#if !defined( GAMMA_OUTPUT )",\n          "environmentColor.xyz *= environmentColor.xyz;",\n        "#endif",\n      "#endif",\n\n      \n\n      "gl_FragColor = vec4( environmentColor.xyz, 1.0 );",\n\n      //"#ifdef USE_FOG",\n        "float fogFactor = clamp( abs(pow( (1.0 - cameraVectorN.y), ( skyboxFogPower) * 12.0 )) + (skyboxFogScale * 2.0 - 1.0), 0.0, 1.0);",\n        "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );",\n      //"#endif",\n    "}"\n\n  ].join("\\n");\n\n  this.skyboxMaterialCube = new THREE.ShaderMaterial( {\n    vertexShader: this.skyboxVShader,\n    fragmentShader: this.skyboxPShader,\n    uniforms: this.skyboxUniforms,\n    useFog: true,\n    //fog: true,\n    fogExp: true,\n    side: THREE.BackSide,\n    depthTest: false,\n    depthWrite: false,\n    defines: { USE_CUBEMAP: "" }\n  } );\n\n  this.skyboxMaterial2D = new THREE.ShaderMaterial( {\n    vertexShader: this.skyboxVShader,\n    fragmentShader: this.skyboxPShader,\n    uniforms: this.skyboxUniforms,\n    useFog: true,\n    //fog: true,\n    fogExp: true,\n    side: THREE.BackSide,\n    depthTest: false,\n    depthWrite: false,\n  } );\n};\n\n\nreturn SkyboxRenderer;\n'}),define("text!VeroldEngine/Components/BuiltIn/DefaultRenderer.js",[],function(){return'/**\r\n * A skybox component class.\r\n *\r\n * @class Component\r\n */\r\nfunction DefaultRenderer() {\r\n\r\n  this.threeRenderer = null;\r\n  this.caps = {};\r\n\r\n  //Attributes\r\n  this.antialias = false;\r\n  this.preserveDrawingBuffer = true;\r\n  this.precision = "mediump";\r\n  this.devicePixelRatio = 1.0;\r\n\r\n  this.shadowMapEnabled = true;\r\n  this.shadowMapEnabledMobile = false;\r\n  this.shadowMapType = THREE.PCFSoftShadowMap;\r\n  this.shadowMapCascade = false;\r\n  this.shadowMapDebug = false;\r\n  this.maxShadows = -1;\r\n  this.maxPointLights = -1;\r\n  this.maxDirLights = -1;\r\n  this.maxSpotLights = -1;\r\n  this.maxHemiLights = -1;\r\n\r\n  this.clearColor = new THREE.Color();\r\n  this.clearAlpha = 0.0;\r\n  this.autoClear = false;\r\n  this.autoClearColor = true;\r\n  this.autoClearDepth = true;\r\n  this.autoClearStencil = true;\r\n\r\n  this.sortObjects = true;\r\n  this.autoUpdateObjects = true;\r\n\r\n  // this.gammaInput = true;\r\n  // this.gammaOutput = false;\r\n\r\n  this.preRenderFns = {};\r\n  this.postRenderFns = {};\r\n  this.renderPasses = [];\r\n\r\n  this.renderOnDemand = false;\r\n}\r\n\r\nDefaultRenderer.prototype = new VAPI.VeroldComponent();\r\n\r\nDefaultRenderer.prototype.editorInit = function() {\r\n  this.preInit();\r\n  this.objectCreated();\r\n  this.applyRenderSettings();\r\n  this.getEngine().on(\'postRender\', this.postRender, this );\r\n};\r\n\r\nDefaultRenderer.prototype.preInit = function() {\r\n  this.canvas = this.getEngine().canvas;\r\n  this.initDefaultRenderer();\r\n\r\n  this.getEngine().on( \'resize\', this.resize, this );\r\n\r\n  this.caps = this.getEngine().getBaseRenderer().caps;\r\n\r\n  this.getEngine().setBaseRenderer( this );\r\n\r\n  //Init scene sceneComposer\r\n  // var pars = { format: THREE.RGBAFormat, minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter };\r\n  var renderer = this.getThreeRenderer();\r\n  renderer.hdrOutputEnabled = true;\r\n  renderer.gammaInput = true;\r\n  renderer.gammaOutput = true;\r\n  \r\n  var extensions = new THREE.WebGLExtensions( renderer.getContext() );\r\n  if ( (extensions.get(\'OES_texture_half_float_linear\') || extensions.get(\'OES_texture_float_linear\')) && !VAPI.isMobile() ) {\r\n    // pars.type = THREE.FloatType;\r\n    renderer.hdrOutputType = THREE.HDRFull;\r\n  }\r\n  else {\r\n    renderer.hdrOutputEnabled = false;\r\n  }\r\n  \r\n  // var renderTarget = new THREE.WebGLRenderTarget( this.getRenderer().getCanvasWidth(), this.getRenderer().getCanvasHeight(), pars );\r\n  // renderTarget.name = "Main Render Target";\r\n  // this.sceneComposer = new THREE.EffectComposer( this.getThreeRenderer(), renderTarget );\r\n  // this.sceneComposer.enabled = false;\r\n\r\n  // this.sceneComposer.setSize( this.getRenderer().getCanvasWidth(), this.getRenderer().getCanvasHeight() );\r\n};\r\n\r\nDefaultRenderer.prototype.init = function() {\r\n  if ( this.renderOnDemand ) {\r\n    this.getEngine().renderOnDemand = true;\r\n  }\r\n  if ( !this.shadowMapEnabledMobile ) {\r\n    this.shadowMapEnabled = VAPI.isMobile() ? this.shadowMapEnabledMobile && this.shadowMapEnabled : this.shadowMapEnabled;\r\n  }\r\n  this.applyRenderSettings();\r\n};\r\n/**\r\n * Called when a verold object is destroyed or this component is removed\r\n * from a verold object.\r\n */\r\nDefaultRenderer.prototype.shutdown = DefaultRenderer.prototype.editorShutdown = function() {\r\n\r\n  this.getEngine().off( \'resize\', this.resize, this );\r\n  this.getEngine().off(\'postRender\', this.postRender, this );\r\n\r\n  for ( var i = 0; i < this.renderPasses.length; i++ ) {\r\n    this.renderPasses[ i ].pass = null;\r\n    this.renderPasses[ i ].scene = null;\r\n    this.renderPasses[ i ].camera = null;\r\n  }\r\n  // this.sceneComposer.dispose();\r\n\r\n  this.threeRenderer.context = null;\r\n  this.threeRenderer = null;\r\n  this.canvas = undefined;\r\n  //this.flags = undefined;\r\n};\r\n\r\nDefaultRenderer.prototype.objectCreated = function() {\r\n  this.getEngine().trigger(\'resize\');\r\n};\r\n\r\nDefaultRenderer.prototype.attributesChanged = function( changes ) {\r\n  var rebuildMaterials = false;\r\n  if ( changes.shadowMapEnabledMobile !== undefined ) {\r\n    // this.shadowMapEnabledMobile = changes.shadowMapEnabledMobile;\r\n    rebuildMaterials = true;\r\n  }\r\n  this.shadowMapEnabled = VAPI.isMobile() ? this.shadowMapEnabledMobile && this.shadowMapEnabled : this.shadowMapEnabled;\r\n  this.applyRenderSettings();\r\n\r\n  if ( changes.renderOnDemand ) {\r\n    this.getEngine().renderOnDemand = true;\r\n  }\r\n  if ( changes.clearAlpha !== undefined ) {\r\n    this.threeRenderer.setClearColor( this.clearColor, changes.clearAlpha );\r\n  }\r\n  if ( changes.clearColor !== undefined ) {\r\n    this.threeRenderer.setClearColor( changes.clearColor, this.clearAlpha );\r\n  }\r\n\r\n  if ( changes.gammaOutput !== undefined ) {\r\n    // this.gammaOutput = changes.gammaOutput;\r\n    rebuildMaterials = true;\r\n  }\r\n  if ( changes.gammaInput !== undefined ) {\r\n    // this.gammaInput = changes.gammaInput;\r\n    rebuildMaterials = true;\r\n  }\r\n  if ( changes.shadowMapEnabled !== undefined ) {\r\n    // this.shadowMapEnabled = changes.shadowMapEnabled;\r\n    rebuildMaterials = true;\r\n  }\r\n  if ( changes.shadowMapDebug !== undefined ) {\r\n    // this.shadowMapDebug = changes.shadowMapDebug;\r\n    rebuildMaterials = true;\r\n  }\r\n  if ( changes.shadowMapCascade !== undefined ) {\r\n    // this.shadowMapCascade = changes.shadowMapCascade;\r\n    rebuildMaterials = true;\r\n  }\r\n  if ( changes.shadowMapType !== undefined ) {\r\n    this.shadowMapType = parseInt( changes.shadowMapType, 10 );\r\n    console.warn("TODO - need to recreate the shadow maps if the shadow filtering has changed because PCFSoftShadowMap reuires the shadowmap to be rendered with no filtering.");\r\n    rebuildMaterials = true;\r\n  }\r\n  if ( changes.devicePixelRatio !== undefined ) {\r\n    this.getEngine().trigger("resize");\r\n  }\r\n\r\n  if ( rebuildMaterials ) {\r\n    //rebuild materials\r\n    console.log("Rebuilding materials!!!");\r\n    this.getEngine().trigger(\'rebuildMaterials\');\r\n  }\r\n};\r\n\r\nDefaultRenderer.prototype.initDefaultRenderer = function() {\r\n\r\n  //TODO - fix devicePixelRatio on iOS.\r\n  if ( VAPI.isIOS() ) {\r\n    this.devicePixelRatio = 1.0;\r\n  }\r\n  // var context = this.getEngine().getBaseRenderer().threeRenderer.getContext();\r\n  if( VAPI.browserCaps.isWebGLEnabled() ){\r\n    this.threeRenderer = new THREE.WebGLRenderer({\r\n      // context: context,\r\n      canvas: this.canvas,\r\n      antialias    : this.antialias,\r\n      preserveDrawingBuffer  : this.preserveDrawingBuffer,\r\n      alpha: true,\r\n      precision : this.precision,\r\n      logarithmicDepthBuffer: this.logarithmicDepthBuffer\r\n    });\r\n    this.threeRenderer.setPixelRatio( this.devicePixelRatio !== 0 ? this.devicePixelRatio : window.devicePixelRatio );\r\n  }\r\n  else{\r\n    console.warn("WebGL not supported so falling back to canvas renderer.");\r\n    this.threeRenderer = new THREE.CanvasRenderer();\r\n  }\r\n};\r\n\r\n// DefaultRenderer.prototype.registerPreRenderFn = function( name, fn, context ) {\r\n//   this.preRenderFns[ name ] = { renderFn: fn, context: context };\r\n// };\r\n\r\n// DefaultRenderer.prototype.unregisterPreRenderFn = function( name ) {\r\n//   if ( this.preRenderFns[ name ] ) {\r\n//     delete this.preRenderFns[ name ];\r\n//   }\r\n// };\r\n\r\n// DefaultRenderer.prototype.registerPostRenderFn = function( name, fn, context ) {\r\n//   this.postRenderFns[ name ] = { renderFn: fn, context: context };\r\n// };\r\n\r\n// DefaultRenderer.prototype.unregisterPostRenderFn = function( name ) {\r\n//   if ( this.postRenderFns[ name ] ) {\r\n//     delete this.postRenderFns[ name ];\r\n//   }\r\n// };\r\n\r\nDefaultRenderer.prototype.addRenderPass = function( pass, priority ) {\r\n  if ( priority < 0 ) {\r\n    this.renderPasses.splice( 0, 0, { pass : pass, scene : pass.scene, camera: pass.camera } );\r\n  }\r\n  else {\r\n    this.renderPasses.push( { pass : pass, scene : pass.scene, camera: pass.camera } );\r\n  }\r\n  // if ( priority < 0 ) {\r\n  //   if ( this.sceneComposer && this.sceneComposer.passes.length >= this.renderPasses.length - 1 ) {\r\n  //     this.sceneComposer.passes.splice( 0, 0, pass );\r\n  //   }\r\n  // }\r\n  // else {\r\n  //   if ( this.sceneComposer && this.sceneComposer.passes.length >= this.renderPasses.length - 1 ) {\r\n  //     this.sceneComposer.passes.splice( this.renderPasses.length - 1, 0, pass );\r\n  //   }\r\n  // }\r\n  for ( var i in this.renderPasses ) {\r\n    this.renderPasses[i].pass.clear = false;\r\n    // this.renderPasses[i].pass.clearColor = this.clearColor;\r\n  }\r\n  this.renderPasses[0].pass.clear = true;\r\n  this.renderPasses[0].pass.clearColor = this.clearColor;\r\n  this.renderPasses[0].pass.clearAlpha = this.clearAlpha;\r\n  this.renderPassesNeedUpdate = true;\r\n};\r\n\r\nDefaultRenderer.prototype.removeRenderPass = function( pass ) {\r\n  var i, foundIndex = -1;\r\n  for ( i = 0; i < this.renderPasses.length; i++ ) {\r\n    if ( this.renderPasses[ i ].pass === pass ) {\r\n      foundIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  if ( foundIndex >= 0 ) {\r\n    this.renderPasses.splice( foundIndex, 1 );\r\n    // if ( this.sceneComposer && this.sceneComposer.passes.length >= this.renderPasses.length - 1 ) {\r\n    //   this.sceneComposer.passes.splice( foundIndex, 1 );\r\n    // }\r\n  }\r\n  this.renderPassesNeedUpdate = true;\r\n};\r\n\r\n// DefaultRenderer.prototype.getComposer = function() {\r\n//   return this.sceneComposer;\r\n// };\r\n\r\nDefaultRenderer.prototype.initRenderPasses = function() {\r\n  // this.sceneComposer.passes = [];\r\n  for ( var i = 0; i < this.renderPasses.length; i++ ) {\r\n    this.renderPasses[i].pass.scene = this.renderPasses[i].scene;\r\n    this.renderPasses[i].pass.camera = this.renderPasses[i].camera;\r\n    // this.sceneComposer.addPass( this.renderPasses[i].pass );\r\n  }\r\n};\r\n\r\nDefaultRenderer.prototype.applyRenderSettings = function() {\r\n  if ( this.threeRenderer ) {\r\n    _.each( this, function( value, key ) {\r\n      if ( this.threeRenderer[ key ] !== undefined ) {\r\n        this.threeRenderer[ key ] = value;\r\n      }\r\n    }, this );\r\n\r\n    if ( this.devicePixelRatio === 0.0 ) {\r\n      this.devicePixelRatio = window.devicePixelRatio;\r\n      this.threeRenderer.setPixelRatio( window.devicePixelRatio );\r\n    }\r\n    else {\r\n      this.threeRenderer.setPixelRatio( this.devicePixelRatio );\r\n    }\r\n    \r\n    this.threeRenderer.setClearColor( this.clearColor, this.clearAlpha );\r\n\r\n    //This is a temporary check to force a maximum number of lights if the hardware supports a very low number of uniforms\r\n    if ( this.getGPUCapability("MAX_FRAGMENT_UNIFORM_VECTORS") < 29 || VAPI.isMobile() ) {\r\n      this.threeRenderer.maxDirLights = Math.min( this.maxDirLights, 1 );\r\n      this.threeRenderer.maxPointLights = Math.min( this.maxPointLights, 1 );\r\n      this.threeRenderer.maxShadows = Math.min( this.maxShadows, 1 );\r\n    }\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Given the name of a GPU device capability (e.g. MAX_VERTEX_TEXTURE_IMAGE_UNITS ), return the current system\'s\r\n * value for this capability.\r\n * @param  {String} cap The capability name\r\n * @return {Integer}     The value of the capability\r\n */\r\nDefaultRenderer.prototype.getGPUCapability = function( cap ) {\r\n  return this.caps[ cap ];\r\n};\r\n\r\nDefaultRenderer.prototype.supportsCompressedTextureS3TC = function() {\r\n  return this.caps.compressedTextureFormats["S3TC"];\r\n};\r\n\r\nDefaultRenderer.prototype.supportsCompressedTexturePVRTC = function() {\r\n  return this.caps.compressedTextureFormats["PVRTC"];\r\n};\r\n\r\nDefaultRenderer.prototype.supportsCompressedTextureATC = function() {\r\n  return this.caps.compressedTextureFormats["ATC"];\r\n};\r\n\r\nDefaultRenderer.prototype.preRender = function() {\r\n  // this.newRenderStarted = true;\r\n  this.threeRenderer.setRenderTarget( null );\r\n  this.threeRenderer.clear( true, true, true );\r\n};\r\n\r\nDefaultRenderer.prototype.postRender = function() {\r\n  this.renderPassesNeedUpdate = false;\r\n};\r\n\r\nDefaultRenderer.prototype.renderView = function( scene, camera, options ) {\r\n  if ( !options ) {\r\n    options = {};\r\n  }\r\n  var i = 0;\r\n  if ( scene && camera ) {\r\n    // if ( this.newRenderStarted ) {\r\n    //   // this.threeRenderer.shadowMapAutoUpdate = true;\r\n    //   options.clearColor = true;\r\n    //   // this.threeRenderer.clear( options.clearColor, options.clearDepth, options.clearStencil );\r\n    //   this.newRenderStarted = false;\r\n    // }\r\n    // else {\r\n    //   // this.threeRenderer.shadowMapAutoUpdate = false;\r\n    //   options.clearColor = false;\r\n    // }\r\n    if ( options.enablePreRenderFunctions ) {\r\n      // _.each( this.preRenderFns, function( pass ) {\r\n      //   pass.renderFn.call( pass.context, scene, camera, options );\r\n      // }, this );\r\n      this.getEngine().trigger("preRenderView", scene, camera, options );\r\n    }\r\n    for ( i = 0; i < this.renderPasses.length; i++ ) {\r\n      this.renderPasses[i].pass.scene = this.renderPasses[i].scene ? this.renderPasses[i].scene : scene;\r\n      this.renderPasses[i].pass.camera = this.renderPasses[i].camera ? this.renderPasses[i].camera : camera;\r\n    }\r\n\r\n    var viewPort = this.threeRenderer.getViewport();\r\n\r\n    if ( options.composer && options.composer.passes.length ) {\r\n      if ( options.composer.renderPassesNeedUpdate || this.renderPassesNeedUpdate ) {\r\n        var renderPasses = [];\r\n        for ( i = 0; i < this.renderPasses.length; i++ ) {\r\n          renderPasses[i] = this.renderPasses[i].pass;\r\n        }\r\n        options.composer.passes = renderPasses.concat( options.composer.passes );\r\n        options.composer.renderPassesNeedUpdate = false;\r\n      }\r\n      //TODO - move this viewport stuff into RenderView?\r\n      var lastPass = options.composer.passes[ options.composer.passes.length - 1 ];\r\n      lastPass.viewPort = options.viewPort;\r\n      if ( lastPass.uniforms && lastPass.uniforms.opacity ) {\r\n        lastPass.uniforms.opacity.value = options.opacity !== undefined ? options.opacity : 1.0;\r\n      }\r\n      this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.x = 0.0;\r\n      this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.y = 0.0;\r\n      this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.z = this.getCanvasWidth();\r\n      this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.w = this.getCanvasHeight();\r\n\r\n      lastPass.renderToScreen = options.renderToScreen !== undefined ? options.renderToScreen : true;\r\n      if ( options.renderTarget ) {\r\n        lastPass.renderToTexture = options.renderTarget;\r\n        lastPass.renderToScreen = false;\r\n      }\r\n      // this.sceneComposer.passes[ 0 ].needsSwap = options.needsSwap !== undefined ? options.needsSwap : false;\r\n      // this.sceneComposer.passes[ 0 ].clearColor = options.clearColor ? ;\r\n      // lastPass.clearDepth = options.clearDepth;\r\n      options.composer.render( options.delta !== undefined ? options.delta : 0.0167 );\r\n    }\r\n    else {\r\n\r\n      if ( options.opacity !== undefined && (!options.viewPort || options.viewPort.width === this.getWidth() && options.viewPort.height === this.getHeight() )) {\r\n        if ( this.getCanvas().style.opacity != options.opacity ) {\r\n          this.getCanvas().style.opacity = options.opacity;\r\n        }\r\n      }\r\n      else if ( this.getCanvas().style.opacity != 1 ) {\r\n        this.getCanvas().style.opacity = 1.0;\r\n      }\r\n\r\n      if ( !options.renderTarget ) {\r\n        // var prevRenderTarget = this.threeRenderer.getRenderTarget();\r\n        this.threeRenderer.setRenderTarget( null );\r\n        this.threeRenderer.clear( options.clearColor, options.clearDepth, options.clearStencil );\r\n      }\r\n      else {\r\n        this.threeRenderer.setRenderTarget( options.renderTarget );\r\n        this.threeRenderer.clear( options.clearColor, options.clearDepth, options.clearStencil );\r\n      }\r\n\r\n      if ( options.viewPort ) {\r\n\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.x = options.viewPort.x;\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.y = options.viewPort.y;\r\n\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.z = options.viewPort.width * this.devicePixelRatio;\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.w = options.viewPort.height * this.devicePixelRatio;\r\n\r\n        this.threeRenderer.setViewport( options.viewPort.x, options.viewPort.y, options.viewPort.width, options.viewPort.height );\r\n      }\r\n\r\n      var renderer = options.effect ? options.effect : this.threeRenderer;\r\n\r\n      for ( i = 0; i < this.renderPasses.length; i++ ) {\r\n        var prevOverrideMat = this.renderPasses[ i ].pass.scene.overrideMaterial;\r\n        if ( this.renderPasses[ i ].pass.overrideMaterial ) {\r\n          this.renderPasses[ i ].pass.scene.overrideMaterial = this.renderPasses[ i ].pass.overrideMaterial;\r\n        }\r\n        \r\n        if ( options.renderTarget ) {\r\n          // if ( i === 0 ) {\r\n          //   renderer.clear( options.clearColor, options.clearDepth );\r\n          // }\r\n          renderer.render( this.renderPasses[ i ].pass.scene, this.renderPasses[ i ].pass.camera, options.renderTarget, false );\r\n        }\r\n        else {\r\n          renderer.render( this.renderPasses[ i ].pass.scene, this.renderPasses[ i ].pass.camera );\r\n        }\r\n\r\n        if ( this.renderPasses[ i ].pass.overrideMaterial ) {\r\n          this.renderPasses[ i ].pass.scene.overrideMaterial = prevOverrideMat;\r\n        }\r\n      }\r\n\r\n      // this.threeRenderer.setRenderTarget( prevRenderTarget );\r\n      if ( options.viewPort ) {\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.x = viewPort.x;\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.y = viewPort.y;\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.z = viewPort.width * this.devicePixelRatio;\r\n        this.getAssetRegistry().Materials.sharedUniforms.screenDimensions.value.w = viewPort.height * this.devicePixelRatio;\r\n\r\n        this.threeRenderer.setViewport( viewPort.x, viewPort.y, viewPort.width, viewPort.height );\r\n      }\r\n    }\r\n\r\n    // if ( options.includePostRender ) {\r\n      // _.each( this.postRenderFns, function( pass ) {\r\n      //   pass.renderFn.call( pass.context, scene, camera );\r\n      // }, this );\r\n      this.getEngine().trigger("postRenderView", scene, camera, options );\r\n    // }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the size of the render target in device-independent pixels (dips)\r\n * @method getWidth\r\n * @return {Int} The width of the render target.\r\n */\r\nDefaultRenderer.prototype.getWidth = function() {\r\n  return this.canvas.clientWidth;\r\n};\r\n\r\n/**\r\n * Returns the size of the render target in device-independent pixels (dips)\r\n * @method getHeight\r\n * @return {Int} The height of the render target.\r\n */\r\nDefaultRenderer.prototype.getHeight = function() {\r\n  return this.canvas.clientHeight;\r\n};\r\n\r\nDefaultRenderer.prototype.getCanvasWidth = function() {\r\n  return this.canvas.width;\r\n};\r\n\r\nDefaultRenderer.prototype.getCanvasHeight = function() {\r\n  return this.canvas.height;\r\n};\r\n\r\nDefaultRenderer.prototype.getCanvas = function() {\r\n  return this.threeRenderer.domElement;\r\n};\r\n\r\nDefaultRenderer.prototype.resize = function( ) {\r\n\r\n  var w = this.canvas.parentElement.clientWidth;\r\n  var h = this.canvas.parentElement.clientHeight;\r\n\r\n  this.threeRenderer.setSize(w, h, true);\r\n\r\n  // if ( this.sceneComposer ) {\r\n  //   this.sceneComposer.setSize( this.getRenderer().getCanvasWidth(), this.getRenderer().getCanvasHeight() );\r\n  // }\r\n};\r\n\r\nreturn DefaultRenderer;'}),define("text!VeroldEngine/Components/BuiltIn/DefaultFilters.js",[],function(){return'/*\n@vname Default Filters\n@vdescription Stores the default filter settings that cameras will use when rendering.\n@vfilter application\n@vcategory Rendering\n@vtype bloom {\n  "attributes": {\n    "enabled": { type: \'b\', default: false },\n    "strength": { type: \'f\', default: 1.0, min: 0.1, max: 4.0, step: 0.001 },\n    "sigma": { type: \'f\', default: 4, min: 1, max: 8, step: 0.001, advanced: true },\n    "resolution": { type: \'i\', default: 256, min: 64, max: 1024, step: 1, advanced: true },\n  }\n}\n@vtype toneMapping {\n  "attributes": {\n    "enabled": { type: \'b\', default: false, description: \'Enable tone-mapping.\' },\n    "adaptive": { type: "b", "description": "Automatically adjusts the tone-mapping every frame based on the average luminance of the scene.",default: true },\n    "adaptSpeed": { type: "f", "description": "The speed at which adaptive tone-mapping works. Higher number is faster.", default: 0.5, min: 0.1, max: 20.0 },\n    "exposureBias":     { type: "f", "description": "Adjusts the overall brightness of the image. Use this to tweak the final result of tone-mapping.", default: 1.0, min: 0.0001, max: 5.0 },\n    "maxLuminance":  { type: "f", "description": "Sets the maximum brightness reached before pixels become white after tone-mapping.", default: 16, min: 0.01, max: 25.0 },\n    "luminance":  { type: "f", "description": "When the \'Adaptive\' feature is turned off, this will set the scene luminance to be used by tone-mapping.", default: 1.0, min: 0.0001, max: 16.0 },\n  },\n}\n@vtype fxaa {\n  "attributes": {\n    "enabled": { type: \'b\', default: false },\n  }\n}\n@vtype vignette {\n  "attributes": {\n    "enabled": { type: \'b\', default: false },\n    "offset": { type: \'f\', default: 1.0, min: 0.0, max: 1.0, step: 0.001 },\n    "darkness": { type: \'f\', default: 1.0, min: 0.0, max: 5.0, step: 0.001 }\n  }\n}\n@vtype ssao {\n  "attributes": {\n    "enabled": { type: \'b\', default: false },\n    "fogEnabled": { type: \'i\', default: 1, advanced: true },\n    "depthScale": { type: \'f\', default: 40000.0, min: 100.0, max: 50000.0, step: 0.001, advanced: true },\n    "onlyAO":       { type: "i", default: 0 },\n    "aoClamp":      { type: "f", default: 0.75, advanced: true },\n    "lumInfluence": { type: "f", default: 0.75, advanced: true },\n    "noiseAmount": { type: "f", default: 0.0002 },\n    "radius": { type: "f", default: 8.0 },\n    "diffArea": { type: "f", default: 0.4, advanced: true },\n    "gDisplace": { type: "f", default: 0.4, advanced: true }\n  }\n}\n@vtype dof {\n  "attributes": {\n    "enabled": { type: \'b\', default: false },\n    "aspect": { type: \'f\', default: 1.0, min: 0.0, max: 1.0, step: 0.001, advanced: true },\n    "aperture": { type: \'f\', default: 0.025, min: 0.0, max: 1.0, step: 0.001 },\n    "focus": { type: \'f\', default: 1.0, min: 0.0, max: 1.0, step: 0.001 },\n  }\n}\n@vtype sepia {\n  "attributes": {\n    "enabled": { type: \'b\', default: false },\n    "amount": { type: \'f\', default: 0.9, min: 0.0, max: 1.0, step: 0.001 }\n  }\n}\n@vtype video {\n  "attributes": {\n    "enabled": { type: \'b\', default: false },\n    "nIntensity": { type: "f", default: 0.15 },\n    "sIntensity": { type: "f", default: 0.05 },\n    "sCount":     { type: "f", default: 512 },\n    "grayscale":  { type: "b", default: false }\n  },\n}\n@vattr bloom bloom { description: "" }\n@vattr toneMapping toneMapping { description: "" }\n@vattr fxaa fxaa { description: "" }\n@vattr vignette vignette { description: "" }\n@vattr ssao ssao { description: "" }\n@vattr dof dof { description: "" }\n@vattr sepia sepia { description: "" }\n@vattr video video { description: "" }\n\n*/\nfunction DefaultFilters() {\n\n}\n\nDefaultFilters.prototype = new VAPI.VeroldComponent();\n\nDefaultFilters.prototype.editorInit = function() {\n  this.init();\n  // this.getEngine().on( "preRenderView", this.preRenderView, this );\n};\n\nDefaultFilters.prototype.init = function() {\n  // this.on( \'enable\', this.onEnable, this );\n  // this.on( \'disable\', this.onDisable, this );\n  // this.initComposer();\n  // this.getEngine().on( \'resize\', this.resize, this );\n  this.getEngine().on( \'getDefaultFilters\', this.getDefaultFilters, this );\n  this.updateFilters();\n};\n\nDefaultFilters.prototype.editorShutdown = function() {\n  // this.off( \'enable\', this.onEnable, this );\n  // this.off( \'disable\', this.onDisable, this );\n  this.shutdown();\n  // this.getEngine().off( "preRenderView", this.preRenderView, this );\n};\n\nDefaultFilters.prototype.shutdown = function() {\n  this.getEngine().off( \'getDefaultFilters\', this.getDefaultFilters, this );\n\n};\n\nDefaultFilters.prototype.getDefaultFilters = function( callback ) {\n  if ( _.isFunction( callback ) ) {\n    return callback( this );\n  }\n};\n\nDefaultFilters.prototype.onEnable = function() {\n  this.composer.enabled = true;\n  this.updateFilters();\n};\n\nDefaultFilters.prototype.onDisable = function() {\n  this.updateFilters();\n};\n\nDefaultFilters.prototype.attributesChanged = function( changes ) {\n\n  this.updateFilters( changes );\n};\n\n\nDefaultFilters.prototype.updateFilters = function( changes ) {\n\n  var that = this;\n\n  var toneMapping = this.toneMapping;\n  if ( toneMapping && toneMapping.enabled && this.isEnabled() ) {\n\n    setTimeout( function() {\n      var renderer = that.getEntity().getComponentByScriptId("verold_renderer");\n      if ( renderer ) {\n        renderer.setAttribute( "gammaOutput", false );\n      }\n    }, 0 );\n  }\n  else {\n    setTimeout( function() {\n      var renderer = that.getEntity().getComponentByScriptId("verold_renderer");\n      if ( renderer ) {\n        renderer.setAttribute( "gammaOutput", true );\n      }\n    }, 0 );\n  }\n\n  this.getEngine().trigger(\'defaultFiltersChanged\');\n\n};\n\n\nreturn DefaultFilters;\n'
}),define("text!VeroldEngine/Components/BuiltIn/RenderFilters.js",[],function(){return'/*\n@vname Render Filters\n@vdescription Overrides the filter settings that cameras will use when rendering.\n@vfilter object\n@vcategory Rendering\n@vtype bloom {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "enabled": { type: \'b\', default: false },\n    "strength": { type: \'f\', default: 1.0, min: 0.1, max: 4.0, step: 0.001 },\n    "sigma": { type: \'f\', default: 4, min: 1, max: 8, step: 0.001, advanced: true },\n    "resolution": { type: \'i\', default: 256, min: 64, max: 1024, step: 1, advanced: true },\n  }\n}\n@vtype toneMapping {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "adaptive": { type: "b", "description": "Automatically adjusts the tone-mapping every frame based on the average luminance of the scene.",default: true },\n    "adaptSpeed": { type: "f", "description": "The speed at which adaptive tone-mapping works. Higher number is faster.", default: 0.5, min: 0.1, max: 20.0 },\n    "exposureBias":     { type: "f", "description": "Adjusts the overall brightness of the image. Use this to tweak the final result of tone-mapping.", default: 1.0, min: 0.0001, max: 5.0 },\n    "maxLuminance":  { type: "f", "description": "Sets the maximum brightness reached before pixels become white after tone-mapping.", default: 16, min: 0.01, max: 25.0 },\n    "luminance":  { type: "f", "description": "When the \'Adaptive\' feature is turned off, this will set the scene luminance to be used by tone-mapping.", default: 1.0, min: 0.0001, max: 16.0 },\n  },\n}\n@vtype fxaa {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "enabled": { type: \'b\', default: false },\n  }\n}\n@vtype vignette {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "enabled": { type: \'b\', default: false },\n    "offset": { type: \'f\', default: 1.0, min: 0.0, max: 1.0, step: 0.001 },\n    "darkness": { type: \'f\', default: 1.0, min: 0.0, max: 5.0, step: 0.001 }\n  }\n}\n@vtype ssao {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "enabled": { type: \'b\', default: false },\n    "fogEnabled": { type: \'i\', default: 1, advanced: true },\n    "depthScale": { type: \'f\', default: 40000.0, min: 100.0, max: 50000.0, step: 0.001, advanced: true },\n    "onlyAO":       { type: "i", default: 0 },\n    "aoClamp":      { type: "f", default: 0.75, advanced: true },\n    "lumInfluence": { type: "f", default: 0.75, advanced: true },\n    "noiseAmount": { type: "f", default: 0.0002 },\n    "radius": { type: "f", default: 8.0 },\n    "diffArea": { type: "f", default: 0.4, advanced: true },\n    "gDisplace": { type: "f", default: 0.4, advanced: true }\n  }\n}\n@vtype dof {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "enabled": { type: \'b\', default: false },\n    "aspect": { type: \'f\', default: 1.0, min: 0.0, max: 1.0, step: 0.001, advanced: true },\n    "aperture": { type: \'f\', default: 0.025, min: 0.0, max: 1.0, step: 0.001 },\n    "focus": { type: \'f\', default: 1.0, min: 0.0, max: 1.0, step: 0.001 },\n  }\n}\n@vtype sepia {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "enabled": { type: \'b\', default: false },\n    "amount": { type: \'f\', default: 0.9, min: 0.0, max: 1.0, step: 0.001 }\n  }\n}\n@vtype video {\n  "attributes": {\n    "override": { type: \'b\', default: false, description: \'Override the default behaviour of this filter.\' },\n    "enabled": { type: \'b\', default: false },\n    "nIntensity": { type: "f", default: 0.15 },\n    "sIntensity": { type: "f", default: 0.05 },\n    "sCount":     { type: "f", default: 512 },\n    "grayscale":  { type: "b", default: false }\n  },\n}\n@vattr bloom bloom { description: "" }\n@vattr toneMapping toneMapping { description: "" }\n@vattr fxaa fxaa { description: "" }\n@vattr vignette vignette { description: "" }\n@vattr ssao ssao { description: "" }\n@vattr dof dof { description: "" }\n@vattr sepia sepia { description: "" }\n@vattr video video { description: "" }\n\n*/\nfunction RenderFilters() {\n\n  this.shaderDefs = {\n    "video" : { shader: THREE.FilmShader, textureID: "tDiffuse" },\n    "sepia" : { shader: THREE.SepiaShader, textureID: "tDiffuse" },\n    "vignette" : { shader: THREE.VignetteShader, textureID: "tDiffuse" },\n    "bokeh" : { shader: THREE.BokehShader, textureID: "tColor" },\n    "bokeh2" : { shader: THREE.BokehShader2, textureID: "tColor" },\n    "edge" : { shader: THREE.EdgeShader, textureID: "tDiffuse" },\n    "edge2" : { shader: THREE.EdgeShader2, textureID: "tDiffuse" },\n    "fxaa" : { shader: THREE.FXAAShader, textureID: "tDiffuse" },\n    "copy" : { shader: THREE.CopyShader, textureID: "tDiffuse" },\n    "ssao" : { shader: THREE.SSAOShader, textureID: "tDiffuse" },\n  };\n  this.composer = undefined;\n  this.defaultFilters = undefined;\n  this.needsDepthPass = false;\n}\n\nRenderFilters.prototype = new VAPI.VeroldComponent();\n\nRenderFilters.prototype.editorInit = function() {\n  this.init();\n  this.getEngine().on( "preRenderView", this.preRenderView, this );\n};\n\nRenderFilters.prototype.init = function() {\n  var that = this;\n  this.on( \'enable\', this.onEnable, this );\n  this.on( \'disable\', this.onDisable, this );\n  this.getEngine().trigger(\'getDefaultFilters\', function( filters ) {\n    that.defaultFilters = filters;\n  }, this );\n  this.initComposer();\n  this.getEngine().on( \'resize\', this.resize, this );\n  this.getEngine().on( \'defaultFiltersChanged\', this.updateFilters, this );\n};\n\nRenderFilters.prototype.editorShutdown = function() {\n  \n  this.shutdown();\n  this.getEngine().off( "preRenderView", this.preRenderView, this );\n  this.getEngine().off( \'defaultFiltersChanged\', this.updateFilters, this );\n};\n\nRenderFilters.prototype.shutdown = function() {\n  this.off( \'enable\', this.onEnable, this );\n  this.off( \'disable\', this.onDisable, this );\n  this.getEngine().off( \'resize\', this.resize, this );\n  if ( this.toneMappingPass ) {\n    this.toneMappingPass.dispose();\n  }\n  if ( this.copyPass ) {\n    this.copyPass.dispose();\n  }\n  if ( this.bloomPass ) {\n    this.bloomPass.dispose();\n  }\n  if ( this.fxaaPass ) {\n    this.fxaaPass.dispose();\n  }\n  if ( this.filmPass ) {\n    this.filmPass.dispose();\n  }\n  if ( this.vignettePass ) {\n    this.vignettePass.dispose();\n  }\n  if ( this.sepiaPass ) {\n    this.sepiaPass.dispose();\n  }\n  if ( this.dofPass ) {\n    this.dofPass.dispose();\n  }\n  if ( this.ssaoPass ) {\n    this.ssaoPass.dispose();\n  }\n\n  this.rtTextureDepth.dispose();\n  this.depthMaterial.static.dispose();\n  this.depthMaterial.skinned.dispose();\n};\n\nRenderFilters.prototype.onEnable = function() {\n  this.composer.enabled = true;\n  this.updateFilters();\n  // _.each( this.composer.passes, function( pass ) {\n  //   pass.enabled = true;\n  // }, this );\n};\n\nRenderFilters.prototype.onDisable = function() {\n  this.composer.enabled = false;\n  this.updateFilters();\n  // _.each( this.composer.passes, function( pass ) {\n  //   pass.enabled = false;\n  // }, this );\n};\n\nRenderFilters.prototype.attributesChanged = function( changes ) {\n\n  // if ( changes ) {\n    this.updateFilters( changes );\n  // }\n};\n\nRenderFilters.prototype.initComposer = function() {\n\n  var pars = { format: THREE.RGBAFormat, minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter };\n  var renderer = this.getThreeRenderer();\n  if ( renderer.hdrOutputType === THREE.HDRFull && renderer.hdrOutputEnabled ) {\n    pars.type = THREE.FloatType;\n  }\n  var renderTarget = new THREE.WebGLRenderTarget( this.getRenderer().getCanvasWidth(), this.getRenderer().getCanvasHeight(), pars );\n  renderTarget.name = this.getEntity().getName() + ": Main Render Buffer";\n  this.composer = new THREE.EffectComposer( this.getThreeRenderer(), renderTarget );\n  this.composer.enabled = this.isEnabled();\n  // this.scenePass = new THREE.RenderPass();\n  // this.scenePass.clear = false;\n  // this.getRenderer().addRenderPass( this.scenePass );\n  this.composer.renderPassesNeedUpdate = true;\n\n  this.copyPass = new THREE.ShaderPass( this.shaderDefs[\'copy\'].shader );\n\n  var toneMapping = this.toneMapping;\n  if ( toneMapping ) {\n    this.toneMappingPass = new THREE.AdaptiveToneMappingPass( this.toneMapping.adaptive, 256 );\n  }\n\n  var bloom = this.bloom;\n  if ( bloom ) {\n    var resolution = bloom.resolution !== undefined ? bloom.resolution : 256;\n    var aspect = this.getRenderer().getWidth() / this.getRenderer().getHeight();\n    this.bloomPass = new THREE.BloomPass( bloom.strength, bloom.kernelSize, bloom.sigma, resolution * aspect, resolution );\n  }\n\n  if ( this.fxaa ) {\n    this.fxaaPass = new THREE.ShaderPass( this.shaderDefs[\'fxaa\'].shader );\n  }\n\n  if ( this.video ) {\n    this.filmPass = new THREE.FilmPass();\n  }\n\n  if ( this.vignette ) {\n    this.vignettePass = new THREE.ShaderPass( this.shaderDefs[\'vignette\'].shader );\n  }\n\n  if ( this.sepia ) {\n    this.sepiaPass = new THREE.ShaderPass( this.shaderDefs[\'sepia\'].shader );\n  }\n\n  if ( this.dof ) {\n    this.dofPass = new THREE.ShaderPass( this.shaderDefs[\'bokeh\'].shader );\n  }\n\n  if ( this.ssao ) {\n    this.ssaoPass = new THREE.ShaderPass( this.shaderDefs[\'ssao\'].shader );\n    //this.ssaoPass.material.fog = true;\n  }\n\n  this.rtTextureDepth = new THREE.WebGLRenderTarget( this.getRenderer().getCanvasWidth(), this.getRenderer().getCanvasHeight(), { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat } );\n  this.rtTextureDepth.name = this.getEntity().getName() + ": Depth Texture";\n  var depthShader = THREE.ShaderLib[ "depthRGBA" ];\n  var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\n\n  this.depthMaterial = {};\n  this.depthMaterial.static = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\n  this.depthMaterial.static.depthTest = true;\n  this.depthMaterial.static.blending = THREE.NoBlending;\n\n  depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\n  this.depthMaterial.skinned = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\n  this.depthMaterial.skinned.depthTest = true;\n  this.depthMaterial.skinned.blending = THREE.NoBlending;\n  this.depthMaterial.skinned.skinning = true;\n\n  this.updateFilters( this );\n\n  // this.getEngine().getBaseRenderer().threeComposer = this.composer;\n};\n\nRenderFilters.prototype.updateFilters = function( changes ) {\n\n  this.needsDepthPass = false;\n  var needsCopyPass = false;\n  var that = this;\n  \n  this.composer.passes = [];\n  this.composer.renderPassesNeedUpdate = true;\n  \n  // this.getRenderer().initRenderPasses();\n  if ( !this.defaultFilters.isEnabled() || !this.isEnabled()) {\n    return;\n  }\n\n  if ( this.defaultFilters.toneMapping.enabled ) {\n    this.toneMappingPass.seedTargets( this.getThreeRenderer() );\n    this.composer.addPass( this.toneMappingPass );\n    this.toneMappingPass.renderToScreen = false;\n    needsCopyPass = true;\n  }\n\n  if ( !VAPI.isMobile() ) {\n    if ( this.ssao.override && this.ssao.enabled ||\n        !this.ssao.override && this.defaultFilters.ssao.enabled ) {\n      this.composer.addPass( this.ssaoPass );\n      this.ssaoPass.renderToScreen = false;\n  // this.ssaoPass.needsSwap = true;\n      this.needsDepthPass = true;\n      needsCopyPass = false;\n    }\n\n    if ( this.dof.override && this.dof.enabled ||\n        !this.dof.override && this.defaultFilters.dof.enabled ) {\n      this.composer.addPass( this.dofPass );\n      this.dofPass.renderToScreen = false;\n      // this.dofPass.needsSwap = true;\n      this.needsDepthPass = true;\n      needsCopyPass = false;\n    }\n  \n    if ( this.bloom.override && this.bloom.enabled ||\n        !this.bloom.override && this.defaultFilters.bloom.enabled ) {\n      this.composer.addPass( this.bloomPass );\n      this.bloomPass.renderToScreen = false;\n      needsCopyPass = true;\n    }\n\n    if ( this.fxaa.override && this.fxaa.enabled ||\n          !this.fxaa.override && this.defaultFilters.fxaa.enabled ) {\n      this.composer.addPass( this.fxaaPass );\n      this.fxaaPass.renderToScreen = false;\n      needsCopyPass = true;\n    }\n\n    if ( this.video.override && this.video.enabled ||\n          !this.video.override && this.defaultFilters.video.enabled ) {\n      this.composer.addPass( this.filmPass );\n      this.filmPass.renderToScreen = false;\n      needsCopyPass = true;\n    }\n  }\n  \n  if ( this.vignette.override && this.vignette.enabled ||\n        !this.vignette.override && this.defaultFilters.vignette.enabled ) {\n    this.composer.addPass( this.vignettePass );\n    this.vignettePass.renderToScreen = false;\n    needsCopyPass = false;\n  }\n\n  if ( this.sepia.override && this.sepia.enabled ||\n        !this.sepia.override && this.defaultFilters.sepia.enabled ) {\n    this.composer.addPass( this.sepiaPass );\n    this.sepiaPass.renderToScreen = false;\n    needsCopyPass = false;\n  }\n\n  if ( needsCopyPass ) {\n    this.composer.addPass( this.copyPass );\n  }\n\n  if ( this.composer.passes.length > 1 ) {\n    var lastPass = this.composer.passes[ this.composer.passes.length - 1 ];\n    lastPass.renderToScreen = true;\n  }\n\n  //Tone-mapping\n  var toneMapping = this.toneMapping.override ? this.toneMapping : this.defaultFilters.toneMapping;\n  this.toneMappingPass.setAdaptive( toneMapping.adaptive );\n  this.toneMappingPass.setAdaptiveWhiteLevel( false );//this.toneMapping.adaptiveWhiteLevel );\n  this.toneMappingPass.setAdaptionRate( toneMapping.adaptSpeed );\n  this.toneMappingPass.setMaxLuminance( toneMapping.maxLuminance );\n  this.toneMappingPass.setExposure( toneMapping.exposureBias );\n  this.toneMappingPass.setAverageLuminance( toneMapping.luminance );\n\n  //Film\n  var video = this.video.override ? this.video : this.defaultFilters.video;\n  this.filmPass.uniforms.nIntensity.value = video.nIntensity !== undefined ? video.nIntensity : 0.5;\n  this.filmPass.uniforms.sIntensity.value = video.sIntensity !== undefined ? video.sIntensity : 0.05;\n  this.filmPass.uniforms.sCount.value = video.sCount !== undefined ? video.sCount : 4096;\n  this.filmPass.uniforms.grayscale.value = video.grayscale !== undefined ? video.grayscale : 1;\n\n  //Bloom\n  var bloom = this.bloom.override ? this.bloom : this.defaultFilters.bloom;\n  this.bloomPass.copyUniforms.opacity.value = bloom.strength !== undefined ? bloom.strength : 1;\n  if ( changes && changes.bloom ) {\n    if ( changes.bloom.resolution ) {\n      var resolution = bloom.resolution !== undefined ? bloom.resolution : 256;\n      var aspect = this.getRenderer().getWidth() / this.getRenderer().getHeight();\n\n      this.bloomPass.setSize( resolution * aspect, resolution );\n    }\n  }\n  THREE.BloomPass.blurX.x = 1.0 / this.bloomPass.resolutionX;\n  THREE.BloomPass.blurY.y = 1.0 / this.bloomPass.resolutionY;\n  var sigma = this.bloom.sigma !== undefined ? this.bloom.sigma : 4;\n  this.bloomPass.setSigma( sigma );\n  \n  //Sepia\n  var sepia = this.sepia.override ? this.sepia : this.defaultFilters.sepia;\n  this.sepiaPass.uniforms.amount.value = sepia.amount !== undefined ? sepia.amount : 1;\n\n  //Vignette\n  var vignette = this.vignette.override ? this.vignette : this.defaultFilters.vignette;\n  this.vignettePass.uniforms.offset.value = vignette.offset !== undefined ? vignette.offset : 1;\n  this.vignettePass.uniforms.darkness.value = vignette.darkness !== undefined ? vignette.darkness : 1;\n\n  //SSAO\n  var ssao = this.ssao.override ? this.ssao : this.defaultFilters.ssao;\n  this.ssaoPass.uniforms.tDepth.value = this.rtTextureDepth;\n  this.ssaoPass.uniforms.onlyAO.value = ssao.onlyAO !== undefined ? ssao.onlyAO : 0;\n  this.ssaoPass.uniforms.aoClamp.value = ssao.aoClamp !== undefined ? ssao.aoClamp : 0.5;\n  this.ssaoPass.uniforms.lumInfluence.value = ssao.lumInfluence !== undefined ? ssao.lumInfluence : 0.5;\n  this.ssaoPass.uniforms.noiseAmount.value = ssao.noiseAmount !== undefined ? ssao.noiseAmount : 0.0003;\n  this.ssaoPass.uniforms.radius.value = ssao.radius !== undefined ? ssao.radius * this.getRenderer().devicePixelRatio : 5;\n  this.ssaoPass.uniforms.diffArea.value = ssao.diffArea !== undefined ? ssao.diffArea : 0.4;\n  this.ssaoPass.uniforms.gDisplace.value = ssao.gDisplace !== undefined ? ssao.gDisplace : 0.4;\n  this.ssaoPass.uniforms.fogEnabled.value = ssao.fogEnabled !== undefined ? ssao.fogEnabled : 1;\n  this.ssaoPass.uniforms.depthScale.value = ssao.depthScale !== undefined ? ssao.depthScale : 1000;\n\n  //DOF\n  var dof = this.dof.override ? this.dof : this.defaultFilters.dof;\n  this.dofPass.uniforms.tDepth.value = this.rtTextureDepth;\n  this.dofPass.uniforms.focus.value = dof.focus !== undefined ? dof.focus : 1;\n  this.dofPass.uniforms.aspect.value = dof.aspect !== undefined ? dof.aspect : 1;\n  this.dofPass.uniforms.aperture.value = dof.aperture !== undefined ? dof.aperture : 0.025;\n  this.dofPass.uniforms.maxblur.value = dof.maxblur !== undefined ? dof.maxblur : 1;\n};\n\nRenderFilters.prototype.preRenderView = function( scene, camera ) {\n  if ( camera === this.getThreeData() && scene && this.needsDepthPass && this.isEnabled() ) {\n    var threeRenderer = this.getThreeRenderer();\n    var oldOverride = scene.overrideMaterial;\n    var clearColour = threeRenderer.getClearColor();\n    var clearAlpha = threeRenderer.getClearAlpha();\n    // var viewPort = threeRenderer.getViewport();\n    scene.overrideMaterial = this.depthMaterial;\n    threeRenderer.setViewport( 0, 0, this.rtTextureDepth.width, this.rtTextureDepth.height );\n    //threeRenderer.setClearColor( 0xffffff );\n    threeRenderer.render( scene, camera, this.rtTextureDepth, true );\n    threeRenderer.setClearColor( clearColour, clearAlpha );\n    // threeRenderer.setViewport( viewPort.x, viewPort.y, viewPort.width, viewPort.height );\n    scene.overrideMaterial = oldOverride;\n    this.ssaoPass.uniforms.cameraNear.value = camera.near;\n    this.ssaoPass.uniforms.cameraFar.value = camera.far;\n    this.ssaoPass.uniforms.fogDensity.value = scene.fog.density;\n    // this.ssaoPass.uniforms.logDepthBufFC.value = 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 );\n\n    // this.fxaaPass.uniforms.resolution.value.x = 1.0 / viewPort.width;\n    // this.fxaaPass.uniforms.resolution.value.y = 1.0 / viewPort.height;\n  }\n};\n\nRenderFilters.prototype.resize = function( ) {\n\n  if ( this.composer ) {\n    var canvasWidth = this.getRenderer().getCanvasWidth();\n    var canvasHeight = this.getRenderer().getCanvasHeight();\n    this.composer.setSize( canvasWidth, canvasHeight );\n    if ( this.needsDepthPass ) {\n      this.rtTextureDepth.dispose();\n      this.rtTextureDepth = new THREE.WebGLRenderTarget( canvasWidth, canvasHeight, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat } );\n      this.rtTextureDepth.name = "Depth Texture";\n    }\n\n    this.dofPass.uniforms.tDepth.value = this.rtTextureDepth;\n\n    this.fxaaPass.uniforms.resolution.value.x = 1.0 / canvasWidth;\n    this.fxaaPass.uniforms.resolution.value.y = 1.0 / canvasHeight;\n\n    this.bloomPass.setSize( canvasWidth, canvasHeight );\n    // this.bloomPass.bloom2Material.uniforms.resolution.value.x = 10.0 / canvasWidth;\n    // this.bloomPass.bloom2Material.uniforms.resolution.value.y = 10.0 / canvasHeight;\n\n    this.ssaoPass.uniforms.tDepth.value = this.rtTextureDepth;\n    this.ssaoPass.uniforms.size.value.x = canvasWidth;\n    this.ssaoPass.uniforms.size.value.y = canvasHeight;\n  }\n};\n\nreturn RenderFilters;\n'}),define("text!VeroldEngine/Components/BuiltIn/RenderView.js",[],function(){return'/**\n *\n * @class RenderView\n */\nfunction RenderView() {\n  this.renderEventName = "render";\n  this.enablePostProcess = true;\n  this.enableShadows = true;\n  this.enablePreRenderFunctions = true;\n  this.opacity = 1.0;\n  this.currentRenderContext = this;\n  this.renderTarget;\n}\n\n/*global VAPI*/\nRenderView.prototype = new VAPI.VeroldComponent();\n\nRenderView.prototype.init = function() {\n  \n  var renderEvent = parseInt( this.renderGroup, 10 );\n  if ( renderEvent ) {\n    this.renderEventName += "Group" + renderEvent;\n  }\n  this.getEngine().on( this.renderEventName, this.renderView, this );\n  this.getEngine().on( "resize", this.resize, this );\n  this.resize();\n\n  this.listenTo( this.getEntity(), \'enableRenderView\', this.enableRenderView );\n  this.listenTo( this.getEntity(), \'disableRenderView\', this.disableRenderView );\n  this.listenTo( this.getEntity(), \'toggleRenderView\', this.toggleRenderView );\n  this.listenTo( this.getEntity(), \'setViewport\', this.setViewport );\n};\n\nRenderView.prototype.shutdown = function() {\n  this.getEngine().off( this.renderEventName, this.renderView, this );\n  this.getEngine().off( "resize", this.resize, this );\n};\n\nRenderView.prototype.componentsLoaded = function() {\n  this.filters = this.getEntity().getComponentByScriptId(\'camera_filters_script\');\n};\n\nRenderView.prototype.enableRenderView = function( fade ) {\n  this.enable();\n  if ( fade ) {\n    this.fadeOutTime = 0.0\n    this.fadeInTime = fade;\n    this.opacityTime = 0.0;\n    this.opacity = 0.0;\n  }\n  else {\n    this.opacity = 1.0;\n  }\n};\n\nRenderView.prototype.disableRenderView = function( fade ) {\n  if ( fade ) {\n    this.fadeInTime = 0.0;\n    this.opacityTime = fade;\n    this.fadeOutTime = fade;\n    this.opacity = 1.0;\n  }\n  else {\n    this.disable();\n    this.opacity = 0.0;\n  }\n};\n\nRenderView.prototype.toggleRenderView = function( fade ) {\n  if ( this.isEnabled() ) {\n    this.disableRenderView( fade );\n  }\n  else {\n    this.enableRenderView( fade );\n  }\n};\n\nRenderView.prototype.setViewport = function( x, y, width, height, animationTime ) {\n  this.viewportLeft = x;\n  this.viewportBottom = y;\n  this.viewportWidth = width;\n  this.viewportHeight = height;\n  \n  if ( !animationTime ) {\n    this.resize();\n    this.animationTotalTime = 0;\n  }\n  else {\n    this.animationTotalTime = animationTime;\n    this.animationTime = 0;\n    this.oldX = this._x;\n    this.oldY = this._y;\n    this.oldWidth = this._width;\n    this.oldHeight = this._height;\n\n    this.updateViewport();\n\n    this.targetX = this._x;\n    this.targetY = this._y;\n    this.targetWidth = this._width;\n    this.targetHeight = this._height;\n\n    this._x = this.oldX;\n    this._y = this.oldY;\n    this._width = this.oldWidth;\n    this._height = this.oldHeight;\n  }\n};\n\nRenderView.prototype.updateViewport = function() {\n  var cWidth, cHeight, percent;\n  cWidth = this.getEngine().getBaseRenderer().getWidth();\n  cHeight = this.getEngine().getBaseRenderer().getHeight();\n\n  if ( this.viewportBottom.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportBottom.slice( 0, -1)) * 0.01;\n    this._y = parseInt(percent * cHeight, 10);\n  }\n  else {\n    this._y = parseInt(this.viewportBottom);\n  }\n  if ( this.viewportLeft.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportLeft.slice( 0, -1)) * 0.01;\n    this._x = parseInt(percent * cWidth, 10);\n  }\n  else {\n    this._x = parseInt(this.viewportLeft);\n  }\n  if ( this.viewportWidth.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportWidth.slice( 0, -1)) * 0.01;\n    this._width = parseInt(percent * cWidth, 10);\n  }\n  else {\n    this._width = parseInt(this.viewportWidth);\n  }\n  this._width = Math.min( this._width, cWidth - this._x );\n\n  if ( this.viewportHeight.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportHeight.slice( 0, -1)) * 0.01;\n    this._height = parseInt(percent * cHeight, 10);\n  }\n  else {\n    this._height = parseInt(this.viewportHeight);\n  }\n  this._height = Math.min( this._height, cHeight - this._y );\n\n  if ( this._x < 0 ) {\n    this._x += cWidth;\n  }\n  if ( this._y < 0 ) {\n    this._y += cHeight;\n  }\n};\n\nRenderView.prototype.updateCameraProjection = function() {\n  var camera = this.getThreeData();\n  if ( camera ) {\n    camera.aspect = this._width / this._height;\n    camera.updateProjectionMatrix();\n  }\n};\n\nRenderView.prototype.resize = function() {\n  this.updateViewport();\n  this.updateCameraProjection();\n};\n\nRenderView.prototype.setRenderOverride = function( fn, context ) {\n\n  this.getEngine().off( this.renderEventName, this.renderView, this.currentRenderContext );\n  if ( fn ) {\n    this.getEngine().on( this.renderEventName, fn, context );\n    this.currentRenderContext = context;\n  }\n  else {\n    this.getEngine().on( this.renderEventName, this.renderView, this );\n  }\n};\n\nRenderView.prototype.renderView = function(delta) {\n  if ( this.isEnabled() ) {\n    var scene = this.getScene();\n    var renderTarget = null;\n    if ( this.renderTarget ) {\n      if ( !this.renderTarget.threeData ) {\n        return;\n      }\n      else {\n        renderTarget = this.renderTarget.threeData;\n      }\n    }\n    if (this.hasThreeData() && scene && scene.threeData ) {\n      if ( this.fadeInTime ) {\n        this.getEngine().needsRender = true;\n        this.opacityTime += delta;\n        this.opacity = this.opacityTime * this.opacityTime / this.fadeInTime;\n        if ( this.opacity > 1.0 ) {\n          this.opacity = 1.0;\n          this.fadeInTime = 0.0;\n          this.opacityTime = 0.0;\n        }\n      }\n      else if ( this.fadeOutTime ) {\n        this.getEngine().needsRender = true;\n        if ( this.opacityTime === -1.0 ) {\n          this.disable();\n          this.opacity = 0;\n          this.fadeOutTime = 0.0;\n          this.opacityTime = 0.0;\n          this.disable();\n        }\n        else {\n          this.opacityTime -= delta;\n          if ( this.opacityTime <= 0.0 ) {\n            this.opacity = 0.0001;\n            this.opacityTime = -1.0;\n          }\n          else {\n            this.opacity = this.opacityTime / this.fadeOutTime;\n            // this.opacity = Math.min( this.opacity, 1.0 );\n          }\n        }\n      }\n      if ( this.animationTotalTime > 0 ) {\n        this.getEngine().needsRender = true;\n        this.animationTime += delta;\n        var animationProgress = this.animationTime / this.animationTotalTime;\n        if ( animationProgress >= 1.0 ) {\n          this.animationTotalTime = 0;\n          animationProgress = 1.0;\n        }\n\n        this._x = (1.0 - animationProgress) * this.oldX + animationProgress * this.targetX;\n        this._y = (1.0 - animationProgress) * this.oldY + animationProgress * this.targetY;\n        this._width = (1.0 - animationProgress) * this.oldWidth + animationProgress * this.targetWidth;\n        this._height = (1.0 - animationProgress) * this.oldHeight + animationProgress * this.targetHeight;\n\n        this.updateCameraProjection();\n      }\n\n      // this.getThreeRenderer().clear( this.clearColor, this.clearDepth, true );\n      // this.getThreeRenderer().setViewport( this._x, this._y, this._width, this._height );\n      this.getRenderer().renderView( scene.threeData, this.getThreeData(), {\n        viewPort: { x: this._x, y: this._y, width: this._width, height: this._height},\n        enablePreRenderFunctions: this.enablePreRenderFunctions,\n        composer: this.filters ? this.filters.composer : null,\n        enableShadows: this.enableShadows,\n        clearColor: this.clearColor,\n        clearDepth: this.clearDepth,\n        delta: delta,\n        opacity: this.opacity,\n        renderTarget: renderTarget } );\n    }\n  } \n};\n\nreturn RenderView;\n'}),define("text!VeroldEngine/Components/BuiltIn/HMDRenderEffect.js",[],function(){return'// The MIT License\n\n// Copyright \xa9 2010-2015 three.js authors\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/**\n * This effect is heavily, heavily based on THREE.OculusRiftEffect by troffmo5 / http://github.com/troffmo5\n *\n * It has been modified to work with the Verold renderer.\n *\n */\nfunction HMDRenderEffect() {\n  // this.hmdEffect = null;\n\n  // Parameters from the Oculus Rift DK1\n  this.hScreenSize = 0.14976;\n  this.vScreenSize = 0.0936;\n  this.interpupillaryDistance = 0.064;\n  this.lensSeparationDistance = 0.064;\n  this.eyeToScreenDistance = 0.041;\n  this.distortionK = [1.0, 0.22, 0.24, 0.0];\n  this.chromaAbParameter = [ 0.996, -0.004, 1.014, 0.0];\n  this.vResolution = 1080;\n  this.hResolution = 1920;\n}\n\nHMDRenderEffect.prototype = new VAPI.VeroldComponent();\n\nHMDRenderEffect.prototype.init = function() {\n  this.getEngine().on(\'resize\', this.resize, this );\n  this.on( \'enable\', this.onEnabled, this );\n  this.on( \'disable\', this.onDisabled, this );\n};\n\nHMDRenderEffect.prototype.shutdown = function() {\n  this.getEngine().off(\'resize\', this.resize, this );\n  this.off( \'enable\', this.onEnabled, this );\n  this.off( \'disable\', this.onDisabled, this );\n  if ( this.hmdRenderTarget ) {\n    this.hmdRenderTarget.dispose();\n  }\n};\n\nHMDRenderEffect.prototype.componentsLoaded = function(delta) {\n  this.renderViewComp = this.getEntity().getComponentByScriptId( \'render_view_component\');\n  this.renderFiltersComp = this.getEntity().getComponentByScriptId( \'camera_filters_script\');\n  if ( this.isEnabled() ) {\n    this.initHMDEffect();\n    this.onEnabled();\n  }\n};\n\nHMDRenderEffect.prototype.resize = function() {\n\n  if ( this.isEnabled() ) {\n    this.RTParams = { minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\n    this.left = {};\n    this.right = {};\n    var distScale = 1.0;\n    this.hResolution = this.getRenderer().getWidth();\n    this.vResolution = this.getRenderer().getHeight();\n    \n    // Compute aspect ratio and FOV\n    var aspect = this.hResolution / (2*this.vResolution);\n\n    // Fov is normally computed with:\n    //   THREE.Math.radToDeg( 2*Math.atan2(this.vScreenSize,2*this.eyeToScreenDistance) );\n    // But with lens distortion it is increased (see Oculus SDK Documentation)\n    var r = -1.0 - (4 * (this.hScreenSize/4 - this.lensSeparationDistance/2) / this.hScreenSize);\n    distScale = (this.distortionK[0] + this.distortionK[1] * Math.pow(r,2) + this.distortionK[2] * Math.pow(r,4) + this.distortionK[3] * Math.pow(r,6));\n    var fov = THREE.Math.radToDeg(2*Math.atan2(this.vScreenSize*distScale, 2*this.eyeToScreenDistance));\n\n    // Compute camera projection matrices\n    var proj = (new THREE.Matrix4()).makePerspective( fov, aspect, 0.01, 10000 );\n    var h = 4 * (this.hScreenSize/4 - this.interpupillaryDistance/2) / this.hScreenSize;\n    this.left.proj = ((new THREE.Matrix4()).makeTranslation( h, 0.0, 0.0 )).multiply(proj);\n    this.right.proj = ((new THREE.Matrix4()).makeTranslation( -h, 0.0, 0.0 )).multiply(proj);\n\n    // Compute camera transformation matrices\n    this.left.tranform = (new THREE.Matrix4()).makeTranslation( -this.interpupillaryDistance/2, 0.0, 0.0 );\n    this.right.tranform = (new THREE.Matrix4()).makeTranslation( this.interpupillaryDistance/2, 0.0, 0.0 );\n\n    // Compute Viewport\n    this.left.viewport = [0, 0, this.hResolution/2, this.vResolution];\n    this.right.viewport = [this.hResolution/2, 0, this.hResolution/2, this.vResolution];\n\n    // Distortion shader parameters\n    var lensShift = 4 * (this.hScreenSize/4 - this.lensSeparationDistance/2) / this.hScreenSize;\n    this.left.lensCenter = new THREE.Vector2( lensShift, 0.0);\n    this.right.lensCenter = new THREE.Vector2( -lensShift, 0.0);\n\n    this.RTMaterial.uniforms.hmdWarpParam.value = new THREE.Vector4(this.distortionK[0], this.distortionK[1], this.distortionK[2], this.distortionK[3]);\n    this.RTMaterial.uniforms.chromAbParam.value = new THREE.Vector4(this.chromaAbParameter[0], this.chromaAbParameter[1], this.chromaAbParameter[2], this.chromaAbParameter[3]);\n    this.RTMaterial.uniforms.scaleIn.value = new THREE.Vector2(1.0,1.0/aspect);\n    this.RTMaterial.uniforms.scale.value = new THREE.Vector2(1.0/distScale, 1.0*aspect/distScale);\n\n    // Create render target\n    if ( this.hmdRenderTarget ) {\n      this.hmdRenderTarget.dispose();\n    }\n    this.hmdRenderTarget = new THREE.WebGLRenderTarget( Math.floor(this.hResolution*distScale/2), Math.floor(this.vResolution*distScale), this.RTParams );\n    this.RTMaterial.uniforms.texid.value = this.hmdRenderTarget;\n  }\n};\n\nHMDRenderEffect.prototype.onEnabled = function() {\n  \n  if ( this.renderViewComp ) {\n    this.renderViewComp.setRenderOverride( this.renderView, this );\n    this.resize();\n  }\n};\n\nHMDRenderEffect.prototype.onDisabled = function() {\n  if ( this.renderViewComp ) {\n    this.renderViewComp.setRenderOverride( null );\n  }\n};\n\nHMDRenderEffect.prototype.renderView = function( delta ) {\n\n  if ( this.isEnabled() ) {\n\n    var scene = this.getThreeScene();\n\n    if ( this.hasThreeData() && scene ) {\n\n      var camera = this.getThreeData();\n      if (camera.matrixAutoUpdate) camera.updateMatrix();\n\n      // Render left\n      this.pCamera.projectionMatrix.copy( this.left.proj );\n\n      this.pCamera.matrix.copy(camera.matrix).multiply( this.left.tranform);\n      this.pCamera.matrixWorldNeedsUpdate = true;\n      this.RTMaterial.uniforms.lensCenter.value = this.left.lensCenter;\n\n      this.getRenderer().renderView( scene, this.pCamera, {\n        enablePreRenderFunctions: this.renderViewComp.enablePreRenderFunctions,\n        composer: this.renderFiltersComp ? this.renderFiltersComp.composer : null,\n        enableShadows: this.renderViewComp.enableShadows,\n        clearColor: true,\n        clearDepth: true,\n        renderTarget: this.hmdRenderTarget,\n        delta: delta,\n        opacity: 1.0 } );\n\n      this.getThreeRenderer().setRenderTarget( null );\n      this.getThreeRenderer().setViewport( this.left.viewport[0], this.left.viewport[1], this.left.viewport[2], this.left.viewport[3] );\n      this.getThreeRenderer().render( this.finalScene, this.oCamera );\n\n      // Render right\n      this.pCamera.projectionMatrix.copy( this.right.proj );\n\n      this.pCamera.matrix.copy(camera.matrix).multiply( this.right.tranform);\n      this.pCamera.matrixWorldNeedsUpdate = true;\n\n      // renderer.setViewport( this.right.viewport[0], this.right.viewport[1], this.right.viewport[2], this.right.viewport[3]);\n\n      this.RTMaterial.uniforms.lensCenter.value = this.right.lensCenter;\n\n      // renderer.render( scene, this.pCamera, this.hmdRenderTarget, this.clearFlag );\n      // this.clearFlag = false;\n\n      this.getRenderer().renderView( scene, this.pCamera, {\n        // viewPort: { x: this.right.viewport[0], y: this.right.viewport[1], width: this.right.viewport[2], height: this.right.viewport[3]},\n        // viewPort: { x: this.renderViewComp._x, y: this.renderViewComp._y, width: this.renderViewComp._width, height: this.renderViewComp._height},\n        enablePreRenderFunctions: this.renderViewComp.enablePreRenderFunctions,\n        composer: this.renderFiltersComp ? this.renderFiltersComp.composer : null,\n        enableShadows: this.renderViewComp.enableShadows,\n        clearColor: this.renderViewComp.clearColor,\n        clearDepth: this.renderViewComp.clearDepth,\n        renderTarget: this.hmdRenderTarget,\n        delta: delta,\n        opacity: 1.0 } );\n\n      this.getThreeRenderer().setRenderTarget( null );\n      this.getThreeRenderer().setViewport( this.right.viewport[0], this.right.viewport[1], this.right.viewport[2], this.right.viewport[3] );\n      this.getThreeRenderer().render( this.finalScene, this.oCamera );\n    }\n  }\n};\n\n/**\n *\n * This effect is heavily, heavily based on THREE.OculusRiftEffect by troffmo5 / http://github.com/troffmo5\n *\n */\nHMDRenderEffect.prototype.initHMDEffect = function() {\n\n  // Perspective camera\n  this.pCamera = new THREE.PerspectiveCamera();\n  this.pCamera.matrixAutoUpdate = false;\n  this.pCamera.target = new THREE.Vector3();\n\n  // Orthographic camera\n  this.oCamera = new THREE.OrthographicCamera( -1, 1, 1, -1, 1, 1000 );\n  this.oCamera.position.z = 1;\n\n  this.hResolution = this.getRenderer().getCanvasWidth();\n  this.vResolution = this.getRenderer().getCanvasHeight();\n\n  \n  this.RTMaterial = new THREE.ShaderMaterial( {\n    uniforms: {\n      "texid": { type: "t", value: null },\n      "scale": { type: "v2", value: new THREE.Vector2(1.0,1.0) },\n      "scaleIn": { type: "v2", value: new THREE.Vector2(1.0,1.0) },\n      "lensCenter": { type: "v2", value: new THREE.Vector2(0.0,0.0) },\n      "hmdWarpParam": { type: "v4", value: new THREE.Vector4(1.0,0.0,0.0,0.0) },\n      "chromAbParam": { type: "v4", value: new THREE.Vector4(1.0,0.0,0.0,0.0) }\n    },\n    vertexShader: [\n      "varying vec2 vUv;",\n      "void main() {",\n      " vUv = uv;",\n      " gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",\n      "}"\n    ].join("\\n"),\n\n    fragmentShader: [\n      "uniform vec2 scale;",\n      "uniform vec2 scaleIn;",\n      "uniform vec2 lensCenter;",\n      "uniform vec4 hmdWarpParam;",\n      \'uniform vec4 chromAbParam;\',\n      "uniform sampler2D texid;",\n      "varying vec2 vUv;",\n      "void main()",\n      "{",\n      "  vec2 uv = (vUv*2.0)-1.0;", // range from [0,1] to [-1,1]\n      "  vec2 theta = (uv-lensCenter)*scaleIn;",\n      "  float rSq = theta.x*theta.x + theta.y*theta.y;",\n      "  vec2 rvector = theta*(hmdWarpParam.x + hmdWarpParam.y*rSq + hmdWarpParam.z*rSq*rSq + hmdWarpParam.w*rSq*rSq*rSq);",\n      \'  vec2 rBlue = rvector * (chromAbParam.z + chromAbParam.w * rSq);\',\n      "  vec2 tcBlue = (lensCenter + scale * rBlue);",\n      "  tcBlue = (tcBlue+1.0)/2.0;", // range from [-1,1] to [0,1]\n      "  if (any(bvec2(clamp(tcBlue, vec2(0.0,0.0), vec2(1.0,1.0))-tcBlue))) {",\n      "    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);",\n      "    return;}",\n      "  vec2 tcGreen = lensCenter + scale * rvector;",\n      "  tcGreen = (tcGreen+1.0)/2.0;", // range from [-1,1] to [0,1]\n      "  vec2 rRed = rvector * (chromAbParam.x + chromAbParam.y * rSq);",\n      "  vec2 tcRed = lensCenter + scale * rRed;",\n      "  tcRed = (tcRed+1.0)/2.0;", // range from [-1,1] to [0,1]\n      "  gl_FragColor = vec4(texture2D(texid, tcRed).r, texture2D(texid, tcGreen).g, texture2D(texid, tcBlue).b, 1);",\n      "}"\n    ].join("\\n")\n  } );\n\n  this.mesh = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), this.RTMaterial );\n\n  // Final scene\n  this.finalScene = new THREE.Scene();\n  this.finalScene.add( this.oCamera );\n  this.finalScene.add( this.mesh );\n\n  this.resize();\n\n\n};\nreturn HMDRenderEffect;\n\n'
}),define("text!VeroldEngine/Components/BuiltIn/DebugTextureRender.js",[],function(){return'/**\n *\n * @class DebugTextureRender\n */\nfunction DebugTextureRender() {\n  this.renderEventName = "render";\n  this.currentRenderContext = this;\n  // this.texture2D = null;\n}\n\n/*global VAPI*/\nDebugTextureRender.prototype = new VAPI.VeroldComponent();\n\nDebugTextureRender.prototype.init = function() {\n\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n  this.scene  = new THREE.Scene();\n\n  this.material = new THREE.ShaderMaterial( THREE.CopyShader );\n\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), this.material );\n  this.scene.add( this.quad );\n\n  this.getEntity().when(\'load\', this.objectLoaded, this );\n  \n  var renderEvent = parseInt( this.renderGroup, 10 );\n  if ( renderEvent ) {\n    this.renderEventName += "Group" + renderEvent;\n  }\n  this.getEngine().on( this.renderEventName, this.renderView, this );\n  this.getEngine().on( "resize", this.resize, this );\n  this.resize();\n};\n\nDebugTextureRender.prototype.shutdown = function() {\n  this.getEngine().off( this.renderEventName, this.renderView, this );\n  this.getEngine().off( "resize", this.resize, this );\n};\n\nDebugTextureRender.prototype.objectLoaded = function() {\n  this.material.uniforms.tDiffuse.value = this.getThreeData();\n};\n\nDebugTextureRender.prototype.setViewport = function( x, y, width, height ) {\n  this.viewportLeft = x;\n  this.viewportBottom = y;\n  this.viewportWidth = width;\n  this.viewportHeight = height;\n      \n  this.oldX = this._x;\n  this.oldY = this._y;\n  this.oldWidth = this._width;\n  this.oldHeight = this._height;\n\n  this.updateViewport();\n\n  this.targetX = this._x;\n  this.targetY = this._y;\n  this.targetWidth = this._width;\n  this.targetHeight = this._height;\n\n  this._x = this.oldX;\n  this._y = this.oldY;\n  this._width = this.oldWidth;\n  this._height = this.oldHeight;\n\n};\n\nDebugTextureRender.prototype.updateViewport = function() {\n  var cWidth, cHeight, percent;\n  cWidth = this.getEngine().getBaseRenderer().getWidth();\n  cHeight = this.getEngine().getBaseRenderer().getHeight();\n\n  if ( this.viewportBottom.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportBottom.slice( 0, -1)) * 0.01;\n    this._y = parseInt(percent * cHeight, 10);\n  }\n  else {\n    this._y = parseInt(this.viewportBottom);\n  }\n  if ( this.viewportLeft.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportLeft.slice( 0, -1)) * 0.01;\n    this._x = parseInt(percent * cWidth, 10);\n  }\n  else {\n    this._x = parseInt(this.viewportLeft);\n  }\n  if ( this.viewportWidth.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportWidth.slice( 0, -1)) * 0.01;\n    this._width = parseInt(percent * cWidth, 10);\n  }\n  else {\n    this._width = parseInt(this.viewportWidth);\n  }\n  if ( this.viewportHeight.slice( -1 ) === "%" ) {\n    percent = parseFloat(this.viewportHeight.slice( 0, -1)) * 0.01;\n    this._height = parseInt(percent * cHeight, 10);\n  }\n  else {\n    this._height = parseInt(this.viewportHeight);\n  }\n\n  if ( this._x < 0 ) {\n    this._x += cWidth;\n  }\n  if ( this._y < 0 ) {\n    this._y += cHeight;\n  }\n};\n\nDebugTextureRender.prototype.updateCameraProjection = function() {\n  var camera = this.getThreeData();\n  if ( camera ) {\n    camera.aspect = this._width / this._height;\n    // camera.updateProjectionMatrix();\n  }\n};\n\nDebugTextureRender.prototype.resize = function() {\n  this.updateViewport();\n  this.updateCameraProjection();\n};\n\nDebugTextureRender.prototype.renderView = function(delta) {\n  if ( this.isEnabled() ) {\n    // var scene = this.getScene();\n    if (this.hasThreeData() ) {\n      \n      // this.getThreeRenderer().clear( this.clearColor, this.clearDepth, true );\n      var oldViewport = this.getThreeRenderer().getViewport();\n      this.getThreeRenderer().setRenderTarget(null);\n      this.getThreeRenderer().setViewport( this._x, this._y, this._width, this._height );\n      this.getThreeRenderer().render( this.scene, this.camera );\n      this.getThreeRenderer().setViewport( oldViewport._x, oldViewport._y, oldViewport._width, oldViewport._height );\n    }\n  } \n};\n\nreturn DebugTextureRender;\n'}),define("text!VeroldEngine/Components/BuiltIn/RenderTargetViewer.js",[],function(){return"/**\r\n *\r\n * @class RenderTargetViewer\r\n */\r\nfunction RenderTargetViewer() {\r\n  this.renderEventName = \"render\";\r\n  this.currentRenderContext = this;\r\n  this.textureRegistryById = {};\r\n  // this.textureRegistryByName = {};\r\n}\r\n\r\nRenderTargetViewer.EL_CSS = {\r\n  'position': 'absolute',\r\n  'left': 0,\r\n  'top': 0,\r\n  'padding': '8px',\r\n  'border-radius': '5px',\r\n  'font-family': '\"proxima_nova_regular\",Helvetica,Arial,sans-serif',\r\n  'max-width' : '25%',\r\n  'min-width' : '25px',\r\n  'transition': 'opacity 0.1s ease-in-out, background 0.1s ease-in-out',\r\n  'cursor' : 'pointer',\r\n  // 'display' : 'none'\r\n};\r\n\r\nRenderTargetViewer.TEXT_CSS = {\r\n  'color': '#fff',\r\n  'font-family': '\"proxima_nova_regular\",Helvetica,Arial,sans-serif',\r\n  'word-wrap':'break-word',\r\n  '-webkit-touch-callout': 'none',\r\n  '-webkit-user-select': 'none',\r\n  '-khtml-user-select': 'none',\r\n  '-moz-user-select': 'none',\r\n  '-ms-user-select': 'none',\r\n  'user-select': 'none',\r\n  'pointer-events' : 'none',\r\n  'line-height' : '115%',\r\n  'font-size' : '1.8vmin'  //1.8vmax for mobile, 1.8vmin for desktop\r\n};\r\n\r\nfunction css (el, styles) {\r\n  // if args length is 3, then el, property, value\r\n\r\n  if (!el || !el.style) {\r\n    return;\r\n  }\r\n\r\n  if (typeof styles === 'string') {\r\n    if (arguments.length === 2) {\r\n      return el.style[arguments[1]];\r\n    } else {\r\n      el.style[arguments[1]] = arguments[2];\r\n    }\r\n  }\r\n  for (var i in styles) {\r\n    if (styles.hasOwnProperty(i)) {\r\n      el.style[i] = styles[i];\r\n    }\r\n  }\r\n}\r\n\r\nfunction addClass(el, className) {\r\n  if (el.classList) {\r\n    el.classList.add(className);\r\n  } else {\r\n    el.className += ' ' + className;\r\n  }\r\n}\r\n\r\n/*global VAPI*/\r\nRenderTargetViewer.prototype = new VAPI.VeroldComponent();\r\n\r\nRenderTargetViewer.prototype.preInit = RenderTargetViewer.prototype.preInitEditor = function() {\r\n  VAPI.globalEvents.on( \"veroldEngine:textureDebugger:registerTexture\", this.registerTexture, this );\r\n  VAPI.globalEvents.on( \"veroldEngine:textureDebugger:unregisterTexture\", this.unregisterTexture, this );\r\n};\r\n\r\nRenderTargetViewer.prototype.init = RenderTargetViewer.prototype.editorInit = function() {\r\n\r\n  this.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\r\n  this.scene  = new THREE.Scene();\r\n\r\n  this.material = new THREE.ShaderMaterial( THREE.CopyShader );\r\n\r\n  this.quad = new THREE.Mesh( new THREE.PlaneGeometry( 2, 2 ), this.material );\r\n  this.scene.add( this.quad );\r\n\r\n  // this.getEntity().when('load', this.objectLoaded, this );\r\n  \r\n  var renderEvent = parseInt( this.renderGroup, 10 );\r\n  if ( renderEvent ) {\r\n    this.renderEventName += \"Group\" + renderEvent;\r\n  }\r\n  this.getEngine().on( this.renderEventName, this.renderView, this );\r\n  this.getEngine().on( \"resize\", this.resize, this );\r\n  this.resize();\r\n};\r\n\r\nRenderTargetViewer.prototype.shutdown = RenderTargetViewer.prototype.editorShutdown = function() {\r\n  VAPI.globalEvents.off( \"veroldEngine:textureDebugger:registerTexture\", this.registerTexture, this );\r\n  VAPI.globalEvents.off( \"veroldEngine:textureDebugger:unregisterTexture\", this.unregisterTexture, this );\r\n  this.getEngine().off( this.renderEventName, this.renderView, this );\r\n  this.getEngine().off( \"resize\", this.resize, this );\r\n};\r\n\r\nRenderTargetViewer.prototype.registerTexture = function( texture ) {\r\n  this.textureRegistryById[ texture.uuid ] = texture;\r\n};\r\n\r\nRenderTargetViewer.prototype.unregisterTexture = function( texture ) {\r\n  if ( !this.textureRegistryById[ texture.uuid ] ) {\r\n    console.warn( \"Unregistering render target that isn't registered\");\r\n  }\r\n  else {\r\n    delete this.textureRegistryById[ texture.uuid ];\r\n  }\r\n};\r\n\r\n// RenderTargetViewer.prototype.updateNameRegistry = function( ) {\r\n//   _.each( this.textureRegistryById, function( tex ) {\r\n//     if ( tex.name && tex.name !== '' ) {\r\n//       if ( this.textureRegistryByName[ tex.name ] && this.textureRegistryByName[ tex.name ].uuid !== tex.uuid ) {\r\n//         console.warn(\"RenderTargetViewer: More than one texture registered with the name, \" + tex.name );\r\n//       }\r\n//       this.textureRegistryByName[ tex.name ] = tex;\r\n//     }\r\n//   }, this );\r\n  \r\n// };\r\n\r\nRenderTargetViewer.prototype.setTexture = function( textureId ) {\r\n  this.threeTexture = null;\r\n  \r\n  if ( textureId ) {\r\n    this.threeTexture = this.textureRegistryById[ textureId ];\r\n    this.material.uniforms.tDiffuse.value = this.threeTexture;\r\n    this.quad.visible = true;\r\n  }\r\n  else {\r\n    this.quad.visible = false;\r\n  }\r\n};\r\n\r\nRenderTargetViewer.prototype.setViewport = function( x, y, width, height ) {\r\n  this.viewportLeft = x;\r\n  this.viewportBottom = y;\r\n  this.viewportWidth = width;\r\n  this.viewportHeight = height;\r\n      \r\n  this.oldX = this._x;\r\n  this.oldY = this._y;\r\n  this.oldWidth = this._width;\r\n  this.oldHeight = this._height;\r\n\r\n  this.updateViewport();\r\n\r\n  this.targetX = this._x;\r\n  this.targetY = this._y;\r\n  this.targetWidth = this._width;\r\n  this.targetHeight = this._height;\r\n\r\n  this._x = this.oldX;\r\n  this._y = this.oldY;\r\n  this._width = this.oldWidth;\r\n  this._height = this.oldHeight;\r\n\r\n};\r\n\r\nRenderTargetViewer.prototype.updateViewport = function() {\r\n  var cWidth, cHeight, percent;\r\n  cWidth = this.getEngine().getBaseRenderer().getWidth();\r\n  cHeight = this.getEngine().getBaseRenderer().getHeight();\r\n\r\n  if ( this.viewportBottom.slice( -1 ) === \"%\" ) {\r\n    percent = parseFloat(this.viewportBottom.slice( 0, -1)) * 0.01;\r\n    this._y = parseInt(percent * cHeight, 10);\r\n  }\r\n  else {\r\n    this._y = parseInt(this.viewportBottom);\r\n  }\r\n  if ( this.viewportLeft.slice( -1 ) === \"%\" ) {\r\n    percent = parseFloat(this.viewportLeft.slice( 0, -1)) * 0.01;\r\n    this._x = parseInt(percent * cWidth, 10);\r\n  }\r\n  else {\r\n    this._x = parseInt(this.viewportLeft);\r\n  }\r\n  if ( this.viewportWidth.slice( -1 ) === \"%\" ) {\r\n    percent = parseFloat(this.viewportWidth.slice( 0, -1)) * 0.01;\r\n    this._width = parseInt(percent * cWidth, 10);\r\n  }\r\n  else {\r\n    this._width = parseInt(this.viewportWidth);\r\n  }\r\n  if ( this.viewportHeight.slice( -1 ) === \"%\" ) {\r\n    percent = parseFloat(this.viewportHeight.slice( 0, -1)) * 0.01;\r\n    this._height = parseInt(percent * cHeight, 10);\r\n  }\r\n  else {\r\n    this._height = parseInt(this.viewportHeight);\r\n  }\r\n\r\n  if ( this._x < 0 ) {\r\n    this._x += cWidth;\r\n  }\r\n  if ( this._y < 0 ) {\r\n    this._y += cHeight;\r\n  }\r\n};\r\n\r\n// RenderTargetViewer.prototype.updateCameraProjection = function() {\r\n//   var camera = this.getThreeData();\r\n//   if ( camera ) {\r\n//     camera.aspect = this._width / this._height;\r\n//     // camera.updateProjectionMatrix();\r\n//   }\r\n// };\r\n\r\nRenderTargetViewer.prototype.updateTextureDropdown = function() {\r\n  if ( this.isEnabled() ) {\r\n    var that = this;\r\n    setTimeout( function() {\r\n      var newOption;\r\n      \r\n      if ( !that.textureDropDown ) {\r\n        that.textureDropDown = document.createElement('select');\r\n        that.textureDropDown.name = \"Poop\";\r\n        that.textureDropDown.id = \"Poop\";\r\n        addClass(that.textureDropDown, 'debugger-dropdown');\r\n        css(that.textureDropDown, RenderTargetViewer.EL_CSS);\r\n        var canvas = that.getThreeRenderer().domElement;\r\n        if ( canvas.parentElement ) {\r\n          canvas.parentElement.appendChild( that.textureDropDown );\r\n        }\r\n        else {\r\n          canvas.appendChild( that.textureDropDown );\r\n        }\r\n        that.textureDropDown.onchange = function( event, thing ) {\r\n          that.setTexture( that.textureDropDown.value );\r\n        };\r\n      }\r\n\r\n      that.textureDropDown.options.length = 0;\r\n      newOption = document.createElement('option');\r\n      newOption.value = 0;\r\n      newOption.text = \"None\";\r\n      that.textureDropDown.appendChild( newOption );\r\n\r\n      _.each( that.textureRegistryById, function( tex, id ) {\r\n        newOption = document.createElement('option');\r\n        newOption.value = id;\r\n        newOption.text = tex.name !== '' ? tex.name : id;\r\n        if ( tex.__webglTexture ) {\r\n          that.textureDropDown.appendChild( newOption );\r\n        }\r\n      }, that );\r\n      that.textureDropDown.style.top = (that.getEngine().getBaseRenderer().getHeight() - that._y - that._height) + 'px';\r\n      that.textureDropDown.style.left = that._x + 'px';\r\n      that.textureDropDown.style.zIndex = 200;\r\n    }, 0);\r\n  }\r\n};\r\n\r\nRenderTargetViewer.prototype.resize = function() {\r\n  if ( this.isEnabled() ) {\r\n    this.updateTextureDropdown();\r\n    this.updateViewport();\r\n    // this.updateCameraProjection();\r\n  }\r\n};\r\n\r\nRenderTargetViewer.prototype.renderView = function(delta) {\r\n  if ( this.isEnabled() ) {\r\n    // var scene = this.getScene();\r\n    if (this.threeTexture ) {\r\n      \r\n      // this.getThreeRenderer().clear( this.clearColor, this.clearDepth, true );\r\n      var oldViewport = this.getThreeRenderer().getViewport();\r\n      this.getThreeRenderer().setRenderTarget(null);\r\n      this.getThreeRenderer().setViewport( this._x, this._y, this._width, this._height );\r\n      this.getThreeRenderer().render( this.scene, this.camera );\r\n      this.getThreeRenderer().setViewport( oldViewport._x, oldViewport._y, oldViewport._width, oldViewport._height );\r\n      \r\n    }\r\n  } \r\n};\r\n\r\nreturn RenderTargetViewer;\r\n"}),define("text!VeroldEngine/Components/BuiltIn/RenderModes.js",[],function(){return'var _ = require(\'underscore\');\n\n/* global VAPI */\nvar EngineMaterials = require(\'VeroldEngine/Materials/EngineMaterials\');\n\n/**\n * A custom RenderModes class.\n *\n * @class RenderModes\n */\nfunction RenderModes() {\n  this.wireframeCache = {};\n  this.currentRenderMode = "Lit";\n  this.skinWeightsMatDef = {\n    side : THREE.DoubleSide,\n    vertexShader: [\n      THREE.ShaderChunk[ "skinning_pars_vertex" ],\n      "varying vec3 vColor;",\n\n      "void main() {",\n        THREE.ShaderChunk[ "skinbase_vertex" ],\n        THREE.ShaderChunk[ "skinning_vertex" ],\n        THREE.ShaderChunk[ "default_vertex" ],\n\n        "#ifdef USE_SKINNING",\n        "vColor = vec3( skinWeight.x, skinWeight.y, skinWeight.z);",\n        "#else",\n        "vColor = vec3( 0.0, 0.0, 0);",\n        "#endif",\n      "}"\n\n    ].join("\\n"),\n\n    fragmentShader: [\n      "varying vec3 vColor;",\n      "void main() {",\n        "gl_FragColor = vec4( vColor, 1.0 );",\n      "}"\n    ].join("\\n")\n  };\n\n  this.skinIndicesMatDef = {\n    side : THREE.DoubleSide,\n    vertexShader: [\n      THREE.ShaderChunk[ "skinning_pars_vertex" ],\n      "varying vec3 vColor;",\n\n      "void main() {",\n        THREE.ShaderChunk[ "skinbase_vertex" ],\n        THREE.ShaderChunk[ "skinning_vertex" ],\n        THREE.ShaderChunk[ "default_vertex" ],\n\n        "#ifdef USE_SKINNING",\n        "vColor = vec3( pow(skinIndex.x * 0.0025, 0.125), pow(skinIndex.y * 0.0025, 0.125), pow(skinIndex.z * 0.0025, 0.125));",\n        "#else",\n        "vColor = vec3( 0.0, 0.0, 0);",\n        "#endif",\n      "}"\n    ].join("\\n"),\n\n    fragmentShader: [\n      "varying vec3 vColor;",\n      "void main() {",\n        "gl_FragColor = vec4( vColor, 1.0 );",\n      "}"\n    ].join("\\n")\n\n  };\n\n  this.renderModes = {\n    "Lit" : {\n      "overrideMaterial" : null,\n      // "overlayEnable" : false,\n      "overrideUniforms" : [\n        { name : "renderModeNormals", value: 0 },\n      ],\n      "wireframeEnable" : false,\n    },\n    "Unlit" : {\n      "overrideMaterial" : null,\n      "disableLights" : true,\n      // "overlayEnable" : false,\n      "overrideUniforms" : [\n        { name : "renderModeNormals", value: 0 },\n      ],\n      "wireframeEnable" : false,\n    },\n    "Normals" : {\n      "overrideMaterial" : null,\n      "overrideUniforms" : [\n        { name : "renderModeNormals", value: 1},\n      ],\n      // "overlayEnable" : false,\n      "wireframeEnable" : false,\n    },\n    "Wireframe" : {\n      "overrideMaterial" : null,\n      // "overlayEnable" : true,\n      "overrideUniforms" : [\n        { name : "renderModeNormals", value: 0},\n      ],\n      "wireframeEnable" : true,\n      // "overlayMaterial" : { \n      //   "skinned" : new THREE.ShaderMaterial( EngineMaterials.wireframe ), \n      //   "static" : new THREE.ShaderMaterial( EngineMaterials.wireframe )\n      // }\n    },\n    "Flat-shaded Wireframe" : {\n      "overrideMaterial" : "flatShaded",\n      "overlayEnable" : true,\n      "wireframeEnable" : true,\n      // "overlayMaterial" : { \n      //   "skinned" : new THREE.ShaderMaterial( EngineMaterials.wireframe ), \n      //   "static" : new THREE.ShaderMaterial( EngineMaterials.wireframe )\n      // },\n      "overrideUniforms" : [\n        { name : "renderModeNormals", value: 0 },\n      ],\n      "disableSkybox" : false\n    },\n    "UV Overlay" : {\n      "overrideMaterial" : "uvMaterial",\n      // "overlayEnable" : false,\n      "disableSkybox" : false,\n      "overrideUniforms" : [\n        { name : "renderModeNormals", value: 0, previousValue: null },\n      ],\n      "wireframeEnable" : false,\n    },\n    "Skin Weights" : {\n      "overrideMaterial" : { \n        "skinned" : new THREE.ShaderMaterial( this.skinWeightsMatDef ), \n        "static" : new THREE.ShaderMaterial( this.skinWeightsMatDef )\n      },\n      // "overlayEnable" : false,\n      "wireframeEnable" : false,\n    },\n    "Skin Indices" : {\n      "overrideMaterial" : { \n        "skinned" : new THREE.ShaderMaterial( this.skinIndicesMatDef ),\n        "static" : new THREE.ShaderMaterial( this.skinIndicesMatDef ) },\n      // "overlayEnable" : false,\n      "wireframeEnable" : false,\n    },\n  };\n}\n\nRenderModes.prototype = new VAPI.VeroldComponent();\n\nRenderModes.prototype.editorInit = function() {\n  this.getEngine().on(\'preRenderView\', this.preRenderView, this );\n  this.getEngine().on(\'postRenderView\', this.postRenderView, this );\n  this.init();\n};\n\nRenderModes.prototype.editorShutdown = function() {\n  this.getEngine().off(\'preRenderView\', this.preRenderView, this );\n  this.getEngine().off(\'postRenderView\', this.postRenderView, this );\n  this.shutdown();\n};\n\n/**\n * Called immediately after after RenderModes creation\n */\nRenderModes.prototype.init = function() {\n  \n  this.uvTextureJSON = { name: "uvTexture", id: "uvTexture", type: "texture2D", payload: {\n      isLocal: true,\n      filtering: "Trilinear",\n      anisotropy: 8\n    },\n    resources: [{\n      path: this.getEngine().paths.glAssetsBaseUrl + "/textures/Materials/uvgrid.jpg",\n      contentType: "image/jpeg",\n      contentEncoding: "identity",\n      contentLength: 569756,\n      contentLengthIdentity: 569756,\n      properties: {\n        // type: "tex_low",\n        width: 1024,\n        height: 1024,\n        compression: \'none\',\n        pixelFormat: \'rgb\',\n      }\n    }, {\n      path: this.getEngine().paths.glAssetsBaseUrl + "/textures/Materials/uvgrid.dds",\n      contentType: "image/x-dds",\n      contentEncoding: "identity",\n      contentLength: 699192,\n      contentLengthIdentity: 699192,\n      properties: {\n        // type: "tex_dxt_low",\n        width: 1024,\n        height: 1024,\n        compression: \'dxt\',\n        pixelFormat: \'rgb\',\n      }\n    }]\n  };\n  this.uvMaterialJSON = { name: "uvMaterial", id: "uvMaterial", type: "material", payload: { materialType: "Standard", diffuseTexture: "uvTexture", Features: { "Lighting" : {enabled : false }}, side: THREE.DoubleSide }};\n  this.flatShadedMaterialJSON = { name: "flatShaded", id: "flatShaded", type: "material", payload: { materialType: "Simple", diffuseColor: 0xeee5dd, specularColor: 0x000000, reflectionBias: -1.0, Features: { "Lighting" : {enabled : false }}, side: THREE.DoubleSide }};\n\n  VAPI.globalEvents.on(\'setRenderMode\', this.setRenderMode, this );\n\n  this.sceneAsset = this.veroldEntity.getParentAsset();\n  this.threeRenderer = this.getThreeRenderer();\n  this.assetRegistry = this.veroldEntity.veroldEngine.assetRegistry;\n  this.wireframeScene = new THREE.Scene();\n  \n  if ( !this.assetRegistry.assets[ this.uvTextureJSON.id ]) {\n    this.assetRegistry.createAsset( this.uvTextureJSON, {\n      success: function( texAsset ) {\n      }\n    } );\n  }\n  if ( !this.assetRegistry.assets[ this.uvMaterialJSON.id ]) {\n    this.assetRegistry.createAsset( this.uvMaterialJSON, {\n      success: function( matAsset ) {\n      }\n    } );\n  }\n  if ( !this.assetRegistry.assets[ this.flatShadedMaterialJSON.id ]) {\n    this.assetRegistry.createAsset( this.flatShadedMaterialJSON, {\n      success: function( matAsset ) {\n        matAsset.load();\n      }\n    } );\n\n    // var overlayMat = that.renderModes["Flat-shaded Wireframe"].overlayMaterial;\n    // overlayMat.static.uniforms = THREE.UniformsUtils.clone( overlayMat.static.uniforms );\n    // overlayMat.skinned.skinning = true;\n    // overlayMat.skinned.uniforms = THREE.UniformsUtils.clone( overlayMat.skinned.uniforms );\n    // overlayMat = that.renderModes["Wireframe"].overlayMaterial;\n    // overlayMat.static.uniforms = THREE.UniformsUtils.clone( overlayMat.static.uniforms );\n    // overlayMat.skinned.skinning = true;\n    // overlayMat.skinned.uniforms = THREE.UniformsUtils.clone( overlayMat.skinned.uniforms );\n  }\n};\n\n/**\n * Called when a verold object is destroyed or this RenderModes is removed\n * from a verold object.\n */\nRenderModes.prototype.shutdown = function() {\n  var x, y;\n  VAPI.globalEvents.off(\'setRenderMode\', this.setRenderMode, this);\n  if ( this.wireframeScene ) {\n    this.wireframeScene = undefined;\n  }\n  _.each( this.wireframeCache, function( helper ) {\n    helper.geometry.dispose();\n  }, this );\n\n  for ( x in this.renderModes) {\n    // if ( _.isObject( this.renderModes[x].overlayMaterial ) ) {\n    //   for ( y in this.renderModes[x].overlayMaterial ) {\n    //     if ( this.renderModes[x].overlayMaterial[y] ) {\n    //       this.renderModes[x].overlayMaterial[y].dispose();\n    //     }\n    //   }\n    // }\n    if ( _.isObject( this.renderModes[x].overrideMaterial ) ) {\n      for ( y in this.renderModes[x].overrideMaterial ) {\n        if ( this.renderModes[x].overrideMaterial[y] ) {\n          this.renderModes[x].overrideMaterial[y].dispose();\n        }\n      }\n    }\n  }\n};\n\nRenderModes.prototype.preRenderView = function( scene, camera ) {\n\n  if ( !this.currentRenderMode || !this.renderModes ) {\n    return;\n  }\n  \n  var renderMode = this.renderModes[ this.currentRenderMode ];\n  \n  if ( _.isString( renderMode.overrideMaterial ) ) {\n    this.assetRegistry.getAssetById( renderMode.overrideMaterial ).load();\n    scene.overrideMaterial = this.assetRegistry.getAssetById( renderMode.overrideMaterial ).threeData;\n  }\n  else {\n    scene.overrideMaterial = renderMode.overrideMaterial;\n  }\n\n  // scene.overrideUniforms = renderMode.overrideUniforms;\n  if ( scene.overrideMaterial ) {\n    scene.overrideMaterial.skinned.skinning = true;\n  }\n};\n\nRenderModes.prototype.postRenderView = function( scene, camera ) {\n  if ( !this.currentRenderMode || !this.renderModes ) {\n    return;\n  }\n  var renderMode = this.renderModes[ this.currentRenderMode ];\n  if ( renderMode.wireframeEnable ) {\n    this.getThreeRenderer().setViewport( 0, 0, this.getRenderer().getWidth(), this.getRenderer().getHeight() );\n    this.getThreeRenderer().render( this.wireframeScene, camera );\n  }\n};\n\nRenderModes.prototype.setRenderMode = function( modeName ) {\n\n  //for each scene, set the render mode\n  var scenes = this.getAssetRegistry().Scenes.getAssets();\n  _.each( scenes, function( scene, id ) {\n    if ( scene.isLoaded() ) {\n      var cameras = scene.getObjects({"type": "camera"});\n      _.each( cameras, function( camera ) {\n        this.applyRenderModeForScene( scene, camera, modeName );\n      }, this );\n    }\n  }, this );\n\n  if ( this.renderModes[ modeName ].overrideUniforms ) {\n    var uniforms = this.renderModes[ modeName ].overrideUniforms;\n    var materials = this.getAssetRegistry().Materials.getAssets({"type" : "material"});\n    _.each( uniforms, function( uniform ) {\n      _.each( materials, function( material, id ) {\n        // var json = {};\n        // json[ uniform.name ] = uniform.value;\n        material.setUniform( uniform.name, uniform.value );\n      }, this );\n    }, this );\n  }\n  // if ( this.renderModes[ modeName ].overlayEnable ) {\n  //   if ( !this.overlayRenderPass ) {\n  //     this.overlayRenderPass = new THREE.RenderPass();\n  //   }\n  //   this.getRenderer().removeRenderPass( this.overlayRenderPass );\n  //   this.overlayRenderPass.scene = null;\n  //   this.overlayRenderPass.camera = null;\n  //   this.overlayRenderPass.clear = false;\n  //   this.overlayRenderPass.overrideMaterial = this.renderModes[ modeName ].overlayMaterial;\n  //   this.getRenderer().addRenderPass( this.overlayRenderPass, 2 );\n  // }\n  // else {\n  //   this.getRenderer().removeRenderPass( this.overlayRenderPass );\n  // }\n  if ( this.renderModes[ modeName ].wireframeEnable ) {\n    // _.each( this.meshRegistry, function( meshEntry, id ) {\n\n    // })\n  }\n  this.getEngine().needsRender = true;\n};\n\nRenderModes.prototype.applyRenderModeForScene = function( scene, camera, modeName ) {\n\n  if ( !this.renderModes[ modeName ] ) {\n    modeName = "Lit";\n  }\n  this.currentRenderMode = modeName;\n\n  //Disable lights is they should be for this render mode\n  if ( this.renderModes[ modeName ].disableLights ) {\n    this.lightsDisabled = true;\n    scene.traverse( function( obj ) {\n      if ( obj.type === "light" ) {\n        if ( obj.getProperty("type") === "AmbientLight") {\n          obj.threeData.color.setRGB( 1.0, 1.0, 1.0 );\n        }\n        else {\n          obj.threeData.intensity = 0;\n        }\n      }\n    });\n  }\n  //Re-enable lights if they were turned off\n  else if ( this.lightsDisabled ) {\n    scene.traverse( function( obj ) {\n      if ( obj.type === "light" ) {\n        //var json = obj.entityModel.toJSON();\n        //obj.entityModel.trigger( "change:payload", json );\n        if ( obj.getProperty("type") === "AmbientLight") {\n          var colour = obj.getProperty("color");\n          obj.set( {"payload.color" : 0x000000 }, {silent: true});\n          obj.set( {"payload.color" : colour } );\n        }\n        else {\n          var intensity = obj.getProperty("intensity");\n          obj.set( {"payload.intensity" : 0 }, {silent: true});\n          obj.set( {"payload.intensity" : intensity } );\n        }\n      }\n    });\n  }\n\n  var that = this;\n  if ( this.renderModes[ modeName ].wireframeEnable ) {\n    _.each( this.wireframeCache, function( obj, id ) {\n      obj.visible = false;\n    }, this);\n    scene.traverse( function( obj ) {\n      if ( obj.type === "mesh" || obj.type === "skinned_mesh" ) {\n        if ( that.wireframeCache[ obj.id ] ) {\n          that.wireframeCache[ obj.id ].visible = true;\n        }\n        else {\n          if ( obj.threeData ) {\n            that.wireframeCache[ obj.id ] = new THREE.WireframeHelper( obj.threeData, 0x050505 );\n          }\n        }\n        if ( that.wireframeScene ) {\n          that.wireframeScene.add( that.wireframeCache[ obj.id ] );\n        }\n      }\n    });\n  }\n\n};\n\n\nreturn RenderModes;\n'}),define("text!VeroldEngine/Components/BuiltIn/ReflectionCapturePlane.js",[],function(){return'// var reflectionActorNumber = 0;\n/**\n * @author Mike Bond\n * A component to make rendering a planar reflection easier.\n * Based largely on Slayvin\'s (http://slayvin.net) THREE.Mirror class\n *\n * @class ReflectionCapture\n */\nfunction ReflectionCapture() {\n  this.framesElapsed = 0;\n  this.perspectiveCamera = null;\n  this.orthoCamera = null;\n  this.reflectionNormal = new THREE.Vector3( 0, 1, 0 );\n  this.reflectionPlane = new THREE.Plane();\n  this.clipPlane = new THREE.Vector4();\n\n  this.reflectionPosition = new THREE.Vector3();\n  this.cameraWorldPosition = new THREE.Vector3();\n  this.rotationMatrix = new THREE.Matrix4();\n  this.lookAtPosition = new THREE.Vector3(0, 0, -1);\n  this.up = new THREE.Vector3(0, 1, 0);\n\n  // reflectionActorNumber++;\n  // this.reflectionActorId = reflectionActorNumber;\n}\n\nReflectionCapture.prototype = new VAPI.VeroldComponent();\n\nReflectionCapture.prototype.init = function() {\n};\n\nReflectionCapture.prototype.editorInit = function() {\n  \n  this.veroldEntity.getParentAsset().when(\'load\', this.sceneLoadedEditor, this );\n  this.veroldEntity.when(\'load_base\', this.objectCreatedEditor, this );\n  \n  this.getEngine().on( "preRenderView", this.preRenderView, this );\n  this.inEditor = true;\n  this.init();\n};\n\nReflectionCapture.prototype.shutdown = function() {\n  // this.getEngine().off( "resize", this.resizeCamera, this );\n};\n\nReflectionCapture.prototype.editorShutdown = function() {\n\n  this.getEngine().off( "preRenderView", this.preRenderView, this );\n  var renderer = this.getThreeRenderer();\n  if ( renderer ) {\n    if ( this.reflectionTexture && this.reflectionTexture.threeData ) {\n      this.getThreeRenderer().setRenderTarget( this.reflectionTexture.threeData );\n      this.getThreeRenderer().clear();\n    }\n    else if ( this.tempRenderTexture && this.tempRenderTexture.threeData ) {\n      this.getThreeRenderer().setRenderTarget( this.tempRenderTexture.threeData );\n      this.getThreeRenderer().clear();\n    }\n  }\n  if ( this.tempRenderTexture ) {\n    this.tempRenderTexture.destroy();\n  }\n  if ( this.reflectionMaterial ) {\n    this.reflectionMaterial.destroy();\n  }\n  this.shutdown();\n};\n\n/**\n * Called once the data is available is available\n */\nReflectionCapture.prototype.sceneLoadedEditor = function() {\n  var that = this;\n  \n  window.verold.veroldEvents.trigger( \'studioApp::getCurrentCamera\', function( camera ) {\n    console.log("Reflection Actor - Assigning editor camera to be used. ", camera );\n    that.editorCamera = camera;\n    //that.sceneCamera = camera;\n    that.initCameras();\n  });\n};\n\nReflectionCapture.prototype.objectCreated = function() {\n  this.initCameras();\n  this.initTexture();\n};\n\nReflectionCapture.prototype.objectCreatedEditor = function() {\n  this.initEditorObject();\n};\n\nReflectionCapture.prototype.initEditorObject = function() {\n  var that = this;\n  this.planeGeometry = new THREE.PlaneBufferGeometry( 0.5, 0.5, 1, 1 );\n  //this.planeGeometry = new THREE.BoxGeometry( 0.5, 0.5, 0.5, 1, 1, 1 );\n  this.planeGeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\n  this.planeGeometry.computeTangents();\n  this.planeGeometry.computeVertexNormals();\n//   this.planeGeometry.computeFaceNormals();\n  this.planeGeometry.dynamic = true;\n  this.planeMesh = new THREE.Mesh( this.planeGeometry );\n  this.planeMesh.castShadow = false;\n  this.planeMesh.receiveShadow = false;\n  this.planeMesh.name = "ReflectionCapturePlane";\n\n  this.getThreeObject().add( this.planeMesh );\n  this.getEngine().globalEvents.trigger( "studioApp::registerPickingObject", this.getEntity(), this.planeMesh );\n\n  if ( !this.reflectionTexture ) {\n    this.createTempRenderTexture();\n  }\n\n  this.getAssetRegistry().createAsset( { type: "material", id: "reflection_material", payload: {\n    materialType: "Simple",\n    diffuseColor: 0x000000,\n    gloss: 1.0,\n    //diffuseTexture: that.reflectionTexture.id,\n    // environmentMappingType : 2,\n    environmentTexture2D: that.reflectionTexture ? that.reflectionTexture.id : that.tempRenderTexture.id,\n    reflectionBias: 1\n  }}, {\n    success: function( mat ) {\n      mat.load();\n      mat.enableFeature( "Reflections", undefined, true );\n      mat.setProperty("environmentMappingType", 2);\n\n      that.reflectionMaterial = mat;\n      that.planeMesh.material = mat.threeData.static;\n      that.initTexture();\n    }\n  });\n};\n\nReflectionCapture.prototype.createTempRenderTexture = function( changes ) {\n  var that = this;\n  this.getAssetRegistry().createAsset( { type: "renderTexture2D", id: "render_tex_reflection", payload: {\n      width: 512,\n      height: 512,\n      format: THREE.RGBAFormat,\n      type: THREE.UnsignedByteType,\n    }}, {\n    success: function( tex ) {\n      that.tempRenderTexture = tex;\n      tex.load();\n    }\n  });\n};\n\n// ReflectionCapture.prototype.onEnable = function() {\n// };\n\n// ReflectionCapture.prototype.onEnable = function() {\n// };\n\nReflectionCapture.prototype.attributesChanged = function( changes ) {\n  if ( changes.reflectionTexture !== undefined ) {\n    this.initTexture();\n  }\n  // if ( changes.sceneCamera !== undefined ) {\n  //   if ( this.inEditor ) {\n  //     this.sceneCamera = this.editorCamera;\n  //   }\n  // }\n};\n\nReflectionCapture.prototype.initTexture = function() {\n  if ( this.reflectionTexture ) {\n    var that = this;\n    \n    this.reflectionTexture.when( \'load\', function() {\n      if ( that.tempRenderTexture ) {\n        that.tempRenderTexture.unload();\n      }\n      var pars = { \n        format: that.reflectionTexture.threeData.format, \n        minFilter: that.reflectionTexture.threeData.minFilter, \n        magFilter: that.reflectionTexture.threeData.magFilter\n      };\n      pars.type = that.reflectionTexture.threeData.type;\n      \n      var renderTarget = new THREE.WebGLRenderTarget( that.reflectionTexture.getWidth(), that.reflectionTexture.getHeight(), pars );\n      renderTarget.name = that.getEntity().getName() + ": Reflection Capture Render Buffer";\n      if ( !that.composer ) {\n        that.composer = new THREE.EffectComposer( that.getThreeRenderer(), renderTarget );\n        that.gammaPass = new THREE.ShaderPass( THREE.GammaShader );\n        that.gammaPass.renderToScreen = true;\n        that.composer.addPass( that.gammaPass );\n      }\n      else {\n        that.composer.reset( renderTarget );\n      }\n      that.composer.enabled = true;\n      that.composer.renderPassesNeedUpdate = true;\n      if ( that.planeMesh ) {\n        that.planeMesh.material.uniforms.environmentTexture2D.value = that.reflectionTexture.threeData;\n      }\n    } );\n    // this.reflectionTexture.load();\n  }\n  else {\n    this.createTempRenderTexture();\n    if ( this.planeMesh ) {\n      this.planeMesh.material.uniforms.environmentTexture2D.value = this.tempRenderTexture.threeData;\n    }\n  }\n};\n\n/**\n * Called immediately after after component creation\n */\nReflectionCapture.prototype.initCameras = function() {\n  if ( this.reflectionTexture ) {\n    this.reflectionTexture.load();\n  }\n\n  this.perspectiveCamera = new THREE.PerspectiveCamera();\n  this.orthoCamera = new THREE.OrthographicCamera();\n};\n\nReflectionCapture.prototype.updateReflection = function( scene, camera ) {\n  if ( this.isEnabled() ) {\n    var sign = function( num ) {\n      return num < 0 ? -1 : 1;\n    }\n    this.veroldEntity.threeData.updateMatrixWorld();\n    // this.sceneCamera.threeData.updateMatrixWorld();\n\n    this.reflectionPosition.setFromMatrixPosition( this.veroldEntity.threeData.matrixWorld );\n    this.cameraWorldPosition.setFromMatrixPosition( camera.matrixWorld );\n\n    this.rotationMatrix.extractRotation(  this.veroldEntity.threeData.matrixWorld );\n\n    this.reflectionNormal.set( 0, 1, 0 );\n    this.reflectionNormal.applyMatrix4( this.rotationMatrix );\n\n    var view = this.reflectionPosition.clone().sub( this.cameraWorldPosition );\n    var reflectView = view.reflect( this.reflectionNormal ).negate();\n    reflectView.add( this.reflectionPosition );\n\n    this.rotationMatrix.extractRotation( camera.matrixWorld );\n\n    this.lookAtPosition.set(0, 0, -1);\n    this.lookAtPosition.applyMatrix4( this.rotationMatrix );\n    this.lookAtPosition.add( this.cameraWorldPosition );\n\n    var target = this.reflectionPosition.clone().sub( this.lookAtPosition );\n    var reflectTarget = target.reflect( this.reflectionNormal ).negate();\n    reflectTarget.add( this.reflectionPosition );\n\n    this.up.set( 0, -1, 0 );\n    this.up.applyMatrix4( this.rotationMatrix );\n    var reflectUp = this.up.reflect( this.reflectionNormal ).negate();\n\n    if ( camera instanceof THREE.PerspectiveCamera && this.perspectiveCamera ) {\n      this.perspectiveCamera.aspect = camera.aspect;\n      this.perspectiveCamera.fov = camera.fov;\n      this.reflectionCamera = this.perspectiveCamera;\n    }\n    else if ( this.orthoCamera ) {\n      this.orthoCamera.left = camera.left;\n      this.orthoCamera.right = camera.right;\n      this.orthoCamera.top = camera.top;\n      this.orthoCamera.bottom = camera.bottom;\n      this.reflectionCamera = this.orthoCamera;\n    }\n    else {\n      return;\n    }\n    this.reflectionCamera.position.copy( reflectView );\n    this.reflectionCamera.up = reflectUp;\n    this.reflectionCamera.lookAt( reflectTarget );\n\n\n    this.reflectionCamera.updateProjectionMatrix();\n    this.reflectionCamera.updateMatrixWorld();\n    this.reflectionCamera.matrixWorldInverse.getInverse( this.reflectionCamera.matrixWorld );\n\n    // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n    this.reflectionPlane.setFromNormalAndCoplanarPoint( this.reflectionNormal, this.reflectionPosition );\n    this.reflectionPlane.applyMatrix4( this.reflectionCamera.matrixWorldInverse );\n\n    this.clipPlane.set( this.reflectionPlane.normal.x,\n                       this.reflectionPlane.normal.y,\n                       this.reflectionPlane.normal.z,\n                       this.reflectionPlane.constant );\n\n    var q = new THREE.Vector4();\n    var projectionMatrix = this.reflectionCamera.projectionMatrix;\n\n    q.x = ( sign(this.clipPlane.x) + projectionMatrix.elements[8] ) / projectionMatrix.elements[0];\n    q.y = ( sign(this.clipPlane.y) + projectionMatrix.elements[9] ) / projectionMatrix.elements[5];\n    q.z = - 1.0;\n    q.w = ( 1.0 + projectionMatrix.elements[10] ) / projectionMatrix.elements[14];\n\n    // Calculate the scaled plane vector\n    var c = new THREE.Vector4();\n    c = this.clipPlane.multiplyScalar( 2.0 / this.clipPlane.dot(q) );\n\n    // Replacing the third row of the projection matrix\n    projectionMatrix.elements[2] = c.x;\n    projectionMatrix.elements[6] = c.y;\n    projectionMatrix.elements[10] = c.z + 1.0 - this.clipBias;\n    projectionMatrix.elements[14] = c.w;\n  }\n};\n\nReflectionCapture.prototype.preRenderView = function( scene, camera, options ) {\n  if ( this.isEnabled() ) {\n    if ( this.framesElapsed >= this.updateFrameInterval ) {\n      this.updateReflection( scene, camera );\n      //render reflection\n      // Render the mirrored view of the current scene into the target texture\n      //var scene = this.veroldEntity.getParentAsset();\n      if ( scene && camera ) {\n        //this.getThreeRenderer().setRenderTarget( this.reflectionTexture.threeData );\n        var viewport = this.getThreeRenderer().getViewport();\n        if ( this.reflectionTexture && this.reflectionTexture.threeData ) {\n          this.getRenderer().renderView( scene, this.reflectionCamera, {\n            viewPort: { x:0,y:0, width: this.reflectionTexture.getWidth(), height: this.reflectionTexture.getHeight()  },\n            renderTarget: this.reflectionTexture.threeData,\n            clearColor: true,\n            clearDepth: true,\n            composer: this.getThreeRenderer().gammaOutput ? this.composer : null,\n            enableShadows: false,\n            enablePreRenderFunctions: false });\n        }\n        else if ( this.tempRenderTexture ) {\n          this.getRenderer().renderView( scene, this.reflectionCamera, {\n            viewPort: { x:0,y:0, width: this.tempRenderTexture.getWidth(), height: this.tempRenderTexture.getHeight()  },\n            renderTarget: this.tempRenderTexture.threeData,\n            clearColor: true,\n            clearDepth: true,\n            composer: this.getThreeRenderer().gammaOutput ? null : this.composer,\n            enableShadows: false,\n            enablePreRenderFunctions: false });\n        }\n      }\n      this.framesElapsed = 0;\n    }\n    else {\n      this.framesElapsed++;\n    }\n  }\n};\n\nreturn ReflectionCapture;\n'
}),define("text!VeroldEngine/Components/BuiltIn/CubeMapCapture.js",[],function(){return'/**\n * @author Mike Bond\n * A component to make rendering to a cube map easier.\n *\n * @class CubeMapCapture\n */\nfunction CubeMapCapture() {\n  this.framesElapsed = 0;\n\n  this.near = 1.0;\n  this.far = 12000.0;\n  this.updateFrameInterval = 0.0;\n\n  this.cubeMaterial = undefined;\n  this.tempRenderTexture = undefined;\n\n  this.cubeMaterialDef = {\n\n    uniforms: { "tCube": { type: "t", value: null },\n          "tFlip": { type: "f", value: 1 } },\n\n    vertexShader: [\n\n      "varying vec3 vWorldPosition;",\n\n      THREE.ShaderChunk[ "logdepthbuf_pars_vertex" ],\n\n      "void main() {",\n\n      " vec4 worldPosition = vec4( position, 1.0 );",\n      " vWorldPosition = worldPosition.xyz;",\n\n      " gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",\n\n        THREE.ShaderChunk[ "logdepthbuf_vertex" ],\n\n      "}"\n\n    ].join("\\n"),\n\n    fragmentShader: [\n\n      "uniform samplerCube tCube;",\n      "uniform float tFlip;",\n\n      "varying vec3 vWorldPosition;",\n\n      THREE.ShaderChunk[ "logdepthbuf_pars_fragment" ],\n\n      "void main() {",\n      // " vec3 poop = normalize(vWorldPosition);",\n      " gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",\n\n        THREE.ShaderChunk[ "logdepthbuf_fragment" ],\n\n      "}"\n\n    ].join("\\n")\n\n  };\n}\n\n/*global VAPI*/\nCubeMapCapture.prototype = new VAPI.VeroldComponent();\n\nCubeMapCapture.prototype.init = function() {\n  \n  this.initCameras();\n};\n\nCubeMapCapture.prototype.editorInit = function() {\n  this.init();\n  this.veroldEntity.getParentAsset().once(\'load\', this.initEditorObject, this );\n  if ( this.veroldEntity.state_base === "loaded") {\n    this.veroldEntity.load();\n  }\n  // this.getEngine().on( "preRenderView", this.preRenderView, this );\n  this.getEngine().on( "preRender", this.preRender, this );\n  this.getEngine().on( "postUpdate", this.postUpdate, this );\n  this.getEntity().on( "editorSelected", this.onSelected, this );\n  this.getEntity().on( "editorUnselected", this.onUnselected, this );\n};\n\nCubeMapCapture.prototype.shutdown = function() {\n  // this.getEngine().globalEvents.trigger(\'renderer::unregisterPreRenderFn\', "Reflection_" + this.reflectionActorId, this.preRenderPass, this );\n};\n\nCubeMapCapture.prototype.editorShutdown = function() {\n\n  this.getEntity().off( "editorSelected", this.onSelected, this );\n  this.getEntity().off( "editorUnselected", this.onUnselected, this );\n  this.getEngine().off( "preRender", this.preRender, this );\n  this.getEngine().off( "postUpdate", this.postUpdate, this );\n  this.shutdown();\n};\n\nCubeMapCapture.prototype.onSelected = function() {\n  this.cubeCamera.traverse( function( obj ) {\n    if ( obj instanceof THREE.PerspectiveCamera ) {\n      if ( !obj.cameraHelper ) {\n        obj.cameraHelper = new THREE.CameraHelper( obj );\n        obj.add( obj.cameraHelper );\n      }\n      obj.cameraHelper.visible = true;\n    }\n  });\n};\n\nCubeMapCapture.prototype.onUnselected = function() {\n  this.cubeCamera.traverse( function( obj ) {\n    if ( obj instanceof THREE.PerspectiveCamera ) {\n      if ( obj.cameraHelper ) {\n        obj.cameraHelper.visible = false;\n      }\n    }\n  });\n};\n\nCubeMapCapture.prototype.objectCreated = function() {\n\n  var threeObj = this.getThreeScene();\n  threeObj.add( this.cubeCamera );\n};\n\nCubeMapCapture.prototype.initEditorObject = function() {\n  this.objectCreated();\n\n  this.boxGeometry = new THREE.BoxGeometry( 0.25, 0.25, 0.25, 1, 1, 1 );\n\n  this.boxGeometry.dynamic = true;\n  this.boxMesh = new THREE.Mesh( this.boxGeometry );\n  this.boxMesh.castShadow = false;\n  this.boxMesh.receiveShadow = false;\n  this.boxMesh.name = "CubeMapCapturePlane";\n  this.getThreeObject().add( this.boxMesh );\n  this.getEngine().globalEvents.trigger( "studioApp::registerPickingObject", this.getEntity(), this.boxMesh );\n\n  if ( !this.cubeTexture ) {\n    this.createTempRenderTexture();\n  }\n  else {\n    this.cubeTexture.load();\n  }\n  \n  this.cubeMaterialDef.uniforms[ "tCube" ].value = this.cubeTexture ? this.cubeTexture.threeData : this.tempRenderTexture.threeData;\n  this.cubeMaterial = new THREE.ShaderMaterial( this.cubeMaterialDef );\n  this.boxMesh.material = this.cubeMaterial;\n};\n\nCubeMapCapture.prototype.createTempRenderTexture = function( changes ) {\n  var that = this;\n  this.getAssetRegistry().createAsset( { type: "renderTextureCube", id: "render_tex_cube", payload: {\n      width: 512,\n      height: 512,\n      format: THREE.RGBAFormat,\n      type: THREE.UnsignedByteType,\n    }}, {\n    success: function( tex ) {\n      that.tempRenderTexture = tex;\n      tex.load();\n    }\n  });\n};\n\nCubeMapCapture.prototype.attributesChanged = function( changes ) {\n  if ( changes.cubeTexture !== undefined ) {\n    if ( this.cubeTexture ) {\n      var that = this;\n      this.cubeTexture.when( \'load\', function() {\n        if ( that.tempRenderTexture ) {\n          that.tempRenderTexture.unload();\n        }\n        var pars = { \n          format: that.cubeTexture.threeData.format, \n          minFilter: that.cubeTexture.threeData.minFilter, \n          magFilter: that.cubeTexture.threeData.magFilter\n        };\n        pars.type = that.cubeTexture.threeData.type;\n        \n        var renderTarget = new THREE.WebGLRenderTarget( that.cubeTexture.getWidth(), that.cubeTexture.getHeight(), pars );\n        renderTarget.name = that.getEntity().getName() + ": Reflection Capture Render Buffer";\n        if ( !that.composer ) {\n          that.composer = new THREE.EffectComposer( that.getThreeRenderer(), renderTarget );\n          that.gammaPass = new THREE.ShaderPass( THREE.GammaShader );\n          that.gammaPass.renderToScreen = true;\n          that.composer.addPass( that.gammaPass );\n        }\n        else {\n          that.composer.reset( renderTarget );\n        }\n        that.composer.enabled = true;\n        that.composer.renderPassesNeedUpdate = true;\n        that.cubeMaterial.uniforms[ "tCube" ].value = that.cubeTexture.threeData;\n      } );\n      this.cubeTexture.load();\n    }\n    else if ( !this.tempRenderTexture ) {\n      this.createTempRenderTexture();\n      this.cubeMaterial.uniforms[ "tCube" ].value = this.tempRenderTexture.threeData;\n    }\n  }\n  if ( changes.near || changes.far ) {\n    this.cameraPX.near = this.near;\n    this.cameraPX.far = this.far;\n    this.cameraPX.updateProjectionMatrix();\n    this.cameraNX.near = this.near;\n    this.cameraNX.far = this.far;\n    this.cameraNX.updateProjectionMatrix();\n    this.cameraPY.near = this.near;\n    this.cameraPY.far = this.far;\n    this.cameraPY.updateProjectionMatrix();\n    this.cameraNY.near = this.near;\n    this.cameraNY.far = this.far;\n    this.cameraNY.updateProjectionMatrix();\n    this.cameraPZ.near = this.near;\n    this.cameraPZ.far = this.far;\n    this.cameraPZ.updateProjectionMatrix();\n    this.cameraNZ.near = this.near;\n    this.cameraNZ.far = this.far;\n    this.cameraNZ.updateProjectionMatrix();\n    this.cubeCamera.traverse( function( obj ) {\n    if ( obj instanceof THREE.PerspectiveCamera ) {\n      if ( obj.cameraHelper ) {\n        obj.cameraHelper.update();\n      }\n    }\n  });\n  }\n};\n\n/**\n * Called immediately after after component creation\n */\nCubeMapCapture.prototype.initCameras = function() {\n  this.cubeCamera = new THREE.Object3D();\n  this.cubeCamera.position.copy( this.getEntity().getPosition() );\n\n  var fov = 90, aspect = 1;\n\n  this.cameraPX = new THREE.PerspectiveCamera( fov, aspect, this.near, this.far );\n  this.cameraPX.up.set( 0, - 1, 0 );\n  this.cameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\n  this.cameraPX.rotationAutoUpdate = false;\n  this.cubeCamera.add( this.cameraPX );\n\n  this.cameraNX = new THREE.PerspectiveCamera( fov, aspect, this.near, this.far );\n  this.cameraNX.up.set( 0, - 1, 0 );\n  this.cameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\n  this.cameraNX.rotationAutoUpdate = false;\n  this.cubeCamera.add( this.cameraNX );\n\n  this.cameraPY = new THREE.PerspectiveCamera( fov, aspect, this.near, this.far );\n  this.cameraPY.up.set( 0, 0, 1 );\n  this.cameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\n  this.cameraPY.rotationAutoUpdate = false;\n  this.cubeCamera.add( this.cameraPY );\n\n  this.cameraNY = new THREE.PerspectiveCamera( fov, aspect, this.near, this.far );\n  this.cameraNY.up.set( 0, 0, - 1 );\n  this.cameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\n  this.cameraNY.rotationAutoUpdate = false;\n  this.cubeCamera.add( this.cameraNY );\n\n  this.cameraPZ = new THREE.PerspectiveCamera( fov, aspect, this.near, this.far );\n  this.cameraPZ.up.set( 0, - 1, 0 );\n  this.cameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\n  this.cameraPZ.rotationAutoUpdate = false;\n  this.cubeCamera.add( this.cameraPZ );\n\n  this.cameraNZ = new THREE.PerspectiveCamera( fov, aspect, this.near, this.far );\n  this.cameraNZ.up.set( 0, - 1, 0 );\n  this.cameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\n  this.cameraNZ.rotationAutoUpdate = false;\n  this.cubeCamera.add( this.cameraNZ );\n};\n\nCubeMapCapture.prototype.postUpdate = function( delta ) {\n  if ( this.cubeCamera && this.hasThreeData() && this.isEnabled() ) {\n    this.cubeCamera.position.setFromMatrixPosition( this.getThreeObject().matrixWorld );\n  }\n};\n\nCubeMapCapture.prototype.preRender = function( delta ) {\n  this.framesElapsed++;\n  if ( this.framesElapsed >= this.updateFrameInterval && this.isEnabled() ) {\n    this.framesElapsed = 0.0;\n    var renderer = this.getRenderer();\n    var scene = this.getScene().threeData;\n    \n    if ( this.cubeTexture || this.tempRenderTexture ) {\n\n      var renderTarget = this.cubeTexture ? this.cubeTexture.threeData : this.tempRenderTexture.threeData;\n      var generateMipmaps = renderTarget.generateMipmaps;\n\n      renderTarget.generateMipmaps = false;\n\n      if ( this.renderPosX ) {\n        renderTarget.activeCubeFace = 0;\n        renderer.renderView( scene, this.cameraPX, { \n          renderTarget: renderTarget, \n          clearColor: true,\n          composer: this.getThreeRenderer().gammaOutput ? null : this.composer, } );\n      }\n\n      if ( this.renderNegX ) {\n        renderTarget.activeCubeFace = 1;\n        renderer.renderView( scene, this.cameraNX, { \n          renderTarget: renderTarget, \n          clearColor: true,\n          composer: this.getThreeRenderer().gammaOutput ? null : this.composer, } );\n      }\n\n      if ( this.renderPosY ) {\n        renderTarget.activeCubeFace = 2;\n        renderer.renderView( scene, this.cameraPY, { \n          renderTarget: renderTarget, \n          clearColor: true,\n          composer: this.getThreeRenderer().gammaOutput ? null : this.composer, } );\n      }\n\n      if ( this.renderNegY ) {\n        renderTarget.activeCubeFace = 3;\n        renderer.renderView( scene, this.cameraNY, { \n          renderTarget: renderTarget, \n          clearColor: true,\n          composer: this.getThreeRenderer().gammaOutput ? null : this.composer, } );\n      }\n\n      if ( this.renderPosZ ) {\n        renderTarget.activeCubeFace = 4;\n        renderer.renderView( scene, this.cameraPZ, { \n          renderTarget: renderTarget, \n          clearColor: true,\n          composer: this.getThreeRenderer().gammaOutput ? null : this.composer, } );\n      }\n\n      renderTarget.generateMipmaps = generateMipmaps;\n\n      if ( this.renderNegZ ) {\n        renderTarget.activeCubeFace = 5;\n        renderer.renderView( scene, this.cameraNZ, { \n          renderTarget: renderTarget, \n          clearColor: true,\n          composer: this.getThreeRenderer().gammaOutput ? null : this.composer, } );\n      }\n      renderTarget.needsUpdate = true;\n    }\n  }\n};\n\n\nreturn CubeMapCapture;\n'}),define("text!VeroldEngine/Components/BuiltIn/PanoramaToCubeMap.js",[],function(){return"/*\r\n@vname Panorama To Cube Map\r\n@vdescription A controller that allows a camera to easily orbit a target object.\r\n@vfilter renderTextureCube\r\n@vcategory Rendering\r\n@vattr asset panoramaTexture { \r\n  default : null,\r\n  filter : { texture2D: true, renderTexture2D: true },\r\n  description : 'The texture to convert to a cube map.'\r\n}\r\n*/\r\n\r\nvar _ = require('underscore');\r\n\r\n/* global VAPI */\r\n\r\n/**\r\n * A custom component class.\r\n *\r\n * @class PanoramaToCubeMap\r\n */\r\nfunction PanoramaToCubeMap() {\r\n  this.skyboxScene = undefined;\r\n  this.cameras = new Array(6);\r\n}\r\n\r\nPanoramaToCubeMap.prototype = new VAPI.VeroldComponent();\r\n\r\nPanoramaToCubeMap.prototype.attributesChanged = function( changes ) {\r\n  if ( changes.panoramaTexture !== undefined ) {\r\n    if ( this.panoramaTexture ) {\r\n      if ( this.panoramaTexture.getProperty('isHDR') ) {\r\n        this.getEntity().setProperty('isHDR', true );\r\n        this.getEntity().setProperty('packingOverride', this.panoramaTexture.getPixelFormat());\r\n      }\r\n      else {\r\n        this.getEntity().setProperty('isHDR', false );\r\n        this.getEntity().setProperty('packingOverride', 0);\r\n      }\r\n      var that = this;\r\n      setTimeout( function() {\r\n        that.getEntity().save();\r\n      }, 10 );\r\n      this.panoramaTexture.when('load', this.renderToCube, this );\r\n      this.panoramaTexture.load();\r\n    }\r\n  }\r\n};\r\n\r\nPanoramaToCubeMap.prototype.editorInit = function() {\r\n  this.getEntity().when('load_base', this.objectCreated, this );\r\n};\r\n\r\nPanoramaToCubeMap.prototype.objectCreated = function() {\r\n  this.skyboxScene = new THREE.Scene();\r\n  this.initCameras();\r\n  this.createSkybox();\r\n\r\n  if ( this.panoramaTexture ) {\r\n    \r\n    this.panoramaTexture.when('load', this.renderToCube, this );\r\n    this.panoramaTexture.load();\r\n  }\r\n  // this.on( 'enable', this.onEnable, this );\r\n  // this.on( 'disable', this.onDisable, this );\r\n};\r\n\r\nPanoramaToCubeMap.prototype.shutdown = PanoramaToCubeMap.prototype.editorShutdown = function() {\r\n  // make sure to clean up any events or other bindings that you have created\r\n  // to avoid memory leaks\r\n  var engine = this.getEngine();\r\n  // this.off( 'enable', this.onEnable, this );\r\n  // this.off( 'disable', this.onDisable, this );\r\n\r\n};\r\n\r\nPanoramaToCubeMap.prototype.createSkybox = function() {\r\n  var equirectShader = THREE.ShaderLib[ \"equirect\" ];\r\n  equirectShader.uniforms.tFlip.value = 1.0;\r\n  this.equirectMaterial = new THREE.ShaderMaterial( {\r\n    fragmentShader: equirectShader.fragmentShader,\r\n    vertexShader: equirectShader.vertexShader,\r\n    uniforms: equirectShader.uniforms,\r\n    depthWrite: false,\r\n    side: THREE.BackSide\r\n  } );\r\n\r\n  this.skyboxGeometry = new THREE.BoxGeometry( 100, 100, 100, 1, 1, 1 );\r\n  //this.skyboxGeometry.computeTangents();\r\n  this.skyboxGeometry.dynamic = false;\r\n  this.skyboxMesh = new THREE.Mesh( this.skyboxGeometry, this.equirectMaterial );\r\n  this.skyboxMesh.frustumCulled = false;\r\n  this.skyboxMesh.castShadow = false;\r\n  this.skyboxMesh.receiveShadow = false;\r\n  // this.skyboxMesh.name = \"Skybox\";\r\n  if ( this.isEnabled() ) {\r\n    this.skyboxScene.add( this.skyboxMesh );\r\n  }\r\n};\r\n\r\nPanoramaToCubeMap.prototype.initCameras = function() {\r\n  \r\n  var fov = 90, aspect = 1;\r\n\r\n  this.cameras[0] = new THREE.PerspectiveCamera( fov, aspect, 1, 1000 );\r\n  this.cameras[0].up.set( 0, - 1, 0 );\r\n  this.cameras[0].lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n  this.cameras[0].rotationAutoUpdate = false;\r\n  this.skyboxScene.add( this.cameras[0] );\r\n\r\n  this.cameras[1] = new THREE.PerspectiveCamera( fov, aspect, 1, 1000 );\r\n  this.cameras[1].up.set( 0, - 1, 0 );\r\n  this.cameras[1].lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n  this.cameras[1].rotationAutoUpdate = false;\r\n  this.skyboxScene.add( this.cameras[1] );\r\n\r\n  this.cameras[2] = new THREE.PerspectiveCamera( fov, aspect, 1, 1000 );\r\n  this.cameras[2].up.set( 0, 0, 1 );\r\n  this.cameras[2].lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n  this.cameras[2].rotationAutoUpdate = false;\r\n  this.skyboxScene.add( this.cameras[2] );\r\n\r\n  this.cameras[3] = new THREE.PerspectiveCamera( fov, aspect, 1, 1000 );\r\n  this.cameras[3].up.set( 0, 0, - 1 );\r\n  this.cameras[3].lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n  this.cameras[3].rotationAutoUpdate = false;\r\n  this.skyboxScene.add( this.cameras[3] );\r\n\r\n  this.cameras[4] = new THREE.PerspectiveCamera( fov, aspect, 1, 1000 );\r\n  this.cameras[4].up.set( 0, - 1, 0 );\r\n  this.cameras[4].lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n  this.cameras[4].rotationAutoUpdate = false;\r\n  this.skyboxScene.add( this.cameras[4] );\r\n\r\n  this.cameras[5] = new THREE.PerspectiveCamera( fov, aspect, 1, 1000 );\r\n  this.cameras[5].up.set( 0, - 1, 0 );\r\n  this.cameras[5].lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n  this.cameras[5].rotationAutoUpdate = false;\r\n  this.skyboxScene.add( this.cameras[5] );\r\n};\r\n\r\nPanoramaToCubeMap.prototype.renderToCube = function() {\r\n  if ( this.hasThreeData() ) {\r\n    this.equirectMaterial.uniforms.tEquirect.value = this.panoramaTexture.threeData;\r\n    var renderTarget = this.getThreeData();\r\n    var renderer = this.getThreeRenderer();\r\n    var prevGammaInput = renderer.gammaInput;\r\n    var prevGammaOutput = renderer.gammaOutput;\r\n    var manuallyGenerateMips = false;\r\n    if ( renderTarget.hdrPacking === THREE.HDRRGBE ) {\r\n      if ( renderTarget.generateMipmaps ) {\r\n        manuallyGenerateMips = true;\r\n        renderTarget.generateMipmaps = false;\r\n      }\r\n\r\n      //render cubemap as HDR and then repack.\r\n      this.equirectMaterial.hdrInputEnabled = true;\r\n      this.equirectMaterial.hdrOutputEnabled = true;\r\n      this.equirectMaterial.hdrOutputType = THREE.HDRRGBE;\r\n      this.equirectMaterial.defines['ENVMAP_HDR_INPUT'] = this.panoramaTexture.threeData.hdrPacking;\r\n      this.equirectMaterial.needsUpdate = true;\r\n      renderer.gammaInput = false;\r\n      renderer.gammaOutput = false;\r\n    }\r\n    // if ( this.panoramaTexture.threeData.hdrPacking ) {\r\n      // this.equirectMaterial.hdrInputEnabled = true;\r\n      // this.equirectMaterial.defines['ENVMAP_HDR_INPUT'] = this.panoramaTexture.threeData.hdrPacking;\r\n      // this.equirectMaterial.needsUpdate = true;\r\n      \r\n    // }\r\n    // else {\r\n    //   this.equirectMaterial.hdrInputEnabled = true;\r\n    //   this.equirectMaterial.defines['ENVMAP_HDR_INPUT'] = this.panoramaTexture.threeData.hdrPacking;\r\n    //   this.equirectMaterial.needsUpdate = true;\r\n    // }\r\n    \r\n    renderTarget.generateMipmaps = false;\r\n    \r\n    renderer.setViewport( 0, 0, renderTarget.width, renderTarget.height );\r\n    for ( var i = 0; i < 5; i++ ) {\r\n      renderTarget.activeCubeFace = i;\r\n      renderer.render( this.skyboxScene, this.cameras[i], renderTarget );\r\n    }\r\n    renderTarget.generateMipmaps = this.getEntity().getProperty('generateMipmaps');\r\n    \r\n    renderTarget.activeCubeFace = 5;\r\n    renderer.render( this.skyboxScene, this.cameras[5], renderTarget );\r\n\r\n    // if ( manuallyGenerateMips ) {\r\n      // this.getEntity().generateManualMipmaps();\r\n      renderer.gammaInput = prevGammaInput;\r\n      renderer.gammaOutput = prevGammaOutput;\r\n    // }\r\n  }\r\n};\r\n\r\nreturn PanoramaToCubeMap;\r\n"}),define("text!VeroldEngine/Components/BuiltIn/SphereMapCapture.js",[],function(){return'/**\n * @author Mike Bond\n * A component to make rendering to a cube map easier.\n *\n * @class SphereMapCapture\n */\nfunction SphereMapCapture() {\n  this.framesElapsed = 0;\n\n  this.near = 1.0;\n  this.far = 12000.0;\n  this.updateFrameInterval = 0.0;\n\n  this.sphereMaterial = undefined;\n  this.tempRenderTexture = undefined;\n\n  this.sphereMaterialDef = {\n\n    uniforms: { "tSphere": { type: "t", value: null }},\n\n    vertexShader: [\n\n      "varying vec4 vPositionVS;",\n      "varying vec3 vNormal;",\n\n      THREE.ShaderChunk[ "logdepthbuf_pars_vertex" ],\n\n      "void main() {",\n\n      // " vec4 worldPosition = vec4( position, 1.0 );",\n      " vPositionVS = modelViewMatrix * vec4( position, 1.0 );",\n      " vNormal = normalMatrix * normal;",\n\n      " gl_Position = projectionMatrix * vPositionVS;",\n\n        THREE.ShaderChunk[ "logdepthbuf_vertex" ],\n\n      "}"\n\n    ].join("\\n"),\n\n    fragmentShader: [\n\n      "uniform sampler2D tSphere;",\n\n      "varying vec4 vPositionVS;",\n      "varying vec3 vNormal;",\n      THREE.ShaderChunk[ "logdepthbuf_pars_fragment" ],\n\n      "void main() {",\n      " vec3 eyeVector = normalize( vPositionVS.xyz - (viewMatrix * vec4( cameraPosition, 0.0 )).xyz );",\n      " vec3 normal = normalize( vNormal );",\n      " normal.xy = normal.xy * 0.5 + 0.5;",\n      " normal.z = 0.0;",\n      // " float VdotN = dot( eyeVector, normal );",\n      // " vec3 poop = normalize(vPositionVS);",\n      " vec4 reflectedColor = texture2D( tSphere, normal.xy );",\n      // " gl_FragColor = textureCube( tSphere, vec3( vPositionVS.x, vPositionVS.yz ) );",\n        "gl_FragColor = vec4( reflectedColor.xyz, 1.0 );",\n        THREE.ShaderChunk[ "logdepthbuf_fragment" ],\n\n      "}"\n\n    ].join("\\n")\n\n  };\n}\n\n/*global VAPI*/\nSphereMapCapture.prototype = new VAPI.VeroldComponent();\n\nSphereMapCapture.prototype.init = function() {\n  \n  this.initCamera();\n};\n\nSphereMapCapture.prototype.editorInit = function() {\n  this.init();\n  this.veroldEntity.getParentAsset().once(\'load\', this.initEditorObject, this );\n  if ( this.veroldEntity.state_base === "loaded") {\n    this.veroldEntity.load();\n  }\n  // this.getEngine().on( "preRenderView", this.preRenderView, this );\n  this.getEngine().on( "preRenderView", this.preRenderView, this );\n  this.getEngine().on( "postUpdate", this.postUpdate, this );\n  this.getEntity().on( "editorSelected", this.onSelected, this );\n  this.getEntity().on( "editorUnselected", this.onUnselected, this );\n  this.getEngine().on( "update", this.update, this );\n};\n\nSphereMapCapture.prototype.shutdown = function() {\n  // this.getEngine().globalEvents.trigger(\'renderer::unregisterPreRenderFn\', "Reflection_" + this.reflectionActorId, this.preRenderPass, this );\n};\n\nSphereMapCapture.prototype.editorShutdown = function() {\n\n  this.getEntity().off( "editorSelected", this.onSelected, this );\n  this.getEntity().off( "editorUnselected", this.onUnselected, this );\n  this.getEngine().off( "preRenderView", this.preRenderView, this );\n  this.getEngine().off( "postUpdate", this.postUpdate, this );\n  this.getEngine().off( "update", this.update, this );\n  this.shutdown();\n};\n\nSphereMapCapture.prototype.onSelected = function() {\n  this.sphereCamera.traverse( function( obj ) {\n    if ( obj instanceof THREE.PerspectiveCamera ) {\n      if ( !obj.cameraHelper ) {\n        obj.cameraHelper = new THREE.CameraHelper( obj );\n        obj.add( obj.cameraHelper );\n      }\n      obj.cameraHelper.visible = true;\n    }\n  });\n};\n\nSphereMapCapture.prototype.onUnselected = function() {\n  this.sphereCamera.traverse( function( obj ) {\n    if ( obj instanceof THREE.PerspectiveCamera ) {\n      if ( obj.cameraHelper ) {\n        obj.cameraHelper.visible = false;\n      }\n    }\n  });\n};\n\nSphereMapCapture.prototype.objectCreated = function() {\n\n  var threeObj = this.getThreeScene();\n  threeObj.add( this.sphereCamera );\n};\n\nSphereMapCapture.prototype.initEditorObject = function() {\n  this.objectCreated();\n\n  this.sphereGeometry = new THREE.SphereGeometry( 0.25, 12, 12 );\n\n  this.sphereGeometry.dynamic = true;\n  this.sphereMesh = new THREE.Mesh( this.sphereGeometry );\n  this.sphereMesh.castShadow = false;\n  this.sphereMesh.receiveShadow = false;\n  this.sphereMesh.name = "SphereMapCapturePlane";\n  this.getThreeObject().add( this.sphereMesh );\n  this.getEngine().globalEvents.trigger( "studioApp::registerPickingObject", this.getEntity(), this.sphereMesh );\n\n  if ( !this.sphereTexture ) {\n    this.createTempRenderTexture();\n  }\n  else {\n    this.sphereTexture.load();\n  }\n  \n  this.sphereMaterialDef.uniforms[ "tSphere" ].value = this.sphereTexture ? this.sphereTexture.threeData : this.tempRenderTexture.threeData;\n  this.sphereMaterial = new THREE.ShaderMaterial( this.sphereMaterialDef );\n  this.sphereMesh.material = this.sphereMaterial;\n};\n\nSphereMapCapture.prototype.createTempRenderTexture = function( changes ) {\n  var that = this;\n  this.getAssetRegistry().createAsset( { type: "renderTexture2D", id: "render_tex_sphere_map", payload: {\n      width: 512,\n      height: 512,\n      format: THREE.RGBAFormat,\n      type: THREE.UnsignedByteType,\n    }}, {\n    success: function( tex ) {\n      that.tempRenderTexture = tex;\n      tex.load();\n    }\n  });\n};\n\nSphereMapCapture.prototype.attributesChanged = function( changes ) {\n  if ( changes.sphereTexture !== undefined ) {\n    if ( this.sphereTexture ) {\n      var that = this;\n      this.sphereTexture.once( \'load\', function() {\n        if ( that.tempRenderTexture ) {\n          that.tempRenderTexture.unload();\n        }\n        that.sphereMaterial.uniforms[ "tSphere" ].value = that.sphereTexture.threeData;\n      } );\n      this.sphereTexture.load();\n    }\n    else if ( !this.tempRenderTexture ) {\n      this.createTempRenderTexture();\n      this.sphereMaterial.uniforms[ "tSphere" ].value = this.tempRenderTexture.threeData;\n    }\n  }\n  if ( changes.near || changes.far ) {\n    this.sphereCamera.near = this.near;\n    this.sphereCamera.far = this.far;\n    this.sphereCamera.updateProjectionMatrix();\n   \n    if ( this.sphereCamera.cameraHelper ) {\n      this.sphereCamera.cameraHelper.update();\n    }\n  }\n};\n\n/**\n * Called immediately after after component creation\n */\nSphereMapCapture.prototype.initCamera = function() {\n  this.sphereCamera = new THREE.PerspectiveCamera( 179.0, 1.0, this.near, this.far );\n  this.sphereCamera.position.copy( this.getEntity().getPosition() );\n};\n\nSphereMapCapture.prototype.postUpdate = function( delta ) {\n  if ( this.sphereCamera && this.hasThreeData() ) {\n    this.sphereCamera.position.setFromMatrixPosition( this.getThreeObject().matrixWorld );\n  }\n};\n\nSphereMapCapture.prototype.update = function( delta ) {\n  this.framesElapsed++;\n  this.performRender = false;\n  if ( this.framesElapsed >= this.updateFrameInterval ) {\n    this.framesElapsed = 0.0;\n    if ( this.sphereTexture || this.tempRenderTexture ) {\n      this.performRender = true;\n    }\n  }\n};\n\nSphereMapCapture.prototype.preRenderView = function( scene, camera, options ) {\n  if ( this.performRender ) {\n    var renderer = this.getRenderer();\n    this.sphereCamera.lookAt( camera.position );\n    \n    //This render needs to be done with a fish-eye distortion but we don\'t have a current way of enabling this for a single render pass...\n    // #ifdef USE_FISHEYE\n    //   vec4 tempPoint = modelViewMatrix * displacedPosition;\n    //   gl_Position.xy = tempPoint.xy / length( tempPoint.xyz );\n    // #endif\n    var renderTarget = this.sphereTexture ? this.sphereTexture.threeData : this.tempRenderTexture.threeData;\n\n    renderer.renderView( scene, this.sphereCamera, { renderTarget: renderTarget, clearColor: true } );\n    \n  }\n};\n\n\nreturn SphereMapCapture;\n'}),define("text!VeroldEngine/Components/BuiltIn/SimplexNoiseGenerator.js",[],function(){return'\nvar _ = require(\'underscore\');\n\nfunction SimplexNoiseRenderer() {\n  // this.m_Renderer = null;\n  this.m_Uniforms = null;\n  this.m_NoiseMat = null;\n}\n\nSimplexNoiseRenderer.prototype = new VAPI.VeroldComponent();\n\nSimplexNoiseRenderer.prototype.editorInit = function(){\n  this.init();\n  this.getEntity().on("load_base", this.objectCreated, this );\n};\n\nSimplexNoiseRenderer.prototype.editorShutdown = function() {\n  this.getEntity().off("load_base", this.objectCreated, this );\n  this.shutdown();\n};\n\nSimplexNoiseRenderer.prototype.init = function() {\n  \n  this.getEntity().on( \'changeNoiseValues\', this.changeNoiseValues, this );\n  this.getEntity().on( \'renderNoise\', this.renderNoise, this );\n  this.m_Uniforms = {\n    time   : { type : "f", value : 1.0 }, \n    scale  : { type : "v2", value : this.scale },\n    offset : { type : "v2", value : this.offset },\n    layerAmplitude : { type : "v4", value : this.layerAmplitude },\n    layerScale : { type : "v4", value : this.layerScale }\n  };\n  \n  //create noise material\n  this.m_NoiseMat = new THREE.ShaderMaterial( {\n    uniforms       : this.m_Uniforms,\n    vertexShader   : SimplexNoiseRenderer.VertexShader,\n    fragmentShader : SimplexNoiseRenderer.FragmentShader\n  } );\n  \n  // this.m_NoiseMat.depthTest = false;\n  // this.m_NoiseMat.depthWrite = false;\n    \n  this.cameraRTT = new THREE.OrthographicCamera( -0.5, 0.5, 0.5, -0.5, -10, 10 );\n  this.cameraRTT.position.z = 1;\n  this.sceneRTT = new THREE.Scene();\n  this.sceneRTT.add( this.cameraRTT );\n  \n  this.quadGeo = new THREE.PlaneGeometry( 1, 1 );\n  this.quadRTT = new THREE.Mesh( this.quadGeo, this.m_NoiseMat );\n  this.quadRTT.position.z = -5;\n  this.sceneRTT.add( this.quadRTT );\n  \n};\n\nSimplexNoiseRenderer.prototype.shutdown = function() {\n  this.getEntity().off( \'changeNoiseValues\', this.changeNoiseValues, this );\n  this.getEntity().off( \'renderNoise\', this.renderNoise, this );\n  this.sceneRTT.remove( this.cameraRTT );\n  this.sceneRTT.remove( this.quadRTT );\n  this.sceneRTT = undefined;\n  this.quadRTT = undefined;\n  this.quadGeo.dispose();\n  this.m_NoiseMat.dispose();\n  this.m_Uniforms = undefined;\n};\n\nSimplexNoiseRenderer.prototype.objectCreated = function() {\n  if ( this.autoLoad ) {\n    this.renderNoise();\n  }\n};\n\nSimplexNoiseRenderer.prototype.renderNoise = function(texture) {\n  // this.getThreeRenderer().setViewport( 0, 0, this.getEntity().getWidth(), this.getEntity().getHeight() );\n  this.getThreeRenderer().render( this.sceneRTT, this.cameraRTT, this.getThreeObject(), true );\n  this.getThreeRenderer().setRenderTarget( null );\n};\n\nSimplexNoiseRenderer.prototype.changeNoiseValues = function( layerAmplitude, layerScale, scale, offset ) {\n  var values = {};\n  if ( layerAmplitude ) {\n    values.layerAmplitude = layerAmplitude;\n  }\n  if ( layerScale ) {\n    values.layerScale = layerScale;\n  }\n  if ( scale ) {\n    values.scale = scale;\n  }\n  if ( offset ) {\n    values.offset = offset;\n  }\n  this.attributesChanged( values );\n};\n\nSimplexNoiseRenderer.prototype.attributesChanged = function( attributes ) {\n  if ( attributes.scale && attributes.scale.x !== undefined ) {\n    this.m_Uniforms.scale.value.x = attributes.scale.x;\n    this.m_Uniforms.scale.value.y = attributes.scale.y;\n  }\n  if ( attributes.offset && attributes.offset.x !== undefined ) {\n    this.m_Uniforms.offset.value.x = attributes.offset.x;\n    this.m_Uniforms.offset.value.y = attributes.offset.y;\n  }\n  if ( attributes.layerScale && attributes.layerScale.x !== undefined ) {\n    this.m_Uniforms.layerScale.value.x = attributes.layerScale.x;\n    this.m_Uniforms.layerScale.value.y = attributes.layerScale.y;\n    this.m_Uniforms.layerScale.value.z = attributes.layerScale.z;\n    this.m_Uniforms.layerScale.value.w = attributes.layerScale.w;\n  }\n  if ( attributes.layerAmplitude && attributes.layerAmplitude.x !== undefined ) {\n    this.m_Uniforms.layerAmplitude.value.x = attributes.layerAmplitude.x;\n    this.m_Uniforms.layerAmplitude.value.y = attributes.layerAmplitude.y;\n    this.m_Uniforms.layerAmplitude.value.z = attributes.layerAmplitude.z;\n    this.m_Uniforms.layerAmplitude.value.w = attributes.layerAmplitude.w;\n  }\n  this.renderNoise();\n};\n\nSimplexNoiseRenderer.VertexShader = [\n  "varying vec2 vUv;",\n  "uniform vec2 scale;",\n  "uniform vec2 offset;",\n  "void main() {",\n\n    "vUv = uv * scale + offset;",\n    "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",\n\n  "}"\n\n].join("\\n");\n\nSimplexNoiseRenderer.FragmentShader = [\n  //\n  // Description : Array and textureless GLSL 3D simplex noise function.\n  //      Author : Ian McEwan, Ashima Arts.\n  //  Maintainer : ijm\n  //     Lastmod : 20110409 (stegu)\n  //     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n  //               Distributed under the MIT License. See LICENSE file.\n  //\n  //"precision lowp float;",\n  "uniform float time;",\n  "uniform vec4 layerAmplitude;",\n  "uniform vec4 layerScale;",\n  "varying vec2 vUv;",\n\n//   "vec3 mod289(vec3 x) {",\n//   "return x - floor(x * (1.0 / 289.0)) * 289.0;",\n// "}",\n\n// "vec2 mod289(vec2 x) {",\n//   "return x - floor(x * (1.0 / 289.0)) * 289.0;",\n// "}",\n\n// "vec3 permute(vec3 x) {",\n//   "return mod289(((x*34.0)+1.0)*x);",\n// "}",\n\n// "float snoise(vec2 v)",\n//   "{",\n//   "const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0",\n//                       "0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)",\n//                      "-0.577350269189626,  // -1.0 + 2.0 * C.x",\n//                       "0.024390243902439); // 1.0 / 41.0",\n// // First corner\n//   "vec2 i  = floor(v + dot(v, C.yy) );",\n//   "vec2 x0 = v -   i + dot(i, C.xx);",\n\n// // Other corners\n//   "vec2 i1;",\n//   //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n//   //i1.y = 1.0 - i1.x;\n//   "i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);",\n//   // x0 = x0 - 0.0 + 0.0 * C.xx ;\n//   // x1 = x0 - i1 + 1.0 * C.xx ;\n//   // x2 = x0 - 1.0 + 2.0 * C.xx ;\n//   "vec4 x12 = x0.xyxy + C.xxzz;",\n//   "x12.xy -= i1;",\n\n// // Permutations\n//   "i = mod289(i); // Avoid truncation effects in permutation",\n//   "vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))",\n//    "+ i.x + vec3(0.0, i1.x, 1.0 ));",\n\n//   "vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);",\n//   "m = m*m;",\n//   "m = m*m;",\n\n// // Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// // The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n//   "vec3 x = 2.0 * fract(p * C.www) - 1.0;",\n//   "vec3 h = abs(x) - 0.5;",\n//   "vec3 ox = floor(x + 0.5);",\n//   "vec3 a0 = x - ox;",\n\n// // Normalise gradients implicitly by scaling m\n// // Approximation of: m *= inversesqrt( a0*a0 + h*h );\n//   "m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );",\n\n// // Compute final noise value at P\n//   "vec3 g;",\n//   "g.x  = a0.x  * x0.x  + h.x  * x0.y;",\n//   "g.yz = a0.yz * x12.xz + h.yz * x12.yw;",\n//   "return 130.0 * dot(m, g);",\n// "}",\n  "precision highp float;",\n  \n  "vec4 permute( vec4 x ) {",\n\n    "return mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );",\n\n  "}",\n\n  "vec4 taylorInvSqrt( vec4 r ) {",\n\n    "return 1.79284291400159 - 0.85373472095314 * r;",\n\n  "}",\n\n  "float snoise( vec3 v ) {",\n\n    "vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );",\n    "const vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );",\n\n    // First corner\n\n    "vec3 i  = floor( v + dot( v, C.yyy ) );",\n    "vec3 x0 = v - i + dot( i, C.xxx );",\n\n    // Other corners\n\n    "vec3 g = step( x0.yzx, x0.xyz );",\n    "vec3 l = 1.0 - g;",\n    "vec3 i1 = min( g.xyz, l.zxy );",\n    "vec3 i2 = max( g.xyz, l.zxy );",\n\n    "vec3 x1 = x0 - i1 + 1.0 * C.xxx;",\n    "vec3 x2 = x0 - i2 + 2.0 * C.xxx;",\n    "vec3 x3 = x0 - 1. + 3.0 * C.xxx;",\n\n    // Permutations\n\n    "i = mod( i, 289.0 );",\n    "vec4 p = permute( permute( permute(",\n         "i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )",\n         "+ i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )",\n         "+ i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );",\n\n    // Gradients\n    // ( N*N points uniformly over a square, mapped onto an octahedron.)\n\n    "float n_ = 1.0 / 7.0; // N=7",\n\n    "vec3 ns = n_ * D.wyz - D.xzx;",\n\n    "vec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)",\n\n    "vec4 x_ = floor( j * ns.z );",\n    "vec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)",\n\n    "vec4 x = x_ *ns.x + ns.yyyy;",\n    "vec4 y = y_ *ns.x + ns.yyyy;",\n    "vec4 h = 1.0 - abs( x ) - abs( y );",\n\n    "vec4 b0 = vec4( x.xy, y.xy );",\n    "vec4 b1 = vec4( x.zw, y.zw );",\n\n\n    "vec4 s0 = floor( b0 ) * 2.0 + 1.0;",\n    "vec4 s1 = floor( b1 ) * 2.0 + 1.0;",\n    "vec4 sh = -step( h, vec4( 0.0 ) );",\n\n    "vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;",\n    "vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;",\n\n    "vec3 p0 = vec3( a0.xy, h.x );",\n    "vec3 p1 = vec3( a0.zw, h.y );",\n    "vec3 p2 = vec3( a1.xy, h.z );",\n    "vec3 p3 = vec3( a1.zw, h.w );",\n\n    // Normalise gradients\n\n    "vec4 norm = taylorInvSqrt( vec4( dot( p0, p0 ), dot( p1, p1 ), dot( p2, p2 ), dot( p3, p3 ) ) );",\n    "p0 *= norm.x;",\n    "p1 *= norm.y;",\n    "p2 *= norm.z;",\n    "p3 *= norm.w;",\n\n    // Mix final noise value\n\n    "vec4 m = max( 0.6 - vec4( dot( x0, x0 ), dot( x1, x1 ), dot( x2, x2 ), dot( x3, x3 ) ), 0.0 );",\n    "m = m * m;",\n    "return 42.0 * dot( m*m, vec4( dot( p0, x0 ), dot( p1, x1 ),",\n                    "dot( p2, x2 ), dot( p3, x3 ) ) );",\n\n  "}",\n\n  "float surface3( vec3 coord ) {",\n\n    "float n = 0.0;",\n\n    "n += layerAmplitude.x * abs( snoise( coord * layerScale.x ) );",\n//     "n += 0.5 * abs( snoise( coord * 2.0 ) );",\n//     "n += 0.25 * abs( snoise( coord * 4.0 ) );",\n//     "n += 0.125 * abs( snoise( coord * 8.0 ) );",\n    "n += layerAmplitude.y * abs( snoise( coord * layerScale.y ) );",\n    "n += layerAmplitude.z * abs( snoise( coord * layerScale.z ) );",\n    "n += layerAmplitude.w * abs( snoise( coord * layerScale.w ) );",\n\n    "return n;",\n\n  "}",\n\n  "void main( void ) {",\n\n    "vec3 coord = vec3( vUv, -time );",\n    "float n = surface3( coord );",\n\n    "gl_FragColor = vec4( vec3( n, n, n ), 1.0 );",\n\n  "}"\n].join("\\n");\n\nreturn SimplexNoiseRenderer;\n'
}),define("text!VeroldEngine/Components/BuiltIn/NormalMapGenerator.js",[],function(){return'\nvar _ = require(\'underscore\');\n\nfunction NormalMapGenerator() {\n  // this.m_Renderer = null;\n  this.m_Uniforms = null;\n  this.normalMaterial = null;\n}\n\nNormalMapGenerator.prototype = new VAPI.VeroldComponent();\n\nNormalMapGenerator.prototype.editorInit = function(){\n  this.init();\n  this.getEntity().on("load_base", this.objectCreated, this );\n};\n\nNormalMapGenerator.prototype.editorShutdown = function() {\n  this.getEntity().off("load_base", this.objectCreated, this );\n  this.shutdown();\n};\n\nNormalMapGenerator.prototype.init = function() {\n  \n  this.getEntity().on( \'renderNormalMap\', this.renderNormalMap, this );\n  this.m_Uniforms = {\n    "bumpTexture":  { type: "t", value: null },\n    "resolution": { type: "v2", value: new THREE.Vector2( 256, 256 ) },\n    // "scale":      { type: "v2", value: new THREE.Vector2( 1, 1 ) },\n    "smoothness":     { type: "f", value: 0.25 },\n    "spread":     { type: "f", value: 4.0 }\n  };\n  \n  //create noise material\n  this.normalMaterial = new THREE.ShaderMaterial( {\n    uniforms       : this.m_Uniforms,\n    vertexShader   : NormalMapGenerator.VertexShader,\n    fragmentShader : NormalMapGenerator.FragmentShader,\n    blending        : THREE.NoBlending\n  } );\n  \n  this.normalMaterial.depthTest = false;\n  this.normalMaterial.depthWrite = false;\n    \n  this.cameraRTT = new THREE.OrthographicCamera( -0.5, 0.5, 0.5, -0.5, -10, 10 );\n  this.cameraRTT.position.z = 1;\n  this.sceneRTT = new THREE.Scene();\n  this.sceneRTT.add( this.cameraRTT );\n  \n  this.quadGeo = new THREE.PlaneGeometry( 1, 1 );\n  this.quadRTT = new THREE.Mesh( this.quadGeo, this.normalMaterial );\n  this.quadRTT.position.z = -5;\n  this.sceneRTT.add( this.quadRTT );\n  // this.updateUniforms();\n};\n\nNormalMapGenerator.prototype.shutdown = function() {\n  this.getEntity().off( \'renderNormalMap\', this.renderNormalMap, this );\n  this.sceneRTT.remove( this.cameraRTT );\n  this.sceneRTT.remove( this.quadRTT );\n  this.sceneRTT = undefined;\n  this.quadRTT = undefined;\n  this.quadGeo.dispose();\n  this.normalMaterial.dispose();\n  this.m_Uniforms = undefined;\n};\n\nNormalMapGenerator.prototype.objectCreated = function() {\n  \n  var that = this;\n  this.updateUniforms( function() {\n    if ( that.autoLoad ) {\n      that.renderNormalMap();\n    }\n  });\n};\n\nNormalMapGenerator.prototype.renderNormalMap = function( smoothness ) {\n  // if ( scale && scale.x !== undefined ) {\n  //   this.m_Uniforms.scale.value.x = scale.x;\n  //   this.m_Uniforms.scale.value.y = scale.y;\n  // }\n  if ( smoothness !== undefined ) {\n    this.m_Uniforms.smoothness.value = smoothness;\n  }\n  //this.getThreeRenderer().setRenderTarget( this.getEntity().threeData );\n  var renderer = this.getThreeRenderer();\n  renderer.render( this.sceneRTT, this.cameraRTT, this.getEntity().threeData, true );\n  this.getThreeRenderer().setRenderTarget( null );\n};\n\n\nNormalMapGenerator.prototype.attributesChanged = function( attributes ) {\n  var that = this;\n  this.updateUniforms( function() {\n    that.renderNormalMap();\n  });\n  // if ( attributes.scale && attributes.scale.x !== undefined ) {\n  //   this.m_Uniforms.scale.value.x = attributes.scale.x;\n  //   this.m_Uniforms.scale.value.y = attributes.scale.y;\n  // }\n  // if ( attributes.smoothness !== undefined ) {\n  //   this.m_Uniforms.smoothness.value = attributes.smoothness;\n  // }\n  // if ( attributes.bumpTexture ) {\n  //   if ( this.bumpTexture.threeData ) {\n  //     this.m_Uniforms.bumpTexture.value = this.bumpTexture.threeData;\n  //   }\n  //   else {\n  //     this.bumpTexture.once( \'load\', function() {\n  //       this.m_Uniforms.bumpTexture.value = this.bumpTexture.threeData;\n  //     }, this );\n  //     this.bumpTexture.load();\n  //   }\n  // }\n\n};\n\nNormalMapGenerator.prototype.updateUniforms = function( callback ) {\n  // this.m_Uniforms.scale.value.x = this.scale.x;\n  // this.m_Uniforms.scale.value.y = this.scale.y;\n  this.m_Uniforms.smoothness.value = this.smoothness;\n  this.m_Uniforms.spread.value = this.spread;\n  if ( this.bumpTexture ) {\n    if ( this.bumpTexture.threeData ) {\n      this.m_Uniforms.bumpTexture.value = this.bumpTexture.threeData;\n      this.m_Uniforms.resolution.value.set( this.bumpTexture.getWidth(), this.bumpTexture.getHeight() );\n      if ( _.isFunction( callback ) ) {\n        callback();\n      }\n    }\n    else {\n      this.bumpTexture.once( \'load\', function() {\n        this.m_Uniforms.bumpTexture.value = this.bumpTexture.threeData;\n        this.m_Uniforms.resolution.value.set( this.bumpTexture.getWidth(), this.bumpTexture.getHeight() );\n        if ( _.isFunction( callback ) ) {\n          callback();\n        }\n      }, this );\n      this.bumpTexture.load();\n    }\n  }\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Normal map shader\n * - compute normals from bumpTexture\n */\n\nNormalMapGenerator.VertexShader = [\n\n  "varying vec2 vUv;",\n\n  "void main() {",\n\n    "vUv = uv;",\n    "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",\n\n  "}"\n\n].join("\\n");\n\nNormalMapGenerator.FragmentShader = [\n  "precision lowp float;",\n  "uniform float smoothness;",\n  "uniform float spread;",\n  "uniform vec2 resolution;",\n  "uniform sampler2D bumpTexture;",\n\n  "vec2 size = vec2( smoothness, 0.0 );",\n  "vec3 off = vec3(-spread / resolution.x, 0.0, spread / resolution.y);",\n\n  "varying vec2 vUv;",\n\n  "void main() {",\n\n    // "float val = texture2D( bumpTexture, vUv ).x;",\n\n    // "float valU = texture2D( bumpTexture, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;",\n    // "float valV = texture2D( bumpTexture, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;",\n\n    // "gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, smoothness ) ) + 0.5 ), val );",\n    // "gl_FragColor.z = val;",\n\n    "vec4 wave = texture2D( bumpTexture, vUv);",\n    "float s11 = wave.x;",\n    "float s01 = texture2D( bumpTexture, vUv + off.xy ).x;",\n    "float s21 = texture2D( bumpTexture, vUv + off.zy ).x;",\n    "float s10 = texture2D( bumpTexture, vUv + off.yx ).x;",\n    "float s12 = texture2D( bumpTexture, vUv + off.yz ).x;",\n    "vec3 va = normalize(vec3( size.xy, s21-s01));",\n    "vec3 vb = normalize(vec3( size.yx, s12-s10));",\n    "vec3 norm = cross(va,vb);",\n    "gl_FragColor = vec4( norm * 0.5 + 0.5, s11 );",\n  "}"\n\n].join("\\n");\n\nreturn NormalMapGenerator;\n'}),define("text!VeroldEngine/Components/BuiltIn/SceneLoader.js",[],function(){return"function SceneLoader() {\n  this.m_bHierarchy = false;\n  this.m_bDependencies = false;\n  this.scene = undefined;\n  this.loadTime = 0;\n}\n\nSceneLoader.prototype = new VAPI.VeroldComponent();\n\n\nSceneLoader.prototype.init = function() {\n  if ( this.scene ) {\n    this.scene.on( \"load_progress\", this.onProgress, this );\n    this.scene.once( \"load\", this.onLoadComplete, this );\n    this.scene.once( \"load_hierarchy_failure\", this.onLoadComplete, this );\n  }\n};\n\nSceneLoader.prototype.shutdown = function() {\n  if ( this.scene ) {\n    this.scene.off( \"load_progress\", this.onProgress, this );\n  }\n};\n\nSceneLoader.prototype.update = function( delta ) {\n  this.loadTime += delta;\n};\n\n//fired as progress loading occurs\nSceneLoader.prototype.onProgress = function(scene){\n  var progress = scene.getLoadingProgress();//0.0 -> 1.0\n\n  this.getEvents().trigger(\"sceneLoadProgress\", progress, this.scene );\n\n  /*****INCREASE THE SIZE OF THE BAR BASED OFF OF THE PERCENT LOADED  - CUSTOM CODE******/\n  if(document.getElementById('load-bar')) {\n    document.getElementById('load-bar').style.width = (progress*100) + '%';\n  }\n\n  //If no progress happens for a full second, trigger load complete\n  if ( this.timeoutId ) {\n    clearTimeout( this.timeoutId );\n  }\n  var that = this;\n  this.timeoutId = setTimeout( function() {\n    that.onLoadComplete();\n  }, 5000 );\n  /**************************************************************************************/\n};\n\n//fired when everything has been loaded\nSceneLoader.prototype.onLoadComplete = function(){\n  var loadBar;\n  if ( document.getElementById('load-scene') ) {\n    if((loadBar = document.getElementById('load-bar'))) {\n      var loadBars = document.querySelectorAll('.load-bar');\n      [].forEach.call(loadBars,function(el) {\n        el.style['-webkit-transition'] = 'width 0s ease';\n        el.style['-moz-transition'] = 'width 0s ease';\n\n      });\n      loadBar.style.width = 100 + '%';\n    }\n\n    /************************show the app and remove the loading scene -  CUSTOM CODE **************************/\n    var that = this;\n    setTimeout(function() {\n      document.body.removeChild(document.getElementById('load-scene'));\n      console.log(\"Scene load completed in \" + that.loadTime.toFixed(2) + \" seconds.\");\n      parent.postMessage({command: 'loadComplete', params: []}, '*');\n    }, 100);\n    /**************************************************************************************/\n  }\n\n  this.getEvents().trigger(\"sceneLoadComplete\", this.scene );\n};\n\n\nreturn SceneLoader;\n"}),define("text!VeroldEngine/Components/BuiltIn/Rotate.js",[],function(){return"/** \n * @vname Rotate\n *\n * @vdescription \n * A simple component to rotate an object.\n * \n * @vcategory Animation\n * \n * @vfilter object\n */\n\n/**\n * @vattr Boolean autoRotate  {\n *   description: \"Automatically start the rotation upon load.\",\n *   default: true,\n * }\n *\n * @vattr Boolean previewRotation {\n *   description: \"Show the rotation in the editor.\",\n *   default: true\n * }\n *\n * @vattr Vector3 rotation {\n *   description: 'Amount of rotation per second about the x, y and z axes.',\n *   default: { x: 0, y: 0.5, z: 0 }\n * }\n *\n * @vattr Boolean local {\n *   description: 'Rotate relative to the local orientation of the object. If false, the rotation will be relative to the world.',\n *   default: false\n * }\n */\n\n/**\n * @vevent local startRotate {\n *   action: true,\n *   category: 'Rotate',\n *   parameters: []\n * }\n * \n * @vevent local stopRotate {\n *   action: true,\n *   category: 'Rotate',\n *   parameters: []\n * }\n *\n * @vevent local toggleRotate {\n *   action: true,\n *   category: 'Rotate',\n *   parameters: []\n * }\n */ \n\n/* global VAPI */\nvar tmpVec = new THREE.Vector3(),\n    tmpEuler = new THREE.Euler();\n\nfunction Rotate() {\n  this.quaternion = new THREE.Quaternion();\n  this.currentGlobalQuaternion = new THREE.Quaternion();\n}\n\nRotate.prototype = new VAPI.VeroldComponent();\n\nRotate.prototype.editorInit = function() {\n  this.getEngine().on(\"update\", this.update, this );\n  this.getEntity().once(\"load_base\", this.objectCreated, this );\n  this.rotate = this.previewRotation;\n  if ( this.getEntity().state_base === \"loaded\") {\n    this.objectCreated();\n  }\n  this.on('enable', this.onEnable, this );\n  this.on('disable', this.onDisable, this );\n};\n\nRotate.prototype.editorShutdown = function() {\n  this.getEngine().off(\"update\", this.update, this );\n  this.getThreeData().position.copy( this.getEntity().getPosition() );\n  this.getThreeData().quaternion.copy( this.getEntity().getQuaternion() );\n  this.off('enable', this.onEnable, this );\n  this.off('disable', this.onDisable, this );\n};\n\nRotate.prototype.init = function() {\n  this.rotate = this.autoRotate;\n\n  this.getEntity().on('startRotate', this.onStartRotate, this);\n  this.getEntity().on('stopRotate', this.onStopRotate, this);\n  this.getEntity().on('toggleRotate', this.onToggleRotate, this);\n};\n\nRotate.prototype.shutdown = function() {\n  this.getEntity().off('startRotate', this.onStartRotate, this);\n  this.getEntity().off('stopRotate', this.onStopRotate, this);\n  this.getEntity().off('toggleRotate', this.onToggleRotate, this);\n};\n\nRotate.prototype.onEnable = function() {\n  this.rotate = this.autoRotate;\n  this.initRotation();\n};\n\nRotate.prototype.onDisable = function() {\n  this.getThreeData().position.copy( this.getEntity().getPosition() );\n  this.getThreeData().quaternion.copy( this.getEntity().getQuaternion() );\n  this.rotate = false;\n};\n\nRotate.prototype.attributesChanged = function( changes ) {\n  if ( changes.rotation && !_.isEmpty( changes.rotation )) {\n    this.initRotation();\n  }\n  if ( changes.previewRotation !== undefined ) {\n    this.rotate = this.previewRotation;\n    this.initRotation();\n  }\n};\n\nRotate.prototype.objectCreated = function() {\n  this.initialQuaternion = new THREE.Quaternion();\n  this.initialQuaternion.copy(this.getThreeData().quaternion);\n  this.initRotation();\n};\n\nRotate.prototype.initRotation = function() {\n  tmpEuler.set( this.rotation.x, this.rotation.y, this.rotation.z );\n  if ( this.local ) {\n    this.getThreeData().quaternion.copy( this.initialQuaternion );\n  }\n  else {\n    this.currentGlobalQuaternion.set( 0,0,0,1 );\n  }\n};\n\nRotate.prototype.update = function( delta ) {\n  if(this.rotate && this.isEnabled() ) {\n    this.getEngine().needsRender = true;\n    if (this.getThreeData() && this.rotation ) {\n      tmpVec.copy(this.rotation).multiplyScalar( delta );\n      tmpEuler.set(tmpVec.x, tmpVec.y, tmpVec.z);\n      this.quaternion.setFromEuler( tmpEuler );\n      if ( this.local ) {\n        this.getThreeData().quaternion.multiply( this.quaternion );\n      }\n      else {\n        this.currentGlobalQuaternion.multiply( this.quaternion );\n        this.getThreeData().quaternion.multiplyQuaternions( this.currentGlobalQuaternion, this.initialQuaternion );\n      }\n    }\n  }\n};\n\nRotate.prototype.onStartRotate = function() {\n  this.rotate = true;\n};\n\nRotate.prototype.onStopRotate = function() {\n  this.rotate = false;\n};\n\nRotate.prototype.onToggleRotate = function() {\n  this.rotate = !this.rotate;\n};\n\nreturn Rotate;\n"}),define("text!VeroldEngine/Components/BuiltIn/LookAt.js",[],function(){return"/**\n * A component to automatically point an object at another. This can be used for\n * billboarding an object to the camera, making a character look at another, etc.\n *\n * @class LookAt\n */\nfunction LookAt() {\n  this.playing = true;\n}\n\nLookAt.prototype = new VAPI.VeroldComponent();\n\nLookAt.prototype.editorInit = function() {\n  this.init();\n  var engine = this.getEngine(); \n  engine.on( 'postUpdate', this.postUpdate, this );\n  this.on('enable', this.onEnable, this );\n  this.on('disable', this.onDisable, this );\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nLookAt.prototype.editorShutdown = function() {\n  var engine = this.getEngine();\n  engine.off( 'postUpdate', this.postUpdate, this );\n  this.shutdown();\n  this.off('enable', this.onEnable, this );\n  this.off('disable', this.onDisable, this );\n};\n\n/**\n * Called immediately after after component creation\n */\nLookAt.prototype.init = function() {\n  this.tempVec = new THREE.Vector3();\n  this.tempMatrix = new THREE.Matrix4();\n  this.tempQuaternion = new THREE.Quaternion();\n};\n\nLookAt.prototype.attributesChanged = function( changes ) {\n  if ( changes.showPreview !== undefined ) {\n    this.playing = this.showPreview;\n  }\n  if ( !this.playing ) {\n    this.getThreeData().position.copy( this.getEntity().getPosition() );\n    this.getThreeData().quaternion.copy( this.getEntity().getQuaternion() );\n  }\n};\n\nLookAt.prototype.onEnable = function() {\n  this.playing = this.showPreview;\n};\n\nLookAt.prototype.onDisable = function() {\n  this.playing = false;\n  this.getThreeData().position.copy( this.getEntity().getPosition() );\n  this.getThreeData().quaternion.copy( this.getEntity().getQuaternion() );\n};\n\n/**\n * Called per VeroldEngine update (per frame)\n * @param  {float} delta The number of seconds since the last call to `update`\n */\nLookAt.prototype.postUpdate = function(delta) {\n  var threeData;\n  if (this.hasThreeData() && this.playing && this.isEnabled() ) {\n      \n    threeData = this.getThreeData();\n    if ( this.target && this.target.threeData ) {\n      this.getEngine().needsRender = true;\n      var lookAtObject = this.target.threeData;\n      \n      this.tempVec.setFromMatrixPosition( lookAtObject.matrixWorld );\n      if ( threeData.parent ) {\n        this.tempMatrix.getInverse( threeData.parent.matrixWorld );\n      }\n      else {\n        this.tempMatrix.identity();\n      }\n      this.tempVec.applyMatrix4( this.tempMatrix );\n      \n      if ( this.local ) {\n        threeData.lookAt( this.tempVec );\n        threeData.quaternion.multiply( this.getEntity().getQuaternion() );\n      }\n      else {\n        threeData.lookAt( this.tempVec );\n      }\n    }\n  }\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nLookAt.prototype.shutdown = function() {\n  // make sure to clean up any events or other bindings that you have created\n  // to avoid memory leaks\n};\n\nreturn LookAt;"}),define("text!VeroldEngine/Components/BuiltIn/TextRenderer2D.js",[],function(){return'/*\n@vname Text Renderer\n@vdescription Render the desired text to the texture we are attached to\n@vfilter renderTexture2D\n@vcategory Text\n@vattr string text { default : \'My Text\', description : \'Text you want to display\' }\n@vattr color fontColor { default : 0xFFFFFF, description : \'Color of the text\'}\n@vattr string fontFamily { default : \'Calibri\', description : \'Font family to render\'}\n@vattr integer pointSize { default : 48, description : \'Font size\', min : 2, max : 100 }\n*/\n\n\nfunction Component() {\n  this.m_Material = null;\n  this.m_Canvas = null;\n  this.m_Mesh = null;\n  this.m_RTCam = null;\n  this.m_RTScene = null;\n}\n\nComponent.prototype = new VAPI.VeroldComponent();\n\nComponent.prototype.editorInit = function(){\n  this.init();\n  this.getEntity().once(\'load\', this.sceneLoaded, this );\n  this.listenTo(this.getEntity().entityModel, \'change\', this.attributesChanged.bind(this));\n};\n\nComponent.prototype.editorShutdown = function(){\n  this.shutdown();\n};\n\nComponent.prototype.init = function() {\n  this.createLabel();\n};\n\nComponent.prototype.sceneLoaded = function(){\n  this.renderText();\n};\n\nComponent.prototype.shutdown = function() {\n  this.m_Material.dispose();\n  this.m_Geom.dispose();\n  this.m_Mesh = null;\n};\n\nComponent.prototype.createLabel = function() {\n\n  var text = this.text,\n      size = this.pointSize,\n      color = "#" + this.fontColor.getHexString();\n\n  if(!this.m_Canvas){\n    this.m_Canvas = document.createElement("canvas");\n  }\n  \n  var fontType = size + "pt " + this.fontFamily;\n  \n  var context = this.m_Canvas.getContext("2d");\n  context.font = fontType;\n\n  var textWidth = context.measureText("  " + text + "  ").width;\n  this.m_Canvas.width = this.getEntity().getWidth();\n  this.m_Canvas.height = this.getEntity().getHeight();\n\n  context.font = size + "pt " + this.fontFamily;\n  context.textAlign = "left";\n  context.textBaseline = "hanging";\n  context.fillStyle = color;\n\n  this.wrapAndRender( context, text, this.pointSize*0.5, this.pointSize*0.5, this.m_Canvas.width - this.pointSize*0.5, this.pointSize*1.5 );\n  \n  /* CONVERT TO SOMETHING VEROLD CAN USE */\n  var texture = new THREE.Texture(this.m_Canvas);\n  texture.mapping = null;\n  texture.generateMipmaps = true;\n  texture.magFilter = THREE.LinearFilter;\n  texture.minFilter = THREE.LinearMipMapLinearFilter;\n  texture.needsUpdate = true;\n\n  if(this.m_Material)this.m_Material.dispose();\n  this.m_Material = new THREE.MeshBasicMaterial({\n    map:texture\n  });\n  this.m_Material.side = THREE.DoubleSide;\n\n  if(this.m_Geom)this.m_Geom.dispose();\n  this.m_Geom = new THREE.PlaneGeometry(this.m_Canvas.width, this.m_Canvas.height);\n\n  if(this.m_Mesh){\n    this.m_RTScene.remove(this.m_Mesh);\n    this.m_Mesh = null;\n  }\n  this.m_Mesh = new THREE.Mesh(this.m_Geom, this.m_Material);\n  this.m_Mesh.position.z = 0;\n  \n  var halfwidth = this.m_Canvas.width*0.5;\n  var halfheight = this.m_Canvas.height*0.5;\n  \n  if(!this.m_RTCam)this.m_RTCam = new THREE.OrthographicCamera(-halfwidth,halfwidth,-halfheight,halfheight,-10, 1000);\n  this.m_RTCam.position.z = 10;\n  this.m_RTCam.rotation.z = Math.PI;\n  // left, right, top, bottom\n  this.m_RTCam.left = halfwidth;\n  this.m_RTCam.right = -halfwidth;\n  this.m_RTCam.top = halfheight;\n  this.m_RTCam.bottom = -halfheight;\n  this.m_RTCam.updateProjectionMatrix();\n  \n  \n  if(!this.m_RTScene) \n  {\n    this.m_RTScene = new THREE.Scene();\n    this.m_RTScene.add(this.m_RTCam);\n  }\n  \n   this.m_RTScene.add(this.m_Mesh);\n};\n\nComponent.prototype.attributesChanged = function(attribs){\n  this.createLabel();\n  this.renderText();\n};\n\nComponent.prototype.renderText = function() {\n  if(!this.text) this.text = \' \';\n  \n  if(this.getThreeData()){\n    this.getThreeRenderer().render(this.m_RTScene, this.m_RTCam, this.getThreeData());\n  }\n  else {\n    this.once("load", function() {\n      this.getThreeRenderer().render(this.m_RTScene, this.m_RTCam, this.getThreeData());\n    }, this );\n    this.load();\n  }\n};\n\nComponent.prototype.wrapAndRender = function(context, text, x, y, maxWidth, lineHeight) {\n  var words = text.split(\' \');\n  var line = \'\';\n\n  for(var n = 0; n < words.length; n++) {\n    var testLine = line + words[n] + \' \';\n    var metrics = context.measureText(testLine);\n    var testWidth = metrics.width;\n    if (testWidth > maxWidth && n > 0) {\n      context.fillText(line, x, y);\n      line = words[n] + \' \';\n      y += lineHeight;\n    }\n    else {\n      line = testLine;\n    }\n  }\n  context.fillText(line, x, y);\n};\n\nreturn Component;\n\n\n/*\n\n\n        "2D Text Renderer" : {\n          id: "text_renderer_component",\n          type: "script",\n          payload : {\n            "script": TextRendererJS\n          }\n        },\n*/\n'}),define("text!VeroldEngine/Components/BuiltIn/TextLabel2D.js",[],function(){return"/* global VAPI */\r\n\r\nvar tmpVec3 = new THREE.Vector3();\r\n\r\nfunction TextLabel2D() {\r\n}\r\n\r\nTextLabel2D.prototype = new VAPI.VeroldComponent();\r\n\r\nTextLabel2D.prototype.editorInit = function() {\r\n  if ( this.getThreeData() ) {\r\n    this.objectCreated();\r\n  }\r\n  else {\r\n    this.getEntity().once(\"load_base\", this.objectCreated, this );\r\n  }\r\n}\r\n\r\nTextLabel2D.prototype.objectCreated = function() {\r\n  this.el = document.createElement('div');\r\n\r\n  this.el.style.position = 'absolute';\r\n  this.el.style.left = 0;\r\n  this.el.style.top = 0;\r\n  this.el.style.background = 'rgba(0,0,0,0.2)';\r\n  this.el.style.padding = '10px';\r\n  this.el.style.margin = '5px';\r\n  this.el.style['border-radius'] = '5px';\r\n  this.el.style.color = '#fff';\r\n  this.el.style['font-family'] = 'tahoma, verdana, sans';\r\n\r\n  this.el.innerHTML = VAPI.safeHTML( this.text ) || 'add content here';\r\n\r\n  this.getThreeRenderer().domElement.parentElement.appendChild(this.el);\r\n\r\n  this.getEngine().globalEvents.trigger('renderer::registerPreRenderFn', \"TextLabel\", this.preRenderPass, this );\r\n};\r\n\r\nTextLabel2D.prototype.preRenderView = function( scene, camera, options ) {\r\n  if (this.veroldEntity.threeData) {\r\n    var position = this.getThreeData().position.clone(),\r\n        screenPos = this.worldToScreen(position, camera );\r\n\r\n    this.el.style.left = screenPos.x + 'px';\r\n    this.el.style.top = screenPos.y + 'px';\r\n  }\r\n};\r\n\r\nTextLabel2D.prototype.shutdown = function() {\r\n  this.getThreeRenderer().domElement.parentElement.removeChild(this.el);\r\n};\r\n\r\nTextLabel2D.prototype.worldToScreen = function(worldPosition, camera ) {\r\n  var vector,\r\n    halfWidth = this.getThreeRenderer().domElement.width / 2,\r\n    halfHeight = this.getThreeRenderer().domElement.height / 2;\r\n\r\n  tmpVec3.copy(worldPosition);\r\n\r\n  vector = tmpVec3.project(camera);\r\n\r\n  return {\r\n    x: Math.round(vector.x * halfWidth + halfWidth),\r\n    y: Math.round(-vector.y * halfHeight + halfHeight)\r\n  };\r\n};\r\n\r\nreturn TextLabel2D;\r\n"}),define("text!VeroldEngine/Components/BuiltIn/EventHandler.js",[],function(){return"/* global VAPI */\nvar _ = require('underscore');\n\nfunction callEvent(object, eventName, parameters) {\n  var events,\n      data = [],\n      i;\n\n  if ( object.getEvents ) {\n    events = object.getEvents();\n    data.push(eventName);\n\n    if (events[eventName]) {\n      for (i in events[eventName].params) {\n        if (!_.isUndefined(parameters[i]) && !_.isNull(parameters[i])) {\n          data.push(parameters[i]);\n        } else {\n          data.push(events[eventName].params[i].default);\n        }\n      }\n    }\n\n    object.trigger.apply(object, data);\n  }\n  else {\n    data.push( eventName );\n    object.trigger.apply(object, data.concat( parameters ));\n  }\n\n}\n\n/**\n * A custom component class.\n *\n * @class Component\n */\nfunction EventHandler() {\n}\n\nEventHandler.prototype = new VAPI.VeroldComponent();\n\n/**\n * Called immediately after after component creation\n */\nEventHandler.prototype.init = function() {\n  // this.veroldEntity is available\n  var local = 'this ' + this.getEntity().entityModel.get('type');\n  var sourceEvent = this.listen;\n  var entity;\n  var bindEventName;\n\n  if ( sourceEvent && this.isEnabled() ) {\n    if(sourceEvent.eventScope === local) {\n      entity = this.getEntity();\n      this.listenTo( entity, sourceEvent.event, this.onEvent );\n    } else if(sourceEvent.eventScope === 'object') {\n      entity = this.getEngine().getEntityById( sourceEvent.object );\n      this.listenTo( entity, sourceEvent.event, this.onEvent );\n    } else if(sourceEvent.eventScope === 'asset') {\n      entity = this.getEngine().getEntityById( sourceEvent.asset );\n      this.listenTo( entity, sourceEvent.event, this.onEvent);\n    } else {\n      entity = this.getEvents();\n      this.listenTo( entity, sourceEvent.event, this.onEvent);\n    }\n    bindEventName = sourceEvent.event + \":bound\";\n    this.getEngine().trigger( bindEventName, entity );\n  }\n};\n\nEventHandler.prototype.onEvent = function() {\n  if ( this.isEnabled() ) {\n    var local = 'this ' + this.getEntity().entityModel.get('type');\n    var actions = this.triggers;\n    _.each(actions, _.bind(function(action) {\n      if ( action ) {\n        var eventName = action.event;\n        var parameters = action.parameters;\n\n        if(action.eventScope === local) {\n          callEvent(this.getEntity(), eventName, parameters);\n        } else if(action.eventScope === 'object') {\n          callEvent(this.getEngine().getEntityById(action.object), eventName, parameters);\n        } else if(action.eventScope === 'asset') {\n          callEvent(this.getEngine().getEntityById(action.asset), eventName, parameters);\n        } else {\n          callEvent(this.getEvents(), eventName, parameters);\n        }\n      }\n    }, this));\n  }\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nEventHandler.prototype.shutdown = function() {\n  // make sure to clean up any events or other bindings that you have created\n  // to avoid memory leaks\n};\n\nreturn EventHandler;\n"}),define("text!VeroldEngine/Components/BuiltIn/CustomControl.js",[],function(){return"/* global VAPI */\nvar _ = require('underscore');\n\n/**\n * A custom component class.\n *\n * @class Component\n */\nfunction CustomControl() {\n}\n\nCustomControl.prototype = new VAPI.VeroldComponent();\n\n/**\n * Called immediately after after component creation\n */\nCustomControl.prototype.init = function() {\n  // this.veroldEntity is available\n\n};\n\nCustomControl.prototype.onEvent = function() {\n  if(this.isEnabled()) {\n\n  }\n};\n\nCustomControl.prototype.sceneLoaded = function( ) {\n  if ( this.isEnabled() ) {\n    if ( this.control.type ) {\n      parent.postMessage({command: 'controlsEnabled', params: {name: this.name, type: this.control.type, events: this.control.events} }, '*');\n    }\n  }\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nCustomControl.prototype.shutdown = function() {\n  // make sure to clean up any events or other bindings that you have created\n  // to avoid memory leaks\n};\n\nreturn CustomControl;\n"}),define("text!VeroldEngine/Components/BuiltIn/KeyboardController.js",[],function(){return"/* global VAPI */\nvar _ = require('underscore');\n\n/**\n * A builtin component class.\n *\n * @class InputController\n */\nfunction KeyboardController() {\n}\n\nKeyboardController.prototype = new VAPI.VeroldComponent();\n\n/**\n * Called immediately after after component creation\n */\nKeyboardController.prototype.init = function() {\n  // this.veroldEntity is available\n  this.getEngine().on('keyDown', this.onKeyDown, this);\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nKeyboardController.prototype.shutdown = function() {\n  // make sure to clean up any events or other bindings that you have created\n  // to avoid memory leaks\n  this.getEngine().off('keyDown', this.onkeydown, this);\n};\n\nKeyboardController.prototype.editorShutdown = function() {\n  //this.shutdown();\n};\n\n/**\n * Called once the data is available\n */\nKeyboardController.prototype.objectCreated = function() {\n  // this.veroldEntity.threeData is available\n};\n\nKeyboardController.prototype.onKeyDown = function(key) {\n  switch(key.keyCode) {\n  case 65:\n    this.keypress('a');\n    break;\n  case 66:\n    this.keypress('b');\n    break;\n  case 67:\n    this.keypress('c');\n    break;\n  case 68:\n    this.keypress('d');\n    break;\n  case 69:\n    this.keypress('e');\n    break;\n  case 70:\n    this.keypress('f');\n    break;\n  case 71:\n    this.keypress('g');\n    break;\n  case 72:\n    this.keypress('h');\n    break;\n  case 73:\n    this.keypress('i');\n    break;\n  case 74:\n    this.keypress('j');\n    break;\n  case 75:\n    this.keypress('k');\n    break;\n  case 76:\n    this.keypress('l');\n    break;\n  case 77:\n    this.keypress('m');\n    break;\n  case 78:\n    this.keypress('n');\n    break;\n  case 79:\n    this.keypress('o');\n    break;\n  case 80:\n    this.keypress('p');\n    break;\n  case 81:\n    this.keypress('q');\n    break;\n  case 82:\n    this.keypress('r');\n    break;\n  case 83:\n    this.keypress('s');\n    break;\n  case 84:\n    this.keypress('t');\n    break;\n  case 85:\n    this.keypress('u');\n    break;\n  case 86:\n    this.keypress('v');\n    break;\n  case 87:\n    this.keypress('w');\n    break;\n  case 88:\n    this.keypress('x');\n    break;\n  case 89:\n    this.keypress('y');\n    break;\n  case 90:\n    this.keypress('z');\n    break;\n  case 37:\n    this.keypress('left_arrow');\n    break;\n  case 38:\n    this.keypress('up_arrow');\n    break;\n  case 39:\n    this.keypress('right_arrow');\n    break;\n  case 40:\n    this.keypress('down_arrow');\n    break;\n  case 32:\n    this.keypress('space');\n    break;\n  default:\n    console.log(key.keyCode);\n    break;\n  }\n};\n\nKeyboardController.prototype.keypress = function(key) {\n  var event = 'keypress_' + key;\n  this.getEvents().trigger(event);\n};\n\n/**\n * Called per VeroldEngine update (per frame)\n * @param  {float} delta The number of seconds since the last call to `update`\n */\nKeyboardController.prototype.update = function(delta) {\n  var threeData;\n  // since update is called before threeData is present, you should always\n  // check for its presence before making use of it\n  if (this.hasThreeData()) {\n    // It is safe to manipulate threeData now.\n    threeData = this.getThreeData();\n  }\n};\n\nreturn KeyboardController;"
}),define("text!VeroldEngine/Components/BuiltIn/MouseController.js",[],function(){return"/* global VAPI */\nvar _ = require('underscore');\n\n/**\n * A builtin component class.\n *\n * @class InputController\n */\nfunction MouseController() {\n}\n\nMouseController.prototype = new VAPI.VeroldComponent();\n\n/**\n * Called immediately after after component creation\n */\nMouseController.prototype.init = function() {\n  // this.veroldEntity is available\n  this.getEngine().on('mouseUp', this.onMouseUp, this);\n  this.getEngine().on('mouseDown', this.onMouseDown, this);\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nMouseController.prototype.shutdown = function() {\n  // make sure to clean up any events or other bindings that you have created\n  // to avoid memory leaks\n  this.getEngine().off('mouseUp', this.onMouseUp, this);\n  this.getEngine().off('mouseDown', this.onMouseDown, this);\n};\n\nMouseController.prototype.editorShutdown = function() {\n  //this.shutdown();\n};\n\n/**\n * Called once the data is available\n */\nMouseController.prototype.objectCreated = function() {\n  // this.veroldEntity.threeData is available\n};\n\nMouseController.prototype.onMouseDown = function(event) {\n  switch(event.button) {\n  case 0:\n    this.mouseDown('left', event);\n    break;\n  case 1:\n    this.mouseDown('middle', event);\n    break;\n  case 2:\n    this.mouseDown('right', event);\n    break;\n  default:\n    console.log(event.button);\n    break;\n  }\n};\n\nMouseController.prototype.onMouseUp = function(event) {\n  switch(event.button) {\n  case 0:\n    this.mouseUp('left', event);\n    break;\n  case 1:\n    this.mouseUp('middle', event);\n    break;\n  case 2:\n    this.mouseUp('right', event);\n    break;\n  default:\n    console.log(event.button);\n    break;\n  }\n};\n\nMouseController.prototype.mouseDown = function(button) {\n  var event = 'mouse_down_' + button;\n  this.getEvents().trigger(event);\n};\n\nMouseController.prototype.mouseUp = function(button) {\n  var event = 'mouse_up_' + button;\n  this.getEvents().trigger(event);\n};\n\n/**\n * Called per VeroldEngine update (per frame)\n * @param  {float} delta The number of seconds since the last call to `update`\n */\nMouseController.prototype.update = function(delta) {\n  var threeData;\n  // since update is called before threeData is present, you should always\n  // check for its presence before making use of it\n  if (this.hasThreeData()) {\n    // It is safe to manipulate threeData now.\n    threeData = this.getThreeData();\n  }\n};\n\nreturn MouseController;"}),define("text!VeroldEngine/Components/BuiltIn/ObjectPicker.js",[],function(){return'/* global VAPI */\r\nvar _ = require(\'underscore\');\r\n\r\n/**\r\n * A custom component class.\r\n *\r\n * @class ObjectPicker\r\n */\r\nfunction ObjectPicker() {\r\n  this.pickingMaterialDef = undefined;\r\n  this.meshRegistry = {};\r\n  this.meshList = [];\r\n  this.pickingTexture = undefined;\r\n  this.currentHoverObject = undefined;\r\n  this.currentFrame = 0;\r\n\r\n  this.enableHoverByDefault = false;\r\n  this.pickTrigger = null;\r\n  this.hoverEnabled = false;\r\n}\r\n\r\nObjectPicker.prototype = new VAPI.VeroldComponent();\r\n\r\nObjectPicker.prototype.preInit = function() {\r\n  this.getEngine().once(\'endHover:bound\', this.enableHover, this );\r\n  this.getEngine().once(\'beginHover:bound\', this.enableHover, this );\r\n}\r\n/**\r\n * Called immediately after after component creation\r\n */\r\nObjectPicker.prototype.init = function() {\r\n  // this.veroldEntity is available\r\n  this.getEngine().on( \'resize\', this.resize, this );\r\n\r\n  this.initPickingEvents();\r\n  this.initPickingMaterial();\r\n  this.initMeshRegistry();\r\n\r\n  //listen to register objects\r\n  this.getEvents().on(\'registerPickingObject\', this.registerObject, this);\r\n  this.getEvents().on(\'unregisterPickingObject\', this.unregisterObject, this);\r\n\r\n  this.resize();\r\n};\r\n\r\n/**\r\n * Called when a verold object is destroyed or this component is removed\r\n * from a verold object.\r\n */\r\nObjectPicker.prototype.shutdown = function() {\r\n  // make sure to clean up any events or other bindings that you have created\r\n  // to avoid memory leaks\r\n  this.uninitPickingEvents();\r\n\r\n  this.getEngine().off( \'resize\', this.resize, this );\r\n  this.getEvents().off(\'registerPickingObject\', this.registerObject, this);\r\n  this.getEvents().off(\'unregisterPickingObject\', this.unregisterObject, this);\r\n\r\n  var parentAsset = this.getEntity().getParentAsset();\r\n  parentAsset.off( "meshLoaded", this.registerMesh, this );\r\n  parentAsset.off( "meshUnloaded", this.unregisterMesh, this );\r\n  if ( this.pickingTexture ) {\r\n    this.pickingTexture.dispose();\r\n    this.pickingTexture = undefined;\r\n  }\r\n  for ( var x in this.meshRegistry ) {\r\n    if ( this.meshRegistry[x].pickingMaterial ) {\r\n      this.meshRegistry[x].pickingMaterial.dispose();\r\n    }\r\n  }\r\n  this.meshRegistry = {};\r\n  this.meshList = [];\r\n};\r\n\r\nObjectPicker.prototype.initPickingEvents = function() {\r\n  if ( this.pickTrigger.substr(-2) === "Up" ) {\r\n    if ( VAPI.isMobile() ) {\r\n      this.getEngine().on( "touchEnd", this.touchPick, this );\r\n    }\r\n    else {\r\n      this.getEngine().on( "mouseUp", this.pick, this );\r\n    }\r\n  }\r\n  else if ( this.pickTrigger.substr(-4) === "Down" ) {\r\n    if ( VAPI.isMobile() ) {\r\n      this.getEngine().on( "touchStart", this.touchPick, this );\r\n    }\r\n    else {\r\n      this.getEngine().on( "mouseDown", this.pick, this );\r\n    }\r\n  }\r\n  else if ( this.pickTrigger.substr(-5) === "Click" ) {\r\n    if ( VAPI.isMobile() ) {\r\n      this.getEngine().on( "touchEnd", this.touchPickNoDrag, this );\r\n    }\r\n    else {\r\n      this.getEngine().on( "mouseUp", this.pickNoDrag, this );\r\n    }\r\n  }\r\n\r\n  if ( this.enableHoverByDefault && !VAPI.isMobile() ) {\r\n    this.enableHover();\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.uninitPickingEvents = function() {\r\n  if ( this.pickTrigger.substr(-2) === "Up" ) {\r\n    if ( VAPI.isMobile() ) {\r\n      this.getEngine().off( "touchEnd", this.touchPick, this );\r\n    }\r\n    else {\r\n      this.getEngine().off( "mouseUp", this.pick, this );\r\n    }\r\n  }\r\n  else {\r\n    if ( VAPI.isMobile() ) {\r\n      this.getEngine().off( "touchStart", this.touchPick, this );\r\n    }\r\n    else {\r\n      this.getEngine().off( "mouseDown", this.pick, this );\r\n    }\r\n  }\r\n\r\n  if ( this.enableHoverByDefault && !VAPI.isMobile() ) {\r\n    this.getEngine().off( "postRender", this.hoverUpdate, this );\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.initPickingMaterial = function() {\r\n  this.pickingMaterialDef = {\r\n\r\n    depthTest: true,\r\n    depthWrite: true,\r\n    transparent: false,\r\n    side: THREE.DoubleSide,\r\n\r\n    uniforms: {\r\n      color: { type: "c", value: 0xff0000 },\r\n    },\r\n\r\n    vertexShader: [\r\n      THREE.ShaderChunk[ "skinning_pars_vertex" ],\r\n      THREE.ShaderChunk[ \'logdepthbuf_pars_vertex\'],\r\n\r\n      "void main() {",\r\n        THREE.ShaderChunk[ "skinbase_vertex" ],\r\n        THREE.ShaderChunk[ "skinnormal_vertex" ],\r\n        THREE.ShaderChunk[ "defaultnormal_vertex" ],\r\n        THREE.ShaderChunk[ "skinning_vertex" ],\r\n        THREE.ShaderChunk[ "default_vertex" ],\r\n        THREE.ShaderChunk[ \'logdepthbuf_vertex\'],\r\n        \r\n      "}"\r\n\r\n    ].join("\\n"),\r\n\r\n    fragmentShader: [\r\n      "uniform vec3 color;",\r\n      THREE.ShaderChunk[ \'logdepthbuf_pars_fragment\'],\r\n\r\n      "void main() {",\r\n        THREE.ShaderChunk[ \'logdepthbuf_fragment\'],\r\n        "gl_FragColor = vec4( color, 1.0 );",\r\n      "}"\r\n\r\n    ].join("\\n")\r\n\r\n  };\r\n};\r\n\r\nObjectPicker.prototype.initMeshRegistry = function() {\r\n  var parentAsset = this.getEntity().getParentAsset();\r\n  parentAsset.on( "meshLoaded", this.registerMesh, this );\r\n  parentAsset.on( "meshUnloaded", this.unregisterMesh, this );\r\n\r\n  var that = this;\r\n  parentAsset.traverse( function( obj ) {\r\n    if ( obj.type === "mesh" || obj.type === "skinned_mesh") {\r\n      that.registerMesh( obj );\r\n    }\r\n  });\r\n};\r\n\r\nObjectPicker.prototype.enableHover = function( ) {\r\n  if ( !this.hoverEnabled && !VAPI.isMobile() ) {\r\n    this.getEngine().on( "postRender", this.hoverUpdate, this );\r\n    this.hoverEnabled = true;\r\n  }\r\n}\r\n\r\n/**\r\n* reset the size of the texture used to test against geometry picking parameters\r\n* @method resize\r\n*/\r\nObjectPicker.prototype.resize = function() {\r\n  var oldPickingTexture = this.pickingTexture;\r\n  var width = this.getRenderer().getWidth();\r\n  var height = this.getRenderer().getHeight();\r\n  this.pickingTexture = new THREE.WebGLRenderTarget( Math.floor( width / 4.0 ), Math.floor( height / 4.0), {minFilter: THREE.LinearFilter} );\r\n  this.pickingTexture.generateMipmaps = false;\r\n  if ( oldPickingTexture ) {\r\n    oldPickingTexture.dispose();\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.registerObject = function( veroldObject, threeData ) {\r\n  \r\n  if ( !this.meshRegistry[ threeData.id ] ) {\r\n    this.meshRegistry[ threeData.id ] = { \r\n      veroldEntity: veroldObject,\r\n      threeData: threeData,\r\n      prevMaterial : null, \r\n      pickingMaterial: new THREE.ShaderMaterial( this.pickingMaterialDef ),\r\n    };\r\n    //Array for fast iteration\r\n    this.meshList.push( this.meshRegistry[ threeData.id ] );\r\n    this.meshRegistry[ threeData.id ].index = this.meshList.length - 1;\r\n    var material = this.meshRegistry[ threeData.id ].pickingMaterial;\r\n    material.uniforms = THREE.UniformsUtils.clone( this.pickingMaterialDef.uniforms );\r\n    material.uniforms.color.value = new THREE.Color( threeData.id );\r\n\r\n    if ( threeData instanceof THREE.SkinnedMesh ) {\r\n      material.skinning = true;\r\n    }\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.unregisterObject = function( veroldObject, threeData ) {\r\n  if ( threeData ) {\r\n    //remove the enitity data from the pick history, if it\'s there\r\n    this.removeFromHistory( threeData.id);\r\n    //The meshUnloaded event should fire just before the threeData is deleted.\r\n    if ( this.meshRegistry[ threeData.id ] ) {\r\n      this.meshRegistry[ threeData.id ].veroldEntity = null;\r\n      this.meshRegistry[ threeData.id ].pickingMaterial.dispose();\r\n      this.meshList.splice( this.meshRegistry[ threeData.id ].index, 1 );\r\n      delete this.meshRegistry[ threeData.id ];\r\n    }\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.registerMesh = function( veroldMesh ) {\r\n  //When the THREE.Mesh is created, register it so that it can be selected.\r\n  veroldMesh.when("load_base", function( mesh ) {\r\n    this.registerObject( mesh, mesh.threeData );\r\n  }, this );\r\n};\r\n\r\nObjectPicker.prototype.unregisterMesh = function( veroldMesh ) {\r\n  if ( veroldMesh ) {\r\n    this.unregisterObject( veroldMesh.threeData );\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.getThreeObjects = function(objects) {\r\n  var sceneObjects = [];\r\n  _.each(objects, function(object) {\r\n    if ( object && object.threeData ) {\r\n      sceneObjects.push(object.threeData);\r\n    }\r\n  });\r\n\r\n  return sceneObjects;\r\n};\r\n\r\nObjectPicker.prototype.touchPickNoDrag = function(event, callback) {\r\n  //Check drag state\r\n  if ( !this.getInput().touchDragStatePrevious ) {\r\n    this.touchPick( event, callback );\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.touchPick = function(event, callback) {\r\n\r\n  if ( !this.isEnabled() ) {\r\n    return;\r\n  }\r\n  \r\n  // if ( this.getInput().touchPosition.x ) {\r\n    var x = this.getInput().touchPosition.x;\r\n    var y = this.getInput().touchPosition.y;\r\n    \r\n    var mesh = this.pickMesh( x, y );\r\n    if ( mesh ) {\r\n      \r\n      mesh.trigger(\'pick\');\r\n      var parent = mesh.getParentObject();\r\n      while ( parent ) {\r\n        parent.trigger(\'pick\');\r\n        parent = parent.getParentObject();\r\n      }\r\n      if ( _.isFunction( callback ) ) {\r\n        callback( mesh );\r\n      }\r\n    }\r\n  // }\r\n};\r\n\r\nObjectPicker.prototype.pickNoDrag = function(event, callback) {\r\n  //Check drag state\r\n  if ( !this.getInput().mouseDragStatePrevious[ event.button ] ) {\r\n    this.pick( event, callback );\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.pick = function(event, callback) {\r\n  if ( !this.isEnabled() ) {\r\n    return;\r\n  }\r\n  if ( this.pickTrigger.substr(0, 4) === "left" ) {\r\n    if ( event.button !== 0 ) {\r\n      return;\r\n    }\r\n  }\r\n  else if ( this.pickTrigger.substr(0, 4) === "right" ) {\r\n    if ( event.button !== 2 ) {\r\n      return;\r\n    }\r\n  }\r\n  else if ( event.button !== 1 ) {\r\n    return;\r\n  }\r\n  var x = event.clientX;\r\n  var y = event.clientY;\r\n  var mesh = this.pickMesh( x, y );\r\n  if ( mesh ) {\r\n    mesh.trigger(\'pick\');\r\n    var parent = mesh.getParentObject();\r\n    while ( parent ) {\r\n      parent.trigger(\'pick\');\r\n      parent = parent.getParentObject();\r\n    }\r\n    if ( _.isFunction( callback ) ) {\r\n      callback( mesh );\r\n    }\r\n  }\r\n};\r\n\r\nObjectPicker.prototype.hoverUpdate = function( delta ) {\r\n  if ( !this.isEnabled() ) {\r\n    return;\r\n  }\r\n  if ( this.currentFrame < this.hoverFrameSkip ) {\r\n    this.currentFrame++;\r\n    return;\r\n  }\r\n  this.currentFrame = 0;\r\n  var x = this.getInput().mousePosition.x;\r\n  var y = this.getInput().mousePosition.y;\r\n  var parent;\r\n  var mesh = this.pickMesh( x, y );\r\n  if ( mesh !== this.currentHoverObject ) {\r\n    if ( this.currentHoverObject ) {\r\n      \r\n      this.currentHoverObject.trigger("endHover");\r\n      parent = this.currentHoverObject.getParentObject();\r\n      while ( parent ) {\r\n        parent.trigger(\'endHover\');\r\n        parent = parent.getParentObject();\r\n      }\r\n    }\r\n    if ( mesh ) {\r\n      this.currentHoverObject = mesh;\r\n      \r\n      mesh.trigger("beginHover");\r\n      parent = mesh.getParentObject();\r\n      while ( parent ) {\r\n        parent.trigger(\'beginHover\');\r\n        parent = parent.getParentObject();\r\n      }\r\n    }\r\n    else {\r\n      this.currentHoverObject = null;\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nObjectPicker.prototype.pickMesh = function( x, y ) {\r\n\r\n  var that = this;\r\n  var scenes = this.getEngine().assetRegistry.getAssets({\'type\':\'scene\'});\r\n  var i;\r\n  var pickedMesh = null;\r\n  _.each(scenes, function(scene) {\r\n    var cameras = scene.getObjects({\'type\': \'camera\'});\r\n    \r\n    var renderViews = [];\r\n    _.each(cameras, function(camera) {\r\n      var renderViewComponents = camera.getComponentsByScriptId(\'render_view_component\');\r\n      _.each(renderViewComponents, function(renderViewComponent) {\r\n        if(renderViewComponent.isEnabled()) {\r\n          if(renderViews.length > 0) {\r\n            for ( i = 0; i < renderViews.length; i++ ) {\r\n              var renderView = renderViews[i];\r\n              if(renderViewComponent.renderGroup >= renderView.renderGroup) {\r\n                renderViews.splice(i, 0, renderViewComponent);\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            renderViews.push(renderViewComponent);\r\n          }\r\n        }\r\n      });\r\n    }, this );\r\n\r\n    for ( i = 0; i < renderViews.length; i++ ) {\r\n      var renderView = renderViews[i];\r\n      var canvas_height = that.getRenderer().getHeight();\r\n      var viewport_offset = canvas_height - renderView._height - renderView._y;\r\n      //Get the percentage x,y positions of the mouse on the viewport\r\n      var mouseX = ((x - renderView._x)/ renderView._width);\r\n      var mouseY = ((y - viewport_offset)/ renderView._height);\r\n\r\n      // pickedMesh = this.doRaycastPick( scene, renderView.veroldEntity, mouseX, mouseY );\r\n      pickedMesh = this.doGPUPick( scene, renderView.veroldEntity, mouseX, mouseY );\r\n      if ( pickedMesh ) {\r\n        return;\r\n      }\r\n\r\n    }\r\n  }, this );\r\n  \r\n  return pickedMesh;\r\n};\r\n\r\nObjectPicker.prototype.doRaycastPick = function( scene, camera, mouseX, mouseY ) {\r\n  var x = mouseX * 2 - 1;\r\n  var y = -mouseY * 2 + 1;\r\n\r\n  var vector = new THREE.Vector3(x, y, 0.5);\r\n\r\n  vector.unproject(camera.threeData);\r\n\r\n  var raycaster = new THREE.Raycaster( camera.threeData.position, vector.sub( camera.threeData.position ).normalize() );\r\n\r\n  var sceneObjects = this.getThreeObjects(scene.getObjects());\r\n  var intersections = raycaster.intersectObjects( sceneObjects, false );\r\n\r\n  if(intersections.length > 0) {\r\n    for ( var i = 0; i < intersections.length; i++ ) {\r\n      var parent = intersections[i].object.parent;\r\n      var entityId = intersections[i].object.veroldEntityId;\r\n      var isVisible = true;\r\n      if ( !intersections[i].object.visible ) {\r\n        isVisible = false;\r\n        continue;\r\n      }\r\n      while(parent) {\r\n        \r\n        if ( !parent.visible ) {\r\n          isVisible = false;\r\n          break;\r\n        }\r\n        \r\n        parent = parent.parent;\r\n      }\r\n\r\n      if ( isVisible ) {\r\n        return this.getEngine().getEntityById( entityId );\r\n        // this.getEngine().getEntityById(entityId).trigger(\'pick\');\r\n        // parent = intersections[i].object.parent;\r\n        // while(parent) {\r\n        //   entityId = parent.veroldEntityId;\r\n        //   this.getEngine().getEntityById(entityId).trigger(\'pick\');\r\n        //   parent = parent.parent;\r\n        // }\r\n        // return 1;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nObjectPicker.prototype.doGPUPick = function( scene, camera, mouseX, mouseY ) {\r\n  \r\n  if ( mouseX < 0.0 || mouseY < 0.0 || mouseX > 1.0 || mouseY > 1.0 ) {\r\n    return null;\r\n  }\r\n\r\n  var i = 0;\r\n  var material;\r\n  for ( i = 0; i < this.meshList.length; i++ ) {\r\n    if ( this.meshList[ i ].threeData ) {\r\n      material = this.meshList[ i ].threeData.material;\r\n      this.meshList[ i ].prevMaterial = material;\r\n      this.meshList[ i ].threeData.material = this.meshList[ i ].pickingMaterial;\r\n    }\r\n  }\r\n  var renderer = this.getThreeRenderer();\r\n  var currentShadowMapEnabled = renderer.shadowMapEnabled;\r\n  renderer.shadowMapEnabled = false;\r\n  // renderer.enableScissorTest( true );\r\n  renderer.setViewport( 0, 0, this.pickingTexture.width, this.pickingTexture.height );\r\n  // renderer.setScissor( mouseX * this.pickingTexture.width - 25, this.pickingTexture.height * ( 1.0 - mouseY) - 25, 50, 50 );\r\n  //render the picking scene off-screen\r\n  var gl = renderer.getContext();\r\n  renderer.render( scene.threeData, camera.threeData, this.pickingTexture, true );\r\n  \r\n  //Return materials to their previous state\r\n  for ( i = 0; i < this.meshList.length; i++ ) {\r\n    if ( this.meshList[ i ].threeData ) {\r\n      this.meshList[ i ].threeData.material = this.meshList[ i ].prevMaterial;\r\n    }\r\n  }\r\n\r\n  var pixelBuffer = new Uint8Array(4);\r\n  //read the pixel under the mouse from the texture\r\n  gl.readPixels( mouseX * this.pickingTexture.width, this.pickingTexture.height * ( 1.0 - mouseY), 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixelBuffer);\r\n  \r\n  //interpret the pixel as an ID\r\n  var id = (pixelBuffer[0] << 16) | (pixelBuffer[1] << 8) | (pixelBuffer[2]);\r\n  \r\n  renderer.shadowMapEnabled = currentShadowMapEnabled;\r\n  // renderer.enableScissorTest( false );\r\n  renderer.setRenderTarget( null );\r\n\r\n  if ( this.meshRegistry[ id ] ) {\r\n    var entityId = this.meshRegistry[ id ].veroldEntity.id;\r\n    return this.getEngine().getEntityById( entityId );\r\n    // var parent = this.meshRegistry[ id ].threeData.parent;\r\n    // this.getEngine().getEntityById(entityId).trigger(\'pick\');\r\n    // while(parent) {\r\n    //   entityId = parent.veroldEntityId;\r\n    //   this.getEngine().getEntityById(entityId).trigger(\'pick\');\r\n    //   parent = parent.parent;\r\n    // }\r\n  }\r\n  return null;\r\n};\r\n\r\nreturn ObjectPicker;\r\n'}),define("text!VeroldEngine/Components/BuiltIn/Curve.js",[],function(){return"var _ = require( 'underscore' );\n\n/**\n * A custom component class.\n *\n * @class Curve\n */\nfunction Curve() {\n  this.isEditor = false;\n  this.controlPoints = undefined;\n  this.prevControlPointsLength = 0;\n  this.closed = false;\n  \n  //Editor\n  this.cameraPosition = new THREE.Vector3();\n  this.tempPosition = new THREE.Vector3();\n  this.tempVector = new THREE.Vector3();\n  this.tempVector4 = new THREE.Vector4();\n  this.tempMatrix = new THREE.Matrix4();\n  this.editorCurveColour = 0x222222;\n  this.editorCurveSelectedColour = 0x0d56a6;\n  this.orientationHelpers = [];\n  this.canTryUpdateAgain = true;\n\n  this.curveMaterial = undefined;\n  this.curveGeometry = undefined;\n  this.curveMesh = undefined;\n  this.curveTesselation = 200;\n  this.selected = false;\n  this.updateStarted = false;\n\n}\n\nCurve.prototype = new VAPI.VeroldComponent();\n\nCurve.prototype.init = function() {\n  this.initCurve();\n};\n\nCurve.prototype.shutdown = function( ) {\n};\n\nCurve.prototype.onSelected = function( ) {\n  this.selected = true;\n  if ( this.curveMaterial ) {\n    this.curveMaterial.color.setHex( this.editorCurveSelectedColour );\n  }\n  function show( obj ) {\n    obj.visible = true;\n  }\n  for ( var i = 0; i < this.orientationHelpers.length; i++ ) {\n    this.orientationHelpers[i].traverse( show );\n  }\n};\n\nCurve.prototype.onUnselected = function( ) {\n  this.selected = false;\n  if ( this.curveMaterial ) {\n    this.curveMaterial.color.setHex( this.editorCurveColour );\n  }\n  function hide( obj ) {\n    obj.visible = false;\n  }\n  for ( var i = 0; i < this.orientationHelpers.length; i++ ) {\n    this.orientationHelpers[i].traverse( hide );\n  }\n};\n\nCurve.prototype.initCurve = function() {\n  if ( !this.updateStarted && this.controlPoints && this.controlPoints.length ) {\n    \n    this.updateStarted = true;\n\n    this.cleanupCurveMesh();\n    this.cleanupOrientationHelpers();\n\n    this.prevControlPointsLength = this.controlPoints.length;\n\n    this.createCurve();\n    \n  }\n};\n\nCurve.prototype.isCurveInit = function() {\n  return this.curve.points.length > 0;\n};\n\nCurve.prototype.createCurve = function() {\n  for ( var i in this.controlPoints ) {\n    if ( this.controlPoints[ i ] ) {\n      this.controlPoints[ i ].entityModel.off('change:payload.position', this.updateCurve, this );\n    }\n  }\n\n  if ( this.closed ) {\n    this.curve = new THREE.ClosedSplineCurve3();\n  }\n  else {\n    this.curve = new THREE.SplineCurve3();\n  }\n\n  // this.curve.points.push( this.getEntity().getPosition() );\n  \n  var that = this;\n  var scene = this.getEntity().getParentAsset();\n  scene.when( 'load_hierarchy', function( scene ) {\n    scene.threeData.updateMatrixWorld( true );\n    _.each( that.controlPoints, function( point ) {\n      if ( point ) {\n        // this.tempVector.copy( point.threeData.position );\n        // this.tempVector.applyMatrix4( point.threeData.matrixWorld );\n        // this.tempVector.setFromMatrixPosition( point.threeData.matrixWorld );\n        var newPos = new THREE.Vector3();\n        // newPos.copy( this.tempVector );\n        this.curve.points.push( newPos );\n        this.tempMatrix.makeRotationFromQuaternion( point.threeData.quaternion );\n        var matArray = this.tempMatrix.toArray();\n        this.tempVector.set( matArray[0], matArray[1], matArray[2] );\n        this.orientationHelpers.push( new THREE.ArrowHelper( this.tempVector, newPos, 1, 0xff0000 ) );\n        this.tempVector.set( matArray[4], matArray[5], matArray[6] );\n        this.orientationHelpers.push( new THREE.ArrowHelper( this.tempVector, newPos, 1, 0x00ff00 ) );\n        this.tempVector.set( matArray[8], matArray[9], matArray[10] );\n        this.orientationHelpers.push( new THREE.ArrowHelper( this.tempVector, newPos, 1, 0x0000ff ) );\n          \n        point.entityModel.on('change:payload.position', that.updateCurve, that );\n        point.entityModel.on('change:payload.orientation', that.updateOrientationHelpers, that );\n      }\n      else {\n        this.tempVector.set(0,0,0);\n        this.orientationHelpers.push( new THREE.ArrowHelper( this.tempVector, this.tempVector, 1, 0xff0000 ) );\n        this.orientationHelpers.push( new THREE.ArrowHelper( this.tempVector, this.tempVector, 1, 0xff0000 ) );\n        this.orientationHelpers.push( new THREE.ArrowHelper( this.tempVector, this.tempVector, 1, 0xff0000 ) );\n      }\n      \n    }, that );\n\n    that.updateCurve();\n\n    that.updateStarted = false;\n    if ( !this.selected ) {\n      this.onUnselected();\n    }\n    that.trigger('curveInit');\n    \n  }, this );\n};\n\nCurve.prototype.updateCurve = function() {\n  \n  var helperIndex = 0;\n  var index = 0;\n  var that = this;\n\n  _.each( this.controlPoints, function( point ) {\n    if ( point ) {\n      if ( point.threeData.parent ) {\n        point.getPosition( this.tempVector );\n        this.tempVector4.set( this.tempVector.x, this.tempVector.y, this.tempVector.z, 1.0 );\n        this.tempVector4.applyMatrix4( point.threeData.parent.matrixWorld );\n        this.curve.points[ index ].set( this.tempVector4.x, this.tempVector4.y, this.tempVector4.z );\n        \n        index++;\n      }\n      else if ( this.canTryUpdateAgain ) {\n        this.canTryUpdateAgain = false;\n        setTimeout( function() {\n          console.log(\"Trying again\");\n          that.updateCurve();\n        }, 10 );\n      }\n    }\n    \n  }, this );\n  \n  if ( this.isEditor ) {\n    this.cleanupCurveMesh();\n    this.createCurveMesh();\n  }\n    \n  this.canTryUpdateAgain = true;\n};\n\nCurve.prototype.cleanupCurveMaterial = function() {\n  if ( this.curveMaterial ) {\n    this.curveMaterial.dispose();\n    this.curveMaterial = undefined;\n  }\n};\n\nCurve.prototype.cleanupOrientationHelpers = function() {\n  var i = 0;\n  for ( i in this.controlPoints ) {\n    if ( this.controlPoints[ i ] ) {\n      this.controlPoints[ i ].entityModel.off('change:payload.orientation', this.updateOrientationHelpers, this );\n    }\n  }\n  for ( var i in this.orientationHelpers ) {\n    this.getThreeScene().remove( this.orientationHelpers[i] );\n  }\n  this.orientationHelpers = [];\n};\n\nCurve.prototype.cleanupCurveMesh = function() {\n  \n  if ( this.isEditor && this.curveMesh ) {\n    this.getEngine().globalEvents.trigger( \"studioApp::unregisterPickingObject\", this.getEntity(), this.curveMesh );\n    this.getThreeScene().remove( this.curveMesh );\n    this.curveGeometry.dispose();\n    this.curveMesh.material = undefined;\n  }\n};\n\nCurve.prototype.createCurveMesh = function() {\n  if ( !this.curveMaterial ) {\n    this.curveMaterial = new THREE.MeshBasicMaterial( { color: this.editorCurveColour, transparent: true, opacity: 0.75, blending: THREE.AdditiveBlending } );\n  }\n  if ( this.curve.points.length ) {\n    //this.curveGeometry = new THREE.Geometry();\n    this.curveGeometry = new THREE.TubeGeometry( this.curve, this.curveTesselation, 0.05, 8, this.closed );\n    //this.curveGeometry.vertices = this.curve.getPoints( this.curveTesselation );\n    this.curveMesh = new THREE.Mesh( this.curveGeometry, this.curveMaterial );\n\n    this.getScene().once( 'load_base', function() {\n      this.getThreeScene().add( this.curveMesh );\n      _.each( this.orientationHelpers, function( helper ) {\n        this.getThreeScene().add( helper );\n      }, this );\n    }, this );\n\n    this.getScene().once( 'load', function() {\n      this.getEngine().globalEvents.trigger( \"studioApp::registerPickingObject\", this.getEntity(), this.curveMesh );\n      VAPI.globalEvents.on( \"studioApp::toggleEditorVisualization\", this.toggleVisualization, this );\n    }, this );\n    \n    this.getScene().load();\n\n    this.updateOrientationHelpers();\n  }\n};\n\n\n//Update arrow helpers when a control point's orientation changes\nCurve.prototype.updateOrientationHelpers = function( ) {\n  for ( var i in this.controlPoints ) {\n    if ( this.controlPoints[i] ) {\n      var obj = this.controlPoints[i].threeData;\n\n      this.orientationHelpers[ i * 3 ].position.copy( this.curve.points[i] );\n      this.orientationHelpers[ i * 3 + 1 ].position.copy( this.curve.points[i] );\n      this.orientationHelpers[ i * 3 + 2 ].position.copy( this.curve.points[i] );\n      this.tempMatrix.makeRotationFromQuaternion( obj.quaternion );\n      var matArray = this.tempMatrix.toArray();\n      this.tempVector.set( matArray[0], matArray[1], matArray[2] );\n      this.orientationHelpers[ i * 3 ].setDirection( this.tempVector );\n      this.tempVector.set( matArray[4], matArray[5], matArray[6] );\n      this.orientationHelpers[ i * 3 + 1 ].setDirection( this.tempVector );\n      this.tempVector.set( matArray[8], matArray[9], matArray[10] );\n      this.orientationHelpers[ i * 3 + 2 ].setDirection( this.tempVector );\n    }\n  }\n};\n\nCurve.prototype.attributesChanged = function( changes ) {\n  this.initCurve();\n};\n\nCurve.prototype.editorInit = function() {\n  this.isEditor = true;\n  this.init();\n\n  this.getEngine().on( \"update\", this.editorUpdate, this );\n  this.getEngine().on( \"mouseUp\", this.onMouseUp, this );\n  this.getEntity().on( \"editorSelected\", this.onSelected, this );\n  this.getEntity().on( \"editorUnselected\", this.onUnselected, this );\n  \n  var that = this;\n  this.getEngine().globalEvents.trigger('studioApp::getCurrentCamera', function( camera ) {\n    if ( camera ) {\n      camera.once( 'load_base', function() {\n        that.editorCamera = camera.threeData;\n      }, that );\n      camera.load_base();\n    }\n  });\n\n  this.getEntity().entityModel.on('change:payload.position', that.initCurve, this );\n  this.getEntity().entityModel.on('change:payload.orientation', that.initCurve, this );\n  this.getEntity().entityModel.on('change:payload.scale', that.initCurve, this );\n};\n\nCurve.prototype.editorShutdown = function() {\n  this.getEngine().off( \"update\", this.editorUpdate, this );\n  this.getEngine().off( \"mouseUp\", this.onMouseUp, this );\n  this.getEntity().off( \"editorSelected\", this.onSelected, this );\n  this.getEntity().off( \"editorUnselected\", this.onUnselected, this );\n  this.getEntity().entityModel.off('change:payload.position', this.initCurve, this );\n  this.getEntity().entityModel.off('change:payload.orientation', this.initCurve, this );\n  this.getEntity().entityModel.off('change:payload.scale', this.initCurve, this );\n  VAPI.globalEvents.off( \"studioApp::toggleEditorVisualization\", this.toggleVisualization, this );\n  \n  this.cleanupCurveMesh();\n  this.cleanupOrientationHelpers();\n  this.cleanupCurveMaterial();\n};\n\nCurve.prototype.editorUpdate = function( delta ) {\n  if ( this.editorCamera ) {\n    this.cameraPosition.setFromMatrixPosition( this.editorCamera.matrixWorld );\n    var scale = 1.0;\n    for ( var i = 0; i < this.orientationHelpers.length; i++ ) {\n      this.tempPosition.setFromMatrixPosition( this.orientationHelpers[ i ].matrixWorld );\n      scale = this.tempPosition.distanceTo( this.cameraPosition ) / 12;\n      this.orientationHelpers[ i ].scale.set( scale, scale, scale );\n    }\n  }\n};\n\nCurve.prototype.toggleVisualization = function() {\n  var that = this;\n  this.curveMesh.visible = !this.curveMesh.visible;\n  \n  function toggle( obj ) {\n    obj.visible = that.selected && !obj.visible;\n  }\n  for ( var i = 0; i < this.orientationHelpers.length; i++ ) {\n    this.orientationHelpers[i].traverse( toggle );\n  }\n};\n\n\nreturn Curve;"}),define("text!VeroldEngine/Components/BuiltIn/ShotManager.js",[],function(){return'/* global VAPI */\nfunction ShotPreview() {\n  this.cameraName = "";\n  this.name = "";\n  this.description = "";\n  //this.links = [];\n  this.imageData = "";\n}\n/**\n * A custom component class.\n *\n * @class ShotManager\n */\nfunction ShotManager() {\n\n  this.cameras = [];\n  this.renderTargets = [];\n  this.playing = false;\n  this.currentTime = 0.0;\n  this.fadeStarted = false;\n\n  this.tempVector1 = new THREE.Vector3();\n  this.tempVector2 = new THREE.Vector3();\n  this.tempVector3 = new THREE.Vector3();\n  this.tempMatrix = new THREE.Matrix4();\n\n  this.shotPreviewData = [];\n  this.inEditor = false;\n}\n\nShotManager.prototype = new VAPI.VeroldComponent();\n\n\nShotManager.prototype.init = function() {\n  if ( this.isEnabled() ) {\n    VAPI.globalEvents.on( "shotManager::play", this.playShot, this );\n    this.getEntity().on( "playShot", this.playShot, this );\n  }\n};\n\nShotManager.prototype.editorInit = function() {\n  if ( this.isEnabled() ) {\n    if ( this.getScene().isLoaded() ) {\n      this.initShotPreviews();\n    }\n    else {\n      this.getScene().once( \'load\', this.initShotPreviews, this );\n    }\n    this.inEditor = true;\n  }\n};\n\n/**\n * Called when a verold object is destroyed or this component is removed\n * from a verold object.\n */\nShotManager.prototype.shutdown = function() {\n  VAPI.globalEvents.off( "shotManager::play", this.playShot, this );\n  this.getEntity().off( "playShot", this.playShot, this );\n};\n\nShotManager.prototype.playShot = function( shotNum ) {\n  if ( this.cameras.length && (!shotNum || shotNum < this.cameras.length )) {\n\n    if ( shotNum === undefined ) {\n      shotNum = 0;\n    }\n\n    var components;\n\n    //Cancel current shot\n    if ( this.currentCamera ) {\n      this.currentCamera.trigger( "endShot" );\n      this.currentCamera.trigger( "disableRenderView", 0.0 );\n      components = this.currentCamera.getComponents();\n      _.each( components, function( comp ) {\n        comp.disable();\n      }, this );\n    }\n\n    this.currentCamera = this.cameras[ shotNum ].cameraObject;\n\n    if ( this.currentCamera ) {\n\n      //Start new shot\n      this.currentTime = 0.0;\n      this.fadeStarted = false;\n      components = this.currentCamera.getComponents();\n      _.each( components, function( comp ) {\n        if ( comp.getProperty(\'enabled\') ) {\n          comp.enable();\n        }\n      }, this );\n\n      this.currentCamera.trigger( "enableRenderView", this.fadeIn );\n      this.currentCamera.trigger( "beginShot" );\n    }\n  }\n};\n\nShotManager.prototype.sceneLoaded = function( ) {\n  if ( this.isEnabled() ) {\n    this.initShotPreviews();\n    //Disable all render views to begin with\n    _.each( this.cameras, function( camera ) {\n      if ( camera.cameraObject ) {\n        camera.cameraObject.trigger( "disableRenderView", 0.0 );\n        var components = camera.cameraObject.getComponents();\n        _.each( components, function( comp ) {\n          comp.disable();\n        }, this );\n      }\n    }, this );\n\n    if ( this.cameras.length > 0 ) {\n      parent.postMessage({command: \'shotManagerEnabled\', params: this.shotPreviewData }, \'*\');\n    }\n  }\n};\n\nShotManager.prototype.initShotPreviews = function() {\n  this.previewWidth = Math.round( this.getRenderer().getWidth() * 0.2 );\n  this.previewHeight = Math.round( 2 / 3 * this.previewWidth ); //Locked at 3:2 for now\n  // if ( this.cameras.length && this.shotPreviewData.length !== this.cameras.length ) {\n  //   this.shotPreviewData = new Array( this.cameras.length );\n  //   this.renderTargets = new Array( this.cameras.length );\n  // }\n  for ( var i = 0; i < this.cameras.length; i++ ) {\n    // if ( this.cameras[i] ) {\n      this.createShotData( i );\n    // }\n  }\n\n  if(this.inEditor) {\n    VAPI.globalEvents.trigger(\'shotManager::shotPreviews\', this.shotPreviewData);\n  }\n};\n\nShotManager.prototype.createShotData = function( num ) {\n  if ( this.cameras[ num ] ) {\n    var renderTarget = new THREE.WebGLRenderTarget( this.previewWidth, this.previewHeight, { format: THREE.RGBAFormat, minFilter: THREE.LinearFilter } );\n    renderTarget.generateMipmaps = false;\n    renderTarget.name = "Shot # " + num + " Preview";\n    // this.renderTargets.splice( num, 0, [renderTarget] );\n    // this.shotPreviewData.splice( num, 0, [new ShotPreview()] );\n    this.renderTargets.push( renderTarget );\n    this.shotPreviewData.push( new ShotPreview() );\n    this.renderShotPreview( num );\n  }\n  else {\n    this.renderTargets.push( null );\n    this.shotPreviewData.push( null );\n  }\n};\n\n// ShotManager.prototype.destroyShotData = function( num ) {\n//   if ( this.renderTargets[ num ] ) {\n//     this.renderTargets[ num ].dispose();\n//     this.renderTargets.splice( num, 1 );\n//     this.shotPreviewData.splice( num, 1 );\n//   }\n// };\nShotManager.prototype.cleanupShotData = function() {\n  for ( var i = 0; i < this.renderTargets.length; i++ ) {\n    if ( this.renderTargets[ i ] ) {\n      this.renderTargets[ i ].dispose();\n    }\n  }\n  this.renderTargets = [];\n  this.shotPreviewData = [];\n};\n\nShotManager.prototype.renderShotPreview = function( num ) {\n  if ( this.isEnabled() && this.cameras[ num ] && this.cameras[ num ].cameraObject.threeData && this.renderTargets[ num ] ) {\n    var oldAspect = this.cameras[ num ].cameraObject.threeData.aspect;\n    this.cameras[ num ].cameraObject.threeData.aspect = 3 / 2;\n    this.cameras[ num ].cameraObject.threeData.updateProjectionMatrix();\n\n    this.getThreeRenderer().setRenderTarget( this.renderTargets[ num ] );\n    var cameraObject = this.cameras[ num ].cameraObject;\n    var filters = cameraObject.getComponentByScriptId(\'camera_filters_script\');\n    this.getRenderer().renderView( this.getThreeData(), this.cameras[ num ].cameraObject.threeData, { renderTarget: this.renderTargets[ num ],\n      clearColor: false, //TEMP\n      clearDepth: true,\n      composer: filters ? filters.composer : null,\n      viewPort: { x: 0, y: 0, width: this.previewWidth, height: this.previewHeight }\n    });\n    \n    this.shotPreviewData[ num ].name = VAPI.safeHTML( this.cameras[num].name );\n    this.shotPreviewData[ num ].description = VAPI.safeHTML( this.cameras[num].description );\n  \n    this.shotPreviewData[ num ].cameraName = this.cameras[ num ].cameraObject.getName();\n    this.shotPreviewData[ num ].imageData = this.getDataURIFromFramebuffer( this.renderTargets[ num ], num );\n\n    this.getThreeRenderer().setRenderTarget( null );\n\n    this.cameras[ num ].cameraObject.threeData.aspect = oldAspect;\n    this.cameras[ num ].cameraObject.threeData.updateProjectionMatrix();\n  }\n};\n\nShotManager.prototype.resize = function() {\n  //TODO: Regenerate the textures and thumbnails\n};\n\nShotManager.prototype.attributesChanged = function( changes, prevChanges ) {\n  if ( changes.cameras ) {\n    this.cleanupShotData();\n    var i;\n    for ( i = 0; i < this.cameras.length; i++ ) {\n      this.createShotData( i );\n    }\n\n    if(this.inEditor) {\n      if(changes.cameras[changes.cameras.length - 1]) {\n        VAPI.globalEvents.trigger(\'shotManager::shotPreviews\', this.shotPreviewData);\n      }\n    }\n  }\n};\n\nShotManager.prototype.getDataURIFromFramebuffer = function( texture, index ) {\n  var gl = this.getThreeRenderer().getContext();\n  // Read the contents of the framebuffer\n  var data = new Uint8Array( texture.width * texture.height * 4);\n  gl.readPixels(0, 0, texture.width, texture.height, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n  // Create a 2D canvas to store the result\n  var canvas = document.createElement(\'canvas\');\n  canvas.width = texture.width;\n  canvas.height = texture.height;\n  canvas.style.width = texture.width + \'px\';\n  canvas.style.height = texture.height + \'px\';\n  // canvas.clientWidth = canvas.width;\n  // canvas.clientHeight = canvas.height;\n  var context = canvas.getContext(\'2d\');\n\n  // Copy the pixels to a 2D canvas\n  var imageData = context.createImageData( texture.width, texture.height );\n  imageData.data.set(data);\n  context.putImageData(imageData, 0, 0);\n\n  return canvas.toDataURL();\n};\n\nreturn ShotManager;\n'
}),define("text!VeroldEngine/Components/BuiltIn/ObjectAnimator.js",[],function(){return"/* global VAPI */\r\nvar _ = require('underscore');\r\n\r\n/**\r\n * A custom component class.\r\n *\r\n * @class Component\r\n */\r\nfunction ObjectAnimator() {\r\n  this.playingCurveAnimation = false;\r\n  this.curveAnim = undefined;\r\n}\r\n\r\nObjectAnimator.prototype = new VAPI.VeroldComponent();\r\n\r\n/**\r\n * Called immediately after after component creation\r\n */\r\nObjectAnimator.prototype.init = function() {\r\n  this.getEntity().on('playAnimateAlongCurve', this.animateAlongCurve, this);\r\n  this.getEntity().on('playAnimateToObject', this.animateToObject, this);\r\n  this.getEntity().on('playAnimateTranslation', this.animateTranslation, this);\r\n  this.getEntity().on('playAnimateRotation', this.animateRotation, this);\r\n  this.getEntity().on('playAnimateScale', this.animateScale, this);\r\n  this.getEntity().on('pauseCurveAnimation', this.onPauseCurveAnimation, this);\r\n  this.getEntity().on('unpauseCurveAnimation', this.onUnpauseCurveAnimation, this);\r\n  this.getEntity().on('stopCurveAnimation', this.stopCurveAnimation, this);\r\n\r\n  this.on('disable', this.onDisable, this );\r\n};\r\n\r\nObjectAnimator.prototype.shutdown = function() {\r\n  this.getEntity().off('playAnimateAlongCurve', this.animateAlongCurve, this);\r\n  this.getEntity().off('playAnimateToObject', this.animateToObject, this);\r\n  this.getEntity().off('playAnimateTranslation', this.animateTranslation, this);\r\n  this.getEntity().off('playAnimateRotation', this.animateRotation, this);\r\n  this.getEntity().off('playAnimateScale', this.animateScale, this);\r\n  this.getEntity().off('pauseCurveAnimation', this.onPauseCurveAnimation, this);\r\n  this.getEntity().off('unpauseCurveAnimation', this.onUnpauseCurveAnimation, this);\r\n  this.getEntity().off('stopCurveAnimation', this.stopCurveAnimation, this);\r\n\r\n  this.off('disable', this.onDisable, this );\r\n};\r\n\r\nObjectAnimator.prototype.onDisable = function() {\r\n  this.getThreeData().position.copy( this.getEntity().getPosition() );\r\n  this.getThreeData().quaternion.copy( this.getEntity().getQuaternion() );\r\n  this.getThreeData().scale.copy( this.getEntity().getScale() );\r\n};\r\n\r\nObjectAnimator.prototype.stopCurveAnimation = function(){\r\n  this.getEngine().off('update', this.curveAnim, this );\r\n  this.curveAnim = undefined;\r\n  // this.getEntity().trigger(\"endAnimateAlongCurve\"); //DO WE NEED TO CALL END ANIMATE IF IT NEVER REALLY HAPPENS???\r\n};\r\n\r\nObjectAnimator.prototype.animateAlongCurve = function(curveObjectId, animationTime, easeIn, easeOut, orientation, loop) {\r\n\r\n  function curveAnim( delta ) {\r\n    if ( !this.veroldEntity || !this.isEnabled() ) {\r\n      engine.off('update', this.curveAnim, this );\r\n      this.curveAnim = undefined;\r\n      return;\r\n    }\r\n    if(curveComponent && this.playingCurveAnimation) {\r\n      this.getEngine().needsRender = true;\r\n      currentTime += delta;\r\n      var currentTimePercent = currentTime / animationTime;\r\n      if ( currentTimePercent >= 1.0 ) {\r\n        currentTimePercent -= 1.0;\r\n      }\r\n      var easeOutStart = 1 - easeOut;\r\n\r\n      //Ease in\r\n      if (easeIn && currentTimePercent < easeIn ) {\r\n        var easeInProgress = currentTimePercent / easeIn;\r\n        curveProgressPercent += delta * fullSpeed / animationTime * (Math.cos( easeInProgress * Math.PI + Math.PI ) * 0.5 + 0.5);\r\n      }\r\n      //Ease out\r\n      else if (easeOut && currentTimePercent > easeOutStart) {\r\n        var easeOutProgress = 1.0 - (currentTimePercent - easeOutStart) / easeOut;\r\n        curveProgressPercent += delta * fullSpeed / animationTime * Math.max( Math.cos( easeOutProgress * Math.PI + Math.PI ) * 0.5 + 0.5, 0.0 );\r\n      }\r\n      //Full speed animation\r\n      else {\r\n        curveProgressPercent += delta * fullSpeed / animationTime;\r\n      }\r\n\r\n      //If the animation is finished\r\n      if (curveProgressPercent >= 1.0 || curveProgressPercent < 0.0) {\r\n        curveProgressPercent %= 1.0;\r\n        currentTime = 0.0;\r\n        if (!loop) {\r\n          curveProgressPercent = 0.99999999;\r\n          this.playingCurveAnimation = false;\r\n\r\n          this.getEngine().off('update', this.curveAnim, this );\r\n          this.curveAnim = undefined;\r\n        }\r\n        this.getEntity().trigger(\"endAnimateAlongCurve\");\r\n      }\r\n\r\n      var curve = curveComponent.curve;\r\n      var curveProgress_NodeRelative = curve.getUtoTmapping( curveProgressPercent );\r\n      threeData.position.copy( curve.getPoint( curveProgress_NodeRelative ) );\r\n\r\n      if ( orientation === \"toCurve\" ) {\r\n        var tangent = curve.getTangent( curveProgress_NodeRelative );\r\n        tempVector1.set(0,-1,0);\r\n        tempVector2.crossVectors( tangent, tempVector1 );\r\n        tempVector3.crossVectors( tangent, tempVector2 );\r\n        tempVector1.copy( threeData.position );\r\n        tempVector1.add( tangent );\r\n        tempMatrix.lookAt( threeData.position, tempVector1, tempVector3 );\r\n        threeData.quaternion.setFromRotationMatrix( tempMatrix );\r\n\r\n      } else if ( orientation === \"toNode\" ) {\r\n        var curveSegments;\r\n        if ( curveComponent.closed ) {\r\n          curveSegments = curve.points.length;\r\n        }\r\n        else {\r\n          curveSegments = curve.points.length - 1;\r\n        }\r\n        var prevNode = Math.floor( curveProgress_NodeRelative * curveSegments );\r\n        var nextNode = Math.ceil( curveProgress_NodeRelative * curveSegments ) % curve.points.length;\r\n\r\n        if ( prevNode !== currentPrevNode ) {\r\n          if ( prevNode > 0 ) {\r\n            curveComponent.controlPoints[ prevNode ].getQuaternionInWorldSpace( prevQuaternion );\r\n          }\r\n          else {\r\n            curveComponent.controlPoints[ 0 ].getQuaternionInWorldSpace( prevQuaternion );\r\n          }\r\n        }\r\n        if ( nextNode !== currentNextNode ) {\r\n          if ( nextNode > 0 ) {\r\n            curveComponent.controlPoints[ nextNode ].getQuaternionInWorldSpace( nextQuaternion );\r\n          }\r\n          else {\r\n            curveComponent.controlPoints[ 0 ].getQuaternionInWorldSpace( nextQuaternion );\r\n          }\r\n        }\r\n        var interp = curveProgress_NodeRelative * curveSegments - prevNode;\r\n        threeData.quaternion.copy( prevQuaternion );\r\n        threeData.quaternion.slerp( nextQuaternion, interp );\r\n      }\r\n    }\r\n  }\r\n  var that = this;\r\n  var curveComponent;\r\n  var curveObject;\r\n\r\n  if(curveObjectId) {\r\n    curveObject = this.getEngine().getEntityById(curveObjectId);\r\n    var components = curveObject.getComponentsByScriptId(\"curve_component\");\r\n    curveComponent = components[_.keys(components)[0]];\r\n  }\r\n  if ( !curveComponent ) {\r\n    return;\r\n  }\r\n\r\n  var threeData = this.getThreeData();\r\n  var engine = this.getEngine();\r\n  var currentTime = 0;\r\n  var curveProgressPercent = 0.0;\r\n\r\n  var tempVector1 = new THREE.Vector3();\r\n  var tempVector2 = new THREE.Vector3();\r\n  var tempVector3 = new THREE.Vector3();\r\n  var tempMatrix = new THREE.Matrix4();\r\n  var prevQuaternion = new THREE.Quaternion();\r\n  var nextQuaternion = new THREE.Quaternion();\r\n\r\n  if (easeIn + easeOut > 1.0) {\r\n    console.warn(\"Ease-In and Ease-Out value can't total more than 1.0.\");\r\n    easeIn = 0.5;\r\n    easeOut = 0.5;\r\n  }\r\n\r\n  var fullSpeedTime = 1.0 - easeIn - easeOut;\r\n  var fullSpeed = 1.0 / (easeIn / 2 + easeOut / 2 + fullSpeedTime );\r\n\r\n  if ( animationTime > 0) {\r\n    this.playingCurveAnimation = true;\r\n    var currentPrevNode = -1;\r\n    var currentNextNode = -1;\r\n    if ( curveComponent.isCurveInit() ) {\r\n      \r\n      this.curveAnim = curveAnim;\r\n      this.getEngine().on('update', this.curveAnim, this );\r\n\r\n    }\r\n    else {\r\n      curveComponent.on('curveInit', function() {\r\n        this.curveAnim = curveAnim;\r\n        that.getEngine().on('update', this.curveAnim, that );\r\n      }, this );\r\n    }\r\n  }\r\n};\r\n\r\nObjectAnimator.prototype.onPauseCurveAnimation = function() {\r\n  this.playingCurveAnimation = false;\r\n};\r\n\r\nObjectAnimator.prototype.onUnpauseCurveAnimation = function() {\r\n  this.playingCurveAnimation = true;\r\n};\r\n\r\nObjectAnimator.prototype.animateToObject = function(objectId, animationTime, easeIn, easeOut, orientation) {\r\n\r\n  var that = this;\r\n  var engine = this.getEngine();\r\n\r\n  function _animateTo( threeObject ) {\r\n\r\n    var entity_data = that.getThreeData();\r\n    var tempMatrix = new THREE.Matrix4();\r\n    var currTime = 0;\r\n    var curveProgressPercent = 0.0;\r\n\r\n    if (easeIn + easeOut > 1.0) {\r\n      console.warn(\"Ease-In and Ease-Out value can't total more than 1.0.\");\r\n      easeIn = 0.5;\r\n      easeOut = 0.5;\r\n    }\r\n\r\n    var fullSpeedTime = 1.0 - easeIn - easeOut;\r\n    var fullSpeed = 1.0 / (easeIn / 2 + easeOut / 2 + fullSpeedTime );\r\n    //var easeInDistance = easeIn * fullSpeed / 2.0;\r\n    //var easeOutDistance = easeOut * fullSpeed / 2.0;\r\n\r\n    var startPos = new THREE.Vector3();\r\n    var startQuat;\r\n    startPos.copy( entity_data.position );\r\n\r\n    var targetPosition = threeObject.position;\r\n    var targetQuaternion = threeObject.quaternion;\r\n\r\n    if ( targetQuaternion && orientation ) {\r\n      startQuat = new THREE.Quaternion();\r\n      startQuat.copy( entity_data.quaternion );\r\n    }\r\n    threeObject.updateMatrixWorld();\r\n    targetPosition.setFromMatrixPosition( threeObject.matrixWorld );\r\n    tempMatrix.extractRotation( threeObject.matrixWorld );\r\n    targetQuaternion.setFromRotationMatrix( tempMatrix );\r\n\r\n    if ( animationTime > 0) {\r\n      that.getEngine().on('update', function objAnim( delta ) {\r\n        if ( !this.veroldEntity || !this.isEnabled() ) {\r\n          engine.off('update', objAnim, this );\r\n          return;\r\n        }\r\n        that.getEngine().needsRender = true;\r\n        currTime += delta;\r\n        var currentTimePercent = currTime/animationTime;\r\n        var easeOutStart = 1 - easeOut;\r\n\r\n        //Ease in\r\n        if (easeIn && currentTimePercent < easeIn) {\r\n          var easeInProgress = currentTimePercent / easeIn;\r\n          curveProgressPercent += delta * fullSpeed / animationTime * (Math.cos( easeInProgress * Math.PI + Math.PI ) * 0.5 + 0.5);\r\n        }\r\n        //Ease out\r\n        else if ( easeOut && currentTimePercent > easeOutStart ) {\r\n          var easeOutProgress = 1.0 - (currentTimePercent - easeOutStart) / easeOut;\r\n          curveProgressPercent += delta * fullSpeed / animationTime * Math.max( Math.cos( easeOutProgress * Math.PI + Math.PI ) * 0.5 + 0.5, 0.0 );\r\n        }\r\n        //Full speed animation\r\n        else {\r\n          curveProgressPercent += delta * fullSpeed / animationTime;\r\n        }\r\n        //clamp at 1\r\n        curveProgressPercent = Math.min( curveProgressPercent, 1.0 );\r\n\r\n        if(curveProgressPercent >= 1.0 || curveProgressPercent < 0.0) {\r\n          that.getEngine().off('update', objAnim, that );\r\n          that.getEntity().trigger('endAnimateToObject');\r\n        }\r\n\r\n        entity_data.position.copy( startPos );\r\n        entity_data.position.lerp( targetPosition, curveProgressPercent );\r\n        if ( targetQuaternion && orientation ) {\r\n          entity_data.quaternion.copy( startQuat );\r\n          entity_data.quaternion.slerp( targetQuaternion, curveProgressPercent );\r\n        }\r\n      }, that );\r\n    } else {\r\n      entity_data.position.copy( targetPosition );\r\n      if ( targetQuaternion ) {\r\n        entity_data.quaternion.copy( targetQuaternion );\r\n      }\r\n\r\n      //complete\r\n      that.getEntity().trigger('endAnimateToObject');\r\n    }\r\n  }\r\n\r\n  var object = this.getEngine().getEntityById( objectId );\r\n  if ( object.threeData ) {\r\n    _animateTo( object.threeData );\r\n  }\r\n  else {\r\n    object.once('load_base', function() {\r\n      _animateTo( object.threeData );\r\n    }, this );\r\n    object.load();\r\n  }\r\n};\r\n\r\nObjectAnimator.prototype.animateTranslation = function( animationTime, easeIn, easeOut, velocity, objectUsage ) {\r\n\r\n  var threeData = this.getThreeData();\r\n  threeData.position.copy( this.getEntity().getPosition() );\r\n  threeData.quaternion.copy( this.getEntity().getQuaternion() );\r\n  threeData.scale.copy( this.getEntity().getScale() );\r\n\r\n  var currTime = 0;\r\n  var engine = this.getEngine();\r\n\r\n  if (easeIn + easeOut > 1.0) {\r\n    console.warn(\"Ease-In and Ease-Out value can't total more than 1.0.\");\r\n    easeIn = 0.5;\r\n    easeOut = 0.5;\r\n  }\r\n\r\n  var easeInTime = animationTime * easeIn;\r\n  // var easeOutTime = animationTime * easeOut;\r\n\r\n  var currentVelocity = new THREE.Vector3();\r\n  var direction = new THREE.Vector3();\r\n  direction.copy( velocity );\r\n  var speed = direction.length();\r\n  threeData.updateMatrixWorld();\r\n  // threeData.updateMatrix();\r\n  direction.applyQuaternion( threeData.quaternion );\r\n  direction.normalize();\r\n\r\n  if ( objectUsage ) {\r\n    var fullSpeedTime = (1.0 - easeIn - easeOut) * animationTime;\r\n    var halfSpeedTime = (easeIn + easeOut) * 0.5 * animationTime;\r\n    //Based on the object usage, set the original position so that the\r\n    //animation plays forward from there...\r\n    if ( objectUsage === \"middle\" ) {\r\n      //postiion - velocity * time * 0.5\r\n      currentVelocity.copy( velocity );\r\n      currentVelocity.multiplyScalar( -0.5 * ( fullSpeedTime + halfSpeedTime ) );\r\n      threeData.position.add( currentVelocity );\r\n    }\r\n    else if ( objectUsage === \"end\" ) {\r\n      currentVelocity.copy( velocity );\r\n      currentVelocity.multiplyScalar( -1.0 * ( fullSpeedTime + halfSpeedTime ) );\r\n      threeData.position.add( currentVelocity );\r\n    }\r\n  }\r\n\r\n  if ( animationTime > 0) {\r\n    this.getEngine().on('update', function objAnim( delta ) {\r\n      if ( !this.veroldEntity || !this.isEnabled() ) {\r\n        engine.off('update', objAnim, this );\r\n        return;\r\n      }\r\n      currentVelocity.copy( direction );\r\n\r\n      this.getEngine().needsRender = true;\r\n      currTime += delta;\r\n      var currentTimePercent = Math.min( currTime / animationTime, 1.0 );//clamp to 100%\r\n      var easeOutStart = (1.0 - easeOut);\r\n      var easeOutStartTime = animationTime * easeOutStart;\r\n\r\n      //Ease in\r\n      if (easeIn && currTime < easeInTime ) {\r\n        var easeInProgress = currentTimePercent / easeIn;\r\n        currentVelocity.multiplyScalar( delta * speed * (Math.cos( easeInProgress * Math.PI + Math.PI ) * 0.5 + 0.5) );\r\n      }\r\n      //Ease out\r\n      else if ( easeOut && currTime > easeOutStartTime ) {\r\n        var easeOutProgress = 1.0 - (currentTimePercent - easeOutStart) / easeOut;\r\n        currentVelocity.multiplyScalar( delta * speed * Math.max( Math.cos( easeOutProgress * Math.PI + Math.PI ) * 0.5 + 0.5, 0.0 ) );\r\n      }\r\n      //Full speed animation\r\n      else {\r\n        currentVelocity.multiplyScalar( delta * speed );\r\n      }\r\n\r\n      if( currTime >= animationTime ) {\r\n        this.getEngine().off('update', objAnim, this );\r\n        this.getEntity().trigger('endAnimateTranslation');\r\n      }\r\n\r\n      threeData.position.add( currentVelocity );\r\n\r\n    }, this );\r\n  }\r\n\r\n};\r\n\r\nObjectAnimator.prototype.animateRotation = function( animationTime, easeIn, easeOut, velocity, objectUsage, axisOrder ) {\r\n\r\n  var threeData = this.getThreeData();\r\n  threeData.position.copy( this.getEntity().getPosition() );\r\n  threeData.quaternion.copy( this.getEntity().getQuaternion() );\r\n  threeData.scale.copy( this.getEntity().getScale() );\r\n\r\n  var currTime = 0;\r\n  var engine = this.getEngine();\r\n\r\n  if (easeIn + easeOut > 1.0) {\r\n    console.warn(\"Ease-In and Ease-Out value can't total more than 1.0.\");\r\n    easeIn = 0.5;\r\n    easeOut = 0.5;\r\n  }\r\n\r\n  var easeInTime = animationTime * easeIn;\r\n  // var easeOutTime = animationTime * easeOut;\r\n  var currentVelocity = new THREE.Quaternion();\r\n  var fullSpeedQuat = new THREE.Quaternion();\r\n\r\n  var tempVector1 = new THREE.Vector3();\r\n  var eulerVelocity = new THREE.Euler( axisOrder );\r\n  eulerVelocity.set( velocity.x, velocity.y, velocity.z );\r\n  //Convert the euler angles to quaternion\r\n  currentVelocity.setFromEuler( eulerVelocity );\r\n  fullSpeedQuat.copy( currentVelocity );\r\n\r\n  threeData.updateMatrixWorld();\r\n\r\n  if ( objectUsage ) {\r\n    var fullSpeedTime = (1.0 - easeIn - easeOut) * animationTime;\r\n    var halfSpeedTime = (easeIn + easeOut) * 0.5 * animationTime;\r\n    //Based on the object usage, set the original rotation so that the\r\n    //animation plays forward from there...\r\n    if ( objectUsage === \"middle\" ) {\r\n      //postiion - velocity * time * 0.5\r\n      tempVector1.copy( velocity );\r\n      tempVector1.multiplyScalar( -0.5 * ( fullSpeedTime + halfSpeedTime ) );\r\n      eulerVelocity.set( tempVector1.x, tempVector1.y, tempVector1.z );\r\n      currentVelocity.setFromEuler( eulerVelocity );\r\n      threeData.quaternion.multiply( currentVelocity );\r\n    }\r\n    else if ( objectUsage === \"end\" ) {\r\n      tempVector1.copy( velocity );\r\n      tempVector1.multiplyScalar( -1.0 * ( fullSpeedTime + halfSpeedTime ) );\r\n      eulerVelocity.set( tempVector1.x, tempVector1.y, tempVector1.z );\r\n      currentVelocity.setFromEuler( eulerVelocity );\r\n      threeData.quaternion.multiply( currentVelocity );\r\n    }\r\n  }\r\n\r\n  if ( animationTime > 0) {\r\n    this.getEngine().on('update', function objAnim( delta ) {\r\n      if ( !this.veroldEntity || !this.isEnabled() ) {\r\n        engine.off('update', objAnim, this );\r\n        return;\r\n      }\r\n      var speed = 1.0;\r\n\r\n      this.getEngine().needsRender = true;\r\n      currTime += delta;\r\n      var currentTimePercent = Math.min( currTime / animationTime, 1.0 );\r\n      var easeOutStart = (1.0 - easeOut);\r\n      var easeOutStartTime = animationTime * easeOutStart;\r\n\r\n      //Ease in\r\n      if (easeIn && currTime < easeInTime ) {\r\n        var easeInProgress = currentTimePercent / easeIn;\r\n        speed *= delta * (Math.cos( easeInProgress * Math.PI + Math.PI ) * 0.5 + 0.5);\r\n      }\r\n      //Ease out\r\n      else if ( easeOut && currTime > easeOutStartTime ) {\r\n        var easeOutProgress = 1.0 - (currentTimePercent - easeOutStart) / easeOut;\r\n        speed *= delta * Math.max( Math.cos( easeOutProgress * Math.PI + Math.PI ) * 0.5 + 0.5, 0.0 );\r\n      }\r\n      //Full speed animation\r\n      else {\r\n        speed *= delta;\r\n      }\r\n\r\n      if( currTime >= animationTime ) {\r\n        this.getEngine().off('update', objAnim, this );\r\n        this.getEntity().trigger('endAnimateTranslation');\r\n      }\r\n      currentVelocity.set( 0.0, 0.0, 0.0, 1.0 );\r\n      currentVelocity.slerp( fullSpeedQuat, speed );\r\n      threeData.quaternion.multiply( currentVelocity );\r\n\r\n    }, this );\r\n  }\r\n\r\n};\r\n\r\nObjectAnimator.prototype.animateScale = function( animationTime, easeIn, easeOut, velocity, objectUsage ) {\r\n\r\n  var threeData = this.getThreeData();\r\n  threeData.position.copy( this.getEntity().getPosition() );\r\n  threeData.quaternion.copy( this.getEntity().getQuaternion() );\r\n  threeData.scale.copy( this.getEntity().getScale() );\r\n\r\n  var currTime = 0;\r\n  var engine = this.getEngine();\r\n\r\n  if (easeIn + easeOut > 1.0) {\r\n    console.warn(\"Ease-In and Ease-Out value can't total more than 1.0.\");\r\n    easeIn = 0.5;\r\n    easeOut = 0.5;\r\n  }\r\n\r\n  var easeInTime = animationTime * easeIn;\r\n  // var easeOutTime = animationTime * easeOut;\r\n\r\n  var currentVelocity = new THREE.Vector3();\r\n  threeData.updateMatrixWorld();\r\n\r\n  if ( objectUsage ) {\r\n    var fullSpeedTime = (1.0 - easeIn - easeOut) * animationTime;\r\n    var halfSpeedTime = (easeIn + easeOut) * 0.5 * animationTime;\r\n    //Based on the object usage, set the original scale so that the\r\n    //animation plays forward from there...\r\n    if ( objectUsage === \"middle\" ) {\r\n      //postiion - velocity * time * 0.5\r\n      currentVelocity.copy( velocity );\r\n      currentVelocity.multiplyScalar( -0.5 * ( fullSpeedTime + halfSpeedTime ) );\r\n      threeData.scale.add( currentVelocity );\r\n    }\r\n    else if ( objectUsage === \"end\" ) {\r\n      currentVelocity.copy( velocity );\r\n      currentVelocity.multiplyScalar( -1.0 * ( fullSpeedTime + halfSpeedTime ) );\r\n      threeData.scale.add( currentVelocity );\r\n    }\r\n  }\r\n\r\n  if ( animationTime > 0) {\r\n    this.getEngine().on('update', function objAnim( delta ) {\r\n      if ( !this.veroldEntity || !this.isEnabled() ) {\r\n        engine.off('update', objAnim, this );\r\n        return;\r\n      }\r\n      currentVelocity.copy( velocity );\r\n\r\n      this.getEngine().needsRender = true;\r\n      currTime += delta;\r\n      var currentTimePercent = Math.min( currTime / animationTime, 1.0 );//clamp to 100%\r\n      var easeOutStart = (1.0 - easeOut);\r\n      var easeOutStartTime = animationTime * easeOutStart;\r\n\r\n      //Ease in\r\n      if (easeIn && currTime < easeInTime ) {\r\n        var easeInProgress = currentTimePercent / easeIn;\r\n        currentVelocity.multiplyScalar( delta * (Math.cos( easeInProgress * Math.PI + Math.PI ) * 0.5 + 0.5) );\r\n      }\r\n      //Ease out\r\n      else if ( easeOut && currTime > easeOutStartTime ) {\r\n        var easeOutProgress = 1.0 - (currentTimePercent - easeOutStart) / easeOut;\r\n        currentVelocity.multiplyScalar( delta * Math.max( Math.cos( easeOutProgress * Math.PI + Math.PI ) * 0.5 + 0.5, 0.0 ) );\r\n      }\r\n      //Full speed animation\r\n      else {\r\n        currentVelocity.multiplyScalar( delta );\r\n      }\r\n\r\n      if( currTime >= animationTime ) {\r\n        this.getEngine().off('update', objAnim, this );\r\n        this.getEntity().trigger('endAnimateTranslation');\r\n      }\r\n\r\n      threeData.scale.add( currentVelocity );\r\n\r\n    }, this );\r\n  }\r\n\r\n};\r\n\r\nreturn ObjectAnimator;\r\n"}),define("text!VeroldEngine/Components/BuiltIn/Annotation.js",[],function(){return"/*\r\n@vname Annotation\r\n@vdescription A way of putting notes or descriptions into your scenes. Places a pin and tag. Hides when obscured by other objects\r\n@vfilter object\r\n@vcategory Annotation\r\n@vattr string Title { \r\n  default : 'Annotation Title', \r\n  description : 'Title to display on the annotation tag' \r\n}\r\n@vattr string Description {\r\n  'default' : 'A description for your Annotation',\r\n  'description' : 'The description to display on your tag'\r\n}\r\n@vattr bool ShowDescription {\r\n  'default': false,\r\n  'description': 'whether or not we show the description for the tag'\r\n}\r\n@vattr bool ShowLine {\r\n  'default': true,\r\n  'description': 'Whether or not we show the line'\r\n}\r\n@vattr custom Pin {\r\n  'description' : 'properties of the pin',\r\n  'attributes' : {\r\n    'visible' : { 'type' : 'b', 'name' : 'Visible', 'description' : 'If enabled, a pin object exists in the scene', 'default' : false },\r\n    'autoScale' : { 'type' : 'b', 'name' : 'Visible', 'description' : 'If enabled, the pin will scale to always be easily selected', 'default' : true },\r\n    'material' : { 'type': 'asset', 'name': 'Material', 'description': 'The material to color the pin with.', 'default': null, 'filter': { 'material': true } }\r\n  }\r\n}\r\n@vattr custom Colors {\r\n  'description' : 'Use some preset styles created by us, or use your own!',\r\n  'attributes' : {\r\n    'styles': {\r\n      'type': 'dd',\r\n      default: 2,\r\n      'options': { 'Light 1': 0, 'Light 2': 1, 'Dark 1' : 2, 'Dark 2' : 3, 'Vibrant 1' : 4, 'Vibrant 2' : 5},\r\n      'description': 'Pick the style you want the Annotation to use',\r\n      'advanced': false\r\n    },\r\n  }\r\n}\r\n@vevent local showAnnotation {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local showAnnotationPin {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local showAnnotationLine {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local showAnnotationDescription {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local showAnnotationTag {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local hideAnnotation {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local hideAnnotationPin {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local hideAnnotationLine {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local hideAnnotationDescription {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local hideAnnotationTag {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local toggleAnnotation {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local enableAnnotation {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local disableAnnotation {'scope' : 'local', 'action':true, 'category':'Annotation', 'parameters' : []}\r\n@vevent local changeAnnotationPinMaterial {'scope' : 'local', 'action':true, 'category':'Annotation', \r\n  'parameters' : [\r\n      {'name': 'MaterialAsset', 'type': 'asset','description': 'The material to color the pin head with.','default': null, 'filter': { 'material': true } }\r\n    ]\r\n  }\r\n*/\r\n/* global VAPI */\r\nfunction css (el, key, value) {\r\n  // if args length is 3, then el, property, value\r\n  if (!el || !el.style) {\r\n    return;\r\n  }\r\n\r\n  if(typeof key !== 'string') {\r\n    Object.keys(key).forEach(function(styleKey){\r\n      el.style[styleKey] = key[styleKey]; \r\n    });\r\n  }\r\n  else {\r\n    el.style[key] = value; \r\n  }\r\n}\r\n\r\nfunction addClass(el, className) {\r\n  if (el.classList) {\r\n    el.classList.add(className);\r\n  } else {\r\n    el.className += ' ' + className;\r\n  }\r\n}\r\n\r\nfunction showEl(el, duration) {\r\n  el.style.display = '';\r\n}\r\n\r\nfunction hideEl(el, duration) {\r\n  el.style.display = 'none';\r\n}\r\n\r\nfunction toggleEl(el, duration) {\r\n  el.style.display = el.style.display === '' ? 'none' : '';\r\n}\r\n\r\n//filter for use with intersects only!\r\nfunction canHideFilter (obj){\r\n  \r\n  var visible = obj.object.visible;\r\n  //also check material on object\r\n  if(visible) {\r\n    var mat = obj.object.material;\r\n    //check for mesh face material\r\n    if(mat instanceof THREE.MeshFaceMaterial){\r\n      for(var i = 0; i<mat.materials.length; ++i){\r\n        if(mat.materials[i].uniforms && mat.materials[i].uniforms.colorOpacity) {\r\n          visible = mat.materials[i].uniforms.colorOpacity.value > 0.001;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if(mat.uniforms && mat.uniforms.colorOpacity) {\r\n        visible = mat.uniforms.colorOpacity.value > 0.001;//this is our zero value clamp\r\n      }\r\n    }\r\n  }\r\n  //if STILL visible must traverse parents to check visibility, as well. :[\r\n  if(visible) {\r\n    obj.object.traverseAncestors(function(parent){\r\n      if(!parent.visible) { \r\n        visible = false;\r\n      }\r\n    });\r\n  }\r\n  return visible;\r\n}\r\n\r\nfunction Annotation() {\r\n  //how many steps we've made before we do a raycast\r\n  this.nRaySteps = 0;\r\n  this.bCreated = false;\r\n  //if an object is in a selected state, do not show the labels!\r\n  this.bObjectSelected = false;\r\n  //used to update attributes\r\n  this.bNeedsUpdate = false;\r\n\r\n  this.pinObject = null;\r\n\r\n  this.camera = null;\r\n  this.tempVec = new THREE.Vector3();\r\n  this.posVec = new THREE.Vector3();\r\n  this.worldPosVec = new THREE.Vector3();\r\n  this.tempMatrix = new THREE.Matrix4();\r\n  //html elements to display\r\n  this.el = null;\r\n  this.desc = null;\r\n  this.title = null;\r\n  this.line = null;\r\n  this.cap = null;\r\n\r\n  this.bgColor = '#323232';\r\n\r\n  this.Offset = new THREE.Vector2(0, 0.1);\r\n\r\n  //renderer element reference for percentage based offsets!\r\n  this.renderContainer = null;\r\n\r\n  //for calculating offsets for dragging!\r\n  this.bIsEditor = false;\r\n  this.bDragging = false;\r\n  this.vOffset = null;\r\n  this.vWorldPos = null;\r\n\r\n  this.m_bTagIsVisible = true;\r\n  this.bSceneLoaded = false;//if in editor, this will be true\r\n  this.bCanvasDrag = false;\r\n\r\n  //keep track of these to stop recalculation of styles\r\n  this.offsetWidth = 0;\r\n  this.offsetHeight = 0;\r\n  this.elOffsetWidth = 0;\r\n  this.elOffsetHeight = 0;\r\n  //check to see if lies in camera FOV\r\n  this.isInFOV = true;\r\n  //for css for line\r\n  this.lineCSSObj = null;\r\n  this.elCSSObj = null;\r\n\r\n  this.intersects = [];\r\n\r\n  this.tempWorldPos = new THREE.Vector3();\r\n  this.camForward = new THREE.Vector3();\r\n\r\n  this.DVP = window.devicePixelRatio || 1;\r\n\r\n  this.dragStartX = 0;\r\n  this.dragStartY = 0;\r\n}\r\n\r\nAnnotation.EL_CSS = {\r\n  'position': 'absolute',\r\n  'left': 0,\r\n  'top': 0,\r\n  'padding': '8px',\r\n  'border-radius': '5px',\r\n  'font-family': 'proxima_nova_regular,Helvetica,Arial,sans-serif',\r\n  'max-width' : '25%',\r\n  'min-width' : '25px',\r\n  'transition': 'opacity 0.1s ease-in-out, background 0.1s ease-in-out',\r\n  'cursor' : 'pointer',\r\n  'display' : 'none'\r\n};\r\n\r\nAnnotation.TEXT_CSS = {\r\n  'color': '#fff',\r\n  'font-family': 'proxima_nova_regular,Helvetica,Arial,sans-serif',\r\n  'word-wrap':'break-word',\r\n  '-webkit-touch-callout': 'none',\r\n  '-webkit-user-select': 'none',\r\n  '-khtml-user-select': 'none',\r\n  '-moz-user-select': 'none',\r\n  '-ms-user-select': 'none',\r\n  'user-select': 'none',\r\n  'pointer-events' : 'none',\r\n  'line-height' : '115%',\r\n  'font-size' : '1.8vmin'  //1.8vmax for mobile, 1.8vmin for desktop\r\n};\r\n\r\nAnnotation.LINE_CSS = {\r\n  'height' : '1px',\r\n  'position' : 'absolute',\r\n  'border-radius': '10px',\r\n  'pointer-events' : 'none',\r\n  'transform-origin': '0 50%',\r\n  'transition': 'opacity 0.1s ease-in-out',\r\n  'border-left-style' : 'none',\r\n  'display' : 'none',\r\n  '-webkit-touch-callout': 'none',\r\n  '-webkit-user-select': 'none',\r\n  '-khtml-user-select': 'none',\r\n  '-moz-user-select': 'none',\r\n  '-ms-user-select': 'none',\r\n  'user-select': 'none'\r\n};\r\n\r\nAnnotation.CAP_CSS = {\r\n  'transform-origin': '50% 50%',\r\n  'padding': '2.5px',\r\n  'border-radius': '3px',\r\n  'pointer-events' : 'none',\r\n  'position' : 'absolute',\r\n  'left' : '-2.5px',\r\n  'top' : '-2.5px',\r\n  '-webkit-touch-callout': 'none',\r\n  '-webkit-user-select': 'none',\r\n  '-khtml-user-select': 'none',\r\n  '-moz-user-select': 'none',\r\n  '-ms-user-select': 'none',\r\n  'user-select': 'none'\r\n};\r\n\r\nAnnotation.ELLIPSE_CSS = {\r\n  'position' : 'absolute',\r\n  'right' : '10px',\r\n  'top' : '0px',\r\n  'font-size' : '18px',\r\n  '-webkit-touch-callout': 'none',\r\n  '-webkit-user-select': 'none',\r\n  '-khtml-user-select': 'none',\r\n  '-moz-user-select': 'none',\r\n  '-ms-user-select': 'none',\r\n  'user-select': 'none',\r\n  'pointer-events' : 'none'\r\n};\r\n\r\nAnnotation.StylePresets = [\r\n  { 'bg': '#111', 'color': '#fff' },\r\n  { 'bg': 'rgba(0,0,0,0.6)', 'color': '#fff' },\r\n  { 'bg': '#111', 'color': '#59cfe4' },\r\n  { 'bg': 'rgba(0,0,0,0.6)', 'color': '#59cfe4' },\r\n  { 'bg': '#fff', 'color': '#222' },\r\n  { 'bg': 'rgba(255,255,255,0.6)', 'color': '#222' }\r\n];\r\n\r\nAnnotation.prototype = new VAPI.VeroldComponent();\r\n\r\nAnnotation.prototype.css = function (el, key, value) {\r\n  // if args length is 3, then el, property, value\r\n  if (!el || !el.style) {\r\n    return;\r\n  }\r\n\r\n  if(typeof key !== 'string') {\r\n    for(var styleKey in key){\r\n      el.style[styleKey] = key[styleKey];\r\n    }\r\n  }\r\n  else {\r\n    el.style[key] = value; \r\n  }\r\n};\r\n/************   START EDITOR RELATED THINGS  *******************/\r\nAnnotation.prototype.editorInit = function() {\r\n\r\n  this.bIsEditor = true;\r\n  this.bSceneLoaded = true;\r\n\r\n  if ( this.getThreeData() ) {\r\n    this.objectCreated();\r\n  }\r\n  else {\r\n    this.getEntity().once('load_base', this.objectCreated, this );\r\n  }\r\n\r\n  this.listenTo(this.getEngine(), 'preRenderView', this.preRenderView.bind(this));\r\n\r\n  //hide and show lables on selection in the studio\r\n  this.listenTo(this.getEngine().globalEvents, 'studioApp::selectObject', this.hideNote.bind(this, true));\r\n  this.listenTo(this.getEngine().globalEvents, 'studioApp::clearSelection', this.showNote.bind(this, false));\r\n};\r\n\r\nAnnotation.prototype.editorShutdown = function() {\r\n  this.shutdown();\r\n};\r\n\r\nAnnotation.prototype.editorStartDrag = function(event, ui){\r\n  this.bDragging = true;  \r\n  //firefox needs this to 'init' the drag event\r\n  event.dataTransfer.setData('Text', this.id);\r\n  this.dragStartX = this.el.offsetLeft - event.pageX;\r\n  this.dragStartY = this.el.offsetTop - event.pageY;\r\n};\r\n\r\n//get offset percentages\r\nAnnotation.prototype.editorDrag = function(event, ui){\r\n\r\nif(!this.bDragging)return;\r\n\r\n  var pageX = event.pageX;\r\n  var pageY = event.pageY;\r\n\r\n  //renderContainer\r\n  var left = this.dragStartX + pageX,\r\n      top = this.dragStartY + pageY;\r\n\r\n  this.Offset.x = (left - this.vWorldPos.x + this.elOffsetWidth*0.5) / this.offsetWidth;\r\n  this.Offset.y = (this.vWorldPos.y - top - this.elOffsetHeight*0.5) / this.offsetHeight;\r\n\r\n};\r\n\r\nAnnotation.prototype.editorEndDrag = function(event, ui) {\r\n  this.bDragging = false;\r\n\r\n  var update = { components : {  } };\r\n  update.components[this.getId()] = { componentData : { } };\r\n  update.components[this.getId()].componentData.Offset = { x : this.Offset.x, y : this.Offset.y };\r\n  \r\n  this.getEntity().set(update, { save : true });\r\n};\r\n/**************** ***********************************************/\r\n\r\n//events in here for the event handler stuff!\r\nAnnotation.prototype.init = function(){\r\n  \r\n  if(window.VAPI && window.VAPI.isMobile()){\r\n    Annotation.TEXT_CSS['font-size'] = '1.8vmax';\r\n  }\r\n  //showing\r\n  this.listenTo(this.getEntity(), 'showAnnotation', this.setAllVis.bind(this, true));\r\n  this.listenTo(this.getEntity(), 'showAnnotationDescription', this.setDescriptionVis.bind(this, true));\r\n  this.listenTo(this.getEntity(), 'showAnnotationLine', this.setLineVis.bind(this, true));\r\n  this.listenTo(this.getEntity(), 'showAnnotationPin', this.setPinVis.bind(this, true));\r\n  this.listenTo(this.getEntity(), 'showAnnotationTag', this.setTagVis.bind(this, true));\r\n  //hiding\r\n  this.listenTo(this.getEntity(), 'hideAnnotation', this.setAllVis.bind(this, false));\r\n  this.listenTo(this.getEntity(), 'hideAnnotationDescription', this.setDescriptionVis.bind(this, false));\r\n  this.listenTo(this.getEntity(), 'hideAnnotationLine', this.setLineVis.bind(this, false));\r\n  this.listenTo(this.getEntity(), 'hideAnnotationPin', this.setPinVis.bind(this, false));\r\n  this.listenTo(this.getEntity(), 'hideAnnotationTag', this.setTagVis.bind(this, false));\r\n  //events to change some stuffs!\r\n  this.listenTo(this.getEntity(), 'changeAnnotationPinMaterial', this.setPinMaterial.bind(this));\r\n  this.listenTo(this.getEntity(), 'toggleAnnotation', this.toggleVisibility.bind(this));\r\n  this.listenTo(this.getEntity(), 'enableAnnotation', this.onEnable.bind(this));\r\n  this.listenTo(this.getEntity(), 'disableAnnotation', this.onDisable.bind(this));\r\n\r\n  /*  TESTING   */\r\n  this.listenTo(this.getEvents(), 'showAnnotation', this.setAllVis.bind(this, true));\r\n  this.listenTo(this.getEvents(), 'showAnnotationDescription', this.setDescriptionVis.bind(this, true));\r\n  this.listenTo(this.getEvents(), 'showAnnotationLine', this.setLineVis.bind(this, true));\r\n  this.listenTo(this.getEvents(), 'showAnnotationPin', this.setPinVis.bind(this, true));\r\n  this.listenTo(this.getEvents(), 'showAnnotationTag', this.setTagVis.bind(this, true));\r\n  //hiding\r\n  this.listenTo(this.getEvents(), 'hideAnnotation', this.setAllVis.bind(this, false));\r\n  this.listenTo(this.getEvents(), 'hideAnnotationDescription', this.setDescriptionVis.bind(this, false));\r\n  this.listenTo(this.getEvents(), 'hideAnnotationLine', this.setLineVis.bind(this, false));\r\n  this.listenTo(this.getEvents(), 'hideAnnotationPin', this.setPinVis.bind(this, false));\r\n  this.listenTo(this.getEvents(), 'hideAnnotationTag', this.setTagVis.bind(this, false));\r\n  //events to change some stuffs!\r\n  this.listenTo(this.getEvents(), 'changeAnnotationPinMaterial', this.setPinMaterial.bind(this));\r\n  this.listenTo(this.getEvents(), 'toggleAnnotation', this.toggleVisibility.bind(this));\r\n  this.listenTo(this.getEvents(), 'enableAnnotation', this.onEnable.bind(this));\r\n  this.listenTo(this.getEvents(), 'disableAnnotation', this.onDisable.bind(this));\r\n};\r\n\r\n/************  events listener functions    *****************/\r\nAnnotation.prototype.setDescriptionVis = function(visible){\r\n  this.ShowDescription = visible;\r\n  this.bNeedsUpdate = true;\r\n};\r\n\r\nAnnotation.prototype.setLineVis = function(visible){\r\n  this.ShowLine = visible;\r\n  this.bNeedsUpdate = true;\r\n};\r\n\r\nAnnotation.prototype.setPinVis = function(visible){\r\n  this.Pin.visible = visible;\r\n  this.bNeedsUpdate = true;\r\n};\r\n\r\nAnnotation.prototype.setTagVis = function(visible){\r\n  this.setLineVis(visible);\r\n  this.setTagVisibility(visible);\r\n  this.bNeedsUpdate = true;\r\n};\r\n\r\nAnnotation.prototype.setAllVis = function(visible){\r\n  this.setTagVis(visible);\r\n  this.setDescriptionVis(visible);\r\n  this.setLineVis(visible);\r\n  this.setPinVis(visible);\r\n};\r\n\r\nAnnotation.prototype.setTagVisibility = function(visible){\r\n  this.m_bTagIsVisible = visible;\r\n  this.bNeedsUpdate = true;\r\n};\r\n\r\nAnnotation.prototype.toggleVisibility = function(){\r\n  this.setAllVis(!this.pinObject.visible);\r\n};\r\n\r\n//triggered from the external events system\r\nAnnotation.prototype.setPinMaterial = function(material){\r\n\r\n  var mat = this.getAssetRegistry().getAssetById(material);\r\n\r\n  if(mat && this.pinObject){\r\n    this.listenToOnce(mat, 'load', function(){\r\n      this.pinObject.children[0].material = mat.threeData.static;\r\n      this.pinObject.children[1].material = mat.threeData.static;\r\n    }.bind(this));\r\n    mat.load();\r\n  }\r\n};\r\n\r\nAnnotation.prototype.onDisable = function(){\r\n  this.disable();\r\n  this.bNeedsUpdate = true;\r\n};\r\n\r\nAnnotation.prototype.onEnable = function(){\r\n  this.enable();\r\n  this.bNeedsUpdate = true;\r\n};\r\n/****************************************************************/\r\n\r\nAnnotation.prototype.objectCreated = function() {\r\n\r\n  window.setTimeout(this.createPrimPin.bind(this), 500);\r\n\r\n  this.renderContainer = this.getThreeRenderer().domElement.parentElement;\r\n\r\n  this.offsetWidth = this.renderContainer.offsetWidth;\r\n  this.offsetHeight = this.renderContainer.offsetHeight;\r\n\r\n  var zIndex = (this.renderContainer.style['z-index'] << 0) + (this.bIsEditor ? 1 : 0);\r\n\r\n  //creation of elements for storing title and description\r\n  this.el = document.createElement('div');\r\n  addClass(this.el, 'annotation-el');\r\n  this.css(this.el, Annotation.EL_CSS);\r\n  this.css(this.el, 'z-index', zIndex);\r\n\r\n  this.title = document.createElement('div');\r\n  addClass(this.title, 'annotation-title');\r\n  this.css(this.title, Annotation.TEXT_CSS);\r\n  this.css(this.title, 'font-weight', 'bold');\r\n  this.css(this.title, 'max-width', '200px');\r\n  this.css(this.title, 'padding', '0 10px 0 5px');\r\n\r\n  this.el.appendChild(this.title);\r\n\r\n  this.desc = document.createElement('div');\r\n  addClass(this.desc, 'annotation-desc');\r\n  this.css(this.desc, Annotation.TEXT_CSS);\r\n  this.css(this.desc, 'font-weight', 'normal');\r\n  this.css(this.desc, 'max-width', '250px');\r\n  this.css(this.desc, 'padding', '0 0 0 5px');\r\n\r\n  this.el.appendChild(this.desc);\r\n\r\n  //the line that draws to the pin, from the box\r\n  this.line = document.createElement('div');\r\n  addClass(this.line, 'annotation-line');\r\n  this.css(this.line, Annotation.LINE_CSS);\r\n  this.css(this.line, 'z-index', zIndex);\r\n\r\n  this.renderContainer.appendChild(this.line);\r\n  this.renderContainer.appendChild(this.el);\r\n\r\n  //add cap to line!\r\n  this.cap = document.createElement('div');\r\n  addClass(this.cap, 'annotation-cap');\r\n  this.css(this.cap, Annotation.CAP_CSS);\r\n  this.css(this.cap, 'z-index', zIndex);\r\n  this.line.appendChild(this.cap);\r\n\r\n  this.bCreated = true;\r\n  this.bNeedsUpdate = true;\r\n\r\n  //create global annotation raycaster!\r\n  if(!VAPI.AnnotationCaster){\r\n    VAPI.AnnotationCaster = new THREE.Raycaster();\r\n    VAPI.AnnotationCaster.STEPS = 15;\r\n  }\r\n\r\n  this.ellipsis = document.createElement('div');\r\n  addClass(this.ellipsis, 'annotation-ellips');\r\n  this.ellipsis.innerHTML = '...';\r\n  this.css(this.ellipsis, Annotation.ELLIPSE_CSS);\r\n  this.el.appendChild(this.ellipsis);\r\n\r\n\r\n  this.onHoverIn = this.onHoverIn.bind(this);\r\n  this.onHoverOut = this.onHoverOut.bind(this);\r\n\r\n  this.el.addEventListener('mouseover', this.onHoverIn);\r\n  this.el.addEventListener('mouseout', this.onHoverOut);\r\n\r\n  //editor specifics\r\n  if(this.bIsEditor){\r\n    //for calculating smart offsets\r\n    this.vWorldPos = new THREE.Vector2();\r\n    //set drag for\r\n    this.el.draggable = true;\r\n    this.el.addEventListener('dragstart', this.editorStartDrag.bind(this));\r\n    //this.el.addEventListener('drag', this.editorDrag.bind(this));\r\n    this.renderContainer.addEventListener('dragover', this.editorDrag.bind(this));\r\n    this.el.addEventListener('dragend', this.editorEndDrag.bind(this));\r\n\r\n\r\n    this.el.addEventListener('click', this.onEditorPinClick.bind(this));\r\n  }\r\n  else {\r\n    this.el.addEventListener('click', this.onTagClick.bind(this));\r\n  }\r\n\r\n  //disable mouse events when scrolling(zooming in/out)\r\n  this.el.addEventListener('wheel', function() {\r\n    this.css(this.el, 'pointer-events', 'none');\r\n  }.bind(this));\r\n\r\n  //stop it from eating events if mouse down never happened on it!\r\n  this.renderContainer.addEventListener('mousedown', function(e){ \r\n    if( e.srcElement !== this.el ){\r\n      this.css(this.el, 'pointer-events', 'none');\r\n      this.bCanvasDrag = true;\r\n    }\r\n  }.bind(this));\r\n  this.renderContainer.addEventListener('mouseup', function(e){\r\n    this.css(this.el, 'pointer-events', 'auto');\r\n    this.bCanvasDrag = false;\r\n  }.bind(this));\r\n};\r\n\r\nAnnotation.prototype.sceneLoaded = function(){\r\n  this.bSceneLoaded = true;\r\n  this.attributesChanged();\r\n};\r\n\r\n//when the pin cap hover and element is selected, select the node instead\r\nAnnotation.prototype.onEditorPinClick = function(e){\r\n  if(!this.bDragging)window.verold.veroldEvents.trigger( 'studioApp::setSelectionFromPickData', this.getEntity().id, event.button );\r\n};\r\n\r\nAnnotation.prototype.onTagClick = function(){\r\n  if(this.desc.innerHTML.trim().length) {\r\n    toggleEl(this.desc, 100);\r\n  }\r\n};\r\n\r\nAnnotation.prototype.onHoverIn = function(e){\r\n\r\n  if( (this.desc.innerHTML.trim().length || this.bIsEditor) && !this.bObjectSelected){\r\n    var color = this.shadeColor2(this.bgColor, 0.25);\r\n    this.css(this.el, 'background', color);\r\n    this.css(this.line, 'background', color);\r\n    this.css(this.cap, 'background', color);\r\n  }\r\n};\r\n\r\nAnnotation.prototype.onHoverOut = function(e){\r\n  if(!this.bObjectSelected){\r\n    this.css(this.el, 'background', this.bgColor);\r\n    this.css(this.line, 'background', this.bgColor);\r\n    this.css(this.cap, 'background', this.bgColor);\r\n  }\r\n};\r\n\r\n//@param bSelctionTriggered : was this triggered by a selection\r\nAnnotation.prototype.hideNote = function(bSelectionTriggered){\r\n\r\n  this.onHoverOut();\r\n\r\n  this.css(this.el, 'opacity', '0.0');\r\n  this.css(this.line, 'opacity', '0.0');\r\n\r\n  if(typeof bSelectionTriggered !== 'undefined') {\r\n    this.bObjectSelected = bSelectionTriggered;\r\n  }\r\n  this.css(this.el, 'pointer-events', 'none');\r\n};\r\n\r\nAnnotation.prototype.showNote = function(bSelectionTriggered){\r\n  this.css(this.el, 'opacity', '1');\r\n  this.css(this.line, 'background-color', this.bgColor);\r\n  this.css(this.line, 'opacity', '1.0');\r\n  this.css(this.cap, 'opacity', '1.0');\r\n  if(typeof bSelectionTriggered !== 'undefined') {\r\n    this.bObjectSelected = bSelectionTriggered;\r\n  }\r\n  if(!this.bCanvasDrag) {\r\n    this.css(this.el, 'pointer-events', 'auto'  );\r\n  }\r\n};\r\n\r\nAnnotation.prototype.createPrimPin = function(){\r\n  //node\r\n  var node = new THREE.Object3D();\r\n  //head\r\n  var headGeom = new THREE.SphereGeometry(0.15, 12, 12);\r\n  headGeom.computeVertexNormals();\r\n  headGeom.computeTangents();\r\n  var head = new THREE.Mesh(headGeom);\r\n  head.name = 'Pin_Piece';\r\n  //cylinder\r\n  var bodyGeom = new THREE.CylinderGeometry(0.14, 0.0, 0.3, 12, 2);\r\n  bodyGeom.computeVertexNormals();\r\n  bodyGeom.computeTangents();\r\n  var body = new THREE.Mesh(bodyGeom);\r\n  body.position.y -= 0.2;\r\n  body.name = 'Pin_Piece';\r\n\r\n  node.add(head);\r\n  node.add(body);\r\n\r\n  this.getThreeData().add(node);\r\n\r\n  //for studio picking\r\n  this.getEngine().globalEvents.trigger( 'studioApp::registerPickingObject', this.getEntity(), head );\r\n  this.getEngine().globalEvents.trigger( 'studioApp::registerPickingObject', this.getEntity(), body );\r\n  //for runtime picking\r\n  this.getEngine().globalEvents.trigger( 'registerPickingObject', this.getEntity(), head );\r\n  this.getEngine().globalEvents.trigger( 'registerPickingObject', this.getEntity(), body );\r\n\r\n  this.pinObject = node;\r\n\r\n  this.bNeedsUpdate = true;\r\n\r\n  this.loadMat(Annotation.editor_mat_json, function(mat){\r\n    head.material = mat;\r\n  }.bind(this));\r\n\r\n  this.loadMat(Annotation.head_mat_json, function(mat){\r\n    body.material = mat;\r\n  }.bind(this));\r\n\r\n  this.attributesChanged();\r\n};\r\n\r\nAnnotation.prototype.loadMat = function(json, onload){\r\n  var mat = this.getAssetRegistry().getAssetById(json.id);\r\n  if(mat){\r\n    this.listenToOnce(mat, 'load', function(){\r\n      onload(mat.threeData.static);\r\n    });\r\n    mat.load();\r\n  }\r\n  else {\r\n    //create head mat\r\n    this.getAssetRegistry().createAsset(json, {\r\n      success : function(asset){\r\n        this.listenToOnce(asset, 'load', function(){\r\n          onload(asset.threeData.static);\r\n        });\r\n        asset.load();\r\n      }.bind(this)\r\n    });\r\n  }\r\n};\r\n\r\nAnnotation.prototype.entityIsVisible = function() {\r\n\r\n  var threeData = this.getThreeData();\r\n\r\n  var isVisible = threeData.visible;\r\n\r\n  //traverse ancestors\r\n  threeData.traverseAncestors( function(parent){\r\n    if( !parent.visible ) isVisible = false;\r\n  } );\r\n\r\n\r\n  return isVisible;\r\n};\r\n\r\nAnnotation.prototype.preRenderView = function( scene, camera, options ) {\r\n\r\n  //every once and a while, check parents and self to see if visibility broken\r\n  if(!this.entityIsVisible()){\r\n    this.hideNote();\r\n    if( this.bIsEditor ) {\r\n      this.css( this.line, 'opacity', '0.0' );\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (this.hasThreeData() && this.bCreated && this.isEnabled()) {\r\n\r\n    //positioning of annotation elements!\r\n    var threeData = this.getThreeData();\r\n    if ( threeData.parent ) {\r\n      this.tempMatrix.copy( threeData.matrixWorld );\r\n    }\r\n    else {\r\n      this.tempMatrix.identity();\r\n    }\r\n    this.worldPosVec.setFromMatrixPosition( this.tempMatrix );\r\n\r\n    this.tempVec.copy(this.worldPosVec);\r\n    var screenPos = this.worldToScreen( this.tempVec, camera );\r\n    screenPos.x = (Math.round(screenPos.x));\r\n    screenPos.y = (Math.round(screenPos.y));\r\n\r\n    if(this.bIsEditor) {\r\n      this.vWorldPos.set(screenPos.x, screenPos.y);\r\n    }\r\n\r\n    //annotation visiblity using raycaster\r\n    if(this.isInFOV && !this.bObjectSelected && this.pinObject && this.nRaySteps > VAPI.AnnotationCaster.STEPS){\r\n\r\n      this.pinObject.visible = false;\r\n\r\n      this.tempVec.copy(this.worldPosVec);\r\n      VAPI.AnnotationCaster.ray.origin.copy(camera.position);\r\n      VAPI.AnnotationCaster.ray.direction.copy(this.tempVec.sub(camera.position).normalize());\r\n      VAPI.AnnotationCaster.far = this.worldPosVec.distanceTo(camera.position);\r\n     // VAPI.AnnotationCaster.ray.freePool();\r\n      this.intersects.length = 0;\r\n\r\n      var intersects = VAPI.AnnotationCaster.intersectObjects(scene.children, true).filter(canHideFilter);\r\n      //var intersects = VAPI.AnnotationCaster.intersectObjects(scene.children, true, this.intersects).filter(canHideFilter);\r\n      var show = intersects.length === 0;\r\n\r\n      if(show){\r\n        this.showNote();\r\n      }\r\n      else {\r\n        this.hideNote();\r\n      }\r\n\r\n      this.nRaySteps = 0;\r\n\r\n      this.pinObject.visible = this.Pin.visible || this.bIsEditor;\r\n\r\n      //since this doesn't happen very often, we'll update offsets here, as well\r\n      this.offsetWidth = this.renderContainer.offsetWidth;\r\n      this.offsetHeight = this.renderContainer.offsetHeight;\r\n      this.elOffsetWidth = this.el.offsetWidth;\r\n      this.elOffsetHeight = this.el.offsetHeight;\r\n    }\r\n    else {\r\n\r\n      //percentage based offsets in screen space\r\n      var offsetX = this.Offset.x * this.offsetWidth;\r\n      var offsetY = this.Offset.y * this.offsetHeight;\r\n\r\n      if(!this.bDragging) {\r\n\r\n        if(!this.elCSSObj) {\r\n          this.elCSSObj = {\r\n            'left': '',\r\n            'top': '',\r\n          };\r\n        }\r\n\r\n        this.elCSSObj.left = (screenPos.x + offsetX - this.elOffsetWidth * 0.5) + 'px';\r\n        this.elCSSObj.top = (screenPos.y - offsetY - this.elOffsetHeight * 0.5) + 'px';\r\n\r\n        this.css(this.el, this.elCSSObj);\r\n      }\r\n\r\n      this.tempVec.set((screenPos.x + offsetX), (screenPos.y - offsetY));\r\n      var length = this.getLength(screenPos.x, this.tempVec.x, screenPos.y, this.tempVec.y);\r\n      var angle  = this.getAngle(screenPos.x, this.tempVec.x, screenPos.y, this.tempVec.y);\r\n\r\n      if(!this.lineCSSObj) {\r\n        this.lineCSSObj = {\r\n          'transform': '',\r\n          'left': '',\r\n          'top': '',\r\n          'width': ''\r\n        };\r\n      }\r\n\r\n      this.lineCSSObj.transform = 'rotate('+angle+'deg)';\r\n      this.lineCSSObj.left = (screenPos.x << 0) + 'px';\r\n      this.lineCSSObj.top = (screenPos.y << 0) + 'px';\r\n      this.lineCSSObj.width = length + 'px';\r\n\r\n      this.css(this.line, this.lineCSSObj);\r\n\r\n    }\r\n\r\n    this.nRaySteps++;\r\n\r\n\r\n    //for ball scaling\r\n    if(this.pinObject && this.Pin.autoScale && this.pinObject.visible){\r\n      var scale = 0.0;\r\n      this.tempVec.setFromMatrixScale( this.getThreeData().matrixWorld );\r\n      var parentWorldScale = this.tempVec.x;\r\n      this.tempVec.setFromMatrixPosition( this.pinObject.matrixWorld );\r\n      scale = this.tempVec.distanceTo( camera.position ) / 12;\r\n\r\n      this.pinObject.scale.x = this.pinObject.scale.y = this.pinObject.scale.z = scale/parentWorldScale;\r\n    }\r\n  }\r\n\r\n  //if update and needs attributes changed run\r\n  if(this.bNeedsUpdate){\r\n    this.bNeedsUpdate = false;\r\n    this.attributesChanged();\r\n  }\r\n\r\n};\r\n\r\nAnnotation.prototype.worldToScreen = function(worldPosition, camera ) {\r\n\r\n  var halfWidth = (( this.offsetWidth * this.DVP ) / 2) << 0,\r\n    halfHeight = (( this.offsetHeight * this.DVP ) / 2) << 0;\r\n\r\n  this.tempVec.copy(worldPosition);\r\n\r\n  //check to see if object lies in view angle\r\n  this.camForward.set( 0, 0, -1 ).applyQuaternion( camera.quaternion ).normalize();\r\n  this.tempWorldPos.copy(worldPosition).sub(camera.position).normalize();//test point\r\n  var dot = this.camForward.dot(this.tempWorldPos);//going to get the unsigned value\r\n\r\n  var liesInView = Math.cos(camera.fov*0.0174532922222222) < dot;\r\n  if(!liesInView){\r\n    this.posVec.set(0,-1000000,0);\r\n  }\r\n  else {\r\n    this.tempVec.project( camera );\r\n    this.posVec.x = Math.round(this.tempVec.x * halfWidth + halfWidth) / this.DVP;\r\n    this.posVec.y = Math.round(-this.tempVec.y * halfHeight + halfHeight) / this.DVP;\r\n  }\r\n  this.isInFOV = liesInView;\r\n  return this.posVec;\r\n};\r\n\r\nAnnotation.prototype.getLength = function(x1, x2, y1, y2){\r\n  return Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));\r\n};\r\n\r\nAnnotation.prototype.getAngle = function(x1, x2, y1, y2){\r\n  return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\r\n};\r\n\r\nAnnotation.prototype.attributesChanged = function(){\r\n\r\n  var color, textColor;\r\n\r\n  var styleIndex = this.Colors.styles >= 0 ? this.Colors.styles : 0;//if style is set to custom, use the first style\r\n\r\n  var style = Annotation.StylePresets[styleIndex];\r\n  color = style.bg;\r\n  textColor = style.color;\r\n\r\n\r\n  this.bgColor = color;\r\n\r\n  //title html attributes\r\n  if(this.title) {\r\n    this.css(this.title, 'color', textColor);\r\n    this.title.innerHTML = VAPI.safeHTML( this.Title );\r\n  }\r\n\r\n  //description html attributes\r\n  if(this.desc) {\r\n    if(this.ShowDescription  && this.isEnabled()){\r\n      showEl(this.desc, 100);\r\n    }\r\n    else {\r\n      hideEl(this.desc, 100);\r\n    }\r\n    this.css(this.desc, 'color', textColor);\r\n    this.desc.innerHTML = VAPI.safeHTML( this.Description );\r\n  }\r\n\r\n  if(this.line){\r\n    this.css(this.line, 'display', this.ShowLine && this.isEnabled() ? 'block' : 'none');\r\n    this.css(this.line, 'background', color);\r\n    this.css(this.cap, 'background', color);\r\n  }\r\n\r\n  if(this.pinObject){\r\n    this.pinObject.visible = (this.Pin.visible || this.bIsEditor) && this.isEnabled();//if in editor, just show it!\r\n\r\n    if(!this.Pin.autoScale){\r\n      this.pinObject.scale.set(0.3,0.3,0.3);\r\n    }\r\n\r\n    if(this.bIsEditor && !this.Pin.visible) {\r\n      this.setPinMaterial(Annotation.editor_mat_json.id);\r\n      this.pinObject.children[1].visible = false;\r\n    }\r\n    else if(this.Pin.material) {\r\n      this.setPinMaterial(this.Pin.material.id);\r\n      this.pinObject.children[1].visible = true;\r\n    }\r\n    else {\r\n      this.setPinMaterial(Annotation.head_mat_json.id)\r\n      this.pinObject.children[1].visible = true;\r\n    }\r\n  }\r\n\r\n  this.css(this.ellipsis, 'color', this.shadeColor2(this.bgColor, 0.4));\r\n\r\n  //hide or show annotation, depending if content is available\r\n  if(this.el){\r\n    var show = this.m_bTagIsVisible && this.isEnabled();\r\n    if(show){\r\n      showEl(this.el, 0);\r\n    }\r\n    else {\r\n      hideEl(this.el, 0);\r\n    }\r\n    this.css(this.el, 'background', color);\r\n  }\r\n\r\n  //hide/show ellipses if a description exists\r\n  if( this.Description ){\r\n    showEl(this.ellipsis);\r\n    this.css(this.title, 'padding-right', '40px');\r\n  }\r\n  else {\r\n    hideEl(this.ellipsis);\r\n    this.css(this.title, 'padding-right', '10px');\r\n  }\r\n\r\n  //if we've disabled the component, hide it!\r\n  if( !this.isEnabled() || !this.bSceneLoaded ){\r\n    this.hideNote(false);\r\n  }\r\n  else {\r\n    this.showNote(false);\r\n  }\r\n};\r\n\r\n//taken from this awesome post(it's my favorite)\r\n//http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\r\nAnnotation.prototype.shadeColor2 = function(color, percent) {\r\n  if(color === '#fff' || color === '#ffffff')return color;\r\n  var f=parseInt(color.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=f>>8&0x00FF,B=f&0x0000FF;\r\n  return '#'+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);\r\n};\r\n\r\nAnnotation.prototype.shutdown = function() {\r\n  this.el.removeEventListener('mouseenter', this.onHoverIn);\r\n  this.el.removeEventListener('mouseexit', this.onHoverOut);\r\n\r\n  this.cap.remove();\r\n  this.line.remove();\r\n  this.title.remove();\r\n  this.desc.remove();\r\n  this.el.remove();\r\n\r\n  if(this.pinObject){\r\n    this.getThreeData().remove(this.pinObject);\r\n    var children = this.pinObject.children;\r\n    for(var child in children){\r\n      if( children.hasOwnProperty( child ) ) {\r\n        this.getEngine().globalEvents.trigger( 'studioApp::unregisterPickingObject', this.pinObject, children[child]);\r\n        this.getEngine().globalEvents.trigger( 'unregisterPickingObject', this.pinObject, children[child]);\r\n        children[child].geometry.dispose();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nAnnotation.head_mat_json = {\r\n  'id':'pin_head_material',\r\n  'type':'material',\r\n  'name':'Pin Head Material',\r\n  'payload':{'polygonOffset':false,'depthTest':true,'fog':true,'depthWrite':true,'side':0,'blending':1,'diffuseColor':15344585, 'Features':{'Lighting':{'enabled':false},'Diffuse Color':{'enabled':true},'Rim Lighting':{'enabled':false},'Specular':{'enabled':false},'Reflections':{'enabled':false},'Emissive':{'enabled':false}},'visible':true,'materialType':'Simple','colorOpacity':1.0,'specularColor':16777215,'specularIntensity':9.565217391304348,'gloss':0.7739130434782608}\r\n};\r\n\r\nAnnotation.editor_mat_json = {\r\n  'id':'pin_editor_material',\r\n  'type':'material',\r\n  'name':'Pin Editor Material',\r\n  'payload':{'polygonOffset':false,'depthTest':true,'fog':true,'depthWrite':true,'side':0,'blending':1,'diffuseColor':0xCAC1CC, 'Features':{'Lighting':{'enabled':true},'Diffuse Color':{'enabled':true},'Rim Lighting':{'enabled':false},'Specular':{'enabled':false},'Reflections':{'enabled':false},'Emissive':{'enabled':false}},'visible':true,'materialType':'Simple','colorOpacity':1.0,'specularColor':16777215,'specularIntensity':9.565217391304348,'gloss':0.7739130434782608}\r\n};\r\n\r\nTHREE.Ray.prototype.at = function(){\r\n  var vec3 = new THREE.Vector3();\r\n\r\n  return function ( t, optionalTarget ) {\r\n\r\n    var result = optionalTarget || vec3.set(0,0,0);\r\n\r\n    return result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n  };\r\n\r\n}();\r\n\r\nreturn Annotation;\r\n"
}),define("text!VeroldEngine/Components/BuiltIn/Exploder.js",[],function(){return"/*\n@vname Exploder\n@vdescription Explodes your objects and their hierarchies into different formations. Great for showing off parts in a model!\n@vfilter object\n@vcategory Animation\n@vattr float Time {default: 1.5, 'description': 'The amount of time to explode and contract the child meshes' }\n@vattr v3 Scale {default: { 'x' : 2.0, 'y' : 2.0, 'z' : 2.0 }, 'description': 'The scale of the explosion'}\n@vattr dd Formation {\n  'description' : 'Formation to use when exploding the hierarchy of this object.',\n  'default' : 'Scale',\n  'options': { 'Circle' : 'Circle', 'Square Grid': 'Grid', 'Scale Out' : 'Scale' },\n}\n@vevent local playExplode { 'action':true, 'category':'Exploder', 'parameters' : [] }\n@vevent local playContract { 'action':true, 'category':'Exploder', 'parameters' : [] }\n@vevent local toggleExploder { 'action':true, 'category':'Exploder', 'parameters' : [] }\n@vevent local resetExploder { 'action':true, 'category':'Exploder', 'parameters' : [] }\n@vevent local useCircleExplode { 'action':true, 'category':'Exploder', 'parameters' : [ {'name':'Scale','type':'v3', 'description':'The scale to apply to the explosion', 'default':{ 'x':1, 'y':1, 'z':1 } } ] }\n@vevent local useGridExplode { 'action':true, 'category':'Exploder', 'parameters' : [ {'name':'Scale','type':'v3', 'description':'The scale to apply to the explosion', 'default':{ 'x':1, 'y':1, 'z':1 } } ] }\n@vevent local useScaleOutExplode { 'action':true, 'category':'Exploder', 'parameters' : [ {'name':'Scale','type':'v3', 'description':'The scale to apply to the explosion', 'default':{ 'x':2, 'y':2, 'z':2 } } ] }\n@vevent other beginExplode { 'action':false, 'category':'Exploder', 'parameters' : [] }\n@vevent other endExplode { 'action':false, 'category':'Exploder', 'parameters' : [] }\n@vevent other beginContract { 'action':false, 'category':'Exploder', 'parameters' : [] }\n@vevent other endContract { 'action':false, 'category':'Exploder', 'parameters' : [] }\n*/\nvar tmpVec = new THREE.Vector3();\n\nfunction Component() {\n  this.m_fTime = 99999999.0;\n  this.m_vDestTest = null;\n\n  //dest and src positions\n  this.m_objects = [];\n  this.m_sources = [];\n  this.m_destinations = [];\n\n  this.m_nDirection = -1;\n}\n\nComponent.prototype = new VAPI.VeroldComponent();\n\nComponent.prototype.init = function() {\n  //event listeners\n  this.listenTo(this.getEntity(), 'playExplode', this.explode.bind(this));\n  this.listenTo(this.getEntity(), 'playContract', this.contract.bind(this));\n  this.listenTo(this.getEntity(), 'toggleExploder', this.toggle.bind(this));\n  this.listenTo(this.getEntity(), 'resetExploder', this.reset.bind(this));\n  this.listenTo(this.getEntity(), 'useCircleExplode', this.explode.bind(this, 'Circle'));\n  this.listenTo(this.getEntity(), 'useGridExplode', this.explode.bind(this, 'Grid'));\n  this.listenTo(this.getEntity(), 'useScaleOutExplode', this.explode.bind(this, 'Scale'));  \n};\n\nComponent.prototype.update = function(delta) {\n  var threeData;\n  if (this.hasThreeData() && this.m_fTime < this.Time ) {\n    threeData = this.getThreeData();\n\n    this.m_fTime += delta;\n\n    var percent = this.m_fTime > this.Time ? 1.0 : makeEaseInOut(Math.max(0.0, Math.min(1.0, this.m_fTime/this.Time)));\n\n\n    for(var i = 0; i < this.m_objects.length; ++i) {\n\n      var obj = this.m_objects[i];\n\n      var dst =  obj.threeData.parent.worldToLocal( tmpVec.copy(this.m_destinations[i]) ).clone();\n      var srcPos = this.m_nDirection > 0 ? this.m_sources[i] : dst;\n      var destPos = this.m_nDirection > 0 ? dst : this.m_sources[i]; \n      this.lerpVec( srcPos, destPos, percent, tmpVec );\n\n      obj.alignToPosition( tmpVec,{ x:0.0, y:0.0, z:0.0 } );\n    }\n\n    if(this.m_fTime > this.Time) {\n      this.getEntity().trigger( this.m_nDirection > 0 ? 'endExplode' : 'endContract' );\n    }\n\n  }\n};\n\nComponent.prototype.reset = function(){\n  for(var i = 0; i < this.m_objects.length; ++i) {\n    var obj = this.m_objects[i];\n    obj.alignToPosition( this.m_sources[i], { x:0.0, y:0.0, z:0.0 } );\n  }\n\n  this.m_objects.length = 0;\n  this.m_sources.length = 0;\n  this.m_destinations.length = 0;\n  this.m_fTime = this.Time;//KILL IT\n};\n\nComponent.prototype.contract = function() {\n  if(!this.isEnabled()) return;\n\n  this.m_nDirection = -1;\n  this.m_fTime = 0;\n  this.getEntity().trigger('beginContract');\n};\n\nComponent.prototype.explode = function(formation, scale){\n  if(!this.isEnabled()) return;\n\n  this.reset();\n\n  var children = this.getEntity().getObjects({ \"type\" : \"mesh\" });\n  var center = this.getEntity().getCenterInWorldSpace();\n  var rotation = this.getEntity().getQuaternionInWorldSpace();\n  var length = children.length;\n  var formationFunc = this.getFormationFunc( formation||this.Formation, center, rotation, length, scale||this.Scale ).bind(this);\n\n  // Explode each child mesh...\n  for (var i=0;i<length;++i) {\n\n    formationFunc(i, tmpVec, children[i]);\n\n    this.m_objects.push( children[i] );\n    this.m_sources.push( children[i].getCenterInParentSpace() );\n    this.m_destinations.push( tmpVec.clone() );\n\n  }\n\n  this.m_fTime = 0;\n  this.m_nDirection = 1;\n  this.getEntity().trigger('beginExplode');\n};\n\nComponent.prototype.toggle = function(){\n  if(this.m_nDirection > 0){\n    this.contract();\n  }\n  else {\n    this.explode();\n  }\n};\n\nComponent.prototype.getFormationFunc = function(formation, center, rotation, length, scale){\n  var func = null;\n\n  switch(formation) {\n    case 'Grid' :\n      //get the length of both sides of the grid! All grids want to be square\n      var square = Math.floor( Math.sqrt( length ) );\n      var xInc = 1/square;\n      var yInc = 1/square;\n      var startX = -xInc * (square - 1)*0.5;\n      var startY = (square - 1) / 2 * yInc;\n      var row = 0;\n      func = function(index, outVec, child){\n        var x = startX + (index % square * xInc);\n        var y = startY - row*yInc;\n        outVec.set(x,y, 0).applyQuaternion(rotation);\n\n        outVec.copy( center.clone().add(outVec.multiply( scale )) );\n\n        if(index % square === square-1) row++;\n      };\n      break;\n    case 'Scale' : \n\n      func = function(index, outVec, child) {\n\n        child.getCenterInWorldSpace( outVec );\n\n        var distVec = outVec.clone().sub(center);\n\n        outVec.copy( center ).add( distVec.multiply( scale ) );\n      };\n      break;\n    case 'Circle' :\n    default :\n      func = function(index, outVec, child){\n        var x = center.x + ( scale.x * Math.cos(2 * Math.PI * index / length) );\n        var y = center.y + ( scale.y * Math.sin(2 * Math.PI * index / length) );\n        outVec.set(x,y,center.z).applyQuaternion(rotation);\n      };\n\n  }\n\n  return func;\n};\n\nComponent.prototype.lerpVec = function(src, dst, val, out){\n\n  var x = src.x + (dst.x - src.x) * val;\n  var y = src.y + (dst.y - src.y) * val;\n  var z = src.z + (dst.z - src.z) * val;\n\n  out.set(x,y,z);\n};\n\nfunction back(progress, x) {\n    return Math.pow(progress, 2) * ((x + 1) * progress - x)\n}\n\nfunction makeEaseInOut(progress) { \n  if (progress < .5)\n    return back(2*progress, 2.0) / 2\n  else\n    return (2 - back(2*(1-progress), 2.0)) / 2\n}\n\n\n//check to see if threejs parent traversal is present\nTHREE.Object3D.prototype.traverseAncestors = THREE.Object3D.prototype.traverseAncestors  || function( callback ){\n\n  if( this.parent ){\n\n    callback( this.parent );\n    this.parent.traverseAncestors( callback );\n\n  }\n\n};\n\nComponent.prototype.shutdown = function() {\n};\n\n\nreturn Component;\n"}),define("VeroldEngine/AssetRegistry/ScriptRegistry",["underscore","three","VeroldEngine/AssetRegistry/ScriptAsset","text!VeroldEngine/Components/BuiltIn/Animation.js","text!VeroldEngine/Components/BuiltIn/AudioListener.js","text!VeroldEngine/Components/BuiltIn/AudioSource.js","text!VeroldEngine/Components/BuiltIn/FreeCameraController.js","text!VeroldEngine/Components/BuiltIn/OrbitCameraController.js","text!VeroldEngine/Components/BuiltIn/SkyboxRenderer.js","text!VeroldEngine/Components/BuiltIn/DefaultRenderer.js","text!VeroldEngine/Components/BuiltIn/DefaultFilters.js","text!VeroldEngine/Components/BuiltIn/RenderFilters.js","text!VeroldEngine/Components/BuiltIn/RenderView.js","text!VeroldEngine/Components/BuiltIn/HMDRenderEffect.js","text!VeroldEngine/Components/BuiltIn/DebugTextureRender.js","text!VeroldEngine/Components/BuiltIn/RenderTargetViewer.js","text!VeroldEngine/Components/BuiltIn/RenderModes.js","text!VeroldEngine/Components/BuiltIn/ReflectionCapturePlane.js","text!VeroldEngine/Components/BuiltIn/CubeMapCapture.js","text!VeroldEngine/Components/BuiltIn/PanoramaToCubeMap.js","text!VeroldEngine/Components/BuiltIn/SphereMapCapture.js","text!VeroldEngine/Components/BuiltIn/SimplexNoiseGenerator.js","text!VeroldEngine/Components/BuiltIn/NormalMapGenerator.js","text!VeroldEngine/Components/BuiltIn/SceneLoader.js","text!VeroldEngine/Components/BuiltIn/Rotate.js","text!VeroldEngine/Components/BuiltIn/LookAt.js","text!VeroldEngine/Components/BuiltIn/TextRenderer2D.js","text!VeroldEngine/Components/BuiltIn/TextLabel2D.js","text!VeroldEngine/Components/BuiltIn/EventHandler.js","text!VeroldEngine/Components/BuiltIn/CustomControl.js","text!VeroldEngine/Components/BuiltIn/KeyboardController.js","text!VeroldEngine/Components/BuiltIn/MouseController.js","text!VeroldEngine/Components/BuiltIn/ObjectPicker.js","text!VeroldEngine/Components/BuiltIn/Curve.js","text!VeroldEngine/Components/BuiltIn/ShotManager.js","text!VeroldEngine/Components/BuiltIn/ObjectAnimator.js","text!VeroldEngine/Components/BuiltIn/Annotation.js","text!VeroldEngine/Components/BuiltIn/Exploder.js"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L){var M={},N=window.VAPI=window.VAPI||{},O=function(){this.assets=void 0,this.reservedComponents={"Render Settings":{id:"verold_renderer",name:"Renderer",type:"script",advanced:!0,limitPerEntity:1,alwaysOn:!0,payload:{filter:["application"],description:"",category:"Rendering",attributes:{renderOnDemand:{type:"b",description:"When this is enabled, rending will only happen when requested instead of every frame.","default":!1},antialias:{type:"b",description:"Enable or disable antialiasing of the rendered scene.","default":!0,advanced:!0},preserveDrawingBuffer:{type:"b",description:"Tells the browser to preserve drawing buffers between frames so that they are available to be read by the application.","default":!0,advanced:!0},autoClear:{type:"b",description:"Automatically clear the render target before each render.","default":!1,advanced:!0},devicePixelRatio:{type:"dd","default":0,options:{"Device Default":0,One:1,Two:2},description:"Override the default pixel ratio of the system. Higher values will cause rendering at higher resolution while lower values will force rendering at lower resolutions. You can also set this to use the device default (mobile devices usually have values greater than 1).",advanced:!1},clearColor:{type:"c",description:"When the render target is cleared, this colour will be used","default":0,advanced:!1},clearAlpha:{type:"f",description:"When the render target is cleared, this value will be used to clear the transparency","default":0,min:0,max:1,step:.001,advanced:!1},precision:{type:"dd",description:"The default floating point and integer precision to be used by the GPU.","default":"mediump",options:{Low:"lowp",Medium:"mediump",High:"highp"},advanced:!0},shadowMapEnabled:{type:"b",description:"Enable or disable rendering of shadows.","default":!0},shadowMapEnabledMobile:{type:"b",description:"Enable or disable rendering of shadows on mobile devices.","default":!1,advanced:!0},shadowMapType:{type:"dd",options:{"Soft PCF":b.PCFSoftShadowMap,PCF:b.PCFShadowMap,"No Filtering":b.BasicShadowMap},"default":b.PCFSoftShadowMap,advanced:!0},shadowMapAutoUpdate:{type:"b",description:"Shadows will or will not automatically be updated every frame.","default":!0,advanced:!0},shadowMapCullFace:{type:"dd",description:"Shadows will or will not automatically be updated every frame.",options:{None:b.CullFaceNone,Front:b.CullFaceFront,Back:b.CullFaceBack},"default":b.CullFaceBack,advanced:!0},shadowMapDebug:{type:"b",description:"Enable or disable debug rendering, showing the different shadow cascade sizes.","default":!1,advanced:!0},logarithmicDepthBuffer:{type:"b",description:"Use logarithmic z values while rendering.","default":!0,advanced:!0}},script:j}},"Default Filters":{id:"render_filters_component",name:"Default Filters",type:"script",limitPerEntity:1,payload:{script:k}},"Render Filters":{id:"camera_filters_script",name:"Render Filters",type:"script",limitPerEntity:1,payload:{script:l}},"Render View":{id:"render_view_component",name:"Render View",type:"script",payload:{description:"",category:"Rendering",filter:["camera"],attributes:{viewportLeft:{description:"Left position of the viewport to be rendered by this camera.",type:"s","default":"0px"},viewportBottom:{description:"Bottom position of the viewport to be rendered by this camera.",type:"s","default":"0px"},viewportWidth:{description:"Width of the viewport to be rendered by this camera.",type:"s","default":"100%"},viewportHeight:{description:"Height of the viewport to be rendered by this camera.",type:"s","default":"100%"},renderGroup:{description:"Render passes are done in order, based on the 'render group' value. Lower numbers render first.",type:"i","default":0},clearColor:{description:"",type:"b","default":!1,advanced:!1},clearDepth:{description:"",type:"b","default":!0,advanced:!1},renderTarget:{description:"",type:"asset",filter:{renderTexture2D:!0},"default":null,advanced:!1},enablePreRenderFunctions:{description:"Run pre-render functions with this view. These include things like real-time reflections, which need to be rendered for each view separately.",type:"b","default":!0,advanced:!0},enableShadows:{description:"Render shadows for this view.",type:"b","default":!0,advanced:!0}},script:m,events:{enableRenderView:{scope:"local",category:"Rendering",parameters:[{name:"fade",type:"f",description:"Defined in seconds","default":0}]},setViewport:{scope:"local",category:"Rendering",parameters:[{name:"viewportLeft",description:"Left position of the viewport to be rendered by this camera.",type:"s","default":"0px"},{name:"viewportBottom",description:"Bottom position of the viewport to be rendered by this camera.",type:"s","default":"0px"},{name:"viewportWidth",description:"Width of the viewport to be rendered by this camera.",type:"s","default":"100%"},{name:"viewportHeight",description:"Height of the viewport to be rendered by this camera.",type:"s","default":"100%"},{name:"animationTime",type:"f",description:"Animate the change in viewport over this many seconds.","default":0}]},disableRenderView:{scope:"local",category:"Rendering",parameters:[{name:"fade",type:"f",description:"Defined in seconds","default":0}]},toggleRenderView:{scope:"local",category:"Rendering",parameters:[{name:"fade",type:"f",description:"Defined in seconds","default":0}]}}}},"Render Modes":{id:"render_modes",name:"Render Modes",type:"script",limitPerEntity:1,payload:{filter:["application"],description:"A simple component to add filters to the rendering.",category:"Rendering",attributes:{},script:q,events:{}}},"Scene Loader":{id:"loader_component",name:"Scene Loader",type:"script",limitPerEntity:1,payload:{filter:["application"],description:"A simple component to load a scene and display progress for it.",category:"Loading",attributes:{scene:{type:"asset",description:"The scene to load.","default":null,filter:{scene:!0}}},script:x}},"Reflection Capture Plane":{id:"reflection_capture_planar",name:"Reflection Capture Plane",type:"script",payload:{filter:["object"],description:"",category:"Rendering",attributes:{reflectionTexture:{type:"asset",description:"The RenderTexture2D to render the reflection to.",filter:{renderTexture2D:!0},"default":null},clipBias:{type:"f",description:"Pushes the rendered scene forward or backwards to adjust clipping with reflection plane.","default":.01},updateFrameInterval:{type:"i",description:"The number of frames to skip in between updates of the reflection. Default is 0.","default":0}},script:r}},"Cube-Map Capture":{id:"cubemap_capture",name:"Cube-Map Capture",type:"script",payload:{filter:["object"],description:"",category:"Rendering",attributes:{cubeTexture:{type:"asset",description:"The RenderTextureCube to render the reflection to.",filter:{renderTextureCube:!0},"default":null},near:{type:"f",description:"The closest distance to this object to render. Adjust this to avoid rendering local geometry to the texture.","default":.25},far:{type:"f",description:"The furthest distance from this object to render.","default":14e3},updateFrameInterval:{type:"i",description:"The number of frames to skip in between updates of the reflection. Default is 0.","default":0},renderPosX:{type:"b",description:"Render this side of the cube.","default":!0},renderNegX:{type:"b",description:"Render this side of the cube.","default":!0},renderPosY:{type:"b",description:"Render this side of the cube.","default":!0},renderNegY:{type:"b",description:"Render this side of the cube.","default":!0},renderPosZ:{type:"b",description:"Render this side of the cube.","default":!0},renderNegZ:{type:"b",description:"Render this side of the cube.","default":!0}},script:s}},"Sphere-Map Capture":{id:"spheremap_capture",name:"Sphere-Map Capture",type:"script",payload:{filter:["object"],description:"",category:"Rendering",attributes:{sphereTexture:{type:"asset",description:"The RenderTexture2D to render the reflection to.",filter:{renderTexture2D:!0},"default":null},near:{type:"f",description:"The closest distance to this object to render. Adjust this to avoid rendering local geometry to the texture.","default":.25},far:{type:"f",description:"The furthest distance from this object to render.","default":14e3},updateFrameInterval:{type:"i",description:"The number of frames to skip in between updates of the reflection. Default is 0.","default":0}},script:u}},Curve:{id:"curve_component",name:"Curve",type:"script",payload:{filter:["object"],description:"Creates a spline curve that can be used for various things, including making objects follow it. Add controls points to shape the curve.",category:"General",attributes:{controlPoints:{description:"The list of objects that define the curve shape.",type:"a",subType:{type:"object"}},closed:{description:"If toggled, the start and end of the curve will be smoothly joined.","default":!1,type:"b"}},script:H}},Annotation:{id:"annotation_component",type:"script",limitPerEntity:1,payload:{script:K}},Exploder:{id:"exploder_component",type:"script",payload:{script:L}},"Render Target Viewer":{id:"render_target_viewer",name:"Render Target Viewer",type:"script",payload:{filter:["application"],description:"",category:"Debug",attributes:{viewportLeft:{description:"Left position of the viewport to be rendered by this camera.",type:"s","default":"50%"},viewportBottom:{description:"Bottom position of the viewport to be rendered by this camera.",type:"s","default":"0px"},viewportWidth:{description:"Width of the viewport to be rendered by this camera.",type:"s","default":"50%"},viewportHeight:{description:"Height of the viewport to be rendered by this camera.",type:"s","default":"50%"},renderGroup:{description:"Render passes are done in order, based on the 'render group' value. Lower numbers render first.",type:"i","default":9}},script:p}}},this.simpleComponents={Shots:{id:"shot_manager_component",name:"Shots",type:"script",limitPerEntity:1,payload:{filter:["scene"],description:"This component allows you to define a series of cinematic camera shots.",category:"Interaction",attributes:{fadeIn:{name:"fadeIn",description:"The percentage of the animation spent fading in.",type:"f",slider:!0,"default":.25,min:0,max:1},cameras:{description:"The list of cameras that define each shot.",hidden:!0,type:"a",subType:{type:"custom",attributes:{cameraObject:{type:"object",filter:{camera:!0}},name:{type:"s"},description:{type:"s"}}}}},events:{beginShot:{scope:"other",filter:["camera"],action:!1,category:"General",parameters:[]},endShot:{scope:"other",filter:["camera"],action:!1,category:"General",parameters:[]},"shotManager::play":{scope:"global",action:!0,category:"General",parameters:[{name:"shotNumber",type:"i",description:"The index of shot that you want to play.","default":0}]},playShot:{scope:"local",action:!0,category:"General",parameters:[{name:"shotNumber",type:"i",description:"The index of shot that you want to play.","default":0}]}},script:I}},"Object Animator":{id:"object_animator_component",name:"Object Animator",type:"script",limitPerEntity:1,payload:{filter:["object"],description:"",category:"Animation",attributes:{},events:{playAnimateAlongCurve:{scope:"local",action:!0,category:"Animation",parameters:[{name:"curve",type:"object",description:"","default":null,componentFilter:{Curve:!0}},{name:"animationTime",type:"f",description:"Time to animate to object. Defined in seconds","default":3},{name:"easeIn",type:"f",description:"The percentage of animation time spent speeding up.","default":.25,min:0,max:1},{name:"easeOut",type:"f",description:"The percentage of animation time spent slowing down.","default":.25,min:0,max:1},{name:"orientation",description:"Orient the object following the curve to either the direction of the curve or to the objects defining the curve.",type:"dd","default":"toCurve",options:{None:"None","To Curve":"toCurve","To Nodes":"toNode"}},{name:"loop",type:"b",description:"","default":!1}]},playAnimateToObject:{scope:"local",action:!0,category:"Animation",parameters:[{name:"object",type:"object",description:"","default":null},{name:"animationTime",type:"f",description:"Total time that the animation will take. Defined in seconds","default":3},{name:"easeIn",type:"f",description:"The percentage of animation time spent speeding up.","default":.25,min:0,max:1},{name:"easeOut",type:"f",description:"The percentage of animation time spent slowing down.","default":.25,min:0,max:1},{name:"update orientation",type:"b",description:"","default":!0}]},playAnimateTranslation:{scope:"local",action:!0,category:"Animation",parameters:[{name:"animationTime",type:"f",description:"Time to animate to object. Defined in seconds","default":3},{name:"easeIn",type:"f",description:"The percentage of animation time spent speeding up.","default":.25,min:0,max:1},{name:"easeOut",type:"f",description:"The percentage of animation time spent slowing down.","default":.25,min:0,max:1},{name:"velocity",description:"",type:"v3","default":{x:0,y:0,z:1},min:-1,max:1},{name:"objectUsage",type:"dd",description:"Specify what part of the animation the current object's position represents.","default":"beginning",options:{Beginning:"beginning",Middle:"middle",End:"end"}}]},playAnimateRotation:{scope:"local",action:!0,category:"Animation",parameters:[{name:"animationTime",type:"f",description:"Time to animate to object. Defined in seconds","default":3},{name:"easeIn",type:"f",description:"The percentage of animation time spent speeding up.","default":.25,min:0,max:1},{name:"easeOut",type:"f",description:"The percentage of animation time spent slowing down.","default":.25,min:0,max:1},{name:"angularVelocity",description:"",type:"v3","default":{x:0,y:0,z:1},min:-100,max:100},{name:"objectUsage",type:"dd",description:"Specify what part of the animation the current object's rotation represents.","default":"beginning",options:{Beginning:"beginning",Middle:"middle",End:"end"}},{name:"axisOrder",type:"dd",description:"Specify the axis order that the angular velocity will be applied in.","default":"YXZ",options:{XYZ:"XYZ",YXZ:"YXZ",ZXY:"ZXY",XZY:"XZY",YZX:"YZX",ZYX:"ZYX"}}]},playAnimateScale:{scope:"local",action:!0,category:"Animation",parameters:[{name:"animationTime",type:"f",description:"Time to animate to object. Defined in seconds","default":3},{name:"easeIn",type:"f",description:"The percentage of animation time spent speeding up.","default":.25,min:0,max:1},{name:"easeOut",type:"f",description:"The percentage of animation time spent slowing down.","default":.25,min:0,max:1},{name:"velocity",description:"",type:"v3","default":{x:0,y:0,z:1},min:-10,max:10},{name:"objectUsage",type:"dd",description:"Specify what part of the animation the current object's scale represents.","default":"beginning",options:{Beginning:"beginning",Middle:"middle",End:"end"}}]},pauseCurveAnimation:{scope:"local",action:!0,category:"Animation",parameters:[]},stopCurveAnimation:{scope:"local",action:!0,category:"Animation",parameters:[]},unpauseCurveAnimation:{scope:"local",action:!0,category:"Animation",parameters:[]},endAnimateAlongCurve:{scope:"local",action:!1,category:"Animation",parameters:[]},endAnimateToObject:{scope:"local",action:!1,category:"Animation",parameters:[]},endAnimateTranslation:{scope:"local",action:!1,category:"Animation",parameters:[]}},script:J}},EventHandler:{id:"event_handler_component",name:"Event Handler",type:"script",payload:{description:"",category:"Interaction",attributes:{listen:{name:"listen",description:"The event to listen for. When this event is captured, all of the defined trigger events will be fired.",type:"event"},triggers:{name:"triggers",description:"Fire each of these events in response to the captured listen event.",type:"a",subType:{type:"event"}}},attributesOrder:["listen","triggers"],script:C}},CustomControl:{id:"custom_control_component",name:"Custom Control",type:"script",payload:{filter:["scene"],description:"",category:"Interaction",attributes:{name:{name:"name",type:"s"},control:{name:"control",type:"control","default":"",options:{Button:"button",Toggle:"toggle",List:"list"},subType:{type:"s"}}},script:D}},"Keyframe Animation":{id:"animation",name:"Keyframe Animation",type:"script",payload:{filter:["object"],description:"Attach keyframe animations to models and control their playback",category:"Animation",attributes:{autoPlay:{description:"Play the animation once loaded","default":!0,type:"b"},loop:{description:"Continuously replay the animation","default":!0,type:"b"},speed:{description:"Playback speed","default":1,min:0,max:100,type:"f"},startTime:{description:"Begin playback at this time offset","default":0,min:0,type:"f"},weight:{description:"Blending weight","default":1,min:0,max:1,type:"f"},asset:{description:"Animation asset","default":null,type:"asset",filter:{animation:!0}},take:{description:"The name of the animation take","default":null,type:"ddfn",optionsFn:"getTakes"}},events:{playKeyframeAnimation:{scope:"local",action:!0,category:"Animation",parameters:[{name:"asset",type:"asset",description:"The animation asset to play.","default":null,filter:{animation:!0}},{name:"take",type:"s",description:"The animation take to play.","default":null},{name:"loop",type:"b",description:"Continuously replay the animation.","default":!0},{name:"speed",type:"f",description:"Playback speed.","default":1,min:0,max:100},{name:"startTime",type:"f",description:"Begin playback at this time offset.","default":0,min:0}]},endKeyframeAnimation:{scope:"local",action:!1,category:"Animation",parameters:[]},pauseKeyframeAnimation:{scope:"local",action:!0,category:"Animation",parameters:[]},stopKeyframeAnimation:{scope:"local",action:!0,category:"Animation",parameters:[]},toggleKeyframeAnimation:{scope:"local",action:!0,category:"Animation",parameters:[]}},script:d}},"Audio Listener":{id:"audio_listener",name:"Audio Listener",type:"script",payload:{filter:["object","scene"],description:"Audio listener for 3D, positional sound effects",category:"Audio",attributes:{},script:e}},"Audio Source":{id:"audio_source",name:"Audio Source",type:"script",payload:{filter:["object","scene"],description:"Controls playback of audio assets",category:"Audio",attributes:{gain:{description:"Volume control","default":1,min:0,max:100,type:"f"},autoPlay:{description:"Play the audio once loaded","default":!0,type:"b"},loop:{description:"Continuously replay the audio","default":!0,type:"b"},preload:{description:"Load the audio when the component is initialized","default":!0,type:"b"},positional:{description:"Enable/disable 3D, positional audio effects","default":!1,type:"b"},stream:{description:"Stream the audio","default":!1,type:"b"},asset:{description:"Audio or video asset","default":null,type:"asset",filter:{audio:!0,textureVideo:!0}}},events:{playAudio:{scope:"local",action:!0,category:"Audio",parameters:[{name:"offset",type:"f",description:"Defined in seconds","default":0}]},pauseAudio:{scope:"local",action:!0,category:"Audio",parameters:[]},stopAudio:{scope:"local",action:!0,category:"Audio",parameters:[]},toggleAudio:{scope:"local",action:!0,category:"Audio",parameters:[]}},script:f}},"Panorama To Cube-Map":{id:"panorama_to_cubemap_script",name:"Panorama To Cube-Map",type:"script",payload:{filter:["renderTextureCube"],script:t}},"Simplex Noise Generator":{id:"simplex_noise_component",name:"Simplex Noise Generator",type:"script",payload:{filter:["renderTexture2D"],description:".",category:"Rendering",attributes:{layerAmplitude:{description:"",type:"v4","default":{x:.5,y:.4,z:.3,w:.125}},layerScale:{description:"",type:"v4","default":{x:.5,y:2,z:3,w:4}},scale:{description:"",type:"v2","default":{x:1,y:1}},offset:{description:"",type:"v2","default":{x:0,y:0}},autoLoad:{description:"",type:"b","default":!0}},events:{renderNoise:{scope:"local",action:!0,category:"Rendering",parameters:[]},changeNoiseValues:{scope:"local",action:!0,category:"Rendering",parameters:[{name:"layerAmplitude",type:"v4",description:"","default":{x:.5,y:.4,z:.3,w:.125}},{name:"layerScale",type:"v4",description:"","default":{x:.5,y:2,z:3,w:4}},{name:"scale",type:"v2",description:"","default":{x:1,y:1}},{name:"offset",type:"v2",description:"","default":{x:0,y:0}}]}},script:v}},"Normal Map Generator":{id:"normal_map_generator_component",name:"Normal Map Generator",type:"script",payload:{filter:["renderTexture2D"],description:".",category:"Rendering",attributes:{bumpTexture:{description:"",type:"asset",filter:{renderTexture2D:!0,texture2D:!0},"default":null},smoothness:{description:"",type:"f",slider:!0,"default":.25,min:1e-4,max:1},spread:{description:"",type:"f",slider:!0,"default":4,min:1,max:10},autoLoad:{description:"",type:"b","default":!0}},events:{renderNormalMap:{scope:"local",action:!0,category:"Rendering",parameters:[]}},script:w}},"2D Text Renderer":{id:"text_renderer_component",type:"script",payload:{script:A}},"2D Text Label":{id:"text_label_component",name:"2D Text Label",type:"script",payload:{filter:["object"],description:"Simply render some text to the screen using HTML.",category:"Text",attributes:{text:{"default":"2D Font Label",description:"The text to render",type:"s"}},script:B}},"Orbit Camera":{id:"orbit_camera_controller",name:"Orbit Camera Controller",type:"script",limitPerEntity:1,payload:{script:h}},"Free Camera":{id:"free_camera_controller",name:"Free Camera Controller",type:"script",limitPerEntity:1,payload:{filter:["camera"],description:"",category:"Camera Controllers",attributes:{inertialDamping:{"default":.2,min:0,max:1,type:"f"},usePointerLock:{description:"","default":!1,type:"b"},invertX:{description:"","default":!1,type:"b"},invertY:{description:"","default":!1,type:"b"},invertZoom:{description:"","default":!1,type:"b"},lookSpeed:{description:"","default":1,max:1e3,min:1e-4,type:"f"},movementSpeed:{description:"","default":3,max:1e3,min:1e-4,type:"f"},pitchAngleBounds:{description:"","default":{max:75,min:-75},max:{max:90,min:90},min:{max:-90,min:-90.001},type:"v3"},enablePan:{description:"","default":!0,type:"b"},enableZoom:{description:"","default":!0,type:"b"}},events:{enableFreeCameraController:{scope:"local",parameters:[]},disableFreeCameraController:{scope:"local",parameters:[]},toggleFreeCameraController:{scope:"local",parameters:[]}},script:g}},Skybox:{id:"skybox_renderer",name:"Skybox",type:"script",payload:{filter:["scene"],description:"",category:"Rendering",attributes:{size:{"default":1e3,min:1,max:1e5,type:"f"},skyboxTexture:{description:"",type:"asset",filter:{textureCube:!0,texture2D:!0,renderTexture2D:!0,renderTextureCube:!0},"default":"white_cube"},skyboxFogPower:{description:"Controls the rate that fog decreases with height in the skybox.","default":.8,min:0,max:1,type:"f"},skyboxFogScale:{description:"Uniformly scales the amount of fog in the skybox.","default":.5,min:0,max:1,type:"f"}},events:{setSkyboxTexture:{scope:"local",action:!0,parameters:[{name:"texture",type:"asset",filter:{textureCube:!0,texture2D:!0,renderTexture2D:!0,renderTextureCube:!0},description:"The new skybox texture to use.","default":null}]}},script:i}},Rotator:{id:"rotate_component",name:"Rotator",type:"script",payload:{filter:["object"],script:y,category:"Animation"}},LookAt:{id:"lookat_component",name:"Look At Target",type:"script",payload:{filter:["object"],description:"A component that automatically points the object at a target. This can be used for billboarding an object to the camera, making a character look at another, etc.",category:"General",attributes:{target:{description:"The object that you want this object to point towards. e.g. for billboarding, this would be the camera used to render the scene.","default":null,type:"object"},local:{description:"If toggled, whatever rotation you have already applied to this object will be taken into account.","default":!1,type:"b"},showPreview:{description:"Run the lookAt in the editor.","default":!0,type:"b"}},script:z}},"Object Picker":{id:"object_picker",name:"Object Picker",type:"script",advanced:!1,limitPerEntity:1,payload:{filter:["scene"],description:"",category:"General",attributes:{pickTrigger:{type:"dd",description:"What mouse action will trigger the pick?","default":"leftMouseClick",options:{"Left Mouse Click":"leftMouseClick","Middle Mouse Click":"middleMouseClick","Right Mouse Click":"rightMouseClick","Left Mouse Down":"leftMouseDown","Middle Mouse Down":"middleMouseDown","Right Mouse Down":"rightMouseDown","Left Mouse Up":"leftMouseUp","Middle Mouse Up":"middleMouseUp","Right Mouse Up":"rightMouseUp"}},enableHoverByDefault:{type:"b","default":!1,advanced:!0,description:"Enable hover detection when mouse cursor is over a mesh. Note that this has a potential performance impact."},hoverFrameSkip:{type:"i","default":1,description:"Skip this many frames inbetween hover checks.",min:0,max:60}},events:{pick:{scope:"other",action:!1,category:"General",parameters:[]},beginHover:{scope:"other",action:!1,category:"General",parameters:[]},endHover:{scope:"other",action:!1,category:"General",parameters:[]}},script:G}},"HMD Render Effect":{id:"hmd_renderer_script",name:"HMD Effect",type:"script",limitPerEntity:1,payload:{filter:["camera"],description:"Enables a head-mounted display effect (e.g. for Oculus Rift) on this camera.",category:"Rendering",attributes:{interpupillaryDistance:{description:"Distance between viewer's eyes (in metres).","default":.064,min:.05,max:.1,type:"f"},lensSeparationDistance:{description:"Distance between lenses in head-mounted display (in metres)","default":.064,min:.05,max:.1,type:"f"},eyeToScreenDistance:{description:"Distance between eyes and screen in head-mounted display (in metres)","default":.041,min:.02,max:.1,type:"f"}},events:{},script:n}}},this.advancedComponents={Mouse:{id:"mouse_controller_component",name:"Mouse",type:"script",limitPerEntity:1,advanced:!0,payload:{filter:["application"],description:"",category:"Input",attributes:{},events:{mouse_down_left:{scope:"global",action:!1,parameters:[]},mouse_down_right:{scope:"global",action:!1,parameters:[]},mouse_down_middle:{scope:"global",action:!1,parameters:[]},mouse_up_left:{scope:"global",action:!1,parameters:[]},mouse_up_right:{scope:"global",action:!1,parameters:[]},mouse_up_middle:{scope:"global",action:!1,parameters:[]}},script:F}},Keyboard:{id:"keyboard_controller_component",name:"Keyboard",type:"script",limitPerEntity:1,advanced:!0,payload:{filter:["application"],description:"",category:"Input",attributes:{},events:{keypress_a:{scope:"global",action:!1,parameters:[]},keypress_b:{scope:"global",action:!1,parameters:[]},keypress_c:{scope:"global",action:!1,parameters:[]},keypress_d:{scope:"global",action:!1,parameters:[]},keypress_e:{scope:"global",action:!1,parameters:[]},keypress_f:{scope:"global",action:!1,parameters:[]},keypress_g:{scope:"global",action:!1,parameters:[]},keypress_h:{scope:"global",action:!1,parameters:[]},keypress_i:{scope:"global",action:!1,parameters:[]},keypress_j:{scope:"global",action:!1,parameters:[]},keypress_k:{scope:"global",action:!1,parameters:[]},keypress_l:{scope:"global",action:!1,parameters:[]},keypress_m:{scope:"global",action:!1,parameters:[]},keypress_n:{scope:"global",action:!1,parameters:[]},keypress_o:{scope:"global",action:!1,parameters:[]},keypress_p:{scope:"global",action:!1,parameters:[]},keypress_q:{scope:"global",action:!1,parameters:[]},keypress_r:{scope:"global",action:!1,parameters:[]},keypress_s:{scope:"global",action:!1,parameters:[]},keypress_t:{scope:"global",action:!1,parameters:[]},keypress_u:{scope:"global",action:!1,parameters:[]},keypress_v:{scope:"global",action:!1,parameters:[]},keypress_w:{scope:"global",action:!1,parameters:[]},keypress_x:{scope:"global",action:!1,parameters:[]},keypress_y:{scope:"global",action:!1,parameters:[]},keypress_z:{scope:"global",action:!1,parameters:[]},keypress_up_arrow:{scope:"global",action:!1,parameters:[]},keypress_down_arrow:{scope:"global",action:!1,parameters:[]},keypress_left_arrow:{scope:"global",action:!1,parameters:[]},keypress_right_arrow:{scope:"global",action:!1,parameters:[]},keypress_space:{scope:"global",action:!1,parameters:[]}},script:E}},"Debug Texture Render":{id:"debug_texture_render",name:"Debug Texture Render",type:"script",payload:{filter:["texture2D","renderTexture2D"],description:"",category:"Debug",attributes:{viewportLeft:{description:"Left position of the viewport to be rendered by this camera.",type:"s","default":"0px"},viewportBottom:{description:"Bottom position of the viewport to be rendered by this camera.",type:"s","default":"0px"},viewportWidth:{description:"Width of the viewport to be rendered by this camera.",type:"s","default":"100%"},viewportHeight:{description:"Height of the viewport to be rendered by this camera.",type:"s","default":"100%"},renderGroup:{description:"Render passes are done in order, based on the 'render group' value. Lower numbers render first.",type:"i","default":0}},script:o}}}
};return O.addScript=function(a,b,c){M[a]={options:b,constructionScript:c}},O.prototype={constructor:O,initialize:function(a){this.assets={},this.projectId=a.projectId,this.veroldEngine=a.veroldEngine,this.veroldEngine.globalEvents.on("VAPI:addScript",this.addScript,this)},uninitialize:function(){this.veroldEngine.globalEvents.off("VAPI:addScript",this.addScript,this),a.each(this.assets,function(a,b){a.uninitialize(),delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},addScript:function(b,c,d){2===arguments.length&&(d=c,c={}),c=c||{};var e=d.toString();e=e.replace(/^function.*\{/,""),e=e.replace(/\}\s*$/,"");var f={id:b,name:c.name,type:"script",payload:{description:c.description,category:c.category,filter:c.filter,script:e}};this.veroldEngine.assetRegistry.createAsset(f,{success:function(b){b.entityModel.filter=c.filter,b.entityModel.limitPerEntity=c.limitPerEntity,b.entityModel.isAdvanced=a.isUndefined(c.isAdvanced)?!1:c.isAdvanced,b.entityModel.isBuiltIn=a.isUndefined(c.isBuiltIn)?!0:c.isBuiltIn,b.entityModel.isReserved=a.isUndefined(c.isReserved)?!0:c.isReserved,b.entityModel.isPersistent=a.isUndefined(c.isPersistent)?!1:c.isPersistent}})},initSystemAssets:function(){a.each(this.advancedComponents,function(a){this.veroldEngine.isPrimaryEngine()&&this.veroldEngine.assetRegistry.createAsset(a,{success:function(b){b.entityModel.filter=a.filter,b.entityModel.isAdvanced=!0,b.entityModel.isBuiltIn=!0,b.entityModel.limitPerEntity=a.limitPerEntity,b.entityModel.alwaysOn=a.alwaysOn}})},this),a.each(this.simpleComponents,function(a){this.veroldEngine.isPrimaryEngine()&&this.veroldEngine.assetRegistry.createAsset(a,{success:function(b){b.entityModel.filter=a.filter,b.entityModel.isAdvanced=!1,b.entityModel.isBuiltIn=!0,b.entityModel.limitPerEntity=a.limitPerEntity,b.entityModel.alwaysOn=a.alwaysOn}})},this),a.each(this.reservedComponents,function(a){this.veroldEngine.isPrimaryEngine()&&this.veroldEngine.assetRegistry.createAsset(a,{success:function(b){b.entityModel.isReserved=!0,b.entityModel.filter=a.filter,b.entityModel.isBuiltIn=!0,b.entityModel.isAdvanced=a.advanced?!0:!1,b.entityModel.limitPerEntity=a.limitPerEntity,b.entityModel.alwaysOn=a.alwaysOn}})},this),a.each(M,function(a,b){this.addScript(b,a.options,a.constructionScript)},this)},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a],this.veroldEngine.trigger("scriptDeleted",a)},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)},find:function(b){var c=[];return a.filter(this.assets,function(d){var e=!0;a.each(b,function(a,b){d.entityModel.get(b)!==a&&(e=!1)},this),e&&c.push(d)},this),c}},N.ScriptRegistry=O,O}),define("VeroldEngine/AssetRegistry/FragmentShaderAsset",["underscore","VeroldEngine/AssetRegistry/VeroldAsset"],function(a,b){var c=function(){b.call(this)};return c.prototype=new b,a.extend(c.prototype,{update:function(){}}),window.VAPI=window.VAPI||{},window.VAPI.FragmentShaderAsset=c,c}),define("VeroldEngine/AssetRegistry/VertexShaderAsset",["underscore","VeroldEngine/AssetRegistry/VeroldAsset"],function(a,b){var c=function(){b.call(this)};return c.prototype=new b,a.extend(c.prototype,{update:function(){}}),window.VAPI=window.VAPI||{},window.VAPI.VertexShaderAsset=c,c}),define("VeroldEngine/AssetRegistry/ShaderRegistry",["underscore","three","VeroldEngine/AssetRegistry/FragmentShaderAsset","VeroldEngine/AssetRegistry/VertexShaderAsset"],function(a,b,c){var d=function(){this.assets=void 0};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.projectId=a.projectId,this.veroldEngine=a.veroldEngine},uninitialize:function(){a.each(this.assets,function(a,b){a.uninitialize(),delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a],this.veroldEngine.trigger("shaderDeleted",a)},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("VeroldEngine/AssetRegistry/HTMLAsset",["underscore","VeroldEngine/AssetRegistry/VeroldAsset"],function(a,b){var c=function(){b.call(this)};return c.prototype=new b,a.extend(c.prototype,{update:function(){}}),window.VAPI=window.VAPI||{},window.VAPI.HTMLAsset=c,c}),define("VeroldEngine/AssetRegistry/HTMLRegistry",["underscore","three","VeroldEngine/AssetRegistry/HTMLAsset"],function(a,b,c){var d=function(){this.assets=void 0};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.projectId=a.projectId,this.veroldEngine=a.veroldEngine},uninitialize:function(){a.each(this.assets,function(a,b){a.uninitialize(),delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a],this.veroldEngine.trigger("htmlDeleted",a)},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("VeroldEngine/AssetRegistry/CSSAsset",["underscore","VeroldEngine/AssetRegistry/VeroldAsset"],function(a,b){var c=function(){b.call(this)};return c.prototype=new b,a.extend(c.prototype,{update:function(){}}),window.VAPI=window.VAPI||{},window.VAPI.CSSAsset=c,c}),define("VeroldEngine/AssetRegistry/CSSRegistry",["underscore","three","VeroldEngine/AssetRegistry/CSSAsset"],function(a,b,c){var d=function(){this.assets=void 0};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.projectId=a.projectId,this.veroldEngine=a.veroldEngine},uninitialize:function(){a.each(this.assets,function(a,b){a.uninitialize(),delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a],this.veroldEngine.trigger("cssDeleted",a)},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("VeroldEngine/AssetRegistry/AudioAsset",["underscore","VeroldEngine/AssetRegistry/VeroldAsset","VeroldEngine/Loaders/MediaLoader"],function(a,b,c){var d=function(){b.call(this)};return d.prototype=new b,a.extend(d.prototype,{uninitialize:function(){this.threeData&&this.threeData.pause(),b.prototype.uninitialize.call(this)},_loadThreeData:function(a,b){function d(c){var d=f.entityModel.get("payload");console.log("Audio ready to play:",g.name),f.threeData=c,d.state=d.autoPlay?"play":"pause",f.applyPayloadSettings_loaded(a.payload,b),f.trigger("load_progress",f),f.trigger("load_base",f)}var e,f=this,g=this.entityModel.toJSON(),h=new c;a.payload.loop=!0,a.payload.state=!0,e=this.getResources({sampleRate:44100}),h.loadAudio(e,d),console.log("Loading audio:",g.name)},applyPayloadSettings_loaded:function(a){if(this.threeData&&a){var b=this.entityModel.get("payload");if(a.loop&&(this.threeData.loop=b.loop),a.state)switch(b.state){case"pause":this.threeData.pause();break;case"play":this.threeData.play()}}},getResources:function(b){var c=this.entityModel.getResources();return b=b||{},void 0!==b.sampleRate&&(c=a.filter(c,function(a){return a.properties.sampleRate===b.sampleRate})),c}}),window.VAPI=window.VAPI||{},window.VAPI.AudioAsset=d,d}),define("VeroldEngine/AssetRegistry/AudioRegistry",["underscore","VeroldEngine/AssetRegistry/AudioAsset"],function(a,b){var c=function(){this.assets=void 0};return c.prototype={constructor:c,initialize:function(a){this.assets={},this.projectId=a.projectId,this.veroldEngine=a.veroldEngine},uninitialize:function(){a.each(this.assets,function(a,b){a.uninitialize(),delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var c=new b;c.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[c.id]=c,this.veroldEngine.entities[c.id]=c,this.assets[c.id]=c},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a],this.veroldEngine.trigger("audioDeleted",a)},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},c}),define("VeroldEngine/AssetRegistry/VideoAsset",["underscore","three","VeroldEngine/AssetRegistry/VeroldAsset"],function(a,b,c){var d=function(){c.call(this)};return d.prototype=new c,a.extend(d.prototype,{initialize:function(a){c.prototype.initialize.call(this,a)},update:function(){}}),window.VAPI.VideoAsset=d,d}),define("VeroldEngine/AssetRegistry/VideoRegistry",["underscore","three","VeroldEngine/AssetRegistry/VideoAsset"],function(a,b,c){var d=function(){this.assets=void 0};return d.prototype={constructor:d,initialize:function(a){this.assets={},this.projectId=a.projectId,this.veroldEngine=a.veroldEngine},uninitialize:function(){a.each(this.assets,function(a,b){a.uninitialize(),delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0,this.projectId=void 0},_initAssetDependencies:function(){a.each(this.assets,function(a){a._initDependenciesList()},this)},getAssetById:function(a){return this.veroldEngine.assetRegistry.getAssetById.call(this,a)},getAssets:function(a){return this.veroldEngine.assetRegistry.getAssets.call(this,a,this.assets)},createAsset:function(a,b){this.veroldEngine.assetRegistry.createAsset(a,b)},destroyAsset:function(a,b){this.veroldEngine.assetRegistry.destroyAsset(a,b)},registerEntityAsAsset:function(a){a||console.error(this.veroldEngine.engineName+" - Trying to create an asset with no backbone model.");var b=new c;b.initialize({entityModel:a,veroldEngine:this.veroldEngine,projectId:this.veroldEngine.assetRegistry.projectId,registry:this}),this.veroldEngine.assetRegistry.assets[b.id]=b,this.veroldEngine.entities[b.id]=b,this.assets[b.id]=b},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.unregisterEntityAsAsset(a),delete this.assets[a],this.veroldEngine.trigger("videoDeleted",a)},update:function(){},set:function(a,b){this.veroldEngine.assetRegistry.set(a,b)},unset:function(a,b){this.veroldEngine.assetRegistry.unset(a,b)}},d}),define("VeroldEngine/AssetRegistry/AssetRegistry",["underscore","three","async","VeroldEngine/models/entity","VeroldEngine/libs/uuid","VeroldEngine/AssetRegistry/ApplicationRegistry","VeroldEngine/AssetRegistry/SceneRegistry","VeroldEngine/AssetRegistry/PrefabRegistry","VeroldEngine/AssetRegistry/GeometryRegistry","VeroldEngine/AssetRegistry/MaterialRegistry","VeroldEngine/AssetRegistry/TextureRegistry","VeroldEngine/AssetRegistry/AnimationRegistry","VeroldEngine/AssetRegistry/PoseRegistry","VeroldEngine/AssetRegistry/ScriptRegistry","VeroldEngine/AssetRegistry/ShaderRegistry","VeroldEngine/AssetRegistry/HTMLRegistry","VeroldEngine/AssetRegistry/CSSRegistry","VeroldEngine/AssetRegistry/AudioRegistry","VeroldEngine/AssetRegistry/VideoRegistry"],function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var t=function(a){this.assets=void 0,this.veroldEngine=void 0,this.entityCollection=void 0,this.Scripts=new n(a),this.Applications=new f(a),this.Scenes=new g(a),this.Prefabs=new h(a),this.Models=this.Prefabs,this.Geometries=new i(a),this.Materials=new j(a),this.Textures=new k(a),this.Animations=new l(a),this.Poses=new m(a),this.Audio=new r(a),this.Video=new s(a),this.HTML=new p(a),this.CSS=new q(a),this.Shaders=new o(a),this.waitingForEntities={}};return t.prototype={constructor:t,initialize:function(a,b){var c=this;this.assets={},this.veroldEngine=a.veroldEngine,this.entityCollection=a.entities,this.Scripts.initialize(a),this.Textures.initialize(a),this.Materials.initialize(a),this.Applications.initialize(a),this.Scenes.initialize(a),this.Prefabs.initialize(a),this.Geometries.initialize(a),this.Animations.initialize(a),this.Poses.initialize(a),this.Audio.initialize(a),this.Video.initialize(a),this.CSS.initialize(a),this.HTML.initialize(a),this.Shaders.initialize(a),this.entityCollection&&(this.entityCollection.on("reset",this.onEntityCollectionReset,this),this.entityCollection.on("add",this.onEntityAssetAdded,this),this.entityCollection.on("remove",this.onEntityAssetRemoved,this)),this._initProjectScriptAssets(a.entities),this.Scripts.initSystemAssets(),setTimeout(function(){c._initProjectAssets(a.entities),setTimeout(function(){c._initProjectObjects(a.entities),setTimeout(function(){c.Materials.initSystemAssets(),c.Scenes.initSystemAssets(),c.Prefabs.initSystemAssets(),c._initAssetDependencies(),c._initComponents(),c.veroldEngine.globalEvents.on("remoteScene:saveEntity",c.onRemoteEntitySave,c),c.veroldEngine.globalEvents.on("remoteScene:removeEntity",c.onRemoteEntityDelete,c),"function"==typeof b&&b()},0)},0)},0)},uninitialize:function(){console.log(this.veroldEngine.engineName+" - Uninitializing AssetRegistry."),this.Scenes.uninitialize(),this.Scenes=void 0,this.Prefabs.uninitialize(),this.Prefabs=void 0,this.Models=void 0,this.Geometries.uninitialize(),this.Geometries=void 0,this.Materials.uninitialize(),this.Materials=void 0,this.Textures.uninitialize(),this.Textures=void 0,this.Animations.uninitialize(),this.Animations=void 0,this.Poses.uninitialize(),this.Poses=void 0,this.Audio.uninitialize(),this.Audio=void 0,this.Video.uninitialize(),this.Video=void 0,this.CSS.uninitialize(),this.CSS=void 0,this.HTML.uninitialize(),this.HTML=void 0,this.Shaders.uninitialize(),this.Shaders=void 0,this.Applications.uninitialize(),this.Applications=void 0,this.Scripts.uninitialize(),this.Scripts=void 0,this.entityCollection&&(this.entityCollection.off("reset",this.onEntityCollectionReset,this),this.entityCollection.off("add",this.onEntityAssetAdded,this),this.entityCollection.off("remove",this.onEntityAssetRemoved,this),this.entityCollection=void 0),this.veroldEngine.globalEvents.off("remoteScene:saveEntity",this.onRemoteEntitySave,this),this.veroldEngine.globalEvents.off("remoteScene:removeEntity",this.onRemoteEntityDelete,this),a.each(this.assets,function(a,b){delete this.assets[b]},this),this.assets=void 0,this.veroldEngine=void 0},_initProjectScriptAssets:function(a){for(var b=0;b<a.models.length;b++){var c=a.models[b];if("script"===c.get("type")){var d=this.generateUniqueAssetName(c.get("name"));c.set({name:d},{silent:!0});var e=this.getRegistryByType(c.get("type"));e&&e.registerEntityAsAsset(c)}}},_initProjectAssets:function(a){for(var b=0;b<a.models.length;b++){var c=a.models[b];if(c.isAsset()&&!this.assets[c.get("id")]&&"folder"!==c.get("type")){var d=this.generateUniqueAssetName(c.get("name"));c.veroldEngine=this.veroldEngine,c.set({name:d},{silent:!0});var e=this.getRegistryByType(c.get("type"));e&&e.registerEntityAsAsset(c)}}},_initProjectObjects:function(a){var b,c,d={};for(c=0;c<a.models.length;c++)b=a.models[c],b.isAsset()&&(d[b.get("id")]=b);var e=[];for(c=0;c<a.models.length;c++)if(b=a.models[c],!b.isAsset()){b.veroldEngine=this.veroldEngine;var f=d[b.get("parentAssetId")];f?(e.push(b),f.subEntities.add(b),b.collection=f.subEntities):(console.warn("The parent asset, "+b.get("parentAssetId")+", of entity, "+b.id+", doesn't exist."),this.veroldEngine.isWritable&&b.destroy({silent:!0,save:!0}))}for(c=0;c<e.length;c++)a.remove(e[c],{silent:!0});d=null,e=null},_initAssetDependencies:function(){this.Textures._initAssetDependencies(),this.Audio._initAssetDependencies(),this.Video._initAssetDependencies(),this.Materials._initAssetDependencies(),this.Prefabs._initAssetDependencies(),this.Geometries._initAssetDependencies(),this.Animations._initAssetDependencies(),this.Poses._initAssetDependencies(),this.Scripts._initAssetDependencies(),this.Scenes._initAssetDependencies(),this.Applications._initAssetDependencies(),this.HTML._initAssetDependencies(),this.CSS._initAssetDependencies(),this.Shaders._initAssetDependencies()},_initComponents:function(){a.each(this.assets,function(b){b.initializeComponents(),a.each(b.objects,function(a){a.initializeComponents()},this)},this)},getAssetById:function(a){return this.assets[a]?this.assets[a]:null},getAssetByName:function(a){var b=this.getAssets({name:a});return b&&b.length?b[0]:null},getAssetsByName:function(a){return this.getAssets({name:a})},getAssets:function(b,c){var d=c?c:this.assets;if(a.isObject(b)){var e=[];return a.each(d,function(a){a.isMatch(b)&&e.push(a)},this),e}return d},createAsset:function(a,b){b||(b={});var c;a.id||b.persistent||(c=this.veroldEngine.engineName+" - AssetRegistry.createAsset : You must specify a unique id for non-persistent assets.");var f=this.getRegistryByType(a.type);if(f){if(this.assets[a.id]){var g=e();console.warn(this.veroldEngine.engineName+" - AssetRegistry.createAsset : Trying to create asset with id, "+a.id+", that already exists. Changing the is to "+g),a.id=g}}else c=this.veroldEngine.engineName+" - AssetRegistry.createAsset : Trying to create asset of unsupported type, "+a.type;if(c)return console.error(c),void(b.failure&&b.failure(c));a.name||(a.name=""),a.name=this.generateUniqueAssetName(a.name);var h=new d(a);h.veroldEngine=this.veroldEngine,h.isPersistent=b.persistent||b.alreadyInDatabase?!0:!1,b.alreadyInDatabase||!h.isPersistent?this._addEntityAsset(h,b):this._addNewEntityAsset(h,b)},destroyAsset:function(b,d){var e=this.assets[b],f=this;if(!e)return console.warn(this.veroldEngine.engineName+" - AssetRegistry.destroy : You must specify a valid asset ID to destroy."),void(d&&d.failure&&d.failure());d||(d={}),e.unload(),e.flaggedForDelete=!0;var g=e.entityModel;if(g.isPersistent&&d.save){var h={};h.connectionId=window.socket?window.socket.io.engine.id:null,h.syncObjects={stream1:"sceneUpdates"},h.success=function(){d.success&&d.success()},g.veroldEngine=void 0,g.destroy(h)}else{var i=a.values(e.objects);c.forEach(i,function(a,b){e.destroyObject(a.id),b()},function(){f.entityCollection.remove(g),d.success&&d.success()})}},whenAssetRegistered:function(a,b){var c=this.getAssetById(a);c&&b?b.call(this,c):b&&(this.waitingForEntities[a]||(this.waitingForEntities[a]=[]),this.waitingForEntities[a].push(b))},_addNewEntityAsset:function(a,b){var c=this,d=a.toJSON();delete d.id,a.unset("id",{silent:!0}),delete a.id,a.set({projectId:this.entityCollection.project.id},{silent:!0}),window.socket&&window.socket.socket&&(d.connectionId=window.socket.io.engine.id),a.save(d,{wait:!0,success:function(a){console.log(c.veroldEngine.engineName+" - New Asset saved: ",d),c._addEntityAsset(a,b)},error:function(a,c){b&&b.failure&&b.failure(a,c)}})},_addEntityAsset:function(a,b){var c=this;a.set({parentAssetId:a.id},{silent:!0}),a.collection=this.entityCollection,this.assets[a.id]?b.success&&b.success(c.assets[a.id]):(this.whenAssetRegistered(a.id,b.success),this.entityCollection.add(a))},onEntityCollectionReset:function(){console.log(this.veroldEngine.engineName+" - TODO - Entities Reset ",arguments)},onEntityAssetAdded:function(a){var b=this.getRegistryByType(a.get("type"));if(b){b.registerEntityAsAsset(a);var c=this.getAssetById(a.get("id"));if(c){var d=this.waitingForEntities[c.id];if(d)for(var e=0;e<d.length;e++)d[e].call(this,c)}}},onEntityAssetRemoved:function(a){var b=this.getRegistryByType(a.get("type"));b&&(b.unregisterEntityAsAsset(a.id),this.veroldEngine.trigger("assetDeleted",a.id))},unregisterEntityAsAsset:function(a){this.veroldEngine.assetRegistry.assets[a]&&(this.veroldEngine.assetRegistry.assets[a].uninitialize(),delete this.veroldEngine.assetRegistry.assets[a])},onRemoteEntitySave:function(a){function b(a){var b=d.assets[a.parentAssetId];b?b.createObject(a,{alreadyInDatabase:!0,remote:!0}):(console.log("Adding remotely-created "+a.type+" asset, "+a.id),a.parentAssetId=a.id,d.createAsset(a,{alreadyInDatabase:!0,remote:!0}))}var c,d=this;if(this.veroldEngine.isPrimaryEngine()&&a&&a.id)if(a.id!==a.parentAssetId&&a.parentAssetId)if(c=d.assets[a.parentAssetId]){var e=c.getObjectById(a.id);e?e.hardSet(a,{remote:!0}):b(a)}else console.warn("Received an update for an object, ",a,", that is part of an asset, "+a.parentAssetId+", that doesn't exist.");else c=d.assets[a.id],c?c.hardSet(a,{remote:!0}):b(a);else this.veroldEngine.isPrimaryEngine()&&console.warn("Oops. We're not handling this: ",a)},onRemoteEntityDelete:function(a){if(this.veroldEngine.isPrimaryEngine()&&a&&a.id){var b=this.assets[a.parentAssetId];if(b&&a.id!==a.parentAssetId){var c=b.getObjectById(a.id);c&&b.entityModel.subEntities.remove(c.entityModel)}else b=this.assets[a.id],b&&this.entityCollection.remove(b.entityModel)}},getPrototypeForType:function(a){switch(a){case"application":return VAPI.ApplicationAsset.prototype;case"object":return VAPI.VeroldObject.prototype;case"asset":return VAPI.VeroldAsset.prototype;case"prefab":return VAPI.CameraObject.prototype;case"material":return VAPI.CameraObject.prototype;case"geometry":return VAPI.CameraObject.prototype;case"texture2D":return VAPI.Texture2DAsset.prototype;case"renderTexture2D":return VAPI.RenderTexture2DAsset.prototype;case"textureCube":return VAPI.TextureCubeAsset.prototype;case"renderTextureCube":return VAPI.RenderTextureCubeAsset.prototype;case"model":return VAPI.ModelObject.prototype;case"mesh":return VAPI.BaseMeshObject.prototype;case"camera":return VAPI.CameraObject.prototype;case"light":return VAPI.LightObject.prototype;case"node":return VAPI.VeroldObject.prototype}},getRegistryByType:function(a){return"application"===a?this.Applications:"scene"===a?this.Scenes:"model"===a||"prefab"===a?this.Prefabs:"geometry"===a?this.Geometries:"material"===a?this.Materials:"texture2D"===a||"textureCube"===a||"textureVideo"===a||"renderTexture2D"===a||"renderTextureCube"===a?this.Textures:"animation"===a?this.Animations:"pose"===a?this.Poses:"script"===a?this.Scripts:"audio"===a?this.Audio:"video"===a?this.Video:"css"===a?this.CSS:"html"===a?this.HTML:"vertexShader"===a||"fragmentShader"===a?this.Shaders:"folder"===a?void 0:(console.error("Request made for non-existent asset type, "+a),null)},update:function(a){this.Scenes.update(a),this.Materials.update(a),this.Animations.update(a)},set:function(a,b){var c=this.assets[a.id];c?c.set(a,b):console.error(this.veroldEngine.engineName+" - Trying to 'set' properties without specifying a valid asset ID.")},unset:function(a,b){var c=this.assets[a.id];c?c.unset(a,b):console.error(this.veroldEngine.engineName+" - Trying to 'unset' properties without specifying a valid asset ID.")},generateUniqueAssetID:function(a){for(var b=a,c=1;this.assets[b];)b=a+"_"+c++;return b},generateUniqueAssetName:function(a,b){var c=a,d=0,e=!1;do{e&&(c=a+"_"+d++),e=!1;for(var f in this.assets){var g=this.assets[f].entityModel.get("name");if(g===c&&(!b||b.id!==f)){e=!0;break}}}while(e);return c}},t}),define("detector",[],function(){return Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");return a.style.fontFamily="monospace",a.style.fontSize="13px",a.style.textAlign="center",a.style.background="#eee",a.style.color="#000",a.style.padding="1em",a.style.width="475px",a.style.margin="5em auto 0",this.webgl||(a.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/">here</a>.'].join("\n")),a},addGetWebGLMessage:function(a){var b,c,d;a=a||{},b=void 0!==a.parent?a.parent:document.body,c=void 0!==a.id?a.id:"oldie",d=Detector.getWebGLErrorMessage(),d.id=c,b.appendChild(d)}}}),define("VeroldEngine/BaseRenderer",["underscore","three","detector"],function(a,b){var c=function(a){this.canvas=void 0,this.threeRenderer=void 0,this.veroldEngine=a,this.caps={},this.antialias=!0,this.preserveDrawingBuffer=!0,this.premultipliedAlpha=!1,this.devicePixelRatio=1,this.alpha=!0,this.depth=!0,this.stencil=!1};return c.prototype={constructor:c,initialize:function(a,c){c||(c={}),this.canvas=a,this.antialias=void 0!==c.antialias?c.antialias:this.antialias,this.preserveDrawingBuffer=void 0!==c.preserveDrawingBuffer?c.preserveDrawingBuffer:this.preserveDrawingBuffer,this.premultipliedAlpha=void 0!==c.premultipliedAlpha?c.premultipliedAlpha:this.premultipliedAlpha,this.alpha=void 0!==c.alpha?c.alpha:this.alpha,this.depth=void 0!==c.depth?c.depth:this.depth,this.stencil=void 0!==c.stencil?c.stencil:this.stencil,this.glContext=a.getContext("webgl")||a.getContext("experimental-webgl"),VAPI.browserCaps.isWebGLEnabled()?(this.threeRenderer=new b.WebGLRenderer({canvas:this.canvas,antialias:this.antialias,preserveDrawingBuffer:this.preserveDrawingBuffer,premultipliedAlpha:this.premultipliedAlpha,alpha:this.alpha,depth:this.depth,stencil:this.stencil,logarithmicDepthBuffer:this.logarithmicDepthBuffer}),this.threeRenderer.setPixelRatio(this.devicePixelRatio)):(console.warn("WebGL not supported so falling back to canvas renderer."),this.threeRenderer=new b.CanvasRenderer),this.storeGPUCaps(),(this.getGPUCapability("MAX_FRAGMENT_UNIFORM_VECTORS")<29||VAPI.isMobile())&&(this.threeRenderer.maxDirLights=Math.min(this.maxDirLights,1),this.threeRenderer.maxPointLights=Math.min(this.maxPointLights,1),this.threeRenderer.maxShadows=Math.min(this.maxShadows,1)),this.threeRenderer.autoClear=!1,this.threeRenderer.gammaInput=!0,this.threeRenderer.gammaOutput=!0},uninitialize:function(){this.veroldEngine=void 0,this.threeRenderer=void 0,this.canvas=void 0,this.caps=void 0},storeGPUCaps:function(){if(console.log("WebGL VENDOR is "+this.glContext.getParameter(this.glContext.VENDOR)),console.log("WebGL SHADING_LANGUAGE_VERSION is "+this.glContext.getParameter(this.glContext.SHADING_LANGUAGE_VERSION)),console.log("WebGL RENDERER is "+this.glContext.getParameter(this.glContext.RENDERER)),!navigator.isCocoonJS){this.caps.MAX_COMBINED_TEXTURE_IMAGE_UNITS=this.glContext.getParameter(this.glContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.caps.MAX_CUBE_MAP_TEXTURE_SIZE=this.glContext.getParameter(this.glContext.MAX_CUBE_MAP_TEXTURE_SIZE),this.caps.MAX_FRAGMENT_UNIFORM_VECTORS=this.glContext.getParameter(this.glContext.MAX_FRAGMENT_UNIFORM_VECTORS),this.caps.MAX_RENDERBUFFER_SIZE=this.glContext.getParameter(this.glContext.MAX_RENDERBUFFER_SIZE),this.caps.MAX_TEXTURE_IMAGE_UNITS=this.glContext.getParameter(this.glContext.MAX_TEXTURE_IMAGE_UNITS),this.caps.MAX_TEXTURE_SIZE=this.glContext.getParameter(this.glContext.MAX_TEXTURE_SIZE),this.caps.MAX_VARYING_VECTORS=this.glContext.getParameter(this.glContext.MAX_VARYING_VECTORS),this.caps.MAX_VERTEX_ATTRIBS=this.glContext.getParameter(this.glContext.MAX_VERTEX_ATTRIBS),this.caps.MAX_VERTEX_TEXTURE_IMAGE_UNITS=this.glContext.getParameter(this.glContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.caps.MAX_VERTEX_UNIFORM_VECTORS=this.glContext.getParameter(this.glContext.MAX_VERTEX_UNIFORM_VECTORS),this.caps.MAX_VIEWPORT_DIMS=this.glContext.getParameter(this.glContext.MAX_VIEWPORT_DIMS),this.caps.ALIASED_POINT_SIZE_RANGE=this.glContext.getParameter(this.glContext.ALIASED_POINT_SIZE_RANGE),this.caps.ALIASED_LINE_WIDTH_RANGE=this.glContext.getParameter(this.glContext.ALIASED_LINE_WIDTH_RANGE),this.caps.SAMPLE_BUFFERS=this.glContext.getParameter(this.glContext.SAMPLE_BUFFERS),this.caps.RED_BITS=this.glContext.getParameter(this.glContext.RED_BITS),this.caps.GREEN_BITS=this.glContext.getParameter(this.glContext.GREEN_BITS),this.caps.BLUE_BITS=this.glContext.getParameter(this.glContext.BLUE_BITS),this.caps.ALPHA_BITS=this.glContext.getParameter(this.glContext.ALPHA_BITS),this.caps.DEPTH_BITS=this.glContext.getParameter(this.glContext.DEPTH_BITS),this.caps.EXTENSIONS=this.glContext.getSupportedExtensions(),this.caps.COMPRESSED_TEXTURE_FORMATS=this.glContext.getParameter(this.glContext.COMPRESSED_TEXTURE_FORMATS);
{var a=this.glContext.getExtension("OES_texture_float"),b=(this.glContext.getExtension("OES_texture_float_linear"),this.glContext.getExtension("OES_standard_derivatives"),this.glContext.getExtension("ANGLE_instanced_arrays"),this.glContext.getExtension("EXT_texture_filter_anisotropic")||this.glContext.getExtension("MOZ_EXT_texture_filter_anisotropic")||this.glContext.getExtension("WEBKIT_EXT_texture_filter_anisotropic")),c=this.glContext.getExtension("WEBGL_compressed_texture_s3tc")||this.glContext.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||this.glContext.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),d=this.glContext.getExtension("WEBGL_compressed_texture_atc")||this.glContext.getExtension("MOZ_WEBGL_compressed_texture_atc")||this.glContext.getExtension("WEBKIT_WEBGL_compressed_texture_atc"),e=this.glContext.getExtension("WEBGL_compressed_texture_pvrtc")||this.glContext.getExtension("MOZ_WEBGL_compressed_texture_pvrtc")||this.glContext.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");this.glContext.getExtension("OES_element_index_uint")}this.caps.maxAnisotropy=b?this.glContext.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,this.caps.supportsVertexTextures=this.getGPUCapability("MAX_VERTEX_TEXTURE_IMAGE_UNITS")>0,this.caps.supportsBoneTextures=this.caps.supportsVertexTextures&&a,this.caps.compressedTextureFormats={},this.caps.compressedTextureFormats.S3TC=c?!0:!1,this.caps.compressedTextureFormats.ATC=d?!0:!1,this.caps.compressedTextureFormats.PVRTC=e?!0:!1;for(var f in this.caps)console.log("GPU Capabilities: "+f+" : "+this.caps[f])}},getGPUCapability:function(a){return this.caps[a]},supportsCompressedTextureS3TC:function(){return this.caps.compressedTextureFormats.S3TC},supportsCompressedTexturePVRTC:function(){return this.caps.compressedTextureFormats.PVRTC},supportsCompressedTextureATC:function(){return this.caps.compressedTextureFormats.ATC},getWidth:function(){return this.canvas.clientWidth},getHeight:function(){return this.canvas.clientHeight},getCanvasWidth:function(){return this.canvas.width},getCanvasHeight:function(){return this.canvas.height},getCanvas:function(){return this.canvas}},c}),define("VeroldEngine/Input",["underscore","three"],function(a){function b(a,b){this.x=a||0,this.y=b||0}function c(a,b){this.event=a,this.name=b}function d(a){var b=a.getBoundingClientRect();return{top:b.top+document.body.scrollTop,left:b.left+document.body.scrollLeft}}var e=function(){this.veroldEngine=void 0,this.inputQueue=[],this.mouseButtonState=new Array(3),this.mouseButtonStatePrevious=new Array(3),this.mouseButtons={left:0,middle:1,right:2},this.mousePosition=new b,this.mousePositionPercent=new b,this.mousePreviousPosition=new b,this.mouseDragState=new Array(3),this.mouseDragStatePrevious=new Array(3),this.mouseDragDistance=[{},{},{}],this.touchPosition=new b,this.touchPositionPercent=new b,this.touchPreviousPosition=new b,this.touchDragState=!1,this.touchDragStatePrevious=!1,this.keyState=new Array(256),this.keyStatePrevious=new Array(256),this.keyCodes={tab:9,shift:16,ctrl:17,alt:18,esc:27,space:32,rightArrow:39,leftArrow:37,upArrow:38,downArrow:40,"delete":46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,cmd:91,numpad_0:96,numpad_1:97,numpad_2:98,numpad_3:99,numpad_4:100,numpad_5:101,numpad_6:102,numpad_7:103,numpad_8:104,numpad_9:105,">":187,"<":188,_:189,">":190,"/":191,"[":219,"]":221},this.defaultSettings={enable:!0,mouseEvents:{enable:!0,scroll:!0,scroll_preventDefault:!1,move:!0,down:!0,up:!0,leave:!0,recordState:!0,contextmenu:!0,contextmenu_preventDefault:!0},touchEvents:{enable:!0,start:!0,start_preventDefault:!0,end:!0,cancel:!0,leave:!0,move:!0,move_preventDefault:!0},keyEvents:{enable:!0,down:!0,up:!0,recordState:!0,preventDefault:!1}}};return e.prototype={constructor:e,initialize:function(a){if(this.mousePosition=new b,this.mousePreviousPosition=new b,this.touchPosition=new b,this.touchPreviousPosition=new b,this.veroldEngine=a.veroldEngine,this.veroldEngine.on("preUpdate",this.preUpdate,this),this.veroldEngine.on("postUpdate",this.postUpdate,this),this.veroldEngine.globalEvents.trigger("veroldEngine:"),this.canvas=this.veroldEngine.canvas,this.pointerLockElement=this.canvas,this.pointerLockElement.requestPointerLock=this.pointerLockElement.requestPointerLock||this.pointerLockElement.mozRequestPointerLock||this.pointerLockElement.webkitRequestPointerLock,document.pointerLockElement=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement,document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock,a.inputSettings=a.inputSettings?a.inputSettings:this.defaultSettings,a.inputSettings.mouseEvents=a.inputSettings.mouseEvents?a.inputSettings.mouseEvents:this.defaultSettings.mouseEvents,a.inputSettings.touchEvents=a.inputSettings.touchEvents?a.inputSettings.touchEvents:this.defaultSettings.touchEvents,a.inputSettings.keyEvents=a.inputSettings.keyEvents?a.inputSettings.keyEvents:this.defaultSettings.keyEvents,this.settings=a.inputSettings,this.settings.enable=void 0!==this.settings.enable?this.settings.enable:this.defaultSettings.enable,this.settings.mouseEvents.enable=void 0!==this.settings.mouseEvents.enable?this.settings.mouseEvents.enable:this.defaultSettings.mouseEvents.enable,this.settings.mouseEvents.up=void 0!==this.settings.mouseEvents.up?this.settings.mouseEvents.up:this.defaultSettings.mouseEvents.up,this.settings.mouseEvents.down=void 0!==this.settings.mouseEvents.down?this.settings.mouseEvents.down:this.defaultSettings.mouseEvents.down,this.settings.mouseEvents.move=void 0!==this.settings.mouseEvents.move?this.settings.mouseEvents.move:this.defaultSettings.mouseEvents.move,this.settings.mouseEvents.scroll=void 0!==this.settings.mouseEvents.scroll?this.settings.mouseEvents.scroll:this.defaultSettings.mouseEvents.scroll,this.settings.mouseEvents.scroll_preventDefault=void 0!==this.settings.mouseEvents.scroll_preventDefault?this.settings.mouseEvents.scroll_preventDefault:this.defaultSettings.mouseEvents.scroll_preventDefault,this.settings.mouseEvents.leave=void 0!==this.settings.mouseEvents.leave?this.settings.mouseEvents.leave:this.defaultSettings.mouseEvents.leave,this.settings.mouseEvents.recordState=void 0!==this.settings.mouseEvents.recordState?this.settings.mouseEvents.recordState:this.defaultSettings.mouseEvents.recordState,this.settings.mouseEvents.contextmenu=void 0!==this.settings.mouseEvents.contextmenu?this.settings.mouseEvents.contextmenu:this.defaultSettings.mouseEvents.contextmenu,this.settings.mouseEvents.contextmenu_preventDefault=void 0!==this.settings.mouseEvents.contextmenu_preventDefault?this.settings.mouseEvents.contextmenu_preventDefault:this.defaultSettings.mouseEvents.contextmenu_preventDefault,this.settings.keyEvents.up=void 0!==this.settings.keyEvents.up?this.settings.keyEvents.up:this.defaultSettings.keyEvents.up,this.settings.keyEvents.down=void 0!==this.settings.keyEvents.down?this.settings.keyEvents.down:this.defaultSettings.keyEvents.down,this.settings.keyEvents.recordState=void 0!==this.settings.keyEvents.recordState?this.settings.keyEvents.recordState:this.defaultSettings.keyEvents.recordState,this.settings.keyEvents.down_preventDefault=void 0!==this.settings.keyEvents.down_preventDefault?this.settings.keyEvents.down_preventDefault:this.defaultSettings.keyEvents.down_preventDefault,this.settings.touchEvents.enable=void 0!==this.settings.touchEvents.enable?this.settings.touchEvents.enable:this.defaultSettings.touchEvents.enable,this.settings.touchEvents.start=void 0!==this.settings.touchEvents.start?this.settings.touchEvents.start:this.defaultSettings.touchEvents.start,this.settings.touchEvents.end=void 0!==this.settings.touchEvents.end?this.settings.touchEvents.end:this.defaultSettings.touchEvents.end,this.settings.touchEvents.cancel=void 0!==this.settings.touchEvents.cancel?this.settings.touchEvents.cancel:this.defaultSettings.touchEvents.cancel,this.settings.touchEvents.leave=void 0!==this.settings.touchEvents.leave?this.settings.touchEvents.leave:this.defaultSettings.touchEvents.leave,this.settings.touchEvents.move=void 0!==this.settings.touchEvents.move?this.settings.touchEvents.move:this.defaultSettings.touchEvents.move,this.onMouseMove=this.onMouseMove.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onMouseWheel=this.onMouseWheel.bind(this),this.onMouseLeave=this.onMouseLeave.bind(this),this.onContextMenu=this.onContextMenu.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this),this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onTouchCancel=this.onTouchCancel.bind(this),this.onTouchLeave=this.onTouchLeave.bind(this),this.onTouchMove=this.onTouchMove.bind(this),this.settings.enable||a.handleInput){var c=this.settings.mouseEvents;c.enable&&(c.move&&this.canvas.addEventListener("mousemove",this.onMouseMove),c.down&&this.canvas.addEventListener("mousedown",this.onMouseDown),c.scroll&&this.canvas.addEventListener("wheel",this.onMouseWheel),document.body.addEventListener("mouseleave",this.onMouseLeave),this.canvas.addEventListener("contextmenu",this.onContextMenu));var d=this.settings.keyEvents;d.enable&&(d.down&&document.addEventListener("keydown",this.onKeyDown),d.up&&document.addEventListener("keyup",this.onKeyUp));var e=this.settings.touchEvents;e.enable&&(e.start&&this.canvas.addEventListener("touchstart",this.onTouchStart),e.end&&this.canvas.addEventListener("touchend",this.onTouchEnd),e.cancel&&this.canvas.addEventListener("touchcancel",this.onTouchCancel),e.leave&&this.canvas.addEventListener("touchleave",this.onTouchLeave),e.move&&this.canvas.addEventListener("touchmove",this.onTouchMove))}this.onBlur=this.clearKeyStates.bind(this),window.addEventListener("blur",this.onBlur,!1)},uninitialize:function(){window.removeEventListener("blur",this.onBlur,!1),this.canvas&&(this.canvas.removeEventListener("touchstart",this.onTouchStart),this.canvas.removeEventListener("touchend",this.onTouchEnd),this.canvas.removeEventListener("touchcancel",this.onTouchCancel,this),this.canvas.removeEventListener("touchleave",this.onTouchLeave,this),this.canvas.removeEventListener("touchmove",this.onTouchMove),this.canvas.removeEventListener("mousemove",this.onMouseMove),document.removeEventListener("mouseup",this.onMouseUp),this.canvas.removeEventListener("mousedown",this.onMouseDown),this.canvas.removeEventListener("wheel",this.onMouseWheel),document.removeEventListener("keydown",this.onKeyDown),document.removeEventListener("keyup",this.onKeyUp),document.body.removeEventListener("mouseleave",this.onMouseLeave),this.canvas.removeEventListener("contextmenu",this.onContextMenu)),this.veroldEngine.off("preUpdate",this.preUpdate,this),this.veroldEngine.off("postUpdate",this.postUpdate,this),this.mouseButtonState=void 0,this.mouseButtonStatePrevious=void 0,this.mouseDragState=void 0,this.mouseDragStatePrevious=void 0,this.mousePosition=void 0,this.mousePreviousPosition=void 0,this.touchPosition=void 0,this.touchPreviousPosition=void 0,this.keyState=void 0,this.keyStatePrevious=void 0,this.veroldEngine=void 0},onKeyUp:function(a){this.keyState[a.keyCode]=!1,this.inputQueue.push(new c(a,"keyUp"))},onKeyDown:function(a){(!document.activeElement||"true"!==document.activeElement.getAttribute("contenteditable")&&"DIV"!==document.activeElement.tagName&&"INPUT"!==document.activeElement.tagName&&"SELECT"!==document.activeElement.tagName&&"OPTION"!==document.activeElement.tagName&&"TEXTAREA"!==document.activeElement.tagName)&&(this.settings.keyEvents.preventDefault&&a.preventDefault(),this.keyState[a.keyCode]=!0,this.inputQueue.push(new c(a,"keyDown")))},clearKeyStates:function(){for(var a=0;a<this.keyState.length;a++)this.keyState[a]=!1},onContextMenu:function(a){this.settings.mouseEvents.contextmenu_preventDefault&&a.preventDefault(),this.inputQueue.push(new c(a,"contextMenu"))},onMouseLeave:function(a){for(var b=0;b<this.mouseButtonState.length;b++)this.mouseButtonState[b]&&(a.button=b,this.onMouseUp(a));this.clearKeyStates()},onMouseDown:function(a){var e=d(a.target);a.sceneX=a.clientX-e.left,a.sceneY=a.clientY-e.top,a.scenePercentX=a.sceneX/this.veroldEngine.getBaseRenderer().getWidth(),a.scenePercentY=a.sceneY/this.veroldEngine.getBaseRenderer().getHeight(),this.mouseDragDistance[a.button]=new b,this.mouseUpBound||(this.mouseUpBound=!0,document.addEventListener("mouseup",this.onMouseUp)),[].forEach.call(document.querySelectorAll("input, textarea, select, option"),function(a){a.blur()}),this.settings.mouseEvents.down_preventDefault&&a.preventDefault(),this.mouseButtonState[a.button]=!0,this.inputQueue.push(new c(a,"mouseDown"))},onMouseUp:function(a){var b=d(a.target);a.sceneX=a.pageX-b.left,a.sceneY=a.pageY-b.top,a.scenePercentX=a.sceneX/this.veroldEngine.getBaseRenderer().getWidth(),a.scenePercentY=a.sceneY/this.veroldEngine.getBaseRenderer().getHeight(),this.mouseButtonState[a.button]=!1,this.mouseDragState[a.button]=!1,this.mouseDragDistance[a.button].x=0,this.mouseDragDistance[a.button].y=0,this.mouseButtonUp("left")&&this.mouseButtonUp("right")&&this.mouseButtonUp("middle")&&(this.mouseUpBound=!1,document.removeEventListener("mouseup",this.onMouseUp)),this.inputQueue.push(new c(a,"mouseUp"))},onMouseMove:function(a){var b=this,e=d(a.target);a.sceneX=a.clientX-e.left,a.sceneY=a.clientY-e.top,a.scenePercentX=a.sceneX/this.veroldEngine.getBaseRenderer().getWidth(),a.scenePercentY=a.sceneY/this.veroldEngine.getBaseRenderer().getHeight(),b.mousePosition.x=a.sceneX||a.clientX,b.mousePosition.y=a.sceneY||a.clientY,b.mousePositionPercent.x=a.scenePercentX,b.mousePositionPercent.y=a.scenePercentY,a.mouseDelta={},a.mouseDelta.x=a.movementX||a.mozMovementX||a.webkitMovementX||0,a.mouseDelta.y=a.movementY||a.mozMovementY||a.webkitMovementY||0,a.mouseDelta.y||a.mouseDelta.x||(a.mouseDelta.x=b.mousePosition.x-b.mousePreviousPosition.x,a.mouseDelta.y=b.mousePosition.y-b.mousePreviousPosition.y),a.scenePercentDeltaX=a.mouseDelta.x/this.veroldEngine.getBaseRenderer().getWidth(),a.scenePercentDeltaY=a.mouseDelta.y/this.veroldEngine.getBaseRenderer().getHeight();for(var f=0;f<this.mouseButtonState.length;f++)if(this.mouseButtonState[f]===!0){this.mouseDragDistance[f].x+=a.mouseDelta.x,this.mouseDragDistance[f].y+=a.mouseDelta.y;var g=this.mouseDragDistance[f];g.x*g.x+g.y*g.y>12&&(this.mouseDragState[f]=!0)}else this.mouseDragState[f]=!1;this.inputQueue.push(new c(a,"mouseMove"))},onMouseWheel:function(a){this.settings.mouseEvents.scroll_preventDefault&&a.preventDefault();var b;b=void 0!==a.wheelDeltaY?.025*a.wheelDeltaY:VAPI.isIE()?-a.deltaY/40:-a.deltaY,this.inputQueue.push(new c(b,"mouseScroll"))},onTouchStart:function(b){this.settings.touchEvents.start_preventDefault&&b.preventDefault();var e={};e.originalEvent=b,e.touches=[];var f=d(b.target);a.each(b.touches,function(a){var b={};b.scenePercentX=(a.clientX-f.left)/this.veroldEngine.getBaseRenderer().getWidth(),b.scenePercentY=(a.clientY-f.top)/this.veroldEngine.getBaseRenderer().getHeight(),b.originalTouch=a,e.touches.push(b)},this),this.inputQueue.push(new c(e,"touchStart"))},onTouchLeave:function(b){this.settings.touchEvents.leave_preventDefault&&b.preventDefault(),this.touchDragState=!1;var e={};e.originalEvent=b,e.touches=[];var f=d(b.target);a.each(b.touches,function(a){var b={};b.scenePercentX=(a.clientX-f.left)/this.veroldEngine.getBaseRenderer().getWidth(),b.scenePercentY=(a.clientY-f.top)/this.veroldEngine.getBaseRenderer().getHeight(),b.originalTouch=a,e.touches.push(b)},this),this.inputQueue.push(new c(e,"touchLeave"))},onTouchEnd:function(b){this.settings.touchEvents.end_preventDefault&&b.preventDefault(),this.touchDragState=!1;var e={};e.originalEvent=b,e.touches=[];var f=d(b.target);a.each(b.touches,function(a){var b={};b.scenePercentX=(a.clientX-f.left)/this.veroldEngine.getBaseRenderer().getWidth(),b.scenePercentY=(a.clientY-f.top)/this.veroldEngine.getBaseRenderer().getHeight(),b.originalTouch=a,e.touches.push(b)},this),this.inputQueue.push(new c(e,"touchEnd"))},onTouchMove:function(b){this.settings.touchEvents.move_preventDefault&&b.preventDefault(),this.touchDragState=!0;var e={};e.originalEvent=b,e.touches=[];var f=d(b.target);a.each(b.touches,function(a){var b={};b.scenePercentX=(a.clientX-f.left)/this.veroldEngine.getBaseRenderer().getWidth(),b.scenePercentY=(a.clientY-f.top)/this.veroldEngine.getBaseRenderer().getHeight(),b.originalTouch=a,e.touches.push(b),this.touchPosition.x=a.clientX-f.left,this.touchPosition.y=a.clientY-f.top,this.touchPositionPercent.x=b.scenePercentX,this.touchPositionPercent.y=b.scenePercentY},this),this.inputQueue.push(new c(e,"touchMove"))},onTouchCancel:function(a){this.settings.touchEvents.cancel_preventDefault&&a.preventDefault(),this.touchDragState=!1;var b={};b.originalEvent=a,b.touches=[],this.inputQueue.push(new c(b,"touchCancel"))},preUpdate:function(){for(var a,b=0;b<this.inputQueue.length;b++)a=this.inputQueue[b],this.veroldEngine.trigger(a.name,a.event);this.inputQueue.splice(0,this.inputQueue.length)},postUpdate:function(){var a;if(this.settings.keyEvents.recordState)for(a=0;a<this.keyState.length;a++)this.keyStatePrevious[a]=this.keyState[a];if(this.settings.mouseEvents.recordState){for(var b=0;b<this.mouseButtonState.length;b++)this.mouseButtonStatePrevious[b]=this.mouseButtonState[b],this.mouseDragStatePrevious[b]=this.mouseDragState[b];this.mousePreviousPosition.x=this.mousePosition.x,this.mousePreviousPosition.y=this.mousePosition.y}this.touchDragStatePrevious=this.touchDragState},keyPressed:function(a){return this.keyState[this.keyCodes[a]]&&!this.keyStatePrevious[this.keyCodes[a]]?!0:!1},keyReleased:function(a){return!this.keyState[this.keyCodes[a]]&&this.keyStatePrevious[this.keyCodes[a]]?!0:!1},keyDown:function(a){return!!this.keyState[this.keyCodes[a]]},keyUp:function(a){return!this.keyState[this.keyCodes[a]]},mouseButtonDown:function(a){if("any"===a){for(var b in this.mouseButtons)if(this.mouseButtonState[this.mouseButtons[b]])return!0;return!1}return this.mouseButtonState[this.mouseButtons[a]]},mouseButtonUp:function(a){return!this.mouseButtonState[this.mouseButtons[a]]},mouseButtonPressed:function(a){return this.mouseButtonState[this.mouseButtons[a]]&&!this.mouseButtonStatePrevious[this.mouseButtons[a]]?!0:!1},mouseButtonReleased:function(a){return!this.mouseButtonState[this.mouseButtons[a]]&&this.mouseButtonStatePrevious[this.mouseButtons[a]]?!0:!1}},e}),define("VeroldEngine/Engine",["underscore","backbone","three","VeroldEngine/libs/uuid","VeroldEngine/AssetRegistry/AssetRegistry","VeroldEngine/BaseRenderer","VeroldEngine/Input","VeroldEngine/Objects/CameraObject"],function(a,b,c,d,e,f,g){function h(b){var c;return b&&b.jquery?b.get(0):a.isString(b)?(c=document.querySelectorAll(b),c.length&&c[0]):b}var i=function(b){Math.log2||(Math.log2=function(a){return Math.log(a)/Math.LN2}),this.paths=a.extend({},window.VAPI.defaultPaths,b.paths),this.global=b.global||window,this.engineName=b.engineName?b.engineName:"Unnamed Instance of Verold Engine",this.applicationName=b.applicationName||d(),this.isEditor=b.isEditor?!0:!1,this.isWritable=void 0,this.assetRegistry=new e(a.extend({paths:this.paths},b)),this.Input=new g,this.renderOnDemand=!1,this.needsRender=!0,this.audioContext=void 0,this.activeCamera=null,this.container=h(b.container),this.globalEvents=void 0,this.caps={},this.entities={}};return i.prototype={constructor:i,initialize:function(b,d){console.time("Engine Initialization");var e=this;if(this.componentSettings=a.extend({enabled:!0,editor:!1,runtime:!0,persistent:!0,nonPersistent:!0},b.componentSettings||{}),this.globalEvents=b&&b.globalEvents||window.VAPI&&window.VAPI.globalEvents,!this.globalEvents)throw new Error("No global event system found!");if(console.info("Components settings:",JSON.stringify(this.componentSettings)),this.state="initializing",this.trigger("initialize_start",this),this.getApplicationContext().primaryEngineRef||(this.getApplicationContext().primaryEngineRef=this),b.assetRegistry=this.assetRegistry,b.veroldEngine=this,this.isWritable=b.isWritable,this.container=void 0!==this.container?this.container:h(b.container),!b.canvas&&this.container&&(b.canvas=document.createElement("canvas"),this.container.appendChild(b.canvas),this.canvasCreatedByEngine=!0),this.canvas=h(b.canvas),!(this.canvas instanceof HTMLCanvasElement))return void console.error("Engine not passed a reference to a valid canvas element.");setTimeout(function(){console.time("Renderer Initialization"),e._baseRenderer=new f(e),e._baseRenderer.initialize(e.canvas),console.timeEnd("Renderer Initialization"),setTimeout(function(){e.assetRegistry.initialize(b,function(){e.handleInput=void 0!==b.handleInput?b.handleInput:!0,e.handleInput&&e.Input.initialize(b),e.clock=new c.Clock,e.elapsedSinceRender=0,e.frameDelta=0,e.updateTime=0,e.renderTime=0,e.frameDeltaAgregate=0,e.frameCount=0,e.lastFrameDelta=e.getTimeNow(),e.avgFrameTime=0,e.currentFrame=0,e.paused=!1,e.documentVisible=!0,e.update=function(){if(!e.paused){if(e.animationRequestID=window.requestAnimationFrame(e.update),!e.documentVisible)return;e.frameCount++,e.frameDelta=e.getTimeNow()-e.lastFrameDelta,e.lastFrameDelta=e.getTimeNow(),e.frameDeltaAgregate+=e.frameDelta,e.avgFrameTime=e.frameDeltaAgregate/e.frameCount,e.trigger("preUpdate",e.frameDelta),e.trigger("update",e.frameDelta),e.trigger("postUpdate",e.frameDelta),(!e.renderOnDemand||e.needsRender)&&(e.needsRender=!1,e.trigger("preRender",e.frameDelta),e.trigger("render",e.frameDelta),e.trigger("renderGroup1",e.frameDelta),e.trigger("renderGroup2",e.frameDelta),e.trigger("renderGroup3",e.frameDelta),e.trigger("renderGroup4",e.frameDelta),e.trigger("renderGroup5",e.frameDelta),e.trigger("renderGroup6",e.frameDelta),e.trigger("renderGroup7",e.frameDelta),e.trigger("renderGroup8",e.frameDelta),e.trigger("renderGroup9",e.frameDelta),e.trigger("renderGroup10",e.frameDelta),e.trigger("postRender",e.frameDelta))}},window[e.engineName]=e,e.update(0),e.on("update",e.onUpdate,e),e.globalEvents.on("requestVeroldEngine",e.onRequestEngine,e),e.state="initialized",e.trigger("initialize_finish",e),console.timeEnd("Engine Initialization"),e.trigger("resize"),"function"==typeof d&&d()},1)},1)},1);var g=function(){e.trigger("resize")},i=function(){e.trigger("blur")},j=function(){e.trigger("focus")},k=function(){e.documentVisible&&(document.hidden||document.mozHidden||document.msHidden||document.webkitHidden)?(e.trigger("document_hidden"),e.documentVisible=!1):e.documentVisible||(e.trigger("document_visible"),e.elapsedSinceRender=0,e.frameDelta=0,e.updateTime=0,e.lastFrameDelta=e.getTimeNow(),e.documentVisible=!0)};window.addEventListener("blur",i),window.addEventListener("focus",j),window.addEventListener("resize",g),document.addEventListener("visibilitychange",k),this.listenToOnce(this,"shutdown",function(){window.removeEventListener("blur",i),window.removeEventListener("focus",j),window.removeEventListener("resize",g),document.removeEventListener("visibilitychange",k)})},getApplication:function(){var a=this.assetRegistry.Applications.getAssets();for(var b in a)if("loaded"===a[b].state_base)return a[b]},getBaseRenderer:function(){return this._baseRenderer},setBaseRenderer:function(b){a.isFunction(this._baseRenderer.uninitialize)&&this._baseRenderer.uninitialize(),this._baseRenderer=b,this._threeRenderer=b.threeRenderer},getThreeRenderer:function(){return this._baseRenderer.threeRenderer},uninitialize:function(){delete window[this.engineName],this.trigger("shutdown"),this.state="uninitializing",this.trigger("uninitialize_start",this),this.off("update",this.onUpdate,this),this.entities=void 0,this.globalEvents.off("requestVeroldEngine",this.onRequestEngine,this),window.cancelAnimationFrame(this.animationRequestID),this.update=void 0,this.Input&&(this.Input.uninitialize(),this.Input=null),this.canvasCreatedByEngine&&this.canvas.parentNode.removeChild(this.canvas),this.isPrimaryEngine()&&(this.getApplicationContext().primaryEngineRef=null),console.log(this.engineName+" - Uninitializing engine."),this.assetRegistry&&this.assetRegistry.uninitialize(),this._threeRenderer&&this._threeRenderer.dispose(),this.clock=void 0,this.assetRegistry=null,this.update=void 0,this.canvas=void 0,this.activeCamera=void 0,this._threeRenderer=void 0,this._baseRenderer=void 0,this.engineName=void 0,this.isWritable=void 0,this.state="uninitialized",this.trigger("uninitialize_finish",this)},getPrimaryEngine:function(){return this.getApplicationContext().primaryEngineRef},isPrimaryEngine:function(){return this.getApplicationContext().primaryEngineRef===this},getGPUCapability:function(a){return this._baseRenderer.caps[a]},supportsCompressedTextureS3TC:function(){return this._baseRenderer.caps.compressedTextureFormats.S3TC},supportsCompressedTexturePVRTC:function(){return this._baseRenderer.caps.compressedTextureFormats.S3TC},supportsCompressedTextureATC:function(){return this._baseRenderer.caps.compressedTextureFormats.S3TC},getEntityById:function(a){return this.entities[a]?this.entities[a]:null},getAudioContext:function(){if(!this.audioContext){var a=window.AudioContext||window.webkitAudioContext;a&&(this.audioContext=new a,this.audioContext||console.warn(that.engineName+" - Failed to create Web Audio API context"))}return this.audioContext},onRequestEngine:function(){this.globalEvents.trigger("sendVeroldEngine",this)},pause:function(){this.paused||(this.paused=!0,this.clock.stop(),console.warn(this.engineName+" engine has been paused."))},unpause:function(){this.paused&&(this.paused=!1,this.elapsedSinceRender=0,this.frameDelta=0,this.updateTime=0,this.lastFrameDelta=this.getTimeNow(),this.clock.start(),console.warn(this.engineName+" engine has been unpaused."),this.update())},onUpdate:function(a){this.assetRegistry&&this.assetRegistry.update(a)},setCurrentApp:function(a){var b=this.assetRegistry.Applications.getAssetById(a);b&&(this.currentApplication&&(console.warn("There is already an application running in this engine. Stopping it before starting the "+b.getName()+" application."),this.currentApplication.unload()),this.currentApplication=b)},getTimeNow:function(){return.001*(window.performance&&window.performance.now?window.performance.now():Date.now())},getApplicationContext:function(){return VAPI.getApplicationContext(this.applicationName)}},a.extend(i.prototype,b.Events),window.VAPI=window.VAPI||{},window.VAPI.Engine=i,i}),function(a){"function"==typeof define&&define.amd?define("VeroldEngine/libs/backbone/backbone.nativeajax",a):"object"==typeof exports?module.exports=a():Backbone.ajax=a()}(function(){function a(a){return a}function b(a){return decodeURIComponent(a.replace(e," "))}function c(a){var b=document.location.host,c=document.location.protocol,d="//"+b,e=c+d;return a===e||a.slice(0,e.length+1)===e+"/"||a===d||a.slice(0,d.length+1)===d+"/"||!/^(\/\/|http:|https:).*/.test(a)}function d(a){return/^(GET|HEAD|OPTIONS|TRACE)$/.test(a)}var e=/\+/g,f=function(c,d,e){if(e=e||{},void 0!==d){if(null===d&&(e.expires=-1),"number"==typeof e.expires){var f=e.expires,g=e.expires=new Date;g.setDate(g.getDate()+f)}return d=e.json?JSON.stringify(d):String(d),document.cookie=[encodeURIComponent(c),"=",e.raw?d:encodeURIComponent(d),e.expires?"; expires="+e.expires.toUTCString():"",e.path?"; path="+e.path:"",e.domain?"; domain="+e.domain:"",e.secure?"; secure":""].join("")}for(var h=e.raw?a:b,i=document.cookie.split("; "),j=0,k=i.length;k>j;j++){var l=i[j].split("=");if(h(l.shift())===c){var m=h(l.join("="));return e.json?JSON.parse(m):m}}return null},g=function(){var a=/^(?:application|text)\/xml/,b=/^application\/json/,e=function(c,d){return null==c&&(c=d.getResponseHeader("content-type")),a.test(c)?d.responseXML:b.test(c)&&""!==d.responseText?JSON.parse(d.responseText):d.responseText},h=function(a){return a.status>=200&&a.status<300||304===a.status||0===a.status&&"file:"===window.location.protocol},i=function(a,b,c,d){return function(){if(4===a.readyState){var f=a.status,g=e(b.headers&&b.headers.Accept,a);if(h(a))b.success&&b.success(g),c&&c(g);else{var i=new Error("Server responded with a status of "+f);b.error&&b.error(a,f,i),d&&d(a)}}}};return function(a){if(null==a)throw new Error("You must provide options");null==a.type&&(a.type="GET");var b,e,h=new XMLHttpRequest,j=g.Promise||"undefined"!=typeof Promise&&Promise,k=j&&new j(function(a,c){b=a,e=c});if(a.contentType&&(null==a.headers&&(a.headers={}),a.headers["Content-Type"]=a.contentType),"GET"===a.type&&"object"==typeof a.data){var l="",m=function(a,b){return null==b?"":"&"+encodeURIComponent(a)+"="+encodeURIComponent(b)};for(var n in a.data)l+=m(n,a.data[n]);if(l){var o=-1===a.url.indexOf("?")?"?":"&";a.url+=o+l.substring(1)}}h.addEventListener("readystatechange",i(h,a,b,e)),h.open(a.type,a.url,!0);var p="*/".concat("*"),q={"*":p,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"};if(h.setRequestHeader("Accept",a.dataType&&q[a.dataType]?q[a.dataType]+("*"!==a.dataType?", "+p+"; q=0.01":""):q["*"]),!d(a.type)&&c(a.url)&&h.setRequestHeader("X-CSRF-Token",f("_csrftoken")),a.headers)for(var n in a.headers)h.setRequestHeader(n,a.headers[n]);return a.beforeSend&&a.beforeSend(h),h.send(a.data),k}}();return g}),define("VeroldEngine/Util/DOMUtilities",[],function(){var a=window.VAPI=window.VAPI||{};return a.safeHTML=function(a){var b=document.createElement("div");b.innerHTML=a;for(var c=b.getElementsByTagName("script"),d=c.length;d--;)c[d].parentNode.removeChild(c[d]);return b.innerHTML},a}),define("VeroldEngine/Loaders/JSONLoader",["underscore","VeroldEngine/collections/entity"],function(a,b){function c(a,b){this.veroldEngine=a,this.url=b}c.prototype.load=function(c){var d=new(b.extend({url:this.url}));d.fetch({reset:!0}),d.once("reset",a.bind(this.patchLoadedResources,this,c),this)},c.prototype.patchLoadedResources=function(b,c){b=b||{},c.each(function(b){if(b.has("children")){var d={};a.each(b.get("children"),function(a){d[a]=!0}),b.attributes.children=d}b.attributes.overridePrefix=c.url.substr(0,c.url.lastIndexOf("/"))+"/"}),this.veroldEngine.assetRegistry._initProjectAssets(c),this.veroldEngine.assetRegistry._initProjectObjects(c),a.isFunction(b.success)&&b.success(c)},window.VAPI=window.VAPI||{},window.VAPI.JSONLoader=c}),define("VeroldEngine/VAPI",["underscore","backbone","async","VeroldEngine/collections/entity","VeroldEngine/Engine","VeroldEngine/Components/VeroldComponent","VeroldEngine/libs/backbone/backbone.nativeajax","VeroldEngine/Util/APIUtilities","VeroldEngine/Util/DOMUtilities","VeroldEngine/Loaders/JSONLoader"],function(a,b,c,d,e,f,g){if(b.View){var h=require("jquery");h.support.cors=!0,h(document).ajaxSend(function(a,b,c){function d(a){var b=document.location.host,c=document.location.protocol,d="//"+b,e=c+d;return a===e||a.slice(0,e.length+1)===e+"/"||a===d||a.slice(0,d.length+1)===d+"/"||!/^(\/\/|http:|https:).*/.test(a)}function e(a){return/^(GET|HEAD|OPTIONS|TRACE)$/.test(a)}!e(c.type)&&d(c.url)&&b.setRequestHeader("X-CSRF-Token",h.cookie("_csrftoken"))})}else b.ajax=g;a.noConflict(),b.noConflict();var i=window.VAPI;i.require=require,i.define=define,i.getBrowser=function(){var a,b=navigator.userAgent,c=b.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return/trident/i.test(c[1])?(a=/\brv[ :]+(\d+)/g.exec(b)||[],"IE "+(a[1]||"")):"Chrome"===c[1]&&(a=b.match(/\bOPR\/(\d+)/),null!=a)?"Opera "+a[1]:(c=c[2]?[c[1],c[2]]:[navigator.appName,navigator.appVersion,"-?"],null!=(a=b.match(/version\/(\d+)/i))&&c.splice(1,1,a[1]),c.join(" "))};var j=/iphone|ipad|ipod|android|blackberry|bb10|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase());i.isMobile=function(){return j
};var k=/iphone|ipad|ipod/i.test(navigator.userAgent.toLowerCase());i.isIOS=function(){return k};var l=/android/i.test(navigator.userAgent.toLowerCase());i.isAndroid=function(){return l};var m=/mac/i.test(navigator.userAgent.toLowerCase());i.isMac=function(){return m};var n=/linux/i.test(navigator.userAgent.toLowerCase());i.isLinux=function(){return n};var o=/x11/i.test(navigator.userAgent.toLowerCase());i.isUnix=function(){return o};var p=/windows/i.test(navigator.userAgent.toLowerCase());i.isWindows=function(){return p};var q=/chrome/i.test(navigator.userAgent.toLowerCase());i.isChrome=function(){return q};var r=/firefox/i.test(navigator.userAgent.toLowerCase());i.isFirefox=function(){return r};var s=/safari/i.test(navigator.userAgent.toLowerCase());i.isSafari=function(){return s};var t=/opera/i.test(navigator.userAgent.toLowerCase());i.isOpera=function(){return t};var u=/ie/i.test(i.getBrowser().toLowerCase());i.isIE=function(){return u};var v=/ie 11/i.test(i.getBrowser().toLowerCase());i.isIE11=function(){return v},i.defaultPaths=i.defaultPaths||{apiBaseUrl:window.verold&&window.verold.apiBaseUrl||"",staticBaseUrl:window.verold&&window.verold.staticBaseUrl||"",glAssetsBaseUrl:window.verold&&window.verold.glAssetsBaseUrl||"",assetsBaseUrl:window.verold&&window.verold.assetsBaseUrl||""},i.globalEvents=i.globalEvents||window.verold&&window.verold.veroldEvents||a.extend({},b.Events);var w={};i.VeroldEngine=e,i.addProjectData=function(a){w[a.project.id]={},w[a.project.id].project=new b.Model(a.project),w[a.project.id].entities=new d(a.entities,{project:w[a.project.id].project}),w[a.project.id].settings=a.settings||{}};var x=i.log=function(a){var b=navigator.userAgent.toLowerCase().indexOf("chrome")>-1,c="color:#009BDF;font-size: 12pt";b?console.log("%c%s",c,a):console.log&&console.log(a)};i.help=function(){x("Verold API Devtools"),x("VAPI.help() - show these instructions"),x("window.Default - your VeroldEngine object")};var y={};return i.getApplicationContext=function(a){return y[a]||(y[a]={}),y[a]},i.addScript=function(a,b,c){i.ScriptRegistry.addScript(a,b,c),i.globalEvents.trigger("VAPI:addScript",a,b,c)},i.loadProject=function(a,c,e){var f,g=new b.Model,h=e&&e.paths||i.defaultPaths;g.url=h.apiBaseUrl+"/projects/"+a,g.id=a;var j=function(){c(new Error("Failed to load project"))};if(w[a])return c(null,w[a].project,w[a].entities,w[a].settings);var k=function(a){c(null,g,a)},l=function(){f=new d([],{project:g,paths:h}),f.fetch({reset:!0,success:k,error:j})};g.fetch({success:l,error:j})},i.startProject=function(b,c,d){var f,g,h=function(a){alert(a)};a.isFunction(d)?(g=d,d={}):(d=d||{},a.isFunction(d.load)&&(g=d.load),a.isFunction(d.error)&&(h=d.error)),f=d.options||{};var j=new e(a.extend({engineName:d.name||"VeroldEngine",container:c},f));return i.loadProject(b,function(c,d,e){return c?h(c):(j.initialize(a.extend({entities:e,projectId:b},f)),void j.loadScene(d.get("entityId"),{load:g}))}),j},i.browserCaps=function(){var a;try{a=window.WebGLRenderingContext?document.createElement("canvas").getContext("experimental-webgl"):null}catch(b){}var c=!!a,d=c?!!a.getExtension("OES_texture_float"):!1,e=c?!(0===a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS)):!1;return a=null,{isWebGLEnabled:function(){return c},isFloatingPointTexturesEnabeled:function(){return d},isVertexTexturesEnabeled:function(){return e}}}(),i}),require("VeroldEngine/VAPI")});